<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YONGFEIUALL</title>
  <subtitle>izheyi.com</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://izheyi.com/"/>
  <updated>2021-09-23T02:32:13.156Z</updated>
  <id>http://izheyi.com/</id>
  
  <author>
    <name>唐胡璐</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Packaging python packages with Poetry</title>
    <link href="http://izheyi.com/2021/09/23/Packaging-python-packages-with-Poetry/"/>
    <id>http://izheyi.com/2021/09/23/Packaging-python-packages-with-Poetry/</id>
    <published>2021-09-23T01:09:06.000Z</published>
    <updated>2021-09-23T02:32:13.156Z</updated>
    
    <content type="html">&lt;p&gt;Poetry is a tool for &lt;strong&gt;dependency management&lt;/strong&gt; and &lt;strong&gt;packaging&lt;/strong&gt; in Python. It allows you to declare the libraries your project depends on and it will manage (install/update) them for you.&lt;/p&gt;
&lt;h2 id=&quot;Install&quot;&gt;&lt;a href=&quot;#Install&quot; class=&quot;headerlink&quot; title=&quot;Install&quot;&gt;&lt;/a&gt;Install&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Install with windows &lt;strong&gt;powershell&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;PS C:\Users&amp;#62; (Invoke-WebRequest -Uri https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py -UseBasicParsing).Content | python -&amp;#10;Retrieving Poetry metadata&amp;#10;&amp;#10;This installer is deprecated. Poetry versions installed using this script will not be able to use &amp;#39;self update&amp;#39; command to upgrade to 1.2.0a1 or later.&amp;#10;# Welcome to Poetry!&amp;#10;&amp;#10;This will download and install the latest version of Poetry,&amp;#10;a dependency and package manager for Python.&amp;#10;&amp;#10;It will add the `poetry` command to Poetry&amp;#39;s bin directory, located at:&amp;#10;&amp;#10;%USERPROFILE%\.poetry\bin&amp;#10;&amp;#10;This path will then be added to your `PATH` environment variable by&amp;#10;modifying the `HKEY_CURRENT_USER/Environment/PATH` registry key.&amp;#10;&amp;#10;You can uninstall at any time by executing this script with the --uninstall option,&amp;#10;and these changes will be reverted.&amp;#10;&amp;#10;Installing version: 1.1.10&amp;#10;  - Downloading poetry-1.1.10-win32.tar.gz (41.47MB)&amp;#10;  &amp;#10;  &amp;#10;Poetry (1.1.10) is installed now. Great!&amp;#10;&amp;#10;To get started you need Poetry&amp;#39;s bin directory (%USERPROFILE%\.poetry\bin) in your `PATH`&amp;#10;environment variable. Future applications will automatically have the&amp;#10;correct environment, but you may need to restart your current shell.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Verify&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;PS C:\Users&amp;#62; poetry --version&amp;#10;Poetry version 1.1.10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;Basic-Usage&quot;&gt;&lt;a href=&quot;#Basic-Usage&quot; class=&quot;headerlink&quot; title=&quot;Basic Usage&quot;&gt;&lt;/a&gt;Basic Usage&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Create a new project&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;PS E:\&amp;#62; poetry new jenkins-tool&amp;#10;Created package jenkins_tool in jenkins-tool&amp;#10;PS E:\&amp;#62; tree .\jenkins-tool\ /F&amp;#10;&amp;#25991;&amp;#20214;&amp;#22841; PATH &amp;#21015;&amp;#34920;&amp;#10;&amp;#21367;&amp;#24207;&amp;#21015;&amp;#21495;&amp;#20026; 4428-676B&amp;#10;E:\JENKINS-TOOL&amp;#10;&amp;#9474;  pyproject.toml&amp;#10;&amp;#9474;  README.rst&amp;#10;&amp;#9474;&amp;#10;&amp;#9500;&amp;#9472;jenkins_tool&amp;#10;&amp;#9474;      __init__.py&amp;#10;&amp;#9474;&amp;#10;&amp;#9492;&amp;#9472;tests&amp;#10;        test_jenkins_tool.py&amp;#10;        __init__.py&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Copy script to &lt;code&gt;jenkins_tool/jenkins_tool&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Update &lt;code&gt;pyproject.toml&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[tool.poetry]&amp;#10;name = &amp;#34;jenkins-tool&amp;#34;&amp;#10;version = &amp;#34;0.1.0&amp;#34;&amp;#10;description = &amp;#34;Manage Jenkins Job&amp;#34;&amp;#10;authors = [&amp;#34;yongfeiuall &amp;#60;yongfeiuall@163.com&amp;#62;&amp;#34;]&amp;#10;&amp;#10;[tool.poetry.dependencies]&amp;#10;python = &amp;#34;^3.6&amp;#34;&amp;#10;python-jenkins=&amp;#34;^1.7.0&amp;#34;&amp;#10;&amp;#10;[tool.poetry.dev-dependencies]&amp;#10;&amp;#10;[build-system]&amp;#10;requires = [&amp;#34;poetry-core&amp;#62;=1.0.0&amp;#34;]&amp;#10;build-backend = &amp;#34;poetry.core.masonry.api&amp;#34;&amp;#10;&amp;#10;[tool.poetry.scripts]&amp;#10;jt = &amp;#34;jenkins_tool.client:main&amp;#34;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Build&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;PS E:\jenkins-tool&amp;#62; poetry build&amp;#10;Creating virtualenv jenkins-tool-vo3-Lls6-py3.6 in C:\Users\AppData\Local\pypoetry\Cache\virtualenvs&amp;#10;Building jenkins-tool (0.1.0)&amp;#10;  - Building sdist&amp;#10;  - Built jenkins-tool-0.1.0.tar.gz&amp;#10;  - Building wheel&amp;#10;  - Built jenkins_tool-0.1.0-py3-none-any.whl&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;Verification&quot;&gt;&lt;a href=&quot;#Verification&quot; class=&quot;headerlink&quot; title=&quot;Verification&quot;&gt;&lt;/a&gt;Verification&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Unzip &lt;code&gt;jenkins-tool-0.1.0.tar.gz&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install &lt;code&gt;PS E:\jenkins-tool\dist\jenkins-tool-0.1.0&amp;gt; python .\setup.py install&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Verify &lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;PS E:\jenkins-tool\dist\jenkins-tool-0.1.0&amp;#62; jt -h&amp;#10;usage: jt [-h] [-v] [-V VIEW_NAME]&amp;#10;&amp;#10;Manage Jenkins Job&amp;#10;&amp;#10;optional arguments:&amp;#10;  -h, --help            show this help message and exit&amp;#10;  -v, --version         Show version&amp;#10;  -V VIEW_NAME, --view VIEW_NAME&amp;#10;                        Get Jenkins job last build number by view&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Poetry is a tool for &lt;strong&gt;dependency management&lt;/strong&gt; and &lt;strong&gt;packaging&lt;/strong&gt; in Python. It allows you to declare the librar
    
    </summary>
    
      <category term="Python" scheme="http://izheyi.com/categories/Python/"/>
    
    
      <category term="Poetry" scheme="http://izheyi.com/tags/Poetry/"/>
    
      <category term="Python" scheme="http://izheyi.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>remote: Support for password authentication was removed on August 13, 2021. Please use a personal access token instead.</title>
    <link href="http://izheyi.com/2021/09/15/remote-Support-for-password-authentication-was-removed-on-August-13-2021-Please-use-a-personal-access-token-instead/"/>
    <id>http://izheyi.com/2021/09/15/remote-Support-for-password-authentication-was-removed-on-August-13-2021-Please-use-a-personal-access-token-instead/</id>
    <published>2021-09-15T06:46:05.000Z</published>
    <updated>2021-09-16T01:51:32.808Z</updated>
    
    <content type="html">&lt;p&gt;I got this error on my console when i tried to push blog to github&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;remote: Support &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; password authentication was removed on August &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2021.&lt;/span&gt; Please use a personal access token instead.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Account passwords will no longer be accepted for authenticating Git operations.&lt;/p&gt;
&lt;p&gt;You need to add a &lt;strong&gt;Personal Access Token&lt;/strong&gt; instead, and you can follow the below method to add.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Log in Github&lt;/li&gt;
&lt;li&gt;Go to &lt;code&gt;User -&amp;gt; Settings -&amp;gt; Developer settings&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Click on &lt;strong&gt;Personal access tokens&lt;/strong&gt; &lt;/li&gt;
&lt;li&gt;Config settings and  &lt;strong&gt;Generate token&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Copy the token to replace username:password in hexo config.yml&lt;/li&gt;
&lt;li&gt;Push again&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;I got this error on my console when i tried to push blog to github&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr
    
    </summary>
    
      <category term="Other" scheme="http://izheyi.com/categories/Other/"/>
    
    
      <category term="Hexo" scheme="http://izheyi.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>批量验证RackShift上物理机Web Console正确打开</title>
    <link href="http://izheyi.com/2021/09/15/%E6%89%B9%E9%87%8F%E9%AA%8C%E8%AF%81RackShift%E4%B8%8A%E7%89%A9%E7%90%86%E6%9C%BAWeb-Console%E6%AD%A3%E7%A1%AE%E6%89%93%E5%BC%80/"/>
    <id>http://izheyi.com/2021/09/15/批量验证RackShift上物理机Web-Console正确打开/</id>
    <published>2021-09-15T06:10:38.000Z</published>
    <updated>2021-09-15T06:17:43.580Z</updated>
    
    <content type="html">&lt;p&gt;最近云平台集成RackShift来批量管理近100台物理机，需要验证一下每台机器从界面能正确打开Console。手工就有点扯了，简单写了下边Selenium脚本来实现&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;到物理机列表面&lt;/li&gt;
&lt;li&gt;选择每页100条显示&lt;/li&gt;
&lt;li&gt;循环每台机器打开，并截图&lt;/li&gt;
&lt;li&gt;检查截图显示是否正确&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; selenium &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; webdriver&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; selenium.webdriver.common.action_chains &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; ActionChains&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; selenium.webdriver.common.keys &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Keys&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;URL = &lt;span class=&quot;string&quot;&gt;&#39;http://xxx/#/login&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;driver = webdriver.Chrome()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Open system&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;driver.get(url=URL)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;driver.maximize_window()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Login&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;driver.find_element_by_xpath(&lt;span class=&quot;string&quot;&gt;&#39;//*[@id=&quot;app&quot;]/div/div/div[1]/form/div[5]/div[2]/div/div[1]/input&#39;&lt;/span&gt;).send_keys(&lt;span class=&quot;string&quot;&gt;&#39;admin&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;driver.find_element_by_xpath(&lt;span class=&quot;string&quot;&gt;&#39;//*[@id=&quot;app&quot;]/div/div/div[1]/form/div[5]/div[3]/div/div[1]/input&#39;&lt;/span&gt;).send_keys(&lt;span class=&quot;string&quot;&gt;&#39;admin&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;driver.find_element_by_xpath(&lt;span class=&quot;string&quot;&gt;&#39;//*[@id=&quot;app&quot;]/div/div/div[1]/form/div[6]/button&#39;&lt;/span&gt;).click()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;time.sleep(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Select page&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;driver.find_element_by_xpath(&lt;span class=&quot;string&quot;&gt;&#39;//*[@id=&quot;pane-bare-metal&quot;]/div[3]/div/span[2]/div/div[1]/input&#39;&lt;/span&gt;).click()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;time.sleep(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;driver.find_element_by_xpath(&lt;span class=&quot;string&quot;&gt;&#39;//ul[@class=&quot;el-scrollbar__view el-select-dropdown__list&quot;]/li[4]&#39;&lt;/span&gt;).click()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Open console and capture&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;98&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ip = driver.find_element_by_xpath(f&lt;span class=&quot;string&quot;&gt;&#39;//table[@class=&quot;el-table__body&quot;]/tbody/tr[&amp;#123;i&amp;#125;]/td[4]/div&#39;&lt;/span&gt;).text&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    element = driver.find_element_by_xpath(f&lt;span class=&quot;string&quot;&gt;&#39;//table[@class=&quot;el-table__body&quot;]/tbody/tr[&amp;#123;i&amp;#125;]//button&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dropdown = element.get_attribute(&lt;span class=&quot;string&quot;&gt;&#39;aria-controls&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    element.click()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    time.sleep(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    xpath = &lt;span class=&quot;string&quot;&gt;&#39;//ul[@id=&quot;&#39;&lt;/span&gt; + dropdown + &lt;span class=&quot;string&quot;&gt;&#39;&quot;]/li[4]&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    driver.find_element_by_xpath(xpath).click()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    time.sleep(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# capture&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    handles = driver.window_handles&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    driver.switch_to.window(handles[-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ActionChains(driver).send_keys(Keys.ENTER).perform()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    time.sleep(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    driver.get_screenshot_as_file(f&lt;span class=&quot;string&quot;&gt;&#39;./image/&amp;#123;ip&amp;#125;.png&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    driver.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    driver.switch_to.window(handles[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; driver.quit()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近云平台集成RackShift来批量管理近100台物理机，需要验证一下每台机器从界面能正确打开Console。手工就有点扯了，简单写了下边Selenium脚本来实现&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;到物理机列表面&lt;/li&gt;
&lt;li&gt;选择每页100条显示&lt;/li&gt;
&lt;li&gt;循环每
    
    </summary>
    
      <category term="Automation Testing" scheme="http://izheyi.com/categories/Automation-Testing/"/>
    
    
      <category term="自动化测试" scheme="http://izheyi.com/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Command line to execute python script</title>
    <link href="http://izheyi.com/2021/08/22/Command-line-to-execute-python-script/"/>
    <id>http://izheyi.com/2021/08/22/Command-line-to-execute-python-script/</id>
    <published>2021-08-22T06:04:25.000Z</published>
    <updated>2021-09-22T06:38:56.577Z</updated>
    
    <content type="html">&lt;p&gt;We get jenkins job number here &lt;a href=&quot;/2021/07/30/python-get-jenkins-job-and-build-number-info/&quot;&gt;Jenkins&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;argparse&lt;/code&gt; to implement call python script.&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;parser = argparse.ArgumentParser(description=&lt;span class=&quot;string&quot;&gt;&#39;Manage Jenkins Job&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;parser.add_argument(&lt;span class=&quot;string&quot;&gt;&#39;-v&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;--version&#39;&lt;/span&gt;, action=&lt;span class=&quot;string&quot;&gt;&#39;store_true&#39;&lt;/span&gt;, help=&lt;span class=&quot;string&quot;&gt;&#39;Show version&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;parser.add_argument(&lt;span class=&quot;string&quot;&gt;&#39;-V&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;--view&#39;&lt;/span&gt;, dest=&lt;span class=&quot;string&quot;&gt;&#39;view_name&#39;&lt;/span&gt;, help=&lt;span class=&quot;string&quot;&gt;&#39;Get Jenkins job last build number by view&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;args = parser.parse_args()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; len(sys.argv) == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    parser.print_help()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; len(sys.argv) == &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; sys.argv[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; [&lt;span class=&quot;string&quot;&gt;&#39;-h&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;--help&#39;&lt;/span&gt;]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        parser.print_help()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; sys.argv[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; [&lt;span class=&quot;string&quot;&gt;&#39;-v&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;--version&#39;&lt;/span&gt;]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(f&lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;__version__&amp;#125;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; len(sys.argv) == &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; sys.argv[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; [&lt;span class=&quot;string&quot;&gt;&#39;-V&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;--view&#39;&lt;/span&gt;]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(args.view_name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        subprocess.call(f&lt;span class=&quot;string&quot;&gt;&#39;python ./job_version.py &amp;#123;args.view_name&amp;#125;&#39;&lt;/span&gt;, shell=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Command run:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;E:\ python .\cli.py&amp;#10;usage: cli.py [-h] [-v] [-V VIEW_NAME]&amp;#10;&amp;#10;Manage Jenkins Job&amp;#10;&amp;#10;optional arguments:&amp;#10;  -h, --help            show this help message and exit&amp;#10;  -v, --version         Show version&amp;#10;  -V VIEW_NAME, --view VIEW_NAME&amp;#10;                        Get Jenkins job last build number by view&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Get job number:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;PS E:\neolink_tools&amp;#62; python .\cli.py -V jenkins view name&amp;#10;&amp;#123;&amp;#10;    &amp;#34;a&amp;#34;: 12,&amp;#10;    &amp;#34;b&amp;#34;: 17,&amp;#10;    &amp;#34;c&amp;#34;: 20,&amp;#10;    &amp;#34;d&amp;#34;: 37&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;We get jenkins job number here &lt;a href=&quot;/2021/07/30/python-get-jenkins-job-and-build-number-info/&quot;&gt;Jenkins&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;argparse&lt;
    
    </summary>
    
      <category term="Python" scheme="http://izheyi.com/categories/Python/"/>
    
    
      <category term="Jenkins" scheme="http://izheyi.com/tags/Jenkins/"/>
    
      <category term="Python" scheme="http://izheyi.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Jenkins pipeline with pytest and allure</title>
    <link href="http://izheyi.com/2021/08/05/Jenkins-pipeline-with-pytest-and-allure/"/>
    <id>http://izheyi.com/2021/08/05/Jenkins-pipeline-with-pytest-and-allure/</id>
    <published>2021-08-05T01:49:27.000Z</published>
    <updated>2021-08-05T01:54:19.104Z</updated>
    
    <content type="html">&lt;p&gt;Use pipeline to better manage Jenkins job:&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; pipeline &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   agent &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	  label &lt;span class=&quot;string&quot;&gt;&#39;jenkins_master&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    parameters &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	  string defaultValue: &lt;span class=&quot;string&quot;&gt;&#39;/tests/&#39;&lt;/span&gt;, description: &lt;span class=&quot;string&quot;&gt;&#39;Set test suite&#39;&lt;/span&gt;, name: &lt;span class=&quot;string&quot;&gt;&#39;TestSuite&#39;&lt;/span&gt;, trim: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	  choice choices: [&lt;span class=&quot;string&quot;&gt;&#39;qa&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;dev&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;product&#39;&lt;/span&gt;], description: &lt;span class=&quot;string&quot;&gt;&#39;Set test run env&#39;&lt;/span&gt;, name: &lt;span class=&quot;string&quot;&gt;&#39;Environment&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	  string defaultValue: &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;, description: &lt;span class=&quot;string&quot;&gt;&#39;Set tag to run&#39;&lt;/span&gt;, name: &lt;span class=&quot;string&quot;&gt;&#39;Tag&#39;&lt;/span&gt;, trim: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	  string defaultValue: &lt;span class=&quot;string&quot;&gt;&#39;2&#39;&lt;/span&gt;, description: &lt;span class=&quot;string&quot;&gt;&#39;Set rerun times when failed&#39;&lt;/span&gt;, name: &lt;span class=&quot;string&quot;&gt;&#39;Rerun&#39;&lt;/span&gt;, trim: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	  string defaultValue: &lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;, description: &lt;span class=&quot;string&quot;&gt;&#39;Set multiple thread to run&#39;&lt;/span&gt;, name: &lt;span class=&quot;string&quot;&gt;&#39;Parallel&#39;&lt;/span&gt;, trim: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   stages &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      stage(&lt;span class=&quot;string&quot;&gt;&#39;Get Automaiton Code&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          steps&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            git credentialsId: &lt;span class=&quot;string&quot;&gt;&#39;xxxxxxx&#39;&lt;/span&gt;, url: &lt;span class=&quot;string&quot;&gt;&#39;https://xxx/api_automation.git&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	  stage(&lt;span class=&quot;string&quot;&gt;&#39;Run Automation&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          steps&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sh label: &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;, script: &lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;if [ ! $Tag ]; then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             pytest -s -v $&amp;#123;WORKSPACE&amp;#125;$&amp;#123;TestSuite&amp;#125; --reruns $&amp;#123;Rerun&amp;#125; -n $&amp;#123;Parallel&amp;#125; --alluredir=./report/json --clean-alluredir&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             pytest -s -v $&amp;#123;WORKSPACE&amp;#125;$&amp;#123;TestSuite&amp;#125; -m $&amp;#123;Tag&amp;#125; --reruns $&amp;#123;Rerun&amp;#125; -n $&amp;#123;Parallel&amp;#125; --alluredir=./report/json --clean-alluredir&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fi&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    post(&lt;span class=&quot;string&quot;&gt;&#39;Allure Report&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            always&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                script&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    allure includeProperties: false, jdk: &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;, report: &lt;span class=&quot;string&quot;&gt;&#39;report/html/&#39;&lt;/span&gt;, results: [[path: &lt;span class=&quot;string&quot;&gt;&#39;report/json&#39;&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Use pipeline to better manage Jenkins job:&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/
    
    </summary>
    
      <category term="Jenkins" scheme="http://izheyi.com/categories/Jenkins/"/>
    
    
      <category term="Allure" scheme="http://izheyi.com/tags/Allure/"/>
    
      <category term="Jenkins" scheme="http://izheyi.com/tags/Jenkins/"/>
    
      <category term="Pytest" scheme="http://izheyi.com/tags/Pytest/"/>
    
  </entry>
  
  <entry>
    <title>python get Jenkins job and build number info</title>
    <link href="http://izheyi.com/2021/07/30/python-get-jenkins-job-and-build-number-info/"/>
    <id>http://izheyi.com/2021/07/30/python-get-jenkins-job-and-build-number-info/</id>
    <published>2021-07-30T07:25:26.000Z</published>
    <updated>2021-08-03T08:29:44.911Z</updated>
    
    <content type="html">&lt;p&gt;For multiple services Jenkins job, find a way to get each job and lasted build number for release static, here the way:&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; jenkins&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Login&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s = jenkins.Jenkins(url=URL, username=USERNAME, password=PASSWORD)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Get all jobs under certain view&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;jobs = s.get_jobs(view_name=VIEW_NAME)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Get job and last build number&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dic = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; job &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; jobs:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name = job[&lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    build = s.get_job_info(name)[&lt;span class=&quot;string&quot;&gt;&#39;lastCompletedBuild&#39;&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;&#39;number&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dic[name] = build&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(json.dumps(dic, indent=&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Result:&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;b&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;c&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;d&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;37&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;For multiple services Jenkins job, find a way to get each job and lasted build number for release static, here the way:&lt;/p&gt;
&lt;figure class
    
    </summary>
    
      <category term="Jenkins" scheme="http://izheyi.com/categories/Jenkins/"/>
    
    
      <category term="Jenkins" scheme="http://izheyi.com/tags/Jenkins/"/>
    
      <category term="Python" scheme="http://izheyi.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>丁丁画画（四年级）</title>
    <link href="http://izheyi.com/2021/07/12/%E4%B8%81%E4%B8%81%E7%94%BB%E7%94%BB%EF%BC%88%E5%9B%9B%E5%B9%B4%E7%BA%A7%EF%BC%89/"/>
    <id>http://izheyi.com/2021/07/12/丁丁画画（四年级）/</id>
    <published>2021-07-12T11:59:15.000Z</published>
    <updated>2021-07-19T08:19:13.077Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;/images/izheyi/pic/4/1.JPG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/izheyi/pic/4/2.JPG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/izheyi/pic/4/1.JPG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/izheyi/pic/4/2.JPG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

    
    </summary>
    
      <category term="丁丁" scheme="http://izheyi.com/categories/%E4%B8%81%E4%B8%81/"/>
    
    
      <category term="丁丁" scheme="http://izheyi.com/tags/%E4%B8%81%E4%B8%81/"/>
    
      <category term="画画" scheme="http://izheyi.com/tags/%E7%94%BB%E7%94%BB/"/>
    
  </entry>
  
  <entry>
    <title>Jmeter: JSR223使用</title>
    <link href="http://izheyi.com/2021/04/14/Jmeter-JSR223%E4%BD%BF%E7%94%A8/"/>
    <id>http://izheyi.com/2021/04/14/Jmeter-JSR223使用/</id>
    <published>2021-04-14T00:46:44.000Z</published>
    <updated>2021-09-26T01:13:19.277Z</updated>
    
    <content type="html">&lt;p&gt;Jmeter经常用BeanShell来实现一些其本身不能处理的任务，但是BeanShell的效率不高，现在可以用JSR223来代替，支持groovy脚本，效率更高。&lt;/p&gt;
&lt;h4 id=&quot;常用内置变量&quot;&gt;&lt;a href=&quot;#常用内置变量&quot; class=&quot;headerlink&quot; title=&quot;常用内置变量&quot;&gt;&lt;/a&gt;常用内置变量&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Vars&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;定义变量与调用变量&lt;/p&gt;
&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vars.&lt;span class=&quot;built_in&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;key&lt;/span&gt;)：从jmeter中获得变量值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vars.put(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;key&lt;/span&gt;，&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; value)：数据存到jmeter变量中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vars.putObject(&lt;span class=&quot;string&quot;&gt;&quot;OBJ1&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;Object&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Props&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;设置属性与调用属性&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;__setProperty(test1,property1,)&amp;#125;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;props.put(“&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;2”,“property2”);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;String &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;1 =props.get(“&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;1”);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;String &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;2 = props.get(“&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;2”);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ctx&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;通过它来访问当前线程的上下文&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;getVariables&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;：获取当前线程的所有变量&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;getPreviousResult&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; ：获取前一个取样器的结果&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;prev&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;获取前面的sample采样的结果&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;getResponseDataAsString&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;：获取响应信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;getResponseCode&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; ：获取响应code&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;log&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;打印日志 ，日志会保存在jmeter.log中&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;运行外部文件&quot;&gt;&lt;a href=&quot;#运行外部文件&quot; class=&quot;headerlink&quot; title=&quot;运行外部文件&quot;&gt;&lt;/a&gt;运行外部文件&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Java&lt;/p&gt;
&lt;p&gt;在JSR223中引入源文件并执行，执行与JAVA本身的方法一致&lt;/p&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;source(“&lt;span class=&quot;string&quot;&gt;F:&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/Test/&lt;/span&gt;demo1.java”);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Jar&lt;/p&gt;
&lt;p&gt;有下边两种方法可以引入jar包，执行与JAVA本身的方法一致&lt;br&gt;1、将jar包放到Jmeter安装目录的\lib\ext目录下&lt;br&gt;2、在测试计划中导入&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Jmeter经常用BeanShell来实现一些其本身不能处理的任务，但是BeanShell的效率不高，现在可以用JSR223来代替，支持groovy脚本，效率更高。&lt;/p&gt;
&lt;h4 id=&quot;常用内置变量&quot;&gt;&lt;a href=&quot;#常用内置变量&quot; class=&quot;headerlin
    
    </summary>
    
      <category term="Jmeter" scheme="http://izheyi.com/categories/Jmeter/"/>
    
    
      <category term="Jmeter" scheme="http://izheyi.com/tags/Jmeter/"/>
    
  </entry>
  
  <entry>
    <title>Jmeter: 常用设置in properties</title>
    <link href="http://izheyi.com/2021/04/02/Jmeter-%E5%B8%B8%E7%94%A8%E8%AE%BE%E7%BD%AEin-properties/"/>
    <id>http://izheyi.com/2021/04/02/Jmeter-常用设置in-properties/</id>
    <published>2021-04-02T06:18:15.000Z</published>
    <updated>2021-09-25T06:20:59.244Z</updated>
    
    <content type="html">&lt;p&gt;在Jmeter里常用的设置：&lt;/p&gt;
&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;jmeter.hidpi.mode=&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;jmeter.hidpi.&lt;span class=&quot;built_in&quot;&gt;scale&lt;/span&gt;.factor=&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sampleresult.&lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;.encoding=UTF-&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;jsyntaxtextarea.font.&lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;jmeter.reportgenerator.overall_granularity=&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;jmeter.&lt;span class=&quot;built_in&quot;&gt;save&lt;/span&gt;.saveservice.bytes = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;jmeter.&lt;span class=&quot;built_in&quot;&gt;save&lt;/span&gt;.saveservice.label = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;jmeter.&lt;span class=&quot;built_in&quot;&gt;save&lt;/span&gt;.saveservice.latency = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;jmeter.&lt;span class=&quot;built_in&quot;&gt;save&lt;/span&gt;.saveservice.response_code = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;jmeter.&lt;span class=&quot;built_in&quot;&gt;save&lt;/span&gt;.saveservice.response_message = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;jmeter.&lt;span class=&quot;built_in&quot;&gt;save&lt;/span&gt;.saveservice.successful = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;jmeter.&lt;span class=&quot;built_in&quot;&gt;save&lt;/span&gt;.saveservice.thread_counts = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;jmeter.&lt;span class=&quot;built_in&quot;&gt;save&lt;/span&gt;.saveservice.thread_name = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;jmeter.&lt;span class=&quot;built_in&quot;&gt;save&lt;/span&gt;.saveservice.time = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# the timestamp format must include the time and should include the date.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# For example the &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;, which is milliseconds since the epoch: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;jmeter.&lt;span class=&quot;built_in&quot;&gt;save&lt;/span&gt;.saveservice.timestamp_format = ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Or the following would also be suitable&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;jmeter.&lt;span class=&quot;built_in&quot;&gt;save&lt;/span&gt;.saveservice.timestamp_format = yyyy/MM/dd HH:mm:ss&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;jmeter.&lt;span class=&quot;built_in&quot;&gt;save&lt;/span&gt;.saveservice.assertion_results_failure_message = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;建议在user.properties里设置。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在Jmeter里常用的设置：&lt;/p&gt;
&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;li
    
    </summary>
    
      <category term="Jmeter" scheme="http://izheyi.com/categories/Jmeter/"/>
    
    
      <category term="Jmeter" scheme="http://izheyi.com/tags/Jmeter/"/>
    
  </entry>
  
  <entry>
    <title>Jmeter: 命令行运行和基本参数使用</title>
    <link href="http://izheyi.com/2021/03/20/Jmeter-%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%BF%90%E8%A1%8C/"/>
    <id>http://izheyi.com/2021/03/20/Jmeter-命令行运行/</id>
    <published>2021-03-20T02:33:21.000Z</published>
    <updated>2021-09-25T03:31:54.865Z</updated>
    
    <content type="html">&lt;p&gt;GUI模式仅用于创建测试计划和调试脚本，真正跑性能测试时候，不要用 GUI 模式，用命令行模式&lt;/p&gt;
&lt;h4 id=&quot;基本参数&quot;&gt;&lt;a href=&quot;#基本参数&quot; class=&quot;headerlink&quot; title=&quot;基本参数&quot;&gt;&lt;/a&gt;基本参数&lt;/h4&gt;&lt;p&gt;-t，–testfile &amp;lt;参数&amp;gt;&lt;br&gt; 要运行的jmeter test（.jmx）文件&lt;/p&gt;
&lt;p&gt;-l，–logfile &amp;lt;参数&amp;gt;&lt;br&gt; 将样本记录到的文件&lt;/p&gt;
&lt;p&gt;-j，–jmeterlogfile &amp;lt;参数&amp;gt;&lt;br&gt; jmeter运行日志文件（jmeter.log）&lt;/p&gt;
&lt;p&gt;-n，–nongui&lt;br&gt; 在命令行模式下运行JMeter&lt;/p&gt;
&lt;p&gt;-g，–reportonly &amp;lt;参数&amp;gt;&lt;br&gt; 仅从测试结果文件生成报告仪表板&lt;/p&gt;
&lt;p&gt;-e，–reportatendofloadtests&lt;br&gt; 负载测试后生成报告仪表板&lt;/p&gt;
&lt;p&gt;-o，–reportoutputfolder &amp;lt;参数&amp;gt;&lt;br&gt; 报告仪表板的输出文件夹&lt;/p&gt;
&lt;p&gt;==========================================&lt;/p&gt;
&lt;p&gt;-s，–server&lt;br&gt; 运行JMeter服务器&lt;/p&gt;
&lt;p&gt;-H，–proxyHost &amp;lt;参数&amp;gt;&lt;br&gt; 设置供JMeter使用的代理服务器&lt;/p&gt;
&lt;p&gt;-P，–proxyPort &amp;lt;参数&amp;gt;&lt;br&gt; 设置代理服务器端口以供JMeter使用&lt;/p&gt;
&lt;p&gt;-r，-runremote&lt;br&gt; 启动远程服务器（在remote_hosts中定义）&lt;/p&gt;
&lt;p&gt;-R，–remotestart &amp;lt;参数&amp;gt;&lt;br&gt; 启动这些远程服务器（覆盖remote_hosts）&lt;/p&gt;
&lt;p&gt;-X，–remoteexit&lt;br&gt; 测试结束时退出远程服务器（CLI模式）&lt;/p&gt;
&lt;p&gt;==========================================&lt;/p&gt;
&lt;p&gt;-J，–jmeterproperty &amp;lt;参数&amp;gt; = &amp;lt;值&amp;gt;&lt;br&gt; 定义其他JMeter属性&lt;/p&gt;
&lt;p&gt;-G，–globalproperty &amp;lt;参数&amp;gt; = &amp;lt;值&amp;gt;&lt;br&gt; 定义全局属性或属性文件（发送到服务器）&lt;br&gt; 例如-Gport = 123&lt;br&gt; 或-Gglobal.properties&lt;/p&gt;
&lt;p&gt;-D，–systemproperty &amp;lt;参数&amp;gt; = &amp;lt;值&amp;gt;&lt;br&gt; 定义其他系统属性&lt;/p&gt;
&lt;p&gt;-S，–systemPropertyFile &amp;lt;参数&amp;gt;&lt;br&gt; 其他系统属性文件&lt;/p&gt;
&lt;p&gt;-f，-forceDeleteResultFile&lt;br&gt; 在开始测试之前，强制删除现有结果文件和Web报告文件夹（如果存在）&lt;/p&gt;
&lt;p&gt;-L，–loglevel &amp;lt;参数&amp;gt; = &amp;lt;值&amp;gt;&lt;br&gt; [类别=]级别，例如jorphan = INFO，jmeter.util = DEBUG或com.example.foo = WARN&lt;/p&gt;
&lt;p&gt;-d，–homedir &amp;lt;参数&amp;gt;&lt;br&gt; 要使用的jmeter主目录&lt;/p&gt;
&lt;h4 id=&quot;设置命令行参数&quot;&gt;&lt;a href=&quot;#设置命令行参数&quot; class=&quot;headerlink&quot; title=&quot;设置命令行参数&quot;&gt;&lt;/a&gt;设置命令行参数&lt;/h4&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;C:\Users\Desktop&amp;#62;jmeter -n -t Neo.jmx -f -l result/report.jtl -e -o report&amp;#10;Sep 25, 2021 11:01:36 AM java.util.prefs.WindowsPreferences &amp;#60;init&amp;#62;&amp;#10;WARNING: Could not open/create prefs root node Software\JavaSoft\Prefs at root 0x80000002. Windows RegCreateKeyEx(...) returned error code 5.&amp;#10;Creating summariser &amp;#60;summary&amp;#62;&amp;#10;Created the tree successfully using Neok.jmx&amp;#10;Starting standalone test @ Sat Sep 25 11:01:37 CST 2021 (1632538897030)&amp;#10;Waiting for possible Shutdown/StopTestNow/HeapDump/ThreadDump message on port 4445&amp;#10;summary =      3 in 00:00:00 =    7.0/s Avg:   101 Min:     1 Max:   277 Err:     0 (0.00%)&amp;#10;Tidying up ...    @ Sat Sep 25 11:01:37 CST 2021 (1632538897689)&amp;#10;... end of run&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;设置属性参数&quot;&gt;&lt;a href=&quot;#设置属性参数&quot; class=&quot;headerlink&quot; title=&quot;设置属性参数&quot;&gt;&lt;/a&gt;设置属性参数&lt;/h4&gt;&lt;p&gt;为了更好的用命令行跟Jenkins集成， 可以设置以下Jmeter属性：线程数、duration、ramp up-time。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;设置用户变量&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/jmeter/user_var.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;更改线程组使用变量&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/jmeter/use_var.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;命令行验证&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;C:\Users\Desktop&amp;#62;jmeter -n -Jthread_number=5 -Jramp_up=2 -Jduration=60 -t Neo.jmx -f -l result/report.jtl -e -o report&amp;#10;Creating summariser &amp;#60;summary&amp;#62;&amp;#10;Created the tree successfully using Neo.jmx&amp;#10;Starting standalone test @ Sat Sep 25 11:30:03 CST 2021 (1632540603981)&amp;#10;Waiting for possible Shutdown/StopTestNow/HeapDump/ThreadDump message on port 4445&amp;#10;summary +      1 in 00:00:00 =    2.9/s Avg:   242 Min:   242 Max:   242 Err:     0 (0.00%) Active: 1 Started: 1 Finished: 0&amp;#10;summary +   1706 in 00:00:25 =   67.1/s Avg:    71 Min:     0 Max:   386 Err:     0 (0.00%) Active: 5 Started: 5 Finished: 0&amp;#10;summary =   1707 in 00:00:26 =   66.2/s Avg:    71 Min:     0 Max:   386 Err:     0 (0.00%)&amp;#10;summary +   2013 in 00:00:32 =   63.7/s Avg:    74 Min:     0 Max:  2139 Err:     0 (0.00%) Active: 5 Started: 5 Finished: 0&amp;#10;summary =   3720 in 00:00:57 =   64.8/s Avg:    72 Min:     0 Max:  2139 Err:     0 (0.00%)&amp;#10;summary +     88 in 00:00:03 =   30.7/s Avg:   243 Min:     0 Max:  2136 Err:     0 (0.00%) Active: 0 Started: 5 Finished: 5&amp;#10;summary =   3808 in 00:01:00 =   63.2/s Avg:    76 Min:     0 Max:  2139 Err:     0 (0.00%)&amp;#10;Tidying up ...    @ Sat Sep 25 11:31:04 CST 2021 (1632540664505)&amp;#10;... end of run&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;-J是设置本地jmeter属性；-G是设置server的jmeter属性（只有设置了远程机，开启了远程服务，才需要用到-G）&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;GUI模式仅用于创建测试计划和调试脚本，真正跑性能测试时候，不要用 GUI 模式，用命令行模式&lt;/p&gt;
&lt;h4 id=&quot;基本参数&quot;&gt;&lt;a href=&quot;#基本参数&quot; class=&quot;headerlink&quot; title=&quot;基本参数&quot;&gt;&lt;/a&gt;基本参数&lt;/h4&gt;&lt;p&gt;-t，–tes
    
    </summary>
    
      <category term="Jmeter" scheme="http://izheyi.com/categories/Jmeter/"/>
    
    
      <category term="Jmeter" scheme="http://izheyi.com/tags/Jmeter/"/>
    
  </entry>
  
  <entry>
    <title>Jmeter: 常用函数</title>
    <link href="http://izheyi.com/2021/03/12/Jmeter-%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/"/>
    <id>http://izheyi.com/2021/03/12/Jmeter-常用函数/</id>
    <published>2021-03-12T01:51:00.000Z</published>
    <updated>2021-09-25T01:57:29.275Z</updated>
    
    <content type="html">&lt;p&gt;Jmeter提供了很多，列举一些比较常用函数，详细的自行查看（工具 -&amp;gt; 函数帮助）：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;函数&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;__Random&lt;/td&gt;
&lt;td&gt;生成随机数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;__RandomDate&lt;/td&gt;
&lt;td&gt;生成随机日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;__RandomString&lt;/td&gt;
&lt;td&gt;生成随机字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;__setProperty&lt;/td&gt;
&lt;td&gt;设置属性&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;__property&lt;/td&gt;
&lt;td&gt;读取属性&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;__P&lt;/td&gt;
&lt;td&gt;读取属性&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;__V&lt;/td&gt;
&lt;td&gt;拼接字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;__time&lt;/td&gt;
&lt;td&gt;返回指定格式的当前时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;__MD5&lt;/td&gt;
&lt;td&gt;将字符串MD5加密&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;__UUID&lt;/td&gt;
&lt;td&gt;生成随机UUID字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;__TestPlanName&lt;/td&gt;
&lt;td&gt;测试计划名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;__StringFromFile&lt;/td&gt;
&lt;td&gt;从文件中读取一行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;__strLen&lt;/td&gt;
&lt;td&gt;字符串长度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;__split&lt;/td&gt;
&lt;td&gt;将字符串拆分为变量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;__substring&lt;/td&gt;
&lt;td&gt;提取字符串的子串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;__machineName&lt;/td&gt;
&lt;td&gt;机器名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;__machineIP&lt;/td&gt;
&lt;td&gt;机器IP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;__isDefined&lt;/td&gt;
&lt;td&gt;判断变量是否已存在&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;__BeanShell&lt;/td&gt;
&lt;td&gt;可执行beanshell脚本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;__char&lt;/td&gt;
&lt;td&gt;根据unicode生成字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;__chooseRandom&lt;/td&gt;
&lt;td&gt;从指定的范围里面取值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;__counter&lt;/td&gt;
&lt;td&gt;计数器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;__env&lt;/td&gt;
&lt;td&gt;获取环境变量的值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;__eval&lt;/td&gt;
&lt;td&gt;读取变量表达式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;__FileToString&lt;/td&gt;
&lt;td&gt;读取文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;__intSum&lt;/td&gt;
&lt;td&gt;两个或多个整数的总和&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;__longSum&lt;/td&gt;
&lt;td&gt;两个或多个长值的总和&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;__digest&lt;/td&gt;
&lt;td&gt;将字符串加密&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;__if&lt;/td&gt;
&lt;td&gt;if 判断&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;__iterationNum&lt;/td&gt;
&lt;td&gt;线程循环次数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Jmeter提供了很多，列举一些比较常用函数，详细的自行查看（工具 -&amp;gt; 函数帮助）：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;函数&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;__Random&lt;
    
    </summary>
    
      <category term="Jmeter" scheme="http://izheyi.com/categories/Jmeter/"/>
    
    
      <category term="Jmeter" scheme="http://izheyi.com/tags/Jmeter/"/>
    
  </entry>
  
  <entry>
    <title>Jmeter: 获取 Jmeter 的属性</title>
    <link href="http://izheyi.com/2021/03/05/Jmeter-P-%E5%87%BD%E6%95%B0/"/>
    <id>http://izheyi.com/2021/03/05/Jmeter-P-函数/</id>
    <published>2021-03-05T00:59:54.000Z</published>
    <updated>2021-09-25T01:52:03.215Z</updated>
    
    <content type="html">&lt;p&gt;在跨平台运行，或者配置路径的时候，需要用到Jmeter的属性。&lt;/p&gt;
&lt;p&gt;可能用下边这个函数：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;__P() 函数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;比如Linux的&lt;code&gt;file.separator&lt;/code&gt; 的是 &lt;code&gt;/&lt;/code&gt;，Windows的&lt;code&gt;\&lt;/code&gt;，${__P(file.separator,)}可以根据不同的系统，获取不同系统下的文件路径分隔符。&lt;/p&gt;
&lt;h5 id=&quot;如何查看Jmeter属性&quot;&gt;&lt;a href=&quot;#如何查看Jmeter属性&quot; class=&quot;headerlink&quot; title=&quot;如何查看Jmeter属性&quot;&gt;&lt;/a&gt;如何查看Jmeter属性&lt;/h5&gt;&lt;p&gt; 测试计划右键添加：非测试元件 -&amp;gt; 属性显示。如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/jmeter/property.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在跨平台运行，或者配置路径的时候，需要用到Jmeter的属性。&lt;/p&gt;
&lt;p&gt;可能用下边这个函数：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;__P() 函数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;比如Linux的&lt;code&gt;file.separator&lt;/code&gt; 的是 &lt;code&gt;/&lt;
    
    </summary>
    
      <category term="Jmeter" scheme="http://izheyi.com/categories/Jmeter/"/>
    
    
      <category term="Jmeter" scheme="http://izheyi.com/tags/Jmeter/"/>
    
  </entry>
  
  <entry>
    <title>熊猫来了探险</title>
    <link href="http://izheyi.com/2021/02/15/%E7%86%8A%E7%8C%AB%E6%9D%A5%E4%BA%86%E6%8E%A2%E9%99%A9/"/>
    <id>http://izheyi.com/2021/02/15/熊猫来了探险/</id>
    <published>2021-02-15T12:56:28.000Z</published>
    <updated>2021-02-17T03:59:09.082Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;/images/izheyi/2021/02/01.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/izheyi/2021/02/02.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/izheyi/2021/02/03.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/izheyi/2021/02/04.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/izheyi/2021/02/05.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/izheyi/2021/02/06.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/izheyi/2021/02/07.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/izheyi/2021/02/01.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/izheyi/2021/02/02.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/izheyi/
    
    </summary>
    
      <category term="丁丁" scheme="http://izheyi.com/categories/%E4%B8%81%E4%B8%81/"/>
    
    
      <category term="丁丁" scheme="http://izheyi.com/tags/%E4%B8%81%E4%B8%81/"/>
    
      <category term="生活" scheme="http://izheyi.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>Pytest - 获取用例执行结果(pytest_runtest_makereport)</title>
    <link href="http://izheyi.com/2020/11/08/Pytest-%E8%8E%B7%E5%8F%96%E7%94%A8%E4%BE%8B%E6%89%A7%E8%A1%8C%E7%BB%93%E6%9E%9C-pytest-runtest-makereport/"/>
    <id>http://izheyi.com/2020/11/08/Pytest-获取用例执行结果-pytest-runtest-makereport/</id>
    <published>2020-11-08T03:26:54.000Z</published>
    <updated>2021-02-08T03:38:04.223Z</updated>
    
    <content type="html">&lt;p&gt;可以通过pytest hook 来实现用例执行结果的统计。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;初步实现&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CASES = &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;total&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;passed&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;failed&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;error&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;decorator&quot;&gt;@pytest.hookimpl(hookwrapper=True, tryfirst=True)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;pytest_runtest_makereport&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(item, call)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    result = &lt;span class=&quot;keyword&quot;&gt;yield&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    report = result.get_result()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(report)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(report.nodeid)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; report.when == &lt;span class=&quot;string&quot;&gt;&#39;setup&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; report.outcome == &lt;span class=&quot;string&quot;&gt;&#39;failed&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CASES[&lt;span class=&quot;string&quot;&gt;&#39;total&#39;&lt;/span&gt;] += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CASES[&lt;span class=&quot;string&quot;&gt;&#39;error&#39;&lt;/span&gt;] += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; report.when == &lt;span class=&quot;string&quot;&gt;&#39;call&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CASES[&lt;span class=&quot;string&quot;&gt;&#39;total&#39;&lt;/span&gt;] += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; report.outcome == &lt;span class=&quot;string&quot;&gt;&#39;passed&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CASES[&lt;span class=&quot;string&quot;&gt;&#39;passed&#39;&lt;/span&gt;] += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; report.outcome == &lt;span class=&quot;string&quot;&gt;&#39;failed&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CASES[&lt;span class=&quot;string&quot;&gt;&#39;failed&#39;&lt;/span&gt;] += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(CASES)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样有一个问题，当有失败重跑情况时，会把每次重跑都统计一次运行结果，结果会有偏差，不应该包含重跑的结果，因为是同一个Case。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;换个方式&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CASES = &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;total&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;passed&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;failed&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RUN_RESULT = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;decorator&quot;&gt;@pytest.hookimpl(hookwrapper=True, tryfirst=True)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;pytest_runtest_makereport&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(item, call)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    result = &lt;span class=&quot;keyword&quot;&gt;yield&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    report = result.get_result()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(report)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (report.when == &lt;span class=&quot;string&quot;&gt;&#39;setup&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; report.when == &lt;span class=&quot;string&quot;&gt;&#39;teardown&#39;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; report.outcome == &lt;span class=&quot;string&quot;&gt;&#39;failed&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        RUN_RESULT[report.nodeid] = &lt;span class=&quot;string&quot;&gt;&#39;failed&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; report.when == &lt;span class=&quot;string&quot;&gt;&#39;call&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        RUN_RESULT[report.nodeid] = report.outcome&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(RUN_RESULT)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CASES[&lt;span class=&quot;string&quot;&gt;&#39;total&#39;&lt;/span&gt;] = len(RUN_RESULT)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CASES[&lt;span class=&quot;string&quot;&gt;&#39;passed&#39;&lt;/span&gt;] = len(&amp;#123;k: v &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; k, v &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; RUN_RESULT.items() &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; v == &lt;span class=&quot;string&quot;&gt;&#39;passed&#39;&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CASES[&lt;span class=&quot;string&quot;&gt;&#39;failed&#39;&lt;/span&gt;] = len(&amp;#123;k: v &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; k, v &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; RUN_RESULT.items() &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; v == &lt;span class=&quot;string&quot;&gt;&#39;failed&#39;&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(CASES)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;结果&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;test_demo.py::test_demo01[zhangsan]&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;failed&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;test_demo.py::test_demo01[lisi]&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;failed&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;test_demo.py::test_demo01[wangwu]&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;failed&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;test_demo.py::test_demo02&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;passed&#39;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;total&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;passed&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;failed&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;可以通过pytest hook 来实现用例执行结果的统计。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;初步实现&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;l
    
    </summary>
    
      <category term="Automation Testing" scheme="http://izheyi.com/categories/Automation-Testing/"/>
    
    
      <category term="Pytest" scheme="http://izheyi.com/tags/Pytest/"/>
    
  </entry>
  
  <entry>
    <title>allure 定制详细报告</title>
    <link href="http://izheyi.com/2020/10/20/Allure-%E5%AE%9A%E5%88%B6%E8%AF%A6%E7%BB%86%E6%8A%A5%E5%91%8A/"/>
    <id>http://izheyi.com/2020/10/20/Allure-定制详细报告/</id>
    <published>2020-10-20T03:21:19.000Z</published>
    <updated>2021-02-02T03:31:20.630Z</updated>
    
    <content type="html">&lt;p&gt;默认的allure报告不能详细的显示出来脚本执行的步骤，能做到跟Log里一样的每一步操作。&lt;/p&gt;
&lt;p&gt;用&lt;code&gt;@allure.step()&lt;/code&gt;装饰器来实现。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;decorator&quot;&gt;@allure.step(&quot;Input text &amp;#123;text&amp;#125; in [&amp;#123;element&amp;#125;]&quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;input_text&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, element, text)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;**Description**:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Fill text to the page_element located by locator&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    :param element: The locator to locate the page_element.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    :param text: value to set to the page_element&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    :return:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ele = self.find_element(element)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ele.clear()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ele.send_keys(text)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    logger.info(f&lt;span class=&quot;string&quot;&gt;&#39;Input [&amp;#123;text&amp;#125;] in &amp;#123;element&amp;#125;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行结果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/allure/step.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;默认的allure报告不能详细的显示出来脚本执行的步骤，能做到跟Log里一样的每一步操作。&lt;/p&gt;
&lt;p&gt;用&lt;code&gt;@allure.step()&lt;/code&gt;装饰器来实现。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;
    
    </summary>
    
      <category term="Automation Testing" scheme="http://izheyi.com/categories/Automation-Testing/"/>
    
    
      <category term="Allure" scheme="http://izheyi.com/tags/Allure/"/>
    
      <category term="Pytest" scheme="http://izheyi.com/tags/Pytest/"/>
    
  </entry>
  
  <entry>
    <title>钉钉自定义机器人</title>
    <link href="http://izheyi.com/2020/10/09/%E9%92%89%E9%92%89%E8%87%AA%E5%AE%9A%E4%B9%89%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
    <id>http://izheyi.com/2020/10/09/钉钉自定义机器人/</id>
    <published>2020-10-09T08:50:45.000Z</published>
    <updated>2021-02-01T09:21:44.121Z</updated>
    
    <content type="html">&lt;p&gt;有想法是把自动化执行的结果实时发送到钉钉群里，及时提醒。&lt;/p&gt;
&lt;p&gt;简单看了一下，可以通过Webhook自定义机器人来实现：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;为钉钉群创建自定义机器人 ，会产生webhook。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过&lt;a href=&quot;https://github.com/zhuifengshen/DingtalkChatbot&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DingtalkChatbot&lt;/a&gt;来实现&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;发送机器人信息&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; dingtalkchatbot.chatbot &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; DingtalkChatbot&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;webhook = &lt;span class=&quot;string&quot;&gt;&#39;https://oapi.dingtalk.com/robot/send?access_token=xxxxxxxxx&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xiaoding = DingtalkChatbot(webhook)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# xiaoding.send_text(msg=&#39;我就是小丁，测试我是小机器人！&#39;, is_at_all=True)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# xiaoding.send_text(msg=&#39;我就是小丁，测试只@一人&#39;, at_mobiles=[150xxxxxxxx])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# xiaoding.send_link(title=&#39;测试小丁&#39;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#                    text=&#39;我是小机器人&#39;, message_url=&#39;http://izheyi.com/&#39;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#                    pic_url=&#39;http://izheyi.com/uploads/avatar.jpg&#39;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xiaoding.send_markdown(title=&lt;span class=&quot;string&quot;&gt;&#39;我就是测试小丁！&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       text=&lt;span class=&quot;string&quot;&gt;&#39;哈哈，测试我是小机器人发送Markdown\n&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;![izheyi](http://izheyi.com/uploads/avatar.jpg)\n&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;&amp;gt;这里是引用显示&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       is_at_all=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Result:&lt;/p&gt;
&lt;p&gt;我就是小丁，测试我是小机器人！&lt;a href=&quot;app://desktop.dingtalk.com/web_content/chatbox.html?isFourColumnMode=false#&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@所有人&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;​             收到      回复&lt;/p&gt;
&lt;p&gt;基本上实现了Python通过小机器人发送信息，下面就可以把测试的结果发到群里了。&lt;/p&gt;
&lt;p&gt;比如：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;xiaoding.send_markdown(title=&lt;span class=&quot;string&quot;&gt;&#39;我就是测试小丁！&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       text=&lt;span class=&quot;string&quot;&gt;&#39;Automation Test Result: \n&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;&amp;gt;Total:  25\n\n&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;&amp;gt; &amp;lt;font size=4 color=#D2691E&amp;gt; Passed:  20 &amp;lt;/font&amp;gt;\n\n&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;&amp;gt; Failed:  4\n\n&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;&amp;gt; Error:  1\n\n&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       is_at_all=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;   Automaton Test Result：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Total:  25&lt;/p&gt;
&lt;p&gt;Passed: 20&lt;/p&gt;
&lt;p&gt;Failed: 4&lt;/p&gt;
&lt;p&gt;Error: 1&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;有想法是把自动化执行的结果实时发送到钉钉群里，及时提醒。&lt;/p&gt;
&lt;p&gt;简单看了一下，可以通过Webhook自定义机器人来实现：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;为钉钉群创建自定义机器人 ，会产生webhook。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过&lt;a href=&quot;ht
    
    </summary>
    
      <category term="Automation Testing" scheme="http://izheyi.com/categories/Automation-Testing/"/>
    
    
      <category term="DingDing" scheme="http://izheyi.com/tags/DingDing/"/>
    
      <category term="Python" scheme="http://izheyi.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>pytest + allure + jenkins集成</title>
    <link href="http://izheyi.com/2020/09/15/pytest-allure-jenkins%E9%9B%86%E6%88%90/"/>
    <id>http://izheyi.com/2020/09/15/pytest-allure-jenkins集成/</id>
    <published>2020-09-15T06:38:00.000Z</published>
    <updated>2020-12-30T06:49:00.389Z</updated>
    
    <content type="html">&lt;p&gt;Pytest的报告有点简单，把报告换成了allure，可以一并集成到Jenkins上去。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装插件&lt;a href=&quot;https://plugins.jenkins.io/allure-jenkins-plugin&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Allure Jenkins Plugin&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Allure Commandline 配置&lt;/p&gt;
&lt;p&gt;“全局工具配置”页面 &lt;path里不包含bin目录&gt;&lt;/path里不包含bin目录&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/allure/config.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建Job&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;build&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/allure/build.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;post build&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/allure/post.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;支行Job&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/allure/result.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Pytest的报告有点简单，把报告换成了allure，可以一并集成到Jenkins上去。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装插件&lt;a href=&quot;https://plugins.jenkins.io/allure-jenkins-plugin&quot; target=&quot;_blan
    
    </summary>
    
      <category term="Product Delivery" scheme="http://izheyi.com/categories/Product-Delivery/"/>
    
    
      <category term="Allure" scheme="http://izheyi.com/tags/Allure/"/>
    
      <category term="Jenkins" scheme="http://izheyi.com/tags/Jenkins/"/>
    
      <category term="Pytest" scheme="http://izheyi.com/tags/Pytest/"/>
    
  </entry>
  
  <entry>
    <title>Jacoco功能测试覆盖率</title>
    <link href="http://izheyi.com/2020/09/02/Jacoco%E5%8A%9F%E8%83%BD%E6%B5%8B%E8%AF%95%E8%A6%86%E7%9B%96%E7%8E%87/"/>
    <id>http://izheyi.com/2020/09/02/Jacoco功能测试覆盖率/</id>
    <published>2020-09-02T02:17:10.000Z</published>
    <updated>2020-12-21T05:51:39.573Z</updated>
    
    <content type="html">&lt;p&gt;对于测试来说，更关注于功能（接口或UI）测试的覆盖率，一样也可以通过Jacoco来实现。&lt;/p&gt;
&lt;p&gt;我们需要这两个jar： &lt;code&gt;jacocoagent.jar&lt;/code&gt;和&lt;code&gt;jacococli.jar&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;一样是和Git，Jenkins集成，说一下思路&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;同样&lt;code&gt;mvn install&lt;/code&gt;，打包生成jar包&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;项目启动的时候，配置jacoco agent&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;java -javaagent:/jacocoagent.jar=includes=*,output=tcpserver,address=localhost,port=&lt;span class=&quot;number&quot;&gt;11111&lt;/span&gt; -jar ./target/project-&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;-SNAPSHOT.jar&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;启动后，生成报告&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;java -jar jacococli.jar dump --address localhost --port &lt;span class=&quot;number&quot;&gt;11111&lt;/span&gt; --destfile ./jacoco-demo.&lt;span class=&quot;keyword&quot;&gt;exec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;java -jar jacococli.jar report ./jacoco-demo.&lt;span class=&quot;keyword&quot;&gt;exec&lt;/span&gt; --classfiles ./target/classes --html ./report&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;没有做任何测试，覆盖率极低。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;做一些测试之后，生成报告&lt;/p&gt;
&lt;p&gt;反映出实时的测试覆盖率。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以上只是简单例子，也可以在Tomcat里配置。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;对于测试来说，更关注于功能（接口或UI）测试的覆盖率，一样也可以通过Jacoco来实现。&lt;/p&gt;
&lt;p&gt;我们需要这两个jar： &lt;code&gt;jacocoagent.jar&lt;/code&gt;和&lt;code&gt;jacococli.jar&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;一样是和Git，J
    
    </summary>
    
      <category term="Product Delivery" scheme="http://izheyi.com/categories/Product-Delivery/"/>
    
    
      <category term="Jacoco" scheme="http://izheyi.com/tags/Jacoco/"/>
    
  </entry>
  
  <entry>
    <title>Jacoco自动化代码覆盖率</title>
    <link href="http://izheyi.com/2020/08/22/Jacoco%E8%87%AA%E5%8A%A8%E5%8C%96%E4%BB%A3%E7%A0%81%E8%A6%86%E7%9B%96%E7%8E%87/"/>
    <id>http://izheyi.com/2020/08/22/Jacoco自动化代码覆盖率/</id>
    <published>2020-08-22T02:16:54.000Z</published>
    <updated>2020-12-15T05:56:56.681Z</updated>
    
    <content type="html">&lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;JaCoCo是一个开源的覆盖率工具，它针对的开发语言是java，其使用方法很灵活，可以嵌入到Ant、Maven中；可以作为Eclipse插件，可以使用其JavaAgent技术监控Java程序等等。官网(Jacoco)[&lt;a href=&quot;https://www.eclemma.org/jacoco/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.eclemma.org/jacoco/&lt;/a&gt;]&lt;/p&gt;
&lt;h2 id=&quot;覆盖率计数器&quot;&gt;&lt;a href=&quot;#覆盖率计数器&quot; class=&quot;headerlink&quot; title=&quot;覆盖率计数器&quot;&gt;&lt;/a&gt;覆盖率计数器&lt;/h2&gt;&lt;h6 id=&quot;1-行覆盖&quot;&gt;&lt;a href=&quot;#1-行覆盖&quot; class=&quot;headerlink&quot; title=&quot;1. 行覆盖&quot;&gt;&lt;/a&gt;1. 行覆盖&lt;/h6&gt;&lt;h6 id=&quot;2-类覆盖&quot;&gt;&lt;a href=&quot;#2-类覆盖&quot; class=&quot;headerlink&quot; title=&quot;2. 类覆盖&quot;&gt;&lt;/a&gt;2. 类覆盖&lt;/h6&gt;&lt;h6 id=&quot;3-方法覆盖&quot;&gt;&lt;a href=&quot;#3-方法覆盖&quot; class=&quot;headerlink&quot; title=&quot;3. 方法覆盖&quot;&gt;&lt;/a&gt;3. 方法覆盖&lt;/h6&gt;&lt;h6 id=&quot;4-分支覆盖&quot;&gt;&lt;a href=&quot;#4-分支覆盖&quot; class=&quot;headerlink&quot; title=&quot;4. 分支覆盖&quot;&gt;&lt;/a&gt;4. 分支覆盖&lt;/h6&gt;&lt;h6 id=&quot;5-指令覆盖&quot;&gt;&lt;a href=&quot;#5-指令覆盖&quot; class=&quot;headerlink&quot; title=&quot;5. 指令覆盖&quot;&gt;&lt;/a&gt;5. 指令覆盖&lt;/h6&gt;&lt;h6 id=&quot;6-圈复杂度&quot;&gt;&lt;a href=&quot;#6-圈复杂度&quot; class=&quot;headerlink&quot; title=&quot;6. 圈复杂度&quot;&gt;&lt;/a&gt;6. 圈复杂度&lt;/h6&gt;&lt;h1 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;原理&lt;/h1&gt;&lt;p&gt;Jacoco使用插桩的方式来记录覆盖率数据。&lt;br&gt; 插桩模式有两种：&lt;/p&gt;
&lt;h6 id=&quot;1-on-the-fly模式&quot;&gt;&lt;a href=&quot;#1-on-the-fly模式&quot; class=&quot;headerlink&quot; title=&quot;1. on-the-fly模式&quot;&gt;&lt;/a&gt;1. on-the-fly模式&lt;/h6&gt;&lt;blockquote&gt;
&lt;p&gt;JVM通过 -javaagent参数指定jar文件启动代理程序，代理程序在ClassLoader装载一个class前判断是否修改class文件，并将探针插入class文件，探针不改变原有方法的行为，只是记录是否已经执行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h6 id=&quot;2-offline模式&quot;&gt;&lt;a href=&quot;#2-offline模式&quot; class=&quot;headerlink&quot; title=&quot;2. offline模式&quot;&gt;&lt;/a&gt;2. offline模式&lt;/h6&gt;&lt;blockquote&gt;
&lt;p&gt;在测试之前先对文件进行插桩，生成插过桩的class或jar包，测试插过桩的class和jar包，生成覆盖率信息到文件，最后统一处理，生成报告。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;集成Maven&quot;&gt;&lt;a href=&quot;#集成Maven&quot; class=&quot;headerlink&quot; title=&quot;集成Maven&quot;&gt;&lt;/a&gt;集成Maven&lt;/h1&gt;&lt;p&gt;下载配置JDK，Maven，Jacoco&lt;/p&gt;
&lt;p&gt;Manven配置(Maven Plug-in)[&lt;a href=&quot;https://www.eclemma.org/jacoco/trunk/doc/maven.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.eclemma.org/jacoco/trunk/doc/maven.html&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;用下载的Jacoco的example里的例子演示&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;C:\Test\Jacoco&amp;gt;mvn install&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] Scanning &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; projects...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] ----------------&amp;lt; org.jacoco:org.jacoco.examples.maven &amp;gt;----------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] Building JaCoCo Maven plug-&lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; example &lt;span class=&quot;number&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] --------------------------------[ jar ]---------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] --- jacoco-maven-plugin:&lt;span class=&quot;number&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.6&lt;/span&gt;:prepare-agent (default-prepare-agent) @ org.jacoco.examples.maven ---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] argLine set to -&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Maven构建成功之后，生成代码覆盖报告（\target\site\jacoco）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/jacoco\report.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;集成Git和Jenkins&quot;&gt;&lt;a href=&quot;#集成Git和Jenkins&quot; class=&quot;headerlink&quot; title=&quot;集成Git和Jenkins&quot;&gt;&lt;/a&gt;集成Git和Jenkins&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;把example上传到Github上&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置Jenkins，回传报告&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/jacoco\jenkins.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置Jacoco Coverage Report&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/jacoco\coverage.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Coverage Trend&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/jacoco\trend.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;JaCoCo是一个开源的覆盖率工具，它针对的开发语言是java，其使用方法很灵活，可以嵌入到Ant、Maven中；可以作为Eclipse插件
    
    </summary>
    
      <category term="Product Delivery" scheme="http://izheyi.com/categories/Product-Delivery/"/>
    
    
      <category term="Jacoco" scheme="http://izheyi.com/tags/Jacoco/"/>
    
  </entry>
  
  <entry>
    <title>Pycharm2020.1.2激活</title>
    <link href="http://izheyi.com/2020/08/08/Pycharm2020-1-2%E6%BF%80%E6%B4%BB/"/>
    <id>http://izheyi.com/2020/08/08/Pycharm2020-1-2激活/</id>
    <published>2020-08-08T13:20:39.000Z</published>
    <updated>2020-12-15T05:56:56.686Z</updated>
    
    <content type="html">&lt;p&gt;从方法网络取得，仅供学习研究，请勿用于商业用途！&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装Pycharm&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;下载&lt;/p&gt;
&lt;p&gt;链接: &lt;a href=&quot;https://pan.baidu.com/s/1W6k0RRB45iJ15L6_7HEMKA&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://pan.baidu.com/s/1W6k0RRB45iJ15L6_7HEMKA&lt;/a&gt; 提取码: fti8 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;打开Pycharm， 把下载的zip拖拽到IDE窗口，重启Pycharm&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在弹出的JetbrainsAgent Helper对话框中，点击‘为Pycharm安装’&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;重启Pycharm即可&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;从方法网络取得，仅供学习研究，请勿用于商业用途！&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装Pycharm&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;下载&lt;/p&gt;
&lt;p&gt;链接: &lt;a href=&quot;https://pan.baidu.com/s/1W6k0RRB45iJ15L6_7HEMK
    
    </summary>
    
      <category term="Python" scheme="http://izheyi.com/categories/Python/"/>
    
    
      <category term="Pycharm" scheme="http://izheyi.com/tags/Pycharm/"/>
    
  </entry>
  
</feed>
