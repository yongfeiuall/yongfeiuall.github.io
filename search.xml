<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Jmeter + Grafana + InfluxDB 性能测试实时监控]]></title>
      <url>http://izheyi.com/2020/06/14/Jmeter-Grafana-InfluxDB-%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%AE%9E%E6%97%B6%E7%9B%91%E6%8E%A7/</url>
      <content type="html"><![CDATA[<p>Jmeter原生的监控确实是丑了点，且很难实时的压测过程中的性能状态，用下面的方式来代替原生的监控展示。</p>
<p>InfluxDB来存Jmeter运行数据，用Grafana来展示数据。Jmeter引入<code>Backend Litener</code>，压测的过程中实时把统计数据发送到InfluxDB中，通过Grafana可视化的展示出来。</p>
<h1 id="InfluxDB"><a href="#InfluxDB" class="headerlink" title="InfluxDB"></a>InfluxDB</h1><p>一个时序数据库，不做详细说明，可参见官网<a href="https://www.influxdata.com" target="_blank" rel="external">InfluxDB</a></p>
<ol>
<li><p>从官网下载</p>
</li>
<li><p>修改配置文件，influxdb.conf</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[meta]</span><br><span class="line">  # Where the metadata/raft database is stored</span><br><span class="line">  dir = "C:/influxdb/meta"</span><br><span class="line"></span><br><span class="line">  # Automatically <span class="operator"><span class="keyword">create</span> a <span class="keyword">default</span> <span class="keyword">retention</span> <span class="keyword">policy</span> <span class="keyword">when</span> creating a <span class="keyword">database</span>.</span><br><span class="line">  # <span class="keyword">retention</span>-autocreate = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  # <span class="keyword">If</span> <span class="keyword">log</span> messages <span class="keyword">are</span> printed <span class="keyword">for</span> the meta service</span><br><span class="line">  # <span class="keyword">logging</span>-enabled = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">############################</span><br><span class="line">[<span class="keyword">data</span>]</span><br><span class="line">  # The <span class="keyword">directory</span> <span class="keyword">where</span> the TSM <span class="keyword">storage</span> <span class="keyword">engine</span> stores TSM files.</span><br><span class="line">  dir = <span class="string">"C:/influxdb/data"</span></span><br><span class="line"></span><br><span class="line">  # The <span class="keyword">directory</span> <span class="keyword">where</span> the TSM <span class="keyword">storage</span> <span class="keyword">engine</span> stores WAL files.</span><br><span class="line">  wal-dir = <span class="string">"C:/influxdb/wal"</span></span><br><span class="line">  </span><br><span class="line">############################</span><br><span class="line">[<span class="keyword">http</span>]</span><br><span class="line">  # Determines whether <span class="keyword">HTTP</span> endpoint <span class="keyword">is</span> enabled.</span><br><span class="line">  enabled = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  # Determines whether the Flux <span class="keyword">query</span> endpoint <span class="keyword">is</span> enabled.</span><br><span class="line">  # flux-enabled = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  # Determines whether the Flux <span class="keyword">query</span> <span class="keyword">logging</span> <span class="keyword">is</span> enabled.</span><br><span class="line">  # flux-<span class="keyword">log</span>-enabled = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  # The bind address used <span class="keyword">by</span> the <span class="keyword">HTTP</span> service.</span><br><span class="line"> bind-address = <span class="string">":8086"</span></span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<ol>
<li><p>创建相应Folder： data, meta, wal</p>
</li>
<li><p>双击influxd.exe，运行influxDB</p>
<figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="number">8888888</span>           .d<span class="number">888 888</span>                   <span class="number">8888888</span>b.  888888b.</span><br><span class="line">   888            d88P"  888                   888  "Y88b 888  "88b</span><br><span class="line">   888            888    888                   888    <span class="number">888 888</span>  .88P</span><br><span class="line">   888   88888b.  <span class="number">888888 88</span>8 888  <span class="number">888 888</span>  <span class="number">888 888</span>    <span class="number">888 88888</span>88K.</span><br><span class="line">   888   888 "88b 888    <span class="number">888 888</span>  888  Y8bd8P' 888    <span class="number">888 888</span>  "Y88b</span><br><span class="line">   888   888  <span class="number">888 888</span>    <span class="number">888 888</span>  888   X88K   888    <span class="number">888 888</span>    888</span><br><span class="line">   888   888  <span class="number">888 888</span>    888 Y88b 888 .d8""8b. 888  .d88P 888   d88P</span><br><span class="line"> <span class="number">8888888 88</span>8  <span class="number">888 888</span>    888  "Y<span class="number">88888 888</span>  <span class="number">888 88888</span>88P"  <span class="number">8888888</span>P"</span><br><span class="line"></span><br><span class="line"><span class="number">2020-06-23</span>T<span class="number">06:34:00.42</span>1889Z     info    InfluxDB starting       &#123;"log_id": "0NZyzDPG000", "version": "1.8.0", "branch": "1.8", "commit": "781490de<span class="number">48220d7695</span>a<span class="number">05c29e5a36</span>f<span class="number">550a4568</span>f5"&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="Jmeter"><a href="#Jmeter" class="headerlink" title="Jmeter"></a>Jmeter</h1><ol>
<li><p>在InfluxDB创建DB</p>
<figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Connected to http://localhost:8086 version 1.8.0</span><br><span class="line">InfluxDB shell version: 1.8.0</span><br><span class="line">&gt; create database jmeter</span><br><span class="line">&gt; show databases</span><br><span class="line">name: databases</span><br><span class="line"><span class="header">name</span><br><span class="line">----</span></span><br><span class="line"><span class="emphasis">_internal</span><br><span class="line">jmeter</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>配置 Jmeter Backend Listerner</p>
<p><img src="/images/performancetesting/backend_listener.jpg" alt=""></p>
</li>
</ol>
<h1 id="Grafana"><a href="#Grafana" class="headerlink" title="Grafana"></a>Grafana</h1><ol>
<li><p>配置数据源</p>
<p><img src="/images/performancetesting/grafana_influxdb.jpg" alt=""></p>
</li>
<li><p>搭建Dashboard</p>
<p>Import Dashboard: 5496</p>
</li>
</ol>
<h1 id="Verify"><a href="#Verify" class="headerlink" title="Verify"></a>Verify</h1><p>运行Jmeter脚本，查看数据展示：</p>
<p><img src="/images/performancetesting/grafana_jmeter.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Robotframework Automation With Jenkins and Xray - pipeline]]></title>
      <url>http://izheyi.com/2020/05/25/Robotframework-Automation-With-Jenkins-and-Xray-pipeline/</url>
      <content type="html"><![CDATA[<p>From last blog, we integrate RF, Jenkins and Xray, but for now, we usually use ‘Pipeline’ way for better management. Give it a try…</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line">    agent any</span><br><span class="line">    stages &#123;  </span><br><span class="line">        stage(<span class="string">'Test Execution'</span>)&#123;</span><br><span class="line">            steps&#123;</span><br><span class="line">                bat <span class="string">'robot db.robot'</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        stage(<span class="string">'Publish RF Test Result'</span>)&#123;</span><br><span class="line">             steps &#123;</span><br><span class="line">				step([</span><br><span class="line">                     $<span class="class"><span class="keyword">class</span>:</span> <span class="string">'RobotPublisher'</span>,</span><br><span class="line">                     disableArchiveOutput: false,</span><br><span class="line">                     logFileName: <span class="string">'log.html'</span>,</span><br><span class="line">                     otherFiles: <span class="string">''</span>,</span><br><span class="line">                     outputFileName: <span class="string">'output.xml'</span>,</span><br><span class="line">                     outputPath: <span class="string">''</span>,</span><br><span class="line">                     passThreshold: <span class="number">100</span>,</span><br><span class="line">                     reportFileName: <span class="string">'report.html'</span>,</span><br><span class="line">                     unstableThreshold: <span class="number">0</span></span><br><span class="line">				])</span><br><span class="line">			&#125;</span><br><span class="line">		 &#125;</span><br><span class="line">        </span><br><span class="line">        stage(<span class="string">'Import Result To Xray'</span>) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                step([</span><br><span class="line">                    $<span class="class"><span class="keyword">class</span>:</span> <span class="string">'XrayImportBuilder'</span>,</span><br><span class="line">                    endpointName: <span class="string">'/robot'</span>,</span><br><span class="line">                    fixVersion: <span class="string">''</span>,</span><br><span class="line">                    importFilePath: <span class="string">'output.xml'</span>,</span><br><span class="line">                    importToSameExecution: <span class="string">'true'</span>,</span><br><span class="line">                    projectKey: <span class="string">'ISR'</span>,</span><br><span class="line">                    serverInstance: <span class="string">'39c998d7-e25b-4cc7-81d6-dfe14d970cac'</span>,</span><br><span class="line">                    testPlanKey: <span class="string">''</span>,</span><br><span class="line">                    testExecKey: <span class="string">'ISR-8352'</span></span><br><span class="line">				])</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;s</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>After run job, the result as below:</p>
<p><img src="/images/CI/xray/pipeline.png" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Robotframework Automation With Jenkins and Xray]]></title>
      <url>http://izheyi.com/2020/05/17/Robotframework-Automation-With-Jenkins-and-Xray/</url>
      <content type="html"><![CDATA[<p>Currently, we use Xray in Jira for test management, now we want to implement our automation as below:</p>
<ol>
<li>use Robotframework design script</li>
<li>use Jenkins trigger automaion running</li>
<li>return running result to xray and update execution status</li>
</ol>
<h1 id="Pre-Condition"><a href="#Pre-Condition" class="headerlink" title="Pre-Condition"></a>Pre-Condition</h1><ol>
<li>Create one test case, one execution, and add test case to execution, the default status as below:<br><img src="/images/CI/xray/before_run.jpg" alt=""></li>
<li>RF demo script:<br><img src="/images/CI/xray/rf_script.jpg" alt=""></li>
</ol>
<h1 id="Install-and-config-xray-jenkins-plugin"><a href="#Install-and-config-xray-jenkins-plugin" class="headerlink" title="Install and config xray jenkins plugin"></a>Install and config xray jenkins plugin</h1><p>Use offline way to install, download plugin here: <a href="http://mirrors.jenkins-ci.org/plugins/xray-connector/" target="_blank" rel="external">xray-connector</a>, and install plugin as below:<br><img src="/images/CI/xray/upload_plugin.jpg" alt=""></p>
<p>Then, we need to configure Xray plug-in to communicate with JIRA, navigate to Manage Jenkins &gt; Configure System &gt; Xray for Jira configuration.<br><img src="/images/CI/xray/xray_config.jpg" alt=""></p>
<h1 id="Config-jenkins-job-to-run-automaiton-test-and-return-report-to-xray"><a href="#Config-jenkins-job-to-run-automaiton-test-and-return-report-to-xray" class="headerlink" title="Config jenkins job to run automaiton test and return report to xray"></a>Config jenkins job to run automaiton test and return report to xray</h1><ol>
<li>Just use RF command to run demo script, config as below:<br><img src="/images/CI/xray/run_rf.jpg" alt=""></li>
<li>Retrun results to Xray, define in Post-build actioas - “Xray: Results Import Task”.<br><img src="/images/CI/xray/import_result.jpg" alt=""></li>
<li>Config task with below params:<br><img src="/images/CI/xray/import_result_config.jpg" alt=""><pre><code>- Import to Same Test Execution – When this option is checked, if you are importing multiple execution report files using a glob expression, the results will be imported to the same Test Execution
- Execution Report File (file path with file name) – location and name of the Robot Framework tests output file. 
- Project Key – key of the JIRA project. This is a required parameter
- Test Execution Key – JIRA issue key where results will be imported. 
- Test Plan Key – JIRA issue key of the Test Plan. 
- Test Environments – list of Environments (separated by “,”) where tests are executed.
</code></pre></li>
<li>Run jenkins job</li>
<li>Back to Jira Xray, the status update from TODO to PASS automatically<br><img src="/images/CI/xray/after_run.jpg" alt=""></li>
<li>Go to Execution detail page to view automaion detail result<br><img src="/images/CI/xray/after_run_detail.jpg" alt=""></li>
</ol>
<h1 id="Finally"><a href="#Finally" class="headerlink" title="Finally"></a>Finally</h1><p>Other things we could do:</p>
<ol>
<li>Create test exceution in xray automatically after automation running</li>
<li>Even create test case after automation running</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Prometheus + Grafana 实时监控Linux]]></title>
      <url>http://izheyi.com/2020/04/18/Prometheus-Grafana-%E5%AE%9E%E6%97%B6%E7%9B%91%E6%8E%A7Linux/</url>
      <content type="html"><![CDATA[<p>上篇中介绍了Prometheus， Grafana，并实现了实时监控Windows，回顾：<a href="/2020/04/05/Prometheus-Grafana-监控Windows/">Prometheus + Grafana 实时监控Windows</a></p>
<p>本篇来介绍一下Linux。</p>
<h1 id="node-exporter安装配置"><a href="#node-exporter安装配置" class="headerlink" title="node exporter安装配置"></a>node exporter安装配置</h1><ol>
<li><p>下载 node exporter </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/prometheus/node_exporter/releases/download/v0.<span class="number">18.1</span>/node_exporter-<span class="number">0.18</span>.<span class="number">1</span>.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure>
</li>
<li><p>解压</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf node_exporter-<span class="number">0.18</span>.<span class="number">1</span>.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure>
</li>
<li><p>添加系统服务 (vi /usr/lib/systemd/system/node_exporter.service)</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=https://prometheus.io</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Restart=on-failure</span><br><span class="line">ExecStart=/opt/node_exporter-<span class="number">0.18</span>.<span class="number">1</span>.linux-amd64/node_exporter</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动服务</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start node_exporter</span><br><span class="line">systemctl status node_exporter</span><br></pre></td></tr></table></figure>
</li>
<li><p>验证</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@izheyi node_exporter-<span class="number">0.18</span>.<span class="number">1</span>.linux-amd64]<span class="comment"># curl http://localhost:9100/metrics</span></span><br><span class="line"><span class="comment"># HELP go_gc_duration_seconds A summary of the GC invocation durations.</span></span><br><span class="line"><span class="comment"># TYPE go_gc_duration_seconds summary</span></span><br><span class="line">go_gc_duration_seconds&#123;quantile=<span class="string">"0"</span>&#125; <span class="number">0</span></span><br><span class="line">go_gc_duration_seconds&#123;quantile=<span class="string">"0.25"</span>&#125; <span class="number">0</span></span><br><span class="line">go_gc_duration_seconds&#123;quantile=<span class="string">"0.5"</span>&#125; <span class="number">0</span></span><br><span class="line">go_gc_duration_seconds&#123;quantile=<span class="string">"0.75"</span>&#125; <span class="number">0</span></span><br><span class="line">go_gc_duration_seconds&#123;quantile=<span class="string">"1"</span>&#125; <span class="number">0</span></span><br><span class="line">go_gc_duration_seconds_sum <span class="number">0</span></span><br><span class="line">go_gc_duration_seconds_count <span class="number">0</span></span><br><span class="line"><span class="comment"># HELP go_goroutines Number of goroutines that currently exist.</span></span><br><span class="line"><span class="comment"># TYPE go_goroutines gauge</span></span><br><span class="line">go_goroutines <span class="number">6</span></span><br><span class="line"><span class="comment"># HELP go_info Information about the Go environment.</span></span><br><span class="line"><span class="comment"># TYPE go_info gauge</span></span><br><span class="line">go_info&#123;version=<span class="string">"go1.12.5"</span>&#125; <span class="number">1</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="Prometheus配置"><a href="#Prometheus配置" class="headerlink" title="Prometheus配置"></a>Prometheus配置</h1><ol>
<li><p>添加prometheus相关配置， prometheus.yml</p>
<figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby"> <span class="symbol">job_name:</span> <span class="string">'linux'</span></span><br><span class="line"></span>  static_configs:</span><br><span class="line">  -<span class="ruby"> <span class="symbol">targets:</span> [<span class="string">'192.168.174.128:9100'</span>]</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>重启prometheus</p>
</li>
<li><p>验证</p>
<p><img src="/images/performancetesting/prometheus_target.png" alt=""></p>
</li>
</ol>
<h1 id="Grafana配置"><a href="#Grafana配置" class="headerlink" title="Grafana配置"></a>Grafana配置</h1><ol>
<li><p>配置Prometheus数据源</p>
</li>
<li><p>搭建Prometheus仪表盘<br>Import Dashboard: 8919</p>
</li>
<li><p>验证</p>
<p><img src="/images/performancetesting/grafana_linux.png" alt=""></p>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Prometheus + Grafana 实时监控Windows]]></title>
      <url>http://izheyi.com/2020/04/05/Prometheus-Grafana-%E7%9B%91%E6%8E%A7Windows/</url>
      <content type="html"><![CDATA[<p><a href="https://prometheus.io/" target="_blank" rel="external">Prometheus</a> 是一个最初在SoundCloud上构建的开源系统监视和警报工具包。<br><a href="https://grafana.com/grafana/" target="_blank" rel="external">Grafana</a> 是一个跨平台的开源的度量分析和可视化工具，可以通过将采集的数据查询然后可视化的展示，并及时通知。</p>
<h2 id="Windows采集器（wmi-exporter）"><a href="#Windows采集器（wmi-exporter）" class="headerlink" title="Windows采集器（wmi_exporter）"></a>Windows采集器（wmi_exporter）</h2><p>要获取服务器运行时的参数，比如当前的CPU负载、内存消耗、硬盘使用、网络IO等等，就可以在服务器上运行一个node_exporter，它能把这些参数收集好，并且暴露出一个HTTP接口以便你访问查询。</p>
<ol>
<li>下载采集器<br>从<a href="https://github.com/martinlindhe/wmi_exporter" target="_blank" rel="external">wmi_exporter</a>下载</li>
<li>安装<br>直接双击安装即可。<br>Windows默认9182端口。</li>
<li>验证<br>访问<a href="http://127.0.0.1:9182/metrics" target="_blank" rel="external">http://127.0.0.1:9182/metrics</a><br>显示以下数据，数据采集器安装成功。<br><img src="/images/performancetesting/vim_exporter.jpg" alt=""></li>
</ol>
<h2 id="Prometheus"><a href="#Prometheus" class="headerlink" title="Prometheus"></a>Prometheus</h2><ol>
<li>下载<br>从<a href="https://prometheus.io/download/" target="_blank" rel="external">Prometheus</a>下载</li>
<li><p>配置<br>打开prometheus.yml</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"># my global config</span><br><span class="line">global:</span><br><span class="line">  scrape_interval:     5s # <span class="operator"><span class="keyword">Set</span> the scrape <span class="built_in">interval</span> <span class="keyword">to</span> every <span class="number">15</span> seconds. <span class="keyword">Default</span> <span class="keyword">is</span> every <span class="number">1</span> <span class="keyword">minute</span>.</span><br><span class="line">  evaluation_interval: <span class="number">5</span>s # <span class="keyword">Evaluate</span> <span class="keyword">rules</span> every <span class="number">15</span> seconds. The <span class="keyword">default</span> <span class="keyword">is</span> every <span class="number">1</span> <span class="keyword">minute</span>.</span><br><span class="line">  # scrape_timeout <span class="keyword">is</span> <span class="keyword">set</span> <span class="keyword">to</span> the <span class="keyword">global</span> <span class="keyword">default</span> (<span class="number">10</span>s).</span><br><span class="line"></span><br><span class="line"># Alertmanager configuration</span><br><span class="line">alerting:</span><br><span class="line">  alertmanagers:</span><br><span class="line">  - static_configs:</span><br><span class="line">    - targets:</span><br><span class="line">      # - alertmanager:<span class="number">9093</span></span><br><span class="line"></span><br><span class="line"># <span class="keyword">Load</span> <span class="keyword">rules</span> once <span class="keyword">and</span> periodically <span class="keyword">evaluate</span> them according <span class="keyword">to</span> the <span class="keyword">global</span> <span class="string">'evaluation_interval'</span>.</span><br><span class="line">rule_files:</span><br><span class="line">  # - <span class="string">"first_rules.yml"</span></span><br><span class="line">  # - <span class="string">"second_rules.yml"</span></span><br><span class="line"></span><br><span class="line"># A scrape configuration containing exactly one endpoint <span class="keyword">to</span> scrape:</span><br><span class="line"># Here it<span class="string">'s Prometheus itself.</span><br><span class="line">scrape_configs:</span><br><span class="line">  # The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.</span><br><span class="line">  - job_name: '</span>prometheus<span class="string">'</span><br><span class="line"></span><br><span class="line">    # metrics_path defaults to '</span>/metrics<span class="string">'</span><br><span class="line">    # scheme defaults to '</span><span class="keyword">http</span><span class="string">'.</span><br><span class="line"></span><br><span class="line">    static_configs:</span><br><span class="line">    - targets: ['</span>localhost:<span class="number">9182</span><span class="string">']</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>运行(将默认端口9090改为8091)</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">prometheus<span class="class">.exe</span> --config.file=prometheus<span class="class">.yml</span> --web.listen-address=:<span class="number">8091</span> &amp;</span><br></pre></td></tr></table></figure>
</li>
<li><p>验证<br>访问<a href="http://127.0.0.1:8091/" target="_blank" rel="external">http://127.0.0.1:8091/</a><br>目标列表中有你本地的机器，说明Prometheus已经成功监控到本地。<br><img src="/images/performancetesting/prometheus.jpg" alt=""></p>
</li>
</ol>
<h2 id="Grafana"><a href="#Grafana" class="headerlink" title="Grafana"></a>Grafana</h2><ol>
<li>下载<br>从<a href="https://grafana.com/grafana/download" target="_blank" rel="external">Grafana</a>下载</li>
<li><p>启动<br>双击安装即可。 进行到安装bin目录下：双击<code>grafana-server.exe</code>启动<br>访问<a href="http://127.0.0.1:3000" target="_blank" rel="external">http://127.0.0.1:3000</a><br>默认账号/密码：admin/admin<br><img src="/images/performancetesting/grafana_home.jpg" alt=""></p>
</li>
<li><p>配置Prometheus数据源<br>从刚才配置好的prometheus那里获取本地性能数据并展示。<br><img src="/images/performancetesting/grafana_prometheus.jpg" alt=""></p>
</li>
<li><p>搭建Prometheus仪表盘<br>Import Dashboard: 10467<br><img src="/images/performancetesting/grafana_import.jpg" alt=""></p>
</li>
</ol>
<p>最终显示如下：<br><img src="/images/performancetesting/grafana_dashboard.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python生成二维码]]></title>
      <url>http://izheyi.com/2020/03/22/Python%E7%94%9F%E6%88%90%E4%BA%8C%E7%BB%B4%E7%A0%81/</url>
      <content type="html"><![CDATA[<p>工作中用二维码扫描功能能带来不少的便利，简单看了一下，用Python和qrcode包来生成二维码其实很简单，</p>
<p>qrcode，详细信息查看<a href="https://pypi.org/project/qrcode/" target="_blank" rel="external">pip qrcode</a>，安装直接用pip命令安装即可。</p>
<h1 id="纯文本二维码"><a href="#纯文本二维码" class="headerlink" title="纯文本二维码"></a>纯文本二维码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate_qrcode</span><span class="params">(data, file_name)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1. 实例化QRCode对象</span></span><br><span class="line">    qr = qrcode.QRCode(</span><br><span class="line">        version=<span class="number">1</span>,</span><br><span class="line">        error_correction=qrcode.constants.ERROR_CORRECT_H,</span><br><span class="line">        box_size=<span class="number">10</span>,</span><br><span class="line">        border=<span class="number">4</span></span><br><span class="line">    )</span><br><span class="line">    <span class="comment"># 2. 添加数据</span></span><br><span class="line">    qr.add_data(data)</span><br><span class="line">    qr.make(fit=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 3. 生成二维码</span></span><br><span class="line">    img = qr.make_image()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 4. 保存二维码</span></span><br><span class="line">    img.save(file_name)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 5. 展示二维码</span></span><br><span class="line">    img.show()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    generate_qrcode(<span class="string">"http://izheyi.com"</span>, <span class="string">'text.png'</span>)</span><br></pre></td></tr></table></figure>
<p>二维码显示：<br><img src="/images/automation/text.png" alt=""></p>
<h1 id="带Logo二维码"><a href="#带Logo二维码" class="headerlink" title="带Logo二维码"></a>带Logo二维码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate_qrcode</span><span class="params">(data, file_name)</span>:</span></span><br><span class="line">    <span class="comment"># 1. 实例化QRCode对象</span></span><br><span class="line">    qr = qrcode.QRCode(</span><br><span class="line">        version=<span class="number">1</span>,</span><br><span class="line">        error_correction=qrcode.constants.ERROR_CORRECT_H,</span><br><span class="line">        box_size=<span class="number">10</span>,</span><br><span class="line">        border=<span class="number">4</span></span><br><span class="line">    )</span><br><span class="line">    <span class="comment"># 2. 添加数据</span></span><br><span class="line">    qr.add_data(data)</span><br><span class="line">    qr.make(fit=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 3. 生成二维码</span></span><br><span class="line">    img = qr.make_image(fill_color=<span class="string">"green"</span>, back_color=<span class="string">"white"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 4. 添加logo</span></span><br><span class="line">    icon = Image.open(<span class="string">"logo.jpg"</span>) <span class="comment"># 打开logo照片</span></span><br><span class="line">    img_w, img_h = img.size <span class="comment"># 图片的宽高</span></span><br><span class="line"></span><br><span class="line">    factor = <span class="number">6</span></span><br><span class="line">    size_w = int(img_w / factor)</span><br><span class="line">    size_h = int(img_h / factor)</span><br><span class="line">    icon_w, icon_h = icon.size</span><br><span class="line">    <span class="keyword">if</span> icon_w &gt; size_w:</span><br><span class="line">        icon_w = size_w</span><br><span class="line">    <span class="keyword">if</span> icon_h &gt; size_h:</span><br><span class="line">        icon_h = size_h</span><br><span class="line"></span><br><span class="line">    icon = icon.resize((icon_w, icon_h), Image.ANTIALIAS)</span><br><span class="line">    w = int((img_w - icon_w) / <span class="number">2</span>)</span><br><span class="line">    h = int((img_h - icon_h) / <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    img.paste(icon, (w, h), mask=<span class="keyword">None</span>) <span class="comment"># 添加logo照</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 5. 保存二维码</span></span><br><span class="line">    img.save(file_name)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 6. 展示二维码</span></span><br><span class="line">    img.show()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    generate_qrcode(<span class="string">"http://izheyi.com"</span>, <span class="string">'logo.png'</span>)</span><br></pre></td></tr></table></figure>
<p>二维码显示：<br><img src="/images/automation/logo.png" alt=""></p>
<p>还可以把二维码嵌入到页面中，以便更好的使用。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[丁丁画画（三年级下学期）]]></title>
      <url>http://izheyi.com/2020/03/08/%E4%B8%81%E4%B8%81%E7%94%BB%E7%94%BB%EF%BC%88%E4%B8%89%E5%B9%B4%E7%BA%A7%E4%B8%8B%E5%AD%A6%E6%9C%9F%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><img src="/images/izheyi/pic/3/2_1.JPG" alt=""><br><img src="/images/izheyi/pic/3/2_2.JPG" alt=""><br><img src="/images/izheyi/pic/3/2_11.JPG" alt=""><br><img src="/images/izheyi/pic/3/2_3.JPG" alt=""><br><img src="/images/izheyi/pic/3/2_10.JPG" alt=""><br><img src="/images/izheyi/pic/3/2_4.JPG" alt=""><br><img src="/images/izheyi/pic/3/2_5.JPG" alt=""><br><img src="/images/izheyi/pic/3/2_6.JPG" alt=""><br><img src="/images/izheyi/pic/3/2_7.JPG" alt=""><br><img src="/images/izheyi/pic/3/2_8.JPG" alt=""><br><img src="/images/izheyi/pic/3/2_9.JPG" alt=""><br><img src="/images/izheyi/pic/3/2_12.JPG" alt=""><br><img src="/images/izheyi/pic/3/2_13.JPG" alt=""><br><img src="/images/izheyi/pic/3/2_14.JPG" alt=""><br><img src="/images/izheyi/pic/3/2_15.JPG" alt=""><br><img src="/images/izheyi/pic/3/2_16.JPG" alt=""><br><img src="/images/izheyi/pic/3/2_17.JPG" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[mitmproxy实现接口信息抓取]]></title>
      <url>http://izheyi.com/2020/02/14/mitmproxy%E5%AE%9E%E7%8E%B0%E6%8E%A5%E5%8F%A3%E4%BF%A1%E6%81%AF%E6%8A%93%E5%8F%96/</url>
      <content type="html"><![CDATA[<p>对于没有接口文档的系统，能不能快速获得接口信息，或者说在做功能测试的时候就得到接口测试的一些基本信息。这里就要用到<a href="https://www.mitmproxy.org/" target="_blank" rel="external">mitmproxy</a>: mitmproxy is a free and open source interactive HTTPS proxy.</p>
<p>在windows和Firefox下实验。</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>pip直接安装：<br><code>pip install mitmproxy</code></p>
<h1 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h1><ul>
<li>命令行启动<br>  mitmdump</li>
<li>常用参数<br>  -p  指定端口号<br>  -w     outfile 将日志输出到本地文件<br>  –ignore all hosts with https/ssl 忽略https 证书错误 (–ignore-hosts “.*443$”)<br>  -s  加载自定义python脚本</li>
<li>添加证书<ol>
<li>配置好代理，并启动代理后， 浏览器进入mitm.it， 选择相应的证书，下载。</li>
<li>选项—隐私与安全—安全—证书—查看证书，  您的证书中导入下载的证书， 在“证书颁发机构”中找到mitmproxy， 编辑信任，勾选相应条目。 </li>
</ol>
</li>
</ul>
<h1 id="抓取接口信息"><a href="#抓取接口信息" class="headerlink" title="抓取接口信息"></a>抓取接口信息</h1><ol>
<li><p>创建脚本</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">from mitmproxy import http, ctx</span><br><span class="line">import openpyxl,<span class="tag">time</span>,json</span><br><span class="line"></span><br><span class="line">class Record:</span><br><span class="line"></span><br><span class="line">    def __init__(self):</span><br><span class="line">        self<span class="class">.filter_url</span> = <span class="string">'https://reqres.in/api/'</span></span><br><span class="line">        self<span class="class">.cur_time</span> = <span class="tag">time</span>.<span class="function"><span class="title">strftime</span><span class="params">(<span class="string">'%Y%m%d_%H_%M_%S'</span>)</span></span></span><br><span class="line">        book = openpyxl.<span class="function"><span class="title">Workbook</span><span class="params">()</span></span></span><br><span class="line">        <span class="tag">table</span> = book<span class="class">.active</span></span><br><span class="line">        <span class="tag">table</span>.append([<span class="string">'Address'</span>, <span class="string">'Request Type'</span>, <span class="string">'Param Type'</span>,</span><br><span class="line">                      <span class="string">'Header'</span>, <span class="string">'Param'</span>])</span><br><span class="line">        book.<span class="function"><span class="title">save</span><span class="params">(<span class="string">'E:/&#123;cur_time&#125;.xlsx'</span>.format(cur_time=self.cur_time)</span></span>)</span><br><span class="line">        self<span class="class">.workbook</span> = openpyxl.<span class="function"><span class="title">load_workbook</span><span class="params">(<span class="string">'e:/&#123;cur_time&#125;.xlsx'</span>.format(tmp=self.cur_time)</span></span>)</span><br><span class="line">        self<span class="class">.workbook</span><span class="class">.active</span><span class="class">.title</span> = <span class="string">'API'</span></span><br><span class="line">        self<span class="class">.table</span> = self<span class="class">.workbook</span><span class="class">.active</span></span><br><span class="line"></span><br><span class="line">    def <span class="function"><span class="title">write_to_excel</span><span class="params">(self, flow)</span></span>:</span><br><span class="line">        url = flow<span class="class">.request</span><span class="class">.url</span></span><br><span class="line">        method = flow<span class="class">.request</span><span class="class">.method</span></span><br><span class="line">        type = flow<span class="class">.request</span><span class="class">.headers</span><span class="class">.get</span>(<span class="string">'Content-Type'</span>)</span><br><span class="line">        <span class="keyword">if</span> type == <span class="string">'application/x-www-form-urlencoded'</span>:</span><br><span class="line">            type = <span class="string">'URL_ENCODE'</span></span><br><span class="line">        elif type == <span class="string">'application/json'</span>:</span><br><span class="line">            type = <span class="string">'JSON'</span></span><br><span class="line">        elif type == <span class="string">'text/xml'</span>:</span><br><span class="line">            type = <span class="string">'XML'</span></span><br><span class="line">        headers = json.<span class="function"><span class="title">dumps</span><span class="params">(dict(flow.request.headers)</span></span>)</span><br><span class="line">        <span class="tag">body</span> = flow<span class="class">.request</span><span class="class">.get_text</span>()</span><br><span class="line">        self<span class="class">.table</span><span class="class">.append</span>([url, method, type, headers, body])</span><br><span class="line">        self<span class="class">.workbook</span><span class="class">.save</span>(<span class="string">'e:/&#123;cur_time&#125;.xlsx'</span>.<span class="function"><span class="title">format</span><span class="params">(cur_time=self.cur_time)</span></span>)</span><br><span class="line"></span><br><span class="line">    def <span class="function"><span class="title">response</span><span class="params">(self, flow)</span></span>:</span><br><span class="line">        <span class="keyword">if</span> self<span class="class">.filter_url</span>:</span><br><span class="line">            <span class="keyword">if</span> flow<span class="class">.request</span><span class="class">.url</span><span class="class">.startswith</span>(self.filter_url):</span><br><span class="line">                self.<span class="function"><span class="title">write_to_excel</span><span class="params">(flow)</span></span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.<span class="function"><span class="title">write_to_excel</span><span class="params">(flow)</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">addons = [</span><br><span class="line">    <span class="function"><span class="title">Record</span><span class="params">()</span></span></span><br><span class="line">]</span><br></pre></td></tr></table></figure>
</li>
<li><p>设置firefox代理<br>设置本地Firefox代理，商品为9999</p>
</li>
<li><p>运行mitmdump</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mitmdump -<span class="tag">p</span> <span class="number">9999</span> -s <span class="tag">a</span><span class="class">.py</span> --ignore all hosts with https/ssl</span><br></pre></td></tr></table></figure>
</li>
<li><p>打开测试网站操作</p>
</li>
<li>查看结果<br><img src="/images/automation/mitm.jpg" alt=""></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[奇点绘画画随记（2020）]]></title>
      <url>http://izheyi.com/2020/02/02/%E5%B0%8F%E4%B8%81%E7%94%BB%E4%BD%9C-2020/</url>
      <content type="html"><![CDATA[<p><img src="/images/izheyi/pic/qidianhui/2020/1.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/2020/2.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/2020/3.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/2020/4.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/2020/5.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/2020/6.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/2020/7.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/2020/8.JPG" alt=""></p>
<p><img src="/images/izheyi/pic/qidianhui/2020/9.JPG" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[python离线安装外部依赖包]]></title>
      <url>http://izheyi.com/2020/01/19/python%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85%E5%A4%96%E9%83%A8%E4%BE%9D%E8%B5%96%E5%8C%85/</url>
      <content type="html"><![CDATA[<p>公司Jenkins运行在内部环境，不能访问外部网络，所以要安装的外部依赖需要用离线的方式来安装。</p>
<ol>
<li>制作requirement.txt<br><code>pip freeze &gt; requirement.txt</code></li>
<li>下载安装包<br> <code>pip download -d d:\package &lt;package_name&gt; # 单个下载</code><br> <code>pip download -d d:\package -r requirements.txt # 批量下载</code></li>
<li>离线安装<br> <code>pip install --no-index --find-links=d:\package package_name # 单个安装</code><br> <code>pip install --no-index --find-links=d:\package -r requirements.txt # 批量安装</code></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[分布式持续压测平台]]></title>
      <url>http://izheyi.com/2019/10/19/%E5%88%86%E5%B8%83%E5%BC%8F%E6%8C%81%E7%BB%AD%E5%8E%8B%E6%B5%8B%E5%B9%B3%E5%8F%B0/</url>
      <content type="html"><![CDATA[<h1 id="压测平台介绍"><a href="#压测平台介绍" class="headerlink" title="压测平台介绍"></a>压测平台介绍</h1><ul>
<li>QA设计场景和脚本，Github管理</li>
<li>QA创建Jenkins测试job</li>
<li>Dev利用Jenkins持续执行测试，直到达到预期性能</li>
<li>QA对主要接口进行验收测试，验证符合上线性能预期</li>
</ul>
<h1 id="压测平台设计"><a href="#压测平台设计" class="headerlink" title="压测平台设计"></a>压测平台设计</h1><ul>
<li>脚本编写和执行 – Jmeter</li>
<li>脚本管理 – Github</li>
<li>驱动执行 – Taurus</li>
<li>测试调度 – Jenkins</li>
</ul>
<p><img src="/images/performancetesting/platform.jpg" alt="Performace Platform"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[丁丁画画（三年级上学期）]]></title>
      <url>http://izheyi.com/2019/09/08/%E4%B8%81%E4%B8%81%E7%94%BB%E7%94%BB%EF%BC%88%E4%B8%89%E5%B9%B4%E7%BA%A7%E4%B8%8A%E5%AD%A6%E6%9C%9F%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><img src="/images/izheyi/pic/3/1_1.JPG" alt=""><br><img src="/images/izheyi/pic/3/1_2.JPG" alt=""><br><img src="/images/izheyi/pic/3/1_3.JPG" alt=""><br><img src="/images/izheyi/pic/3/1_4.JPG" alt=""><br><img src="/images/izheyi/pic/3/1_5.JPG" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[网站促销活动前端自动化监控]]></title>
      <url>http://izheyi.com/2019/06/11/%E7%BD%91%E7%AB%99%E4%BF%83%E9%94%80%E6%B4%BB%E5%8A%A8%E5%89%8D%E7%AB%AF%E8%87%AA%E5%8A%A8%E5%8C%96%E7%9B%91%E6%8E%A7/</url>
      <content type="html"><![CDATA[<p>商城每年都会有太多有促销活动，大的来说几乎每天都有，对于测试来说，纯手工是个不小的挑战，能否用自动化的方式来快速实现测试？</p>
<p>对于商城的活动页面其实都是一个模板，只是针对不同的活动，不同的地址，不同的产品。这样来看就可以用自动化的方式来检查信息的正确性。</p>
<p>活动一般有</p>
<ul>
<li>一个主页，上面有图片，标题，价格</li>
<li>详情页面</li>
<li>下单</li>
</ul>
<p>自动化思路：</p>
<ol>
<li>从主页通过Selenium来获得所有的图片和产品详细页链接</li>
<li>通过Request来检查产品链接和图片存在与否</li>
<li>检查详细页的信息正确</li>
<li>利用Cookie实现下单流程的实现</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[丁丁画画（二年级下学期）]]></title>
      <url>http://izheyi.com/2019/04/08/%E4%B8%81%E4%B8%81%E7%94%BB%E7%94%BB%EF%BC%88%E4%BA%8C%E5%B9%B4%E7%BA%A7%E4%B8%8B%E5%AD%A6%E6%9C%9F%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><img src="/images/izheyi/pic/2019/2_2_1.JPG" alt=""><br><img src="/images/izheyi/pic/2019/2_2_2.JPG" alt=""><br><img src="/images/izheyi/pic/2019/2_2_3.JPG" alt=""><br><img src="/images/izheyi/pic/2019/2_2_4.JPG" alt=""><br><img src="/images/izheyi/pic/2019/2_2_5.JPG" alt=""><br><img src="/images/izheyi/pic/2019/2_2_6.JPG" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[奇点绘画画随记（2019）]]></title>
      <url>http://izheyi.com/2019/01/15/%E5%B0%8F%E4%B8%81%E7%94%BB%E4%BD%9C-2019/</url>
      <content type="html"><![CDATA[<p><img src="/images/izheyi/pic/qidianhui/15.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/16.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/17.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/18.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/19.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/20.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/21.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/22.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/23.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/24.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/25.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/26.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/27.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/28.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/29.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/30.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/31.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/32.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/33.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/34.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/35.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/36.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/37.JPG" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[2019 - Flag]]></title>
      <url>http://izheyi.com/2019/01/06/2019-Flag/</url>
      <content type="html"><![CDATA[<blockquote>
<p>4月初的时候看了一下学历教育，今年大部分的时间应该都会在这个考试上了，以下计划相应调整。</p>
</blockquote>
<p>2018年自我感觉还是可以的，2019年又开始了，好多人都在朋友圈里发看书的Flag了，也为自己立一些Flag：</p>
<ol>
<li>读书<br>基于去年的不足，今年细化，每月一本书，读书笔记到Blog。</li>
<li>PMP<br>这个东西几年前有看过，一直没付诸行动，挤时间，逼自己一把，今年拿下证书。</li>
<li>工作<br>a. 保持技术的更新，有自己的想法和应对方法。<br>b. 更全面的看待，处理事情。</li>
<li>英语<br>a. 再看一下英语基础，试着找一下快速提升的方法。<br>b. 搞定Friends前三季。</li>
<li>生活<br>a. 控制脾气，控制脾气，控制脾气。<br>b. 放下手机，活的仪式感一些。<br>c. 培养一个兴趣。</li>
<li>其他<br>a. Blog，尽量更新。<br>b. 每周运动三次，发圈Track。</li>
</ol>
<h1 id="奖励"><a href="#奖励" class="headerlink" title="奖励"></a>奖励</h1><ol>
<li>拿到PMP证书，看音乐会。</li>
<li>国内游。</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[2018画展]]></title>
      <url>http://izheyi.com/2018/12/31/2018%E7%94%BB%E5%B1%95/</url>
      <content type="html"><![CDATA[<p>为了画展，让孩子们画了好多次课，这种行为不知道好还是不好，为了一个展览连续的不学新的课程。</p>
<p><img src="/images/izheyi/2018/12/1.JPG" alt=""></p>
<h1 id="作品"><a href="#作品" class="headerlink" title="作品"></a>作品</h1><p><img src="/images/izheyi/2018/12/2.JPG" alt=""><br><img src="/images/izheyi/2018/12/3.JPG" alt=""><br><strong>帽子</strong></p>
<p><em>在无限的黑色网状里，人变的压抑和渺小，红蓝相间的圆点帽子，却又充满活力，色彩艳丽。二者交互辉映，仿佛把人带到一个奇妙的世界，融洽、平静，有一种使人安静下来的力量，我自风情万种，与世无争。</em></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[2018 - 总结]]></title>
      <url>http://izheyi.com/2018/12/25/2018-%E6%80%BB%E7%BB%93/</url>
      <content type="html"><![CDATA[<p>2018年马上过完，年初的时候有个工作计划 <a href="/2018/01/11/2018-学习计划/">2018 - 学习计划</a>，也简单做个总结。</p>
<h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><ol>
<li>随着公司Agile的转型成功，还是学到了很多东西，结果重要，但过程同样重要。</li>
<li>年终最后一次上线竟然出现了几个Critical的Issues，新项目和现有的6个项目都有交集，诸多原因，确实也遗漏了一些东西。通过Retro知道了不足，以及How could be better in next stage。但也有一些体会：Agile强调整个Team对质量负责，真正出了问题，还是QA背锅，终究是没有逃脱0和-1游戏规则。有些事情虽不爽，但是要敢于承认错误，力争把工作做到挑不出毛病。某些人，劝你评价别人的时候请先看看自己。唯有自己强大，其他都是浮云。</li>
<li>今年学了不少新技术，在测试应用到的技术这块有了一个很明显的提升。<ul>
<li>基于AWS，Salt，Atrifactory，Terraform，Jenkins，Github实现CI/CD</li>
<li>基于SSM的java项目开发流程和实现</li>
<li>Zookeeper，Dubbo和Docker的基本应用</li>
<li>基于Pact的CDC测试</li>
<li>性能测试的一些思考</li>
</ul>
</li>
<li>通过一些渠道也知道了在技术的全局观上还有待于提高，项目和质量的整体把控上也有欠缺，也要提高一下技术快速落地的能力。</li>
<li>参加了一些课程，学到了不少新的思路和知识。</li>
</ol>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ol>
<li>基本能保持每周一次的Blog更新，内容多是学习笔记。</li>
<li>孩子教育是个很大的事情，还得继续努力。</li>
<li>力争生活和工作的Balance。</li>
<li>对自己也有一次奖励，去青岛玩了一趟。</li>
</ol>
<h2 id="遗憾-不足"><a href="#遗憾-不足" class="headerlink" title="遗憾/不足"></a>遗憾/不足</h2><ol>
<li>2018只剩下个位数，读的书也只有个位数，来年需要一个更详细一点的计划。</li>
<li>英语，跟着公司还花钱报了个课程，效果不是很明显，进步不大，需要反思。</li>
<li>十一之后，一直不在状态，要做阶段性总结反思，把目标分拆的更细小，严格要求自己，并做好时间管理。</li>
<li>情绪的掌控有待提高，团队管理和沟通要进一步加强。</li>
<li>技术很重要，但工作不仅仅是技术。</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CDC - Pact:Verify Provider Ways]]></title>
      <url>http://izheyi.com/2018/11/25/CDC-Pact-Verify-Provider-Ways/</url>
      <content type="html"><![CDATA[<p>There are many ways can be used to verify Provider, maven, junit, spring…..</p>
<p>Only list 2 ways below to check the verify process.</p>
<h1 id="Build-Plug-in"><a href="#Build-Plug-in" class="headerlink" title="Build Plug-in"></a>Build Plug-in</h1><p>We use maven plug-in to verify Provider, you can refer the details in previous article <a href="/2018/11/13/CDC-Pact-入门使用/">Pact: Simple Usage</a>.</p>
<p>The biggest disadvantage using this way is that we need to have provider running and pre-condition set up, e.g., prepare testing data.</p>
<h1 id="Testing-Framework"><a href="#Testing-Framework" class="headerlink" title="Testing Framework"></a>Testing Framework</h1><p>For JVM based provider, we can use pact junit provider runner to verify it. we can use junit framework, and don’t need to run provider, verify the exact provider code instead of all, use the JUnit setup and tear-down as well as a state annotation, and can also using mocking framework.</p>
<ul>
<li><p>Add mockito &amp; pact-jvm-provider-spring to maven pom </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mockito/mockito-all --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.mockito<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>mockito-all<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">version</span>&gt;</span>1.10.19<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="title">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/au.com.dius/pact-jvm-provider-spring --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>au.com.dius<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>pact-jvm-provider-spring_2.12<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">version</span>&gt;</span>3.5.24<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Consumer test</p>
<figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">ConsumerTest</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@Rule</span></span><br><span class="line">    public PactProviderRuleMk2 mockProvider = <span class="keyword">new</span> PactProviderRuleMk2(<span class="string">"test_provider"</span>, <span class="string">"localhost"</span>, <span class="number">8080</span>, <span class="keyword">this</span>);</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@Pact</span>(provider=<span class="string">"test_provider"</span>, consumer=<span class="string">"test_consumer"</span>)</span><br><span class="line">	public RequestResponsePact getPersonAge(PactDslWithProvider builder) &#123;</span><br><span class="line">		<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">String</span>&gt; headers = <span class="keyword">new</span> HashMap&lt;<span class="built_in">String</span>, <span class="built_in">String</span>&gt;();</span><br><span class="line">		headers.put(<span class="string">"Content-Type"</span>, <span class="string">"application/json"</span>);</span><br><span class="line">		</span><br><span class="line">		DslPart resbody = <span class="keyword">new</span> PactDslJsonBody()</span><br><span class="line">				.stringType(<span class="string">"name"</span>, <span class="string">"zhangsan"</span>)</span><br><span class="line">				.integerType(<span class="string">"age"</span>, <span class="number">4</span>)</span><br><span class="line">				.asBody();</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> builder</span><br><span class="line">				.uponReceiving(<span class="string">"A request for age for person zhangsan"</span>)</span><br><span class="line">				.path(<span class="string">"/person/zhangsan"</span>)</span><br><span class="line">				.method(<span class="string">"GET"</span>)</span><br><span class="line">				.willRespondWith()</span><br><span class="line">				.status(<span class="number">200</span>)</span><br><span class="line">				.headers(headers)</span><br><span class="line">				.body(resbody)</span><br><span class="line">				.toPact();		</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@Pact</span>(provider=<span class="string">"test_provider"</span>, consumer=<span class="string">"test_consumer"</span>)</span><br><span class="line">	public RequestResponsePact getUser(PactDslWithProvider builder) &#123;</span><br><span class="line">		<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">String</span>&gt; headers = <span class="keyword">new</span> HashMap&lt;<span class="built_in">String</span>, <span class="built_in">String</span>&gt;();</span><br><span class="line">		headers.put(<span class="string">"Content-Type"</span>, <span class="string">"application/json"</span>);</span><br><span class="line">		</span><br><span class="line">		DslPart resbody = <span class="keyword">new</span> PactDslJsonBody()</span><br><span class="line">				.stringType(<span class="string">"id"</span>, <span class="string">"1"</span>)</span><br><span class="line">				.stringType(<span class="string">"name"</span>, <span class="string">"tanghulu"</span>)</span><br><span class="line">				.integerType(<span class="string">"age"</span>, <span class="number">4</span>)</span><br><span class="line">				.asBody();</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> builder</span><br><span class="line">				.given(<span class="string">"user 1 exist"</span>)</span><br><span class="line">				.uponReceiving(<span class="string">"A request go get user 1"</span>)</span><br><span class="line">				.path(<span class="string">"/user"</span>)</span><br><span class="line">				.method(<span class="string">"GET"</span>)</span><br><span class="line">				.willRespondWith()</span><br><span class="line">				.status(<span class="number">200</span>)</span><br><span class="line">				.headers(headers)</span><br><span class="line">				.body(resbody)</span><br><span class="line">				.toPact();		</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@Test</span></span><br><span class="line">	<span class="annotation">@PactVerification</span>(value=<span class="string">"test_provider"</span>, fragment=<span class="string">"getPersonAge"</span>)</span><br><span class="line">	public <span class="keyword">void</span> doTest()&#123;</span><br><span class="line">		Integer age = <span class="keyword">new</span> GetPersonAge(mockProvider.getUrl()).checkAge(<span class="string">"zhangsan"</span>);</span><br><span class="line">		System.out.println(<span class="string">"Test result, age = "</span> + age);</span><br><span class="line">		assertTrue(age &lt;= <span class="number">6</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@Test</span></span><br><span class="line">	<span class="annotation">@PactVerification</span>(fragment=<span class="string">"getUser"</span>)</span><br><span class="line">	public <span class="keyword">void</span> getUser()&#123;</span><br><span class="line">		<span class="built_in">String</span> user = <span class="keyword">new</span> GetUser(mockProvider.getUrl()).getUser();</span><br><span class="line">		System.out.println(<span class="string">"Test result, user: "</span> + user);</span><br><span class="line">		assertTrue(user.contains(<span class="string">"tanghulu"</span> ));</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Verify provider - state and mock</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@RunWith</span>(RestPactRunner.class) <span class="comment">// Say JUnit to run tests with custom Runner</span></span><br><span class="line"><span class="annotation">@Provider</span>(<span class="string">"test_provider"</span>) <span class="comment">// Set up name of tested provider</span></span><br><span class="line"><span class="annotation">@PactFolder</span>(<span class="string">"../pact-consumer/target/pacts"</span>) <span class="comment">// Point where to find pacts (See also section Pacts source in documentation)</span></span><br><span class="line"><span class="annotation">@VerificationReports</span>(&#123;<span class="string">"console"</span>, <span class="string">"markdown"</span>&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">VerifyState</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@Mock</span></span><br><span class="line">	<span class="keyword">private</span> ProviderService providerService;</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@InjectMocks</span></span><br><span class="line">	<span class="keyword">private</span> ProviderController providerController = <span class="keyword">new</span> ProviderController();</span><br><span class="line">	</span><br><span class="line">	 <span class="annotation">@Before</span> <span class="comment">//Method will be run before each test of interaction</span></span><br><span class="line">	 <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	     <span class="comment">//initialize your mocks using your mocking framework</span></span><br><span class="line">		 MockitoAnnotations.initMocks(<span class="keyword">this</span>);</span><br><span class="line">	</span><br><span class="line">		 <span class="comment">//configure the MockMvcTarget with your controller and controller advice</span></span><br><span class="line">	     <span class="keyword">target</span>.setControllers(providerController);</span><br><span class="line">	 &#125;</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@State</span>(<span class="string">"user 1 exist"</span>)</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">addUser</span><span class="params">()</span></span>&#123;</span><br><span class="line">		when(providerService.getUser())</span><br><span class="line">		.thenReturn(<span class="keyword">new</span> ProviderModel(<span class="string">"1"</span>, <span class="string">"tanghulu"</span>, <span class="number">5</span>));</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@TestTarget</span> <span class="comment">// Annotation denotes Target that will be used for tests</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> MockMvcTarget  <span class="keyword">target</span> = <span class="keyword">new</span> MockMvcTarget(); <span class="comment">// Out-of-the-box implementation of Target (for more information take a look at Test Target section)</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CDC - Pact:Broker Basic]]></title>
      <url>http://izheyi.com/2018/11/18/CDC-Pact-Broker-Basic/</url>
      <content type="html"><![CDATA[<p>The <a href="https://github.com/pact-foundation/pact_broker" target="_blank" rel="external">Pact Broker</a> is an application for sharing for consumer driven contracts and verification results. </p>
<ul>
<li>The consumer CI build generates the pacts during execution of its isolated tests, and then publishes the generated pacts.</li>
<li>The provider CI retrieves the pacts, performs the verification locally, and then publishes the verification results back to the broker.</li>
<li>Consumer and provider CI deployment builds check with the broker before deploying to ensure the application version they are about deploy will be compatible with the versions of the other applications that are already in that environment.</li>
</ul>
<p>We can use many approaches to deposite pact files and verification results, i use docker as an example,</p>
<h1 id="Docker-Setup"><a href="#Docker-Setup" class="headerlink" title="Docker Setup"></a>Docker Setup</h1><p>Get info from <a href="https://github.com/DiUS/pact_broker-docker" target="_blank" rel="external">pact_broker-docker</a>.</p>
<ol>
<li>Install docker.</li>
<li><p>Download <code>docker-compose.yml</code> and modify.</p>
<figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">version</span>: <span class="string">"3"</span></span><br><span class="line"></span><br><span class="line"><span class="less"><span class="attribute">services</span>:</span><br><span class="line">  <span class="attribute">postgres</span>:</span><br><span class="line">    <span class="attribute">image</span>: postgres</span><br><span class="line">    <span class="attribute">healthcheck</span>:</span><br><span class="line">      <span class="attribute">test</span>: psql postgres --command <span class="string">"select 1"</span> -U postgres</span><br><span class="line">    <span class="attribute">ports</span>:</span><br><span class="line">      - <span class="string">"5432:5432"</span></span><br><span class="line">    <span class="attribute">environment</span>:</span><br><span class="line">      <span class="attribute">POSTGRES_USER</span>: postgres</span><br><span class="line">      <span class="attribute">POSTGRES_PASSWORD</span>: password</span><br><span class="line">      <span class="attribute">POSTGRES_DB</span>: postgres</span><br><span class="line"></span><br><span class="line">  <span class="attribute">broker_app</span>:</span><br><span class="line">    <span class="attribute">image</span>: dius/pact-broker</span><br><span class="line">    <span class="attribute">links</span>:</span><br><span class="line">      - postgres</span><br><span class="line">    # If you remove nginx, enable the following</span><br><span class="line">    <span class="attribute">ports</span>:</span><br><span class="line">      - <span class="string">"80:80"</span></span><br><span class="line">    <span class="attribute">environment</span>:</span><br><span class="line">      <span class="attribute">PACT_BROKER_DATABASE_USERNAME</span>: postgres</span><br><span class="line">      <span class="attribute">PACT_BROKER_DATABASE_PASSWORD</span>: password</span><br><span class="line">      <span class="attribute">PACT_BROKER_DATABASE_HOST</span>: postgres</span><br><span class="line">      <span class="attribute">PACT_BROKER_DATABASE_NAME</span>: postgres</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Run <code>docker-compose up</code> command to get a running Pact Broker and a clean Postgres database.</p>
</li>
<li>Verify.<br><img src="/images/cdc/pact_broker_docker.jpg" alt=""></li>
</ol>
<h1 id="Pact-Broker-Usage"><a href="#Pact-Broker-Usage" class="headerlink" title="Pact Broker Usage"></a>Pact Broker Usage</h1><h2 id="consumer"><a href="#consumer" class="headerlink" title="consumer"></a>consumer</h2><ol>
<li><p>Add the below configs in consumer pom.</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">plugin</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- mvn pact:publish  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>au.com.dius<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>pact-jvm-provider-maven_2.11<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">version</span>&gt;</span>3.5.24<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;pactDirectory&gt;../pacts&lt;/pactDirectory&gt; Defaults to $&#123;project.build.directory&#125;/pacts --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">pactBrokerUrl</span>&gt;</span>http://192.168.220.139:80<span class="tag">&lt;/<span class="title">pactBrokerUrl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">projectVersion</span>&gt;</span>$&#123;project.version&#125;<span class="tag">&lt;/<span class="title">projectVersion</span>&gt;</span> <span class="comment">&lt;!-- Defaults to $&#123;project.version&#125; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">trimSnapshot</span>&gt;</span>true<span class="tag">&lt;/<span class="title">trimSnapshot</span>&gt;</span> <span class="comment">&lt;!-- Defaults to false --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">tags</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">tag</span>&gt;</span>cdc/pact_broker<span class="tag">&lt;/<span class="title">tag</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="title">tags</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>execute <code>mvn pact:publish</code> to publish the pact files.<br><img src="/images/cdc/pact_broker_publish.jpg" alt=""></p>
</li>
</ol>
<h2 id="provider"><a href="#provider" class="headerlink" title="provider"></a>provider</h2><ol>
<li><p>Add the below configs in provider pom.</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="title">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>au.com.dius<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>pact-jvm-provider-maven_2.12<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">version</span>&gt;</span>3.5.24<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">configuration</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">serviceProviders</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- You can define as many as you need, but each must have a unique name --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">serviceProvider</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">name</span>&gt;</span>test_provider<span class="tag">&lt;/<span class="title">name</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- All the provider properties are optional, and have sensible defaults (shown below) --&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">protocol</span>&gt;</span>http<span class="tag">&lt;/<span class="title">protocol</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">host</span>&gt;</span>localhost<span class="tag">&lt;/<span class="title">host</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">port</span>&gt;</span>8080<span class="tag">&lt;/<span class="title">port</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">path</span>&gt;</span>/<span class="tag">&lt;/<span class="title">path</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">pactBrokerUrl</span>&gt;</span>http://192.168.220.139:80/<span class="tag">&lt;/<span class="title">pactBrokerUrl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">serviceProvider</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="title">serviceProviders</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Execute <code>mvn pact:verify</code></p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">D:\Java\pact\pact-jvm\pact-provider&gt;<span class="keyword">mvn </span>pact:verify</span><br><span class="line">[<span class="preprocessor">INFO</span>] Scanning for projects...</span><br><span class="line">[<span class="preprocessor">INFO</span>]</span><br><span class="line">[<span class="preprocessor">INFO</span>] ----------------------&lt; com.izheyi:pact-provider &gt;----------------------</span><br><span class="line">[<span class="preprocessor">INFO</span>] <span class="keyword">Building </span>pact-provider <span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>-SNAPSHOT</span><br><span class="line">[<span class="preprocessor">INFO</span>] --------------------------------[ jar ]---------------------------------</span><br><span class="line">[<span class="preprocessor">INFO</span>]</span><br><span class="line">[<span class="preprocessor">INFO</span>] --- pact-jvm-provider-maven_2.<span class="number">12</span>:<span class="number">3</span>.<span class="number">5</span>.<span class="number">24</span>:verify (default-cli) <span class="comment">@ pact-provider ---</span></span><br><span class="line"></span><br><span class="line"><span class="label">Verifying</span> a pact <span class="keyword">between </span>test_consumer <span class="keyword">and </span>test_provider</span><br><span class="line">  [from Pact <span class="keyword">Broker </span>http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">220</span>.<span class="number">139</span>/pacts/provider/test_provider/consumer/test_consumer/version/<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>]</span><br><span class="line">  A request for age for person zhangsan</span><br><span class="line">    returns a response which</span><br><span class="line">      has status <span class="preprocessor">code</span> <span class="number">200</span> (OK)</span><br><span class="line">      includes headers</span><br><span class="line">        <span class="string">"Content-Type"</span> with value <span class="string">"application/json"</span> (OK)</span><br><span class="line">      has a matching <span class="keyword">body </span>(OK)</span><br><span class="line">[WARNING] Skipping publishing of verification results as <span class="keyword">it </span>has <span class="keyword">been </span>disabled (pact.verifier.publishResults is not <span class="string">'true'</span>)</span><br><span class="line">[<span class="preprocessor">INFO</span>] ------------------------------------------------------------------------</span><br><span class="line">[<span class="preprocessor">INFO</span>] <span class="keyword">BUILD </span>SUCCESS</span><br><span class="line">[<span class="preprocessor">INFO</span>] ------------------------------------------------------------------------</span><br><span class="line">[<span class="preprocessor">INFO</span>] Total time:  <span class="number">6</span>.<span class="number">702</span> s</span><br><span class="line">[<span class="preprocessor">INFO</span>] Finished at: <span class="number">2018</span>-<span class="number">11</span>-<span class="number">18</span>T13:<span class="number">12</span>:<span class="number">24</span>+<span class="number">08</span>:<span class="number">00</span></span><br><span class="line">[<span class="preprocessor">INFO</span>] ------------------------------------------------------------------------</span><br></pre></td></tr></table></figure>
</li>
<li><p>We can see there has one <code>WARNING</code>, Publishing of verification results will be skipped unless this property is set to ‘true’, so we need to add the below config.</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">	&lt;pact<span class="class">.verifier</span><span class="class">.publishResults</span>&gt;true&lt;/pact<span class="class">.verifier</span><span class="class">.publishResults</span>&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Execute <code>mvn pact:verify</code> again.<br><img src="/images/cdc/pact_broker_verify.jpg" alt=""></p>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CDC - Pact: Simple Usage]]></title>
      <url>http://izheyi.com/2018/11/13/CDC-Pact-%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<p>Usage： Java + Sprint Boot + Maven + Junit，please refer for detail：<a href="https://github.com/yongfeiuall/cdc-pact" target="_blank" rel="external">Github - cdc-pact</a></p>
<h1 id="pact-provider"><a href="#pact-provider" class="headerlink" title="pact-provider"></a>pact-provider</h1><p><strong>Implemetion: return name and age(&lt;6) by passing parameter <code>name</code></strong></p>
<ul>
<li><p>Provider Model</p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ProviderModel</span> &#123;</span><br><span class="line">	String name;</span><br><span class="line">	Integer age;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">ProviderModel</span>(<span class="params">String name, <span class="keyword">int</span> age</span>) </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.name = name;</span><br><span class="line">		<span class="keyword">this</span>.age = age;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getName</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> name;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span>(<span class="params">String name</span>) </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.name = name;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> Integer <span class="title">getAge</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> age;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span>(<span class="params">Integer age</span>) </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.age = age;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Provider Control</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProviderController</span> &#123;</span></span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@RequestMapping</span>(<span class="string">"/person/&#123;name&#125;"</span>)</span><br><span class="line">	<span class="keyword">public</span> ProviderModel person(<span class="annotation">@PathVariable</span> String name)&#123;</span><br><span class="line">		<span class="typename">int</span> age = <span class="keyword">new</span> Random().nextInt(<span class="number">6</span>);</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> ProviderModel(name, age);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="pact-consumer"><a href="#pact-consumer" class="headerlink" title="pact-consumer"></a>pact-consumer</h1><ul>
<li><p>pom.xml</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">project</span> <span class="attribute">xmlns</span>=<span class="value">"http://maven.apache.org/POM/4.0.0"</span> <span class="attribute">xmlns:xsi</span>=<span class="value">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line">  <span class="attribute">xsi:schemaLocation</span>=<span class="value">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="title">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>com.izheyi<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>pact-consummer<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="title">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="title">name</span>&gt;</span>pact-consummer<span class="tag">&lt;/<span class="title">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">url</span>&gt;</span>http://maven.apache.org<span class="tag">&lt;/<span class="title">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="title">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="title">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="title">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="title">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>httpclient<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="title">version</span>&gt;</span>4.5.6<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.json/json --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.json<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>json<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="title">version</span>&gt;</span>20180813<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/au.com.dius/pact-jvm-consumer-junit --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>au.com.dius<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>pact-jvm-consumer-junit_2.12<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">version</span>&gt;</span>3.5.24<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="title">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">project</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>call provider(test)</p>
<figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> class GetPersonAge&#123;</span><br><span class="line">	<span class="built_in">int</span> port = <span class="number">8080</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> GetPersonAge(<span class="keyword">String</span> url) &#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> GetPersonAge() &#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) &#123;</span><br><span class="line">		Integer age = <span class="keyword">new</span> GetPersonAge().checkAge(<span class="string">"zhangsan"</span>);</span><br><span class="line">		System.out.<span class="built_in">println</span>(<span class="string">"Age is: "</span> + age);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> Integer checkAge(<span class="keyword">String</span> name) &#123;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="keyword">String</span> url = <span class="keyword">String</span>.format(<span class="string">"http://localhost:%d/person/%s"</span>, port, name);</span><br><span class="line">			System.out.<span class="built_in">println</span>(<span class="string">"URL is: "</span> + url);</span><br><span class="line">			</span><br><span class="line">			HttpClient httpclient = <span class="keyword">new</span> DefaultHttpClient();</span><br><span class="line">			HttpGet httpget = <span class="keyword">new</span> HttpGet(url);</span><br><span class="line">			<span class="keyword">String</span> json = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">			HttpResponse response = httpclient.execute(httpget);</span><br><span class="line">			HttpEntity entity = response.getEntity();</span><br><span class="line">			<span class="keyword">if</span> (entity != <span class="keyword">null</span>) &#123;</span><br><span class="line">				json = EntityUtils.toString(entity, <span class="string">"UTF-8"</span>).<span class="built_in">trim</span>();</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			System.out.<span class="built_in">println</span>(<span class="string">"Json is: "</span>  + json);</span><br><span class="line">			<span class="keyword">JSONObject</span> jsonObject = <span class="keyword">new</span> <span class="keyword">JSONObject</span>(json);</span><br><span class="line">			<span class="keyword">String</span> age = jsonObject.<span class="built_in">get</span>(<span class="string">"age"</span>).toString();</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">new</span> Integer(age);</span><br><span class="line">			</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">			e.printStackTrace();</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">		&#125;	</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>consumer pact test</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConsumerTest</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@Rule</span></span><br><span class="line">    <span class="keyword">public</span> PactProviderRuleMk2 mockProvider = <span class="keyword">new</span> PactProviderRuleMk2(<span class="string">"test_provider"</span>, <span class="string">"localhost"</span>, <span class="number">8080</span>, <span class="keyword">this</span>);</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@Pact</span>(provider=<span class="string">"test_provider"</span>, consumer=<span class="string">"test_consumer"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> RequestResponsePact <span class="title">createPact</span><span class="params">(PactDslWithProvider builder)</span> </span>&#123;</span><br><span class="line">		Map&lt;String, String&gt; headers = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</span><br><span class="line">		headers.put(<span class="string">"Content-Type"</span>, <span class="string">"application/json"</span>);</span><br><span class="line">		</span><br><span class="line">		DslPart resbody = <span class="keyword">new</span> PactDslJsonBody()</span><br><span class="line">				.stringType(<span class="string">"name"</span>, <span class="string">"zhangsan"</span>)</span><br><span class="line">				.integerType(<span class="string">"age"</span>, <span class="number">5</span>)</span><br><span class="line">				.asBody();</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> builder</span><br><span class="line">				.uponReceiving(<span class="string">"A request for age for person zhangsan"</span>)</span><br><span class="line">				.path(<span class="string">"/person/zhangsan"</span>)</span><br><span class="line">				.method(<span class="string">"GET"</span>)</span><br><span class="line">				.willRespondWith()</span><br><span class="line">				.status(<span class="number">200</span>)</span><br><span class="line">				.headers(headers)</span><br><span class="line">				.body(resbody)</span><br><span class="line">				.toPact();		</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@Test</span></span><br><span class="line">	<span class="annotation">@PactVerification</span>()</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">		Integer age = <span class="keyword">new</span> GetPersonAge(mockProvider.getUrl()).checkAge(<span class="string">"zhangsan"</span>);</span><br><span class="line">		System.out.println(<span class="string">"Test result, age = "</span> + age);</span><br><span class="line">		assertTrue(age &lt;= <span class="number">6</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="cdc-process-with-pact"><a href="#cdc-process-with-pact" class="headerlink" title="cdc process with pact"></a>cdc process with pact</h1><ol>
<li>Run Junit pact test in consumer.</li>
<li><p>Generate contract file(test_consumer-test_provider.json) to trget automatically.</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    "<span class="attribute">provider</span>": <span class="value">&#123;</span><br><span class="line">        "<span class="attribute">name</span>": <span class="value"><span class="string">"test_provider"</span></span><br><span class="line">    </span>&#125;</span>,</span><br><span class="line">    "<span class="attribute">consumer</span>": <span class="value">&#123;</span><br><span class="line">        "<span class="attribute">name</span>": <span class="value"><span class="string">"test_consumer"</span></span><br><span class="line">    </span>&#125;</span>,</span><br><span class="line">    "<span class="attribute">interactions</span>": <span class="value">[</span><br><span class="line">        &#123;</span><br><span class="line">            "<span class="attribute">description</span>": <span class="value"><span class="string">"A request for age for person zhangsan"</span></span>,</span><br><span class="line">            "<span class="attribute">request</span>": <span class="value">&#123;</span><br><span class="line">                "<span class="attribute">method</span>": <span class="value"><span class="string">"GET"</span></span>,</span><br><span class="line">                "<span class="attribute">path</span>": <span class="value"><span class="string">"/person/zhangsan"</span></span><br><span class="line">            </span>&#125;</span>,</span><br><span class="line">            "<span class="attribute">response</span>": <span class="value">&#123;</span><br><span class="line">                "<span class="attribute">status</span>": <span class="value"><span class="number">200</span></span>,</span><br><span class="line">                "<span class="attribute">headers</span>": <span class="value">&#123;</span><br><span class="line">                    "<span class="attribute">Content-Type</span>": <span class="value"><span class="string">"application/json"</span></span><br><span class="line">                </span>&#125;</span>,</span><br><span class="line">                "<span class="attribute">body</span>": <span class="value">&#123;</span><br><span class="line">                    "<span class="attribute">name</span>": <span class="value"><span class="string">"zhangsan"</span></span>,</span><br><span class="line">                    "<span class="attribute">age</span>": <span class="value"><span class="number">5</span></span><br><span class="line">                </span>&#125;</span>,</span><br><span class="line">                "<span class="attribute">matchingRules</span>": <span class="value">&#123;</span><br><span class="line">                    "<span class="attribute">body</span>": <span class="value">&#123;</span><br><span class="line">                        "<span class="attribute">$.name</span>": <span class="value">&#123;</span><br><span class="line">                            "<span class="attribute">matchers</span>": <span class="value">[</span><br><span class="line">                                &#123;</span><br><span class="line">                                    "<span class="attribute">match</span>": <span class="value"><span class="string">"type"</span></span><br><span class="line">                                </span>&#125;</span><br><span class="line">                            ]</span>,</span><br><span class="line">                            "<span class="attribute">combine</span>": <span class="value"><span class="string">"AND"</span></span><br><span class="line">                        </span>&#125;</span>,</span><br><span class="line">                        "<span class="attribute">$.age</span>": <span class="value">&#123;</span><br><span class="line">                            "<span class="attribute">matchers</span>": <span class="value">[</span><br><span class="line">                                &#123;</span><br><span class="line">                                    "<span class="attribute">match</span>": <span class="value"><span class="string">"integer"</span></span><br><span class="line">                                </span>&#125;</span><br><span class="line">                            ]</span>,</span><br><span class="line">                            "<span class="attribute">combine</span>": <span class="value"><span class="string">"AND"</span></span><br><span class="line">                        </span>&#125;</span><br><span class="line">                    </span>&#125;</span><br><span class="line">                </span>&#125;</span><br><span class="line">            </span>&#125;</span><br><span class="line">        </span>&#125;</span><br><span class="line">    ]</span>,</span><br><span class="line">    "<span class="attribute">metadata</span>": <span class="value">&#123;</span><br><span class="line">        "<span class="attribute">pactSpecification</span>": <span class="value">&#123;</span><br><span class="line">            "<span class="attribute">version</span>": <span class="value"><span class="string">"3.0.0"</span></span><br><span class="line">        </span>&#125;</span>,</span><br><span class="line">        "<span class="attribute">pact-jvm</span>": <span class="value">&#123;</span><br><span class="line">            "<span class="attribute">version</span>": <span class="value"><span class="string">"3.5.24"</span></span><br><span class="line">        </span>&#125;</span><br><span class="line">    </span>&#125;</span><br><span class="line"></span>&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Add the below in provider pom</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>au.com.dius<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>pact-jvm-provider-maven_2.12<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">version</span>&gt;</span>3.5.24<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">configuration</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">serviceProviders</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- You can define as many as you need, but each must have a unique name --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">serviceProvider</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">name</span>&gt;</span>test_provider<span class="tag">&lt;/<span class="title">name</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- All the provider properties are optional, and have sensible defaults (shown below) --&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">protocol</span>&gt;</span>http<span class="tag">&lt;/<span class="title">protocol</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">host</span>&gt;</span>localhost<span class="tag">&lt;/<span class="title">host</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">port</span>&gt;</span>8080<span class="tag">&lt;/<span class="title">port</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">path</span>&gt;</span>/<span class="tag">&lt;/<span class="title">path</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">consumers</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- Again, you can define as many consumers for each provider as you need, but each must have a unique name --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">consumer</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="title">name</span>&gt;</span>test_consumer<span class="tag">&lt;/<span class="title">name</span>&gt;</span></span><br><span class="line">              <span class="comment">&lt;!--  currently supports a file path using pactFile or a URL using pactUrl --&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="title">pactFile</span>&gt;</span>../pact-consumer/target/pacts/test_consumer-test_provider.json<span class="tag">&lt;/<span class="title">pactFile</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">consumer</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="title">consumers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">serviceProvider</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="title">serviceProviders</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Start the provider application.</p>
</li>
<li>Run <code>mvn pact:verify</code><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">D:\Java\pact\pact-jvm\pact-provider&gt;<span class="keyword">mvn </span>pact:verify</span><br><span class="line">[<span class="preprocessor">INFO</span>] Scanning for projects...</span><br><span class="line">[<span class="preprocessor">INFO</span>]</span><br><span class="line">[<span class="preprocessor">INFO</span>] ----------------------&lt; com.izheyi:pact-provider &gt;----------------------</span><br><span class="line">[<span class="preprocessor">INFO</span>] <span class="keyword">Building </span>pact-provider <span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>-SNAPSHOT</span><br><span class="line">[<span class="preprocessor">INFO</span>] --------------------------------[ jar ]---------------------------------</span><br><span class="line">[<span class="preprocessor">INFO</span>]</span><br><span class="line">[<span class="preprocessor">INFO</span>] --- pact-jvm-provider-maven_2.<span class="number">12</span>:<span class="number">3</span>.<span class="number">5</span>.<span class="number">24</span>:verify (default-cli) <span class="comment">@ pact-provider ---</span></span><br><span class="line"></span><br><span class="line"><span class="label">Verifying</span> a pact <span class="keyword">between </span>test_consumer <span class="keyword">and </span>test_provider</span><br><span class="line">  [Using File ..\pact-consumer\target\pacts\test_consumer-test_provider.json]</span><br><span class="line">  A request for age for person zhangsan</span><br><span class="line">    returns a response which</span><br><span class="line">      has status <span class="preprocessor">code</span> <span class="number">200</span> (OK)</span><br><span class="line">      includes headers</span><br><span class="line">        <span class="string">"Content-Type"</span> with value <span class="string">"application/json"</span> (OK)</span><br><span class="line">      has a matching <span class="keyword">body </span>(OK)</span><br><span class="line">[WARNING] Skipping publishing of verification results as <span class="keyword">it </span>has <span class="keyword">been </span>disabled (pact.verifier.publishResults is not <span class="string">'true'</span>)</span><br><span class="line">[<span class="preprocessor">INFO</span>] ------------------------------------------------------------------------</span><br><span class="line">[<span class="preprocessor">INFO</span>] <span class="keyword">BUILD </span>SUCCESS</span><br><span class="line">[<span class="preprocessor">INFO</span>] ------------------------------------------------------------------------</span><br><span class="line">[<span class="preprocessor">INFO</span>] Total time:  <span class="number">7</span>.<span class="number">577</span> s</span><br><span class="line">[<span class="preprocessor">INFO</span>] Finished at: <span class="number">2018</span>-<span class="number">11</span>-<span class="number">13</span>T09:<span class="number">09</span>:<span class="number">01</span>+<span class="number">08</span>:<span class="number">00</span></span><br><span class="line">[<span class="preprocessor">INFO</span>] ------------------------------------------------------------------------</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CDC - 介绍及工具]]></title>
      <url>http://izheyi.com/2018/11/04/CDC-%E4%BB%8B%E7%BB%8D/</url>
      <content type="html"><![CDATA[<pre><code>随着Microservices的流行，把系统拆分成一个个服务，服务之间会有很多依赖关系，但是每个之间又是相互独立的。当一个服务修改时，怎么保证其它调用它的服务没有受到影响呢？
</code></pre><h1 id="CDC"><a href="#CDC" class="headerlink" title="CDC"></a>CDC</h1><p>契约测试 ，又称之为 消费者驱动的契约测试(Consumer-Driven Contracts，简称CDC)，根据 消费者驱动契约 ，我们可以将服务分为消费者端和生产者端，而消费者驱动的契约测试的核心思想在于是从消费者业务实现的角度出发，由消费者自己会定义需要的数据格式以及交互细节，并驱动生成一份契约文件。然后生产者根据契约文件来实现自己的逻辑，并在持续集成环境中验证。</p>
<ul>
<li><strong>单元测试</strong>    单元测试针对代码单元（通常是类）的测试，单元测试的价值在于能提供最快的反馈。另外好的单元测试还可以帮助你改善设计，在你的团队掌握TDD的前提下，单元测试能辅助重构，帮助改善代码整洁度。</li>
<li><strong>API测试</strong>    API测试是针对业务接口进行的测试，主要测内部接口功能实现是否完整，比如说内部逻辑是不是正常，异常处理是不是正确。</li>
<li><strong>契约测试</strong>    契约测试其实是为了测试服务之间连接或者说接口调用的正确性，为了验证服务提供者的功能是不是真正能够满足消费者的需求。它其实体现了测试前移的思想，把本来要通过集成测试才能验证的工作化作单元测试和接口测试，用更轻量的方式快速进行验证。</li>
<li><strong>集成测试</strong>    它从用户的角度验证整个功能的正确性，测的是端到端的流程，并且加入用户场景和数据，验证整个过程是不是OK，它的价值业务价值最高，是验证一个完整的流程。</li>
</ul>
<h1 id="Pact"><a href="#Pact" class="headerlink" title="Pact"></a>Pact</h1><p><a href="https://docs.pact.io/" target="_blank" rel="external">Pact</a> 提供API支持CDC Testing，在Consumer端提供Mock服务秋模拟Provider并生成Contract信息，在Provider端使用生成的Contract信息来验证Provider的服务。<br>Pact工作流程 <a href="https://docs.pact.io/how_pact_works" target="_blank" rel="external">how pact works</a>：<br><img src="/images/cdc/pact.jpg" alt=""></p>
<h2 id="Consumer"><a href="#Consumer" class="headerlink" title="Consumer"></a>Consumer</h2><ol>
<li>使用Pact的DSL，定义Mock服务。</li>
<li>使用Pact的DSL，定义响应内容(包括Headers、Status以及Body等)。</li>
<li>使用@PactVerification运行单元测试，生成契约文件(可以将其保存在文件系统或者Pact-Broker)。 <h2 id="Provider"><a href="#Provider" class="headerlink" title="Provider"></a>Provider</h2></li>
<li>指定契约文件的存储源(如文件系统或者Pact-Broker)。 </li>
<li>启动Provider，运行PactVerify(e.g., mvn pact:verify)。 </li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Install zabbix through docker]]></title>
      <url>http://izheyi.com/2018/10/28/Install-zabbix-through-docker/</url>
      <content type="html"><![CDATA[<p><a href="https://www.zabbix.com/" target="_blank" rel="external">Zabbix</a> is an open-source ultimate enterprise-level software designed for real-time monitoring of millions of metrics collected from tens of thousands of servers, virtual machines and network devices. </p>
<h2 id="Deploy"><a href="#Deploy" class="headerlink" title="Deploy"></a>Deploy</h2><p>Deploy Zabbix by running the below bash script.<br><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line"># Deploy a mysql container for zabbix to use.</span><br><span class="line">docker run --name zabbix-mysql-server --hostname zabbix-mysql-server \</span><br><span class="line">-<span class="ruby">e <span class="constant">MYSQL_ROOT_PASSWORD</span>=<span class="string">"123456"</span> \</span><br><span class="line"></span>-<span class="ruby">e <span class="constant">MYSQL_USER</span>=<span class="string">"zabbix"</span> \</span><br><span class="line"></span>-<span class="ruby">e <span class="constant">MYSQL_PASSWORD</span>=<span class="string">"123456"</span> \</span><br><span class="line"></span>-<span class="ruby">e <span class="constant">MYSQL_DATABASE</span>=<span class="string">"zabbix"</span> \</span><br><span class="line"></span>-<span class="ruby">p <span class="number">3306</span><span class="symbol">:</span><span class="number">3306</span> \</span><br><span class="line"></span>-<span class="ruby">d <span class="symbol">mysql:</span><span class="number">5.7</span> \</span><br><span class="line"></span>-<span class="ruby">-character-set-server=utf8 --collation-server=utf8_bin</span><br><span class="line"></span></span><br><span class="line"># Deploy the zabbix-server application container</span><br><span class="line">docker run  --name zabbix-server-mysql --hostname zabbix-server-mysql \</span><br><span class="line">-<span class="ruby">-link zabbix-mysql-<span class="symbol">server:</span>mysql \</span><br><span class="line"></span>-<span class="ruby">e <span class="constant">DB_SERVER_HOST</span>=<span class="string">"mysql"</span> \</span><br><span class="line"></span>-<span class="ruby">e <span class="constant">MYSQL_USER</span>=<span class="string">"zabbix"</span> \</span><br><span class="line"></span>-<span class="ruby">e <span class="constant">MYSQL_DATABASE</span>=<span class="string">"zabbix"</span> \</span><br><span class="line"></span>-<span class="ruby">e <span class="constant">MYSQL_PASSWORD</span>=<span class="string">"123456"</span> \</span><br><span class="line"></span>-<span class="ruby">v /etc/<span class="symbol">localtime:</span>/etc/<span class="symbol">localtime:</span>ro \</span><br><span class="line"></span>-<span class="ruby">v /data/docker/zabbix/<span class="symbol">alertscripts:</span>/usr/lib/zabbix/alertscripts \</span><br><span class="line"></span>-<span class="ruby">v /data/docker/zabbix/<span class="symbol">externalscripts:</span>/usr/lib/zabbix/externalscripts \</span><br><span class="line"></span>-<span class="ruby">p <span class="number">10051</span><span class="symbol">:</span><span class="number">10051</span> \</span><br><span class="line"></span>-<span class="ruby">d \</span><br><span class="line"></span>zabbix/zabbix-server-mysql</span><br><span class="line"></span><br><span class="line"># Deploy the webserver frontend.</span><br><span class="line">docker run --name zabbix-web-nginx-mysql --hostname zabbix-web-nginx-mysql \</span><br><span class="line">-<span class="ruby">-link zabbix-mysql-<span class="symbol">server:</span>mysql \</span><br><span class="line"></span>-<span class="ruby">-link zabbix-server-<span class="symbol">mysql:</span>zabbix-server \</span><br><span class="line"></span>-<span class="ruby">e <span class="constant">DB_SERVER_HOST</span>=<span class="string">"mysql"</span> \</span><br><span class="line"></span>-<span class="ruby">e <span class="constant">MYSQL_USER</span>=<span class="string">"zabbix"</span> \</span><br><span class="line"></span>-<span class="ruby">e <span class="constant">MYSQL_PASSWORD</span>=<span class="string">"123456"</span> \</span><br><span class="line"></span>-<span class="ruby">e <span class="constant">MYSQL_DATABASE</span>=<span class="string">"zabbix"</span> \</span><br><span class="line"></span>-<span class="ruby">e <span class="constant">ZBX_SERVER_HOST</span>=<span class="string">"zabbix-server"</span> \</span><br><span class="line"></span>-<span class="ruby">e <span class="constant">PHP_TZ</span>=<span class="string">"Asia/Shanghai"</span> \</span><br><span class="line"></span>-<span class="ruby">p <span class="number">8000</span><span class="symbol">:</span><span class="number">80</span> \</span><br><span class="line"></span>-<span class="ruby">p <span class="number">8443</span><span class="symbol">:</span><span class="number">443</span> \</span><br><span class="line"></span>-<span class="ruby">d \</span><br><span class="line"></span>zabbix/zabbix-web-nginx-mysql</span><br></pre></td></tr></table></figure></p>
<h2 id="Verify"><a href="#Verify" class="headerlink" title="Verify"></a>Verify</h2><p>After running the script, we can access it by <code>http://192.168.220.138:8000/</code> in browser:<br><img src="/images/zabbix/login.jpg" alt=""><br>The default credentials are: <code>Admin/zabbix</code></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[混龄猎狐行动]]></title>
      <url>http://izheyi.com/2018/10/25/%E6%B7%B7%E9%BE%84%E7%8C%8E%E7%8B%90%E8%A1%8C%E5%8A%A8/</url>
      <content type="html"><![CDATA[<p>二、四、六年级学生外出到‘世界公园’，开展的定向猎狐综合实践活动。<br><img src="/images/izheyi/2018/10/liehu_01.JPG" alt=""><br><img src="/images/izheyi/2018/10/liehu_02.JPG" alt=""><br>还用一幅画的形式，画出自己感受最深的点。<br><img src="/images/izheyi/2018/10/liehu_03.JPG" alt=""><br>闺女说这个活动不公平，分地图的时候都是指定的，拿到容易的地图就会排名靠前。对‘公平’讨论了很多，世界上没有绝对的公平，这世界远没有你想的那么单纯。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[SonarQube with Jenkins pipeline]]></title>
      <url>http://izheyi.com/2018/10/14/SonarQube-with-Jenkins-pipeline/</url>
      <content type="html"><![CDATA[<ol>
<li>Install <code>SonarQube Scanner</code> plugin in Jenkins.</li>
<li>Global Configuration.<br>Log into Jenkins as an administrator and go to <code>Manage Jenkins &gt; Global Tool Configuration</code>:<br><img src="/images/sonarqube/jenkins_config.jpg" alt=""></li>
<li><p>Create Pipeline job.<br>Add the below Pipeline script:</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">node &#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">mvnHome</span></span><br><span class="line"></span>  stage(<span class="symbol">'SCM</span> and configration') &#123;</span><br><span class="line">    git <span class="symbol">'https</span>:<span class="comment">//github.com/yongfeiuall/spring-boot-example.git'</span></span><br><span class="line">    mvnHome = tool <span class="symbol">'M</span>3'</span><br><span class="line">  &#125;</span><br><span class="line">  stage(<span class="symbol">'SonarQube</span> analysis') &#123;</span><br><span class="line">    withSonarQubeEnv(<span class="symbol">'SonarQub</span>e') &#123;</span><br><span class="line">      sh <span class="string">"'$&#123;mvnHome&#125;/bin/mvn' clean package sonar:sonar"</span></span><br><span class="line">    &#125; <span class="comment">// SonarQube taskId is automatically attached to the pipeline context</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Run job.<br><img src="/images/sonarqube/jenkins_run.jpg" alt=""><br><img src="/images/sonarqube/jenkins_result.jpg" alt=""></p>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Code Analysis with SonarQube]]></title>
      <url>http://izheyi.com/2018/10/07/Code-Analysis-with-SonarQube/</url>
      <content type="html"><![CDATA[<ol>
<li><p>Login the sonarqube, create a token. Also need to select the primary language (Java) and the build technology of the project (Maven).<br><img src="/images/sonarqube/config.jpg" alt=""></p>
</li>
<li><p>Add sonarqube maven plugin in project pom file</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.sonarsource.scanner.maven<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>sonar-maven-plugin<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">version</span>&gt;</span>3.5.0.1254<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Execute below command from the root of our project directory to scan</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn sonar:sonar -Dsonar<span class="class">.host</span><span class="class">.url</span>=http:<span class="comment">//192.168.220.132:9000 -Dsonar.login=ac75fe70e38aa0a956cd8c2ccdfa282783cf9a0a</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Verify<br><img src="/images/sonarqube/scan_result.jpg" alt=""></p>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Centos下配置 Sonarqube+MySQL]]></title>
      <url>http://izheyi.com/2018/09/30/Centos%E4%B8%8B%E9%85%8D%E7%BD%AE-Sonarqube-MySQL/</url>
      <content type="html"><![CDATA[<h1 id="SonarQube"><a href="#SonarQube" class="headerlink" title="SonarQube"></a>SonarQube</h1><p>Sonar 是一个用于代码质量管理的开放平台。通过插件机制，Sonar 可以集成不同的测试工具，代码分析工具，以及持续集成工具。比如pmd-cpd、checkstyle、findbugs、Jenkins。通过不同的插件对这些结果进行再加工处理，通过量化的方式度量代码质量的变化，从而可以方便地对不同规模和种类的工程进行代码质量管理。同时 Sonar 还对大量的持续集成工具提供了接口支持，可以很方便地在持续集成中使用 Sonar。<br>此外，Sonar 的插件还可以对 Java 以外的其他编程语言（支持的语言包括：Java、PHP、C#、C、Cobol、PL/SQL、Flex等）提供支持，对国际化以及报告文档化也有良好的支持。可以说Sonar是目前最强大的代码质量管理工具之一。</p>
<h1 id="环境前提"><a href="#环境前提" class="headerlink" title="环境前提"></a>环境前提</h1><ul>
<li>Centos 6.7</li>
<li>JDK 1.8</li>
<li>Mysql 5.6</li>
</ul>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><ol>
<li><p>创建数据库及授权</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> sonar <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci;</span> </span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">'sonar'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'sonar'</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">GRANT</span> ALL <span class="keyword">ON</span> sonar.* <span class="keyword">TO</span> <span class="string">'sonar'</span>@<span class="string">'%'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'sonar'</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">GRANT</span> ALL <span class="keyword">ON</span> sonar.* <span class="keyword">TO</span> <span class="string">'sonar'</span>@<span class="string">'localhost'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'sonar'</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">FLUSH</span> <span class="keyword">PRIVILEGES</span>;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>下载安装SonarQube<br>从官方下载<a href="https://www.sonarqube.org/downloads/" target="_blank" rel="external">Downloads</a>，下载后放到/opt，解压ZIP文件。</p>
</li>
<li><p>配置sonar.properties</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># User credentials.</span><br><span class="line"># Permissions to <span class="operator"><span class="keyword">create</span> <span class="keyword">tables</span>, <span class="keyword">indices</span> <span class="keyword">and</span> <span class="keyword">triggers</span> must be granted <span class="keyword">to</span> JDBC <span class="keyword">user</span>.</span><br><span class="line"># The <span class="keyword">schema</span> must be created <span class="keyword">first</span>.</span><br><span class="line">sonar.jdbc.username=sonar</span><br><span class="line">sonar.jdbc.<span class="keyword">password</span>=sonar</span><br><span class="line"></span><br><span class="line">#<span class="comment">----- Embedded Database (default)</span></span><br><span class="line"># H2 embedded <span class="keyword">database</span> <span class="keyword">server</span> listening port, <span class="keyword">defaults</span> <span class="keyword">to</span> <span class="number">9092</span></span><br><span class="line">#sonar.embeddedDatabase.port=<span class="number">9092</span></span><br><span class="line"></span><br><span class="line">#<span class="comment">----- MySQL 5.6 or greater</span></span><br><span class="line"># <span class="keyword">Only</span> <span class="keyword">InnoDB</span> <span class="keyword">storage</span> <span class="keyword">engine</span> <span class="keyword">is</span> supported (<span class="keyword">not</span> myISAM).</span><br><span class="line"># <span class="keyword">Only</span> the bundled driver <span class="keyword">is</span> supported. It can <span class="keyword">not</span> be <span class="keyword">changed</span>.</span><br><span class="line">sonar.jdbc.<span class="keyword">url</span>=jdbc:mysql://localhost:<span class="number">3306</span>/sonar?useUnicode=<span class="literal">true</span>&amp;characterEncoding=utf8&amp;rewriteBatchedStatements=<span class="literal">true</span>&amp;useConfigs=maxPerformance&amp;useSSL=<span class="literal">false</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>启动SonarQube<br>用root无法启动SonarQube，需要另外新建普通用户来启动。创建sonar用户，并修改解压后的文件夹Own为sonar。<br>切换用户，执行：</p>
 <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[sonar@Automation sonarqube-<span class="number">6.7</span><span class="number">.5</span>]$ ./bin/linux-x86-<span class="number">64</span>/sonar.sh start</span><br></pre></td></tr></table></figure>
<p>启动失败，一直报DB链接错误，需要在MySQL的my.cnf修改<code>bind-address = localhost</code>，重启Mysql，再重启SonarQube就可以了。</p>
</li>
<li><p>验证<br>Browser打开<code>http://192.168.220.132:9000/</code>，如下页面<br><img src="/images/sonarqube/startup.jpg" alt=""></p>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[2018中秋青岛之行]]></title>
      <url>http://izheyi.com/2018/09/23/2018%E4%B8%AD%E7%A7%8B%E9%9D%92%E5%B2%9B%E4%B9%8B%E8%A1%8C/</url>
      <content type="html"><![CDATA[<p>一直说着要带闺女去海边看看，正好我的年初计划也提前完成，去一趟海边也是设好的奖励，再加上毕业12年了，回去看看。</p>
<h1 id="第一天（栈桥-海军博物馆-第一海水浴场）"><a href="#第一天（栈桥-海军博物馆-第一海水浴场）" class="headerlink" title="第一天（栈桥 + 海军博物馆 + 第一海水浴场）"></a>第一天（栈桥 + 海军博物馆 + 第一海水浴场）</h1><p><img src="/images/izheyi/2018/09/qingdao_000.JPG" alt=""><br><img src="/images/izheyi/2018/09/qingdao_01.JPG" alt=""><br><img src="/images/izheyi/2018/09/qingdao_0.JPG" alt=""><br><img src="/images/izheyi/2018/09/qingdao_00.JPG" alt=""><br><img src="/images/izheyi/2018/09/qingdao_03.JPG" alt=""><br><img src="/images/izheyi/2018/09/qingdao_04.JPG" alt=""><br><img src="/images/izheyi/2018/09/qingdao_05.JPG" alt=""><br><img src="/images/izheyi/2018/09/qingdao_06.JPG" alt=""><br><img src="/images/izheyi/2018/09/qingdao_07.JPG" alt=""><br><img src="/images/izheyi/2018/09/qingdao_08.JPG" alt=""><br><img src="/images/izheyi/2018/09/qingdao_09.JPG" alt=""><br><img src="/images/izheyi/2018/09/qingdao_10.JPG" alt=""><br><img src="/images/izheyi/2018/09/qingdao_20.JPG" alt=""></p>
<h1 id="第二天（海底世界-出海）"><a href="#第二天（海底世界-出海）" class="headerlink" title="第二天（海底世界 + 出海）"></a>第二天（海底世界 + 出海）</h1><p><img src="/images/izheyi/2018/09/qingdao_13.JPG" alt=""><br><img src="/images/izheyi/2018/09/qingdao_14.JPG" alt=""><br><img src="/images/izheyi/2018/09/qingdao_15.JPG" alt=""><br><img src="/images/izheyi/2018/09/qingdao_16.JPG" alt=""><br><img src="/images/izheyi/2018/09/qingdao_17.JPG" alt=""><br><img src="/images/izheyi/2018/09/qingdao_02.JPG" alt=""><br><img src="/images/izheyi/2018/09/qingdao_21.JPG" alt=""></p>
<h1 id="第三天-（栈桥-劈材院）"><a href="#第三天-（栈桥-劈材院）" class="headerlink" title="第三天 （栈桥 + 劈材院）"></a>第三天 （栈桥 + 劈材院）</h1><p><img src="/images/izheyi/2018/09/qingdao_19.JPG" alt=""><br><img src="/images/izheyi/2018/09/qingdao_11.JPG" alt=""><br><img src="/images/izheyi/2018/09/qingdao_18.JPG" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[草原两日游玩]]></title>
      <url>http://izheyi.com/2018/09/16/%E8%8D%89%E5%8E%9F%E4%B8%A4%E6%97%A5%E6%B8%B8%E7%8E%A9/</url>
      <content type="html"><![CDATA[<p>又占了妈妈的光，跟着公司去大草原去玩了两天。<br><img src="/images/izheyi/2018/09/caoyuan_00.JPG" alt=""><br><img src="/images/izheyi/2018/09/caoyuan_01.JPG" alt=""><br><img src="/images/izheyi/2018/09/caoyuan_02.JPG" alt=""><br><img src="/images/izheyi/2018/09/caoyuan_03.JPG" alt=""><br><img src="/images/izheyi/2018/09/caoyuan_04.JPG" alt=""><br><img src="/images/izheyi/2018/09/caoyuan_05.JPG" alt=""><br><img src="/images/izheyi/2018/09/caoyuan_06.JPG" alt=""><br><img src="/images/izheyi/2018/09/caoyuan_07.JPG" alt=""><br><img src="/images/izheyi/2018/09/caoyuan_08.JPG" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Centos下升级Mysql（5.1 -> 5.7）]]></title>
      <url>http://izheyi.com/2018/09/09/Centos%E4%B8%8B%E5%8D%87%E7%BA%A7Mysql%EF%BC%885-1-5-7%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>安装软件需要版本更高的Mysql，就做了个升级。</p>
<ol>
<li><p>如果担心数据丢失，可以先备份数据库。</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -<span class="keyword">u</span> xxx -<span class="keyword">h</span> xxx -P 3306 -p --all-databases &gt; databases.sql</span><br></pre></td></tr></table></figure>
</li>
<li><p>停止Mysql服务。</p>
<figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysqld <span class="keyword">stop</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>卸载旧版Mysql。</p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">remove</span> mysql mysql-*</span><br></pre></td></tr></table></figure>
<p> 移除命令执行后，可再看看是否有残余的mysql</p>
 <figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">list</span> installed | <span class="keyword">grep</span> mysql</span><br></pre></td></tr></table></figure>
<p> 如果有，删除：</p>
 <figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">remove</span> mysql－libs</span><br></pre></td></tr></table></figure>
</li>
<li><p>下载5.7版本的rpm文件。</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh <span class="string">http:</span><span class="comment">//repo.mysql.com/mysql57-community-release-el6-7.noarch.rpm</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>安装Mysql。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="operator"><span class="keyword">install</span> mysql-community-<span class="keyword">server</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>验证。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -V</span><br><span class="line">mysql  Ver <span class="number">14.14</span> Distrib <span class="number">5.7</span><span class="number">.23</span>, <span class="function"><span class="keyword">for</span> <span class="title">Linux</span> <span class="params">(x86_64)</span> <span class="keyword">using</span>  EditLine wrapper</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p><strong>问题1：</strong><br>Mysql服务启动失败，需要做初始化<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld <span class="comment">--initialize</span></span><br></pre></td></tr></table></figure></p>
<p>遇到如下错误，<br><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2018</span>-<span class="number">06</span>-5T05:<span class="number">36</span>:<span class="number">21.</span>07069Z <span class="number">0</span> [Warning] TIMESTAMP with <span class="type">implicit</span> <span class="keyword">DEFAULT</span> <span class="keyword">value</span> is deprecated. Please <span class="keyword">use</span> --explicit_defaults_for_timestamp server option (see documentation for more details).</span><br><span class="line"><span class="number">2018</span>-<span class="number">06</span>-5T05:<span class="number">36</span>:<span class="number">21.</span>08821Z <span class="number">0</span> [ERROR] --initialize specified but the <span class="type">data</span> directory has files <span class="type">in</span> it. Aborting.</span><br><span class="line"><span class="number">2018</span>-<span class="number">06</span>-5T05:<span class="number">36</span>:<span class="number">21.</span>08870Z <span class="number">0</span> [ERROR] Aborting</span><br></pre></td></tr></table></figure></p>
<p>做如下操作：<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rm -rf /var/<span class="class"><span class="keyword">lib</span>/<span class="title">mysql</span></span></span><br><span class="line">service mysqld start</span><br></pre></td></tr></table></figure></p>
<p><strong>问题2：</strong><br>无法登录，<br><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="list">[<span class="keyword">root@Automation</span> mysql]# mysql -u root -p</span><br><span class="line">Enter password: </span><br><span class="line">ERROR <span class="number">1045</span> <span class="list">(<span class="keyword">28000</span>)</span>: Access denied for user <span class="variable">'root</span><span class="variable">'@</span><span class="variable">'localhost</span>' <span class="list">(<span class="keyword">using</span> password: YES)</span></span></span><br></pre></td></tr></table></figure></p>
<p>新版Mysql会设置默认密码，通过下面获得，<br><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grep</span> <span class="string">'temporary password'</span> /var/<span class="keyword">log</span>/mysqld.<span class="keyword">log</span></span><br><span class="line"><span class="number">2018</span>-<span class="number">06</span>-<span class="number">05</span>T05:<span class="number">38</span>:<span class="number">02</span>.<span class="number">215252</span>Z <span class="number">1</span> [Note] A temporary password is generated <span class="keyword">for</span> root<span class="variable">@localhost</span>: adwyZ;K=<span class="number">7</span>Ub&lt;</span><br></pre></td></tr></table></figure></p>
<p>修改密码<br><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="property">@Automation</span> mysql]<span class="comment"># service mysqld stop</span></span><br><span class="line">停止 mysqld：                                              [确定]</span><br><span class="line">[root<span class="property">@Automation</span> mysql]<span class="comment"># ps -ef | grep mysql</span></span><br><span class="line">root     <span class="number">18570</span> <span class="number">11168</span>  <span class="number">0</span> <span class="number">15</span>:<span class="number">32</span> pts/<span class="number">3</span>    <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> grep mysql</span><br><span class="line">[root<span class="property">@Automation</span> mysql]<span class="comment"># mysqld_safe --user=mysql --skip-grant-tables --skip-networking &amp;</span></span><br><span class="line">[<span class="number">1</span>] <span class="number">18571</span></span><br><span class="line"><span class="number">2018</span>-<span class="number">06</span>-<span class="number">05</span><span class="attribute">T07</span>:<span class="number">32</span>:<span class="number">24.885303</span>Z mysqld_safe Logging <span class="keyword">to</span> <span class="string">'/var/log/mysqld.log'</span>.</span><br><span class="line"><span class="number">2018</span>-<span class="number">06</span>-<span class="number">05</span><span class="attribute">T07</span>:<span class="number">32</span>:<span class="number">24.928701</span>Z mysqld_safe Starting mysqld daemon <span class="keyword">with</span> databases <span class="keyword">from</span> /<span class="keyword">var</span>/lib/mysql</span><br><span class="line">^C</span><br><span class="line">[root<span class="property">@Automation</span> mysql]<span class="comment"># mysql -u root mysql</span></span><br><span class="line">Reading table information <span class="keyword">for</span> completion <span class="keyword">of</span> table <span class="keyword">and</span> column names</span><br><span class="line">You can turn <span class="literal">off</span> <span class="keyword">this</span> feature <span class="keyword">to</span> get a quicker startup <span class="keyword">with</span> -A</span><br><span class="line"></span><br><span class="line">Welcome <span class="keyword">to</span> the MySQL monitor.  Commands end <span class="keyword">with</span> ; <span class="keyword">or</span> <span class="string">\g.</span></span><br><span class="line">Your MySQL connection id <span class="keyword">is</span> <span class="number">2</span></span><br><span class="line">Server <span class="attribute">version</span>: <span class="number">5.7</span>.<span class="number">23</span> MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">Copyright (c) <span class="number">2000</span>, <span class="number">2018</span>, Oracle <span class="keyword">and</span>/<span class="keyword">or</span> its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle <span class="keyword">is</span> a registered trademark <span class="keyword">of</span> Oracle Corporation <span class="keyword">and</span>/<span class="keyword">or</span> its</span><br><span class="line">affiliates. Other names may be trademarks <span class="keyword">of</span> their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">'help;'</span> <span class="keyword">or</span> <span class="string">'\h'</span> <span class="keyword">for</span> help. Type <span class="string">'\c'</span> <span class="keyword">to</span> clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; update mysql.user set authentication_string=password(<span class="string">'admin'</span>) where User=<span class="string">'root'</span>;</span><br><span class="line">Query OK, <span class="number">1</span> row affected, <span class="number">1</span> warning (<span class="number">0.01</span> sec)</span><br><span class="line">Rows <span class="attribute">matched</span>: <span class="number">1</span>  <span class="attribute">Changed</span>: <span class="number">1</span>  <span class="attribute">Warnings</span>: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">Query OK, <span class="number">0</span> rows affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; update mysql.user set Host=<span class="string">'%'</span> where User=<span class="string">'root'</span>;</span><br><span class="line">Query OK, <span class="number">1</span> row affected (<span class="number">0.00</span> sec)</span><br><span class="line">Rows <span class="attribute">matched</span>: <span class="number">1</span>  <span class="attribute">Changed</span>: <span class="number">1</span>  <span class="attribute">Warnings</span>: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">Query OK, <span class="number">0</span> rows affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure></p>
<p>登录之后，还是不行，做如下操作：<br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation mysql]# mysql -u root -p</span><br><span class="line">Enter password: </span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 4</span><br><span class="line">Server version: 5.7.23</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="emphasis">'help;'</span> or <span class="emphasis">'\h'</span> for help. Type <span class="emphasis">'\c'</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.</span><br><span class="line">mysql&gt; ALTER USER <span class="emphasis">'root'</span>@<span class="emphasis">'%'</span> IDENTIFIED BY <span class="emphasis">'admin'</span>;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line"><span class="header">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span></span><br><span class="line"><span class="header">| Database           |</span><br><span class="line">+--------------------+</span></span><br><span class="line">| information<span class="emphasis">_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_</span>schema |</span><br><span class="line"><span class="header">| sys                |</span><br><span class="line">+--------------------+</span></span><br><span class="line">4 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></p>
<p>到此，Mysql升级完成。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[丁丁画画（二年级上学期）]]></title>
      <url>http://izheyi.com/2018/09/02/%E4%B8%81%E4%B8%81%E7%94%BB%E7%94%BB%EF%BC%88%E4%BA%8C%E5%B9%B4%E7%BA%A7%E4%B8%8A%E5%AD%A6%E6%9C%9F%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><img src="/images/izheyi/pic/2018/2_1_1.JPG" alt=""><br><img src="/images/izheyi/pic/2018/2_1_2.JPG" alt=""><br><img src="/images/izheyi/pic/2018/2_1_3.JPG" alt=""><br><img src="/images/izheyi/pic/2018/2_1_4.JPG" alt=""><br><img src="/images/izheyi/pic/2018/2_1_5.JPG" alt=""><br><img src="/images/izheyi/pic/2018/2_1_6.JPG" alt=""><br><img src="/images/izheyi/pic/2018/2_1_7.JPG" alt=""><br><img src="/images/izheyi/pic/2018/2_1_8.JPG" alt=""><br><img src="/images/izheyi/pic/2018/2_1_9.JPG" alt=""><br><img src="/images/izheyi/pic/2018/2_1_10.JPG" alt=""><br><img src="/images/izheyi/pic/2018/2_1_11.JPG" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[nmon - 安装使用]]></title>
      <url>http://izheyi.com/2018/08/26/nmon-%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<p>开源性能监控工具，用于监控linux系统的资源消耗信息，并能把结果输出到文件中，然后通过nmon_analyser工具产生数据文件与图形化结果。</p>
<h1 id="Nmon"><a href="#Nmon" class="headerlink" title="Nmon"></a>Nmon</h1><ol>
<li>下载相应OS版本，基于Centos<a href="https://sourceforge.net/projects/nmon/files/nmon16e_mpginc.tar.gz" target="_blank" rel="external">nmon</a></li>
<li>上传到Server <code>/opt/nmon/</code></li>
<li><p>解压，重命名，授权</p>
<figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="constant">@Automation</span> nmon]<span class="preprocessor"># tar -zxvf nmon16e_mpginc.tar.gz</span></span><br><span class="line">[root<span class="constant">@Automation</span> nmon]<span class="preprocessor"># mv nmon_x86_64_centos6  nmon</span></span><br><span class="line">[root<span class="constant">@Automation</span> nmon]<span class="preprocessor"># chmod 777 nmon</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>验证</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="comment">@Automation nmon]# ./nmon</span></span><br><span class="line"></span><br><span class="line">  ------------------------------                                                                                                                                                            x</span><br><span class="line">x    _ __  _ __ ___   ___  _ __    	 For help type H or ...                                                                                                                               x</span><br><span class="line">x   |<span class="string"> '_ \</span>|<span class="string"> '_ ` _ \ / _ \</span>|<span class="string"> '_ \          nmon -?  - hint                                                                                                                                     </span><br><span class="line">x   </span>|<span class="string"> </span>|<span class="string"> </span>|<span class="string"> </span>|<span class="string"> </span>|<span class="string"> </span>|<span class="string"> </span>|<span class="string"> </span>|<span class="string"> </span>|<span class="string"> (_) </span>|<span class="string"> </span>|<span class="string"> </span>|<span class="string"> </span>|<span class="string">         nmon -h  - full details                                                                                                                             </span><br><span class="line">x   </span>|<span class="string">_</span>|<span class="string"> </span>|<span class="string">_</span>|<span class="string">_</span>|<span class="string"> </span>|<span class="string">_</span>|<span class="string"> </span>|<span class="string">_</span>|<span class="string">\___/</span>|<span class="string">_</span>|<span class="string"> </span>|<span class="string">_</span>|<span class="string">                                                                                                                                                             </span><br><span class="line">x                                        To stop nmon type q to Quit                                                                                                                          </span><br><span class="line">x   ------------------------------                                                                                                                                                            x                                                                                                                                                                                           </span><br><span class="line">x   LSB_VERSION=base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-no                                       x</span><br><span class="line">xarcGenuineIntel Intel(R) Core(TM) i5-6300U CPU @ 2.40GHz                                                                                                                                     </span><br><span class="line">x   MHz=2496.089 bogomips=4992.17                                                                                                                                                             </span><br><span class="line">x   ProcessorChips=1 PhyscalCores=1                                                                                                                                                           </span><br><span class="line">x   Hyperthreads  =0 VirtualCPUs =2                                                                                                                                                           x</span><br><span class="line">x   Use these keys to toggle statistics on/off:                                                                                                                                               </span><br><span class="line">x     c = CPU         l = CPU Long-term     - = Faster screen updates                                                                                                                         </span><br><span class="line">x     C = " WideView  U = Utilisation       + = Slower screen updates                                                                                                                         </span><br><span class="line">x     m = Memory      V = Virtual memory    j = File Systems                                                                                                                                  </span><br><span class="line">x     d = Disks       n = Network           . = only busy disks/procs                                                                                                                         </span><br><span class="line">x     r = Resource    N = NFS               h = more options                                                                                                                                  </span><br><span class="line">x     k = Kernel      t = Top-processes     q = Quit</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="Nmon-Analyser"><a href="#Nmon-Analyser" class="headerlink" title="Nmon Analyser"></a>Nmon Analyser</h1><p>下载和说明参见：<a href="https://www.ibm.com/developerworks/community/wikis/home?lang=en#!/wiki/Power+Systems/page/nmon_analyser" target="_blank" rel="external">nmon_analyser</a></p>
<h1 id="数据采集并分析"><a href="#数据采集并分析" class="headerlink" title="数据采集并分析"></a>数据采集并分析</h1><ol>
<li><p>采集</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation nmon]# ./nmon <span class="comment">--help</span></span><br><span class="line">./nmon: invalid option <span class="comment">-- '-'</span></span><br><span class="line">Hint for nmon version 16e</span><br><span class="line">	Full <span class="operator"><span class="keyword">Help</span> Info : nmon -h</span><br><span class="line"></span><br><span class="line">	<span class="keyword">On</span>-screen Stats: nmon</span><br><span class="line">	<span class="keyword">Data</span> Collection: nmon -<span class="keyword">f</span> [-s &lt;seconds&gt;] [-<span class="keyword">c</span> &lt;<span class="keyword">count</span>&gt;] [-<span class="keyword">t</span>|-<span class="keyword">T</span>]</span><br><span class="line">	<span class="keyword">Capacity</span> Plan  : nmon -x</span><br><span class="line">Interactive-<span class="keyword">Mode</span>:</span><br><span class="line">	<span class="keyword">Read</span> the Welcome screen &amp; <span class="keyword">at</span> <span class="keyword">any</span> <span class="keyword">time</span> <span class="keyword">type</span>: <span class="string">"h"</span> <span class="keyword">for</span> more <span class="keyword">help</span></span><br><span class="line">	<span class="keyword">Type</span> <span class="string">"q"</span> <span class="keyword">to</span> <span class="keyword">exit</span> nmon</span><br><span class="line"></span><br><span class="line"><span class="keyword">For</span> <span class="keyword">Data</span>-<span class="keyword">Collect</span>-<span class="keyword">Mode</span></span><br><span class="line">	-<span class="keyword">f</span>            Must be the <span class="keyword">first</span> <span class="keyword">option</span> <span class="keyword">on</span> the line (switches <span class="keyword">off</span> interactive <span class="keyword">mode</span>)</span><br><span class="line">	              Saves <span class="keyword">data</span> <span class="keyword">to</span> a CSV Spreadsheet <span class="keyword">format</span> .nmon <span class="keyword">file</span> <span class="keyword">in</span> <span class="keyword">then</span> <span class="keyword">local</span> <span class="keyword">directory</span></span><br><span class="line">	              Note: -<span class="keyword">f</span> <span class="keyword">sets</span> a <span class="keyword">defaults</span> -s300 -c288    which you can <span class="keyword">then</span> <span class="keyword">modify</span></span><br><span class="line">	Further <span class="keyword">Data</span> Collection Options:</span><br><span class="line">	-s &lt;seconds&gt;  <span class="keyword">time</span> <span class="keyword">between</span> <span class="keyword">data</span> snapshots</span><br><span class="line">	-<span class="keyword">c</span> &lt;<span class="keyword">count</span>&gt;    <span class="keyword">of</span> snapshots <span class="keyword">before</span> exiting</span><br><span class="line">	-<span class="keyword">t</span>            Includes Top Processes stats (-<span class="keyword">T</span> also collects command arguments)</span><br><span class="line">	-x            <span class="keyword">Capacity</span> Planning=<span class="number">15</span> <span class="keyword">min</span> snapshots <span class="keyword">for</span> <span class="number">1</span> <span class="keyword">day</span>. (nmon -ft -s <span class="number">900</span> -<span class="keyword">c</span> <span class="number">96</span>)</span><br><span class="line"><span class="comment">---- End of Hints</span></span><br><span class="line">[root@Automation nmon]# ./nmon -<span class="keyword">c</span> <span class="number">10</span> -s <span class="number">2</span> -<span class="keyword">f</span> -<span class="keyword">t</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>分析<br>把第一步生成的采集文件，用analyser打开即可。</p>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[走进中国人民抗日战争纪念馆]]></title>
      <url>http://izheyi.com/2018/08/19/%E8%B5%B0%E8%BF%9B%E4%B8%AD%E5%9B%BD%E4%BA%BA%E6%B0%91%E6%8A%97%E6%97%A5%E6%88%98%E4%BA%89%E7%BA%AA%E5%BF%B5%E9%A6%86/</url>
      <content type="html"><![CDATA[<p>应要求，做爱国主义教育，周末到抗日战争纪念馆，给孩子讲了一些知道的知识，也再次体会到了战争的残酷，和平的不易。<br><img src="/images/izheyi/2018/08/kangri_01.JPG" alt=""><br><img src="/images/izheyi/2018/08/kangri_02.JPG" alt=""><br><img src="/images/izheyi/2018/08/kangri_03.JPG" alt=""><br><img src="/images/izheyi/2018/08/kangri_04.JPG" alt=""><br><img src="/images/izheyi/2018/08/kangri_05.JPG" alt=""></p>
<p>有一个抗战老兵的专题展，抗日英雄的过去和现状。95%的人都是回家务农，从图片就可以看出，现在过的应该很不易，到最后只剩一个棺材板，不知道还有没有人记得这些人的存在？不知道他们的内心有没有些许的牢骚和动摇？</p>
<p>还去了卢沟桥，20块票不值，爱国教育为什么还要收钱呢？出来的时候看很多人都是从出口进去的，也没人管。<br><img src="/images/izheyi/2018/08/kangri_06.JPG" alt=""><br><img src="/images/izheyi/2018/08/kangri_07.JPG" alt=""><br><img src="/images/izheyi/2018/08/kangri_08.JPG" alt=""><br><img src="/images/izheyi/2018/08/kangri_09.JPG" alt=""><br><img src="/images/izheyi/2018/08/kangri_10.JPG" alt=""><br><img src="/images/izheyi/2018/08/kangri_11.JPG" alt=""><br><img src="/images/izheyi/2018/08/kangri_12.JPG" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Dubbo + ZooKeeper简单分布式搭建]]></title>
      <url>http://izheyi.com/2018/08/12/ZooKeeper-Dubbo/</url>
      <content type="html"><![CDATA[<p>用Dubbo和Zookeeper实现一个简单的分布式搭建。 代码上传 <a href="https://github.com/yongfeiuall/dubbo-zookeeper" target="_blank" rel="external">dubbo-zookeeper</a></p>
<h1 id="实现理解"><a href="#实现理解" class="headerlink" title="实现理解"></a>实现理解</h1><p>有两个项目：</p>
<ul>
<li>服务提供者（dubbo-provider）</li>
<li>服务消费者（dubbo-consumer）</li>
</ul>
<p>实现逻辑：</p>
<ol>
<li>在<code>dubbo-provider</code>实现一个服务，引入dubbo及相关配置，项目启动就会根据配置去Zookeeper注册一下，说明我实现这个服务，谁想用就可以来调用了。</li>
<li>在<code>dubbo-consumer</code>也引入dubbo，配置好想调用的服务，启动就会告诉Zookeeper我会使用什么服务。</li>
</ol>
<p>当<code>dubbo-consumer</code>想调用服务A时，就去问ZooKeeper，它就会把<code>dubbo-provider</code>中服务A的地址告诉<code>dubbo-consumer</code>，然后就根据地址去调用<code>dubbo-provider</code>的服务。</p>
<h1 id="dubbo-provider"><a href="#dubbo-provider" class="headerlink" title="dubbo-provider"></a>dubbo-provider</h1><ol>
<li>创建此工程，代码、依赖和配置请参见Github。</li>
<li>运行此工程。<br><img src="/images/distributed/dubbo_provider.jpg" alt=""></li>
<li>检查ZooKeeper。<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ls /</span><br><span class="line">[zk, dubbo, zookeeper]</span><br><span class="line">[zk: localhost:<span class="number">2181</span>(CONNECTED) <span class="number">1</span>] ls /dubbo</span><br><span class="line">[com.izheyi.com.dubbo_provider.DubboService]</span><br><span class="line">[zk: localhost:<span class="number">2181</span>(CONNECTED) <span class="number">2</span>] ls /dubbo/com.izheyi.com.dubbo_provider.DubboService</span><br><span class="line">[configurators, providers]</span><br><span class="line">[zk: localhost:<span class="number">2181</span>(CONNECTED) <span class="number">6</span>] ls /dubbo/com.izheyi.com.dubbo_provider.DubboService/providers</span><br><span class="line">[dubbo%<span class="number">3</span>A%<span class="number">2F</span>%<span class="number">2F</span>10<span class="number">.24</span><span class="number">.33</span><span class="number">.14</span>%<span class="number">3</span>A20880%<span class="number">2F</span>com.izheyi.com.dubbo_provider.DubboService%<span class="number">3F</span>anyhost%<span class="number">3</span>Dtrue%<span class="number">26</span>application%<span class="number">3</span>Ddubbo-provider%<span class="number">26</span>dubbo%<span class="number">3</span>D2<span class="number">.5</span><span class="number">.3</span>%<span class="number">26</span>interface%<span class="number">3</span>Dcom.izheyi.com.dubbo_provider.DubboService%<span class="number">26</span>methods%<span class="number">3</span>DsayHello%<span class="number">26</span>pid%<span class="number">3</span>D22152%<span class="number">26</span>side%<span class="number">3</span>Dprovider%<span class="number">26</span>timestamp%<span class="number">3</span>D1535618301235]</span><br><span class="line">[zk: localhost:<span class="number">2181</span>(CONNECTED) <span class="number">7</span>]</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="dubbo-consumer"><a href="#dubbo-consumer" class="headerlink" title="dubbo-consumer"></a>dubbo-consumer</h1><ol>
<li>创建此工程，代码、依赖和配置请参见Github。</li>
<li>运行此工程。<br><img src="/images/distributed/dubbo_consumer.jpg" alt=""></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Dubbo]]></title>
      <url>http://izheyi.com/2018/08/11/Dubbo/</url>
      <content type="html"><![CDATA[<p><a href="http://dubbo.incubator.apache.org" target="_blank" rel="external">Dubbo</a>是一款分布式服务框架，高性能和透明化的RPC远程服务调用方案。</p>
<p>Dubbo采用全spring配置方式，透明化接入应用，对应用没有任何API侵入，只需用Spring加载Dubbo的配置即可。</p>
<h1 id="Dubbo架构："><a href="#Dubbo架构：" class="headerlink" title="Dubbo架构："></a>Dubbo架构：</h1><p><img src="/images/distributed/dubbo_frame.jpg" alt=""></p>
<ul>
<li>Provider: 暴露服务的服务提供方。 </li>
<li>Consumer: 调用远程服务的服务消费方。 </li>
<li>Registry: 服务注册与发现的注册中心。 </li>
<li>Monitor: 统计服务的调用次数和调用时间的监控中心。</li>
</ul>
<h1 id="调用流程"><a href="#调用流程" class="headerlink" title="调用流程"></a>调用流程</h1><ol>
<li>服务容器负责启动，加载，运行服务提供者。 </li>
<li>服务提供者在启动时，向注册中心注册自己提供的服务。 </li>
<li>服务消费者在启动时，向注册中心订阅自己所需的服务。 </li>
<li>注册中心返回服务提供者地址列表给消费者，如果有变更，注册中心将基于长连接推送变更数据给消费者。 </li>
<li>服务消费者，从提供者地址列表中，基于软负载均衡算法，选一台提供者进行调用，如果调用失败，再选另一台调用。 </li>
<li>服务消费者和提供者，在内存中累计调用次数和调用时间，定时每分钟发送一次统计数据到监控中心</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ZooKeeper]]></title>
      <url>http://izheyi.com/2018/08/11/Zookeeper/</url>
      <content type="html"><![CDATA[<p><a href="http://zookeeper.apache.org/" target="_blank" rel="external">ZooKeeper</a>是一个开源的分布式协调服务，他为分布式应用提供了高效且可靠的分布式协调服务，提供了诸如统一命名空间服务，配置服务和分布式锁等分布式基础服务。</p>
<p>就是一个服务注册中心。一个典型的ZooKeeper集群如下：<br><img src="/images/distributed/zk_service.jpg" alt=""></p>
<p>ZooKeeper拥有一个层次的命名空间，这个和标准的文件系统非常相似，如下图所示：<br><img src="/images/distributed/zk_namespace.jpg" alt=""></p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><ol>
<li>下载并解压；</li>
<li>创建data和log目录；</li>
<li><p>修改config - zoo.cfg；</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dataDir=/opt/zookeeper-<span class="number">3.4</span><span class="number">.13</span>/data</span><br><span class="line">dataLogDir=/opt/zookeeper-<span class="number">3.4</span><span class="number">.13</span>/<span class="built_in">log</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>启动</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation bin]# ./zkServer.sh <span class="operator"><span class="keyword">start</span></span><br><span class="line">ZooKeeper JMX enabled <span class="keyword">by</span> <span class="keyword">default</span></span><br><span class="line"><span class="keyword">Using</span> config: /opt/zookeeper-<span class="number">3.4</span><span class="number">.13</span>/<span class="keyword">bin</span>/../conf/zoo.cfg</span><br><span class="line"><span class="keyword">Starting</span> zookeeper ... STARTED</span><br><span class="line">[root@Automation <span class="keyword">bin</span>]# ./zkServer.sh <span class="keyword">status</span></span><br><span class="line">ZooKeeper JMX enabled <span class="keyword">by</span> <span class="keyword">default</span></span><br><span class="line"><span class="keyword">Using</span> config: /opt/zookeeper-<span class="number">3.4</span><span class="number">.13</span>/<span class="keyword">bin</span>/../conf/zoo.cfg</span><br><span class="line"><span class="keyword">Mode</span>: <span class="keyword">standalone</span></span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="命令操作"><a href="#命令操作" class="headerlink" title="命令操作"></a>命令操作</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation bin]<span class="preprocessor"># ./zkCli.sh -server localhost:<span class="number">2181</span></span></span><br><span class="line">Connecting to localhost:<span class="number">2181</span></span><br><span class="line"><span class="number">2018</span>-<span class="number">06</span>-<span class="number">02</span> <span class="number">09</span>:<span class="number">26</span>:<span class="number">12</span>,<span class="number">387</span> [myid:] - INFO  [main:Environment@<span class="number">100</span>] - Client environment:zookeeper.version=<span class="number">3.4</span><span class="number">.13</span>-<span class="number">2</span>d71af4dbe22557fda74f9a9b4309b15a7487f03, built on <span class="number">06</span>/<span class="number">29</span>/<span class="number">2018</span> <span class="number">04</span>:<span class="number">05</span> GMT</span><br><span class="line"><span class="number">2018</span>-<span class="number">06</span>-<span class="number">02</span> <span class="number">09</span>:<span class="number">26</span>:<span class="number">12</span>,<span class="number">395</span> [myid:] - INFO  [main:Environment@<span class="number">100</span>] - Client environment:host.name=&lt;NA&gt;</span><br><span class="line"><span class="number">2018</span>-<span class="number">06</span>-<span class="number">02</span> <span class="number">09</span>:<span class="number">26</span>:<span class="number">12</span>,<span class="number">395</span> [myid:] - INFO  [main:Environment@<span class="number">100</span>] - Client environment:java.version=<span class="number">1.8</span><span class="number">.0</span>_11</span><br><span class="line"><span class="number">2018</span>-<span class="number">06</span>-<span class="number">02</span> <span class="number">09</span>:<span class="number">26</span>:<span class="number">12</span>,<span class="number">405</span> [myid:] - INFO  [main:Environment@<span class="number">100</span>] - Client environment:java.vendor=Oracle Corporation</span><br><span class="line"><span class="number">2018</span>-<span class="number">06</span>-<span class="number">02</span> <span class="number">09</span>:<span class="number">26</span>:<span class="number">12</span>,<span class="number">405</span> [myid:] - INFO  [main:Environment@<span class="number">100</span>] - Client environment:java.home=/usr/java/jdk1<span class="number">.8</span><span class="number">.0</span>_11/jre</span><br><span class="line"><span class="number">2018</span>-<span class="number">06</span>-<span class="number">02</span> <span class="number">09</span>:<span class="number">26</span>:<span class="number">12</span>,<span class="number">405</span> [myid:] - INFO  [main:Environment@<span class="number">100</span>] - Client environment:java.<span class="keyword">class</span>.path=/opt/zookeeper-<span class="number">3.4</span><span class="number">.13</span>/bin/../build/classes:/opt/zookeeper-<span class="number">3.4</span><span class="number">.13</span>/bin/../build/lib<span class="comment">/*.jar:/opt/zookeeper-3.4.13/bin/../lib/slf4j-log4j12-1.7.25.jar:/opt/zookeeper-3.4.13/bin/../lib/slf4j-api-1.7.25.jar:/opt/zookeeper-3.4.13/bin/../lib/netty-3.10.6.Final.jar:/opt/zookeeper-3.4.13/bin/../lib/log4j-1.2.17.jar:/opt/zookeeper-3.4.13/bin/../lib/jline-0.9.94.jar:/opt/zookeeper-3.4.13/bin/../lib/audience-annotations-0.5.0.jar:/opt/zookeeper-3.4.13/bin/../zookeeper-3.4.13.jar:/opt/zookeeper-3.4.13/bin/../src/java/lib<span class="comment">/*.jar:/opt/zookeeper-3.4.13/bin/../conf:.:/usr/java/jdk1.8.0_11/lib/dt.jar:/usr/java/jdk1.8.0_11/lib/tools.jar:/usr/java/jdk1.8.0_11/jre/lib</span><br><span class="line">2018-06-02 09:26:12,405 [myid:] - INFO  [main:Environment@100] - Client environment:java.library.path=/usr/java/packages/lib/i386:/lib:/usr/lib</span><br><span class="line">2018-06-02 09:26:12,405 [myid:] - INFO  [main:Environment@100] - Client environment:java.io.tmpdir=/tmp</span><br><span class="line">2018-06-02 09:26:12,405 [myid:] - INFO  [main:Environment@100] - Client environment:java.compiler=&lt;NA&gt;</span><br><span class="line">2018-06-02 09:26:12,405 [myid:] - INFO  [main:Environment@100] - Client environment:os.name=Linux</span><br><span class="line">2018-06-02 09:26:12,406 [myid:] - INFO  [main:Environment@100] - Client environment:os.arch=i386</span><br><span class="line">2018-06-02 09:26:12,406 [myid:] - INFO  [main:Environment@100] - Client environment:os.version=2.6.32-573.el6.x86_64</span><br><span class="line">2018-06-02 09:26:12,406 [myid:] - INFO  [main:Environment@100] - Client environment:user.name=root</span><br><span class="line">2018-06-02 09:26:12,406 [myid:] - INFO  [main:Environment@100] - Client environment:user.home=/root</span><br><span class="line">2018-06-02 09:26:12,407 [myid:] - INFO  [main:Environment@100] - Client environment:user.dir=/opt/zookeeper-3.4.13/bin</span><br><span class="line">2018-06-02 09:26:12,410 [myid:] - INFO  [main:ZooKeeper@442] - Initiating client connection, connectString=localhost:2181 sessionTimeout=30000 watcher=org.apache.zookeeper.ZooKeeperMain$MyWatcher@1e0aca6</span><br><span class="line">Welcome to ZooKeeper!</span><br><span class="line">2018-06-02 09:26:12,484 [myid:] - INFO  [main-SendThread(localhost:2181):ClientCnxn$SendThread@1029] - Opening socket connection to server localhost/0:0:0:0:0:0:0:1:2181. Will not attempt to authenticate using SASL (unknown error)</span><br><span class="line">JLine support is enabled</span><br><span class="line">2018-06-02 09:26:12,510 [myid:] - INFO  [main-SendThread(localhost:2181):ClientCnxn$SendThread@879] - Socket connection established to localhost/0:0:0:0:0:0:0:1:2181, initiating session</span><br><span class="line">2018-06-02 09:26:12,572 [myid:] - INFO  [main-SendThread(localhost:2181):ClientCnxn$SendThread@1303] - Session establishment complete on server localhost/0:0:0:0:0:0:0:1:2181, sessionid = 0x1003ae6d0d60000, negotiated timeout = 30000</span><br><span class="line"></span><br><span class="line">WATCHER::</span><br><span class="line"></span><br><span class="line">WatchedEvent state:SyncConnected type:None path:null</span><br><span class="line">[zk: localhost:2181(CONNECTED) 0]</span></span></span><br></pre></td></tr></table></figure>
<p>这里不做过多深入学习说明，集群环境搭建，工作原理，Leader选举等，请参见官方文档。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Jmeter - 环境及常用插件]]></title>
      <url>http://izheyi.com/2018/08/05/Jmeter-%E7%8E%AF%E5%A2%83%E5%8F%8A%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6/</url>
      <content type="html"><![CDATA[<p>不做过多介绍，下载后，解压运行，即可使用。</p>
<h1 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h1><h1 id="插件管理"><a href="#插件管理" class="headerlink" title="插件管理"></a>插件管理</h1><p>从官网下载<a href="https://jmeter-plugins.org/downloads/all/" target="_blank" rel="external">Plugins Manager Download</a>，将其放入jmeter安装目录下的lib/ext目录，然后重启jmeter，即可。<br><img src="/images/jmeter/plugin_manager.jpg" alt=""></p>
<h1 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h1><p>插件管理那个我试的时候好像不好用，后来不知道为啥自己又出来了，我们可以手动的来下载配置相应的插件。</p>
<p>下载<a href="https://jmeter-plugins.org/downloads/old/" target="_blank" rel="external">Old-Style Releases</a></p>
<ul>
<li>JMeterPlugins-Standard-1.4.0.zip</li>
<li>JMeterPlugins-Extras-1.4.0.zip<br>解压，将其拷贝到jmeter的lib/ext目录下。<br><img src="/images/jmeter/plugins.jpg" alt=""></li>
</ul>
<h2 id="OS监控"><a href="#OS监控" class="headerlink" title="OS监控"></a>OS监控</h2><p>从此下载<a href="https://github.com/undera/perfmon-agent" target="_blank" rel="external">PerfMon Server Agent</a>。</p>
<ol>
<li>上传到Server，并启动。</li>
<li>客户端监听<br><img src="/images/jmeter/perfmon.jpg" alt=""></li>
</ol>
<h2 id="Stepping-Thread-Group-amp-Concurrency-Thread-Group"><a href="#Stepping-Thread-Group-amp-Concurrency-Thread-Group" class="headerlink" title="Stepping Thread Group &amp; Concurrency Thread Group"></a>Stepping Thread Group &amp; Concurrency Thread Group</h2><p><img src="/images/jmeter/thread_group.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java项目实战 - 项目部署]]></title>
      <url>http://izheyi.com/2018/07/29/Java%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/</url>
      <content type="html"><![CDATA[<p>项目实现分布式部署。</p>
<h1 id="系统规划"><a href="#系统规划" class="headerlink" title="系统规划"></a>系统规划</h1><h2 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h2><ul>
<li>zheyi-manager : manager.zheyi.com</li>
<li>zheyi-portal : www.zheyi.com</li>
<li>zheyi-rest : rest.zheyi.com</li>
<li>zheyi-sso : sso.zheyi.com</li>
<li>zheyi-search : search.zheyi.com</li>
</ul>
<p>所有的域名都配置指向代理服务器（Nginx）。</p>
<ul>
<li>192.168.22.138 : manager.zheyi.com</li>
<li>192.168.22.138 : www.zheyi.com</li>
<li>192.168.22.138 : rest.zheyi.com</li>
<li>192.168.22.138 : sso.zheyi.com</li>
<li>192.168.22.138 : search.zheyi.com</li>
</ul>
<h2 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h2><ul>
<li>图片Server</li>
<li>Redis集群</li>
<li>Solr集群</li>
<li>DB Server</li>
<li>Nginx Server</li>
<li>zheyi-manager</li>
<li>zheyi-portal</li>
<li>zheyi-sso</li>
<li>zheyi-search</li>
<li>zheyi-rest</li>
</ul>
<p>至少要10台VM。</p>
<h1 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h1><p>用Nginx来实现反向代理服务器。</p>
<h2 id="虚拟主机"><a href="#虚拟主机" class="headerlink" title="虚拟主机"></a>虚拟主机</h2><p>nginx支持三种类型的虚拟主机配置：</p>
<ol>
<li>基于ip的虚拟主机</li>
<li>基于域名的虚拟主机 </li>
<li>基于端口的虚拟主机<br>一般都用第3种方式来实现。<h2 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h2>而反向代理（Reverse Proxy）方式是指以代理服务器来接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器。</li>
</ol>
<p>配置：<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">upstream</span> manager.zheyi.com &#123;</span><br><span class="line">	<span class="title">server</span> <span class="number">192.168.22.135:8080</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title">upstream</span> rest.zheyi.com &#123;</span><br><span class="line">	<span class="title">server</span> <span class="number">192.168.22.136:8080</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title">upstream</span> search.zheyi.com &#123;</span><br><span class="line">	<span class="title">server</span> <span class="number">192.168.22.136:8081</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title">upstream</span> sso.zheyi.com &#123;</span><br><span class="line">	<span class="title">server</span> <span class="number">192.168.22.136:8082</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title">upstream</span> order.zheyi.com &#123;</span><br><span class="line">	<span class="title">server</span> <span class="number">192.168.22.136:8083</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title">upstream</span> www.zheyi.com &#123;</span><br><span class="line">	<span class="title">server</span> <span class="number">192.168.22.137:8080</span>;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="title">server</span> &#123;</span><br><span class="line">        <span class="title">listen</span>       <span class="number">80</span>;</span><br><span class="line">        <span class="title">server_name</span>  manager.zheyi.com;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">        <span class="title">location</span> / &#123;</span><br><span class="line">            <span class="title">proxy_pass</span>   <span class="url">http://manager.zheyi.com</span>;</span><br><span class="line">            <span class="title">index</span>  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title">server</span> &#123;</span><br><span class="line">        <span class="title">listen</span>       <span class="number">80</span>;</span><br><span class="line">        <span class="title">server_name</span>  rest.zheyi.com;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">        <span class="title">location</span> / &#123;</span><br><span class="line">            <span class="title">proxy_pass</span>   <span class="url">http://rest.zheyi.com</span>;</span><br><span class="line">            <span class="title">index</span>  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title">server</span> &#123;</span><br><span class="line">        <span class="title">listen</span>       <span class="number">80</span>;</span><br><span class="line">        <span class="title">server_name</span>  search.zheyi.com;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">        <span class="title">location</span> / &#123;</span><br><span class="line">            <span class="title">proxy_pass</span>   <span class="url">http://search.zheyi.com</span>;</span><br><span class="line">            <span class="title">index</span>  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title">server</span> &#123;</span><br><span class="line">        <span class="title">listen</span>       <span class="number">80</span>;</span><br><span class="line">        <span class="title">server_name</span>  sso.zheyi.com;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">        <span class="title">location</span> / &#123;</span><br><span class="line">            <span class="title">proxy_pass</span>   <span class="url">http://sso.zheyi.com</span>;</span><br><span class="line">            <span class="title">index</span>  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title">server</span> &#123;</span><br><span class="line">        <span class="title">listen</span>       <span class="number">80</span>;</span><br><span class="line">        <span class="title">server_name</span>  www.zheyi.com;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">        <span class="title">location</span> / &#123;</span><br><span class="line">            <span class="title">proxy_pass</span>   <span class="url">http://www.zheyi.com</span>;</span><br><span class="line">            <span class="title">index</span>  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h2><p>根据不同策略来实现。</p>
<h1 id="Tomcat热部署"><a href="#Tomcat热部署" class="headerlink" title="Tomcat热部署"></a>Tomcat热部署</h1><p>使用maven实现tomcat的热部署。</p>
<ol>
<li><p>在Tomcat中配置用户权限(conf/tomcat-user.xml)</p>
 <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">role</span> <span class="attribute">rolename</span>=<span class="value">"manager-gui"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">role</span> <span class="attribute">rolename</span>=<span class="value">"manager-script"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">user</span> <span class="attribute">username</span>=<span class="value">"tomcat"</span> <span class="attribute">password</span>=<span class="value">"tomcat"</span> <span class="attribute">roles</span>=<span class="value">"manager-gui, manager-script"</span>/&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>修改工程pom文件(build)</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">url</span>&gt;</span>http://$&#123;deploy server ip&#125;:8080/manager/text<span class="tag">&lt;/<span class="title">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">username</span>&gt;</span>tomcat<span class="tag">&lt;/<span class="title">username</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">password</span>&gt;</span>tomcat<span class="tag">&lt;/<span class="title">password</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>执行Maven Build，即可实现热部署。</p>
</li>
</ol>
<p>整个POC到此完工，明白了基本的开发流程和中间应用到的框架和工具。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java项目实战-SSO集成Portal]]></title>
      <url>http://izheyi.com/2018/07/28/Java%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-SSO%E9%9B%86%E6%88%90Portal/</url>
      <content type="html"><![CDATA[<h1 id="业务"><a href="#业务" class="headerlink" title="业务"></a>业务</h1><p>在Portal点击登录跳转到SSO登录页面，登录后，跳转到Portal首页。</p>
<h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><p>在Portal中需要从cookie中把token取出来。所以必须在登录成功后把token写入cookie，且cookie的值必须在系统之间能共享。<br>要在SsoService加上cookie:<br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">@Override</span><br><span class="line">	<span class="keyword">public</span> TaotaoResult userLogin(<span class="built_in">String</span> username, <span class="built_in">String</span> password, HttpServletRequest request, HttpServletResponse response) &#123;</span><br><span class="line">		TbUserExample example = <span class="literal">new</span> TbUserExample();</span><br><span class="line">		Criteria criteria = example<span class="built_in">.</span>createCriteria();</span><br><span class="line">		</span><br><span class="line">		<span class="comment">// username</span></span><br><span class="line">		criteria<span class="built_in">.</span>andUsernameEqualTo(username);</span><br><span class="line">		<span class="built_in">List</span>&lt;TbUser&gt; <span class="built_in">list</span> = userMapper<span class="built_in">.</span>selectByExample(example);</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">list</span> == <span class="built_in">null</span> <span class="subst">||</span> <span class="built_in">list</span><span class="built_in">.</span>size() == <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> TaotaoResult<span class="built_in">.</span>build(<span class="number">400</span>, <span class="string">"username or password wrong"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">// password</span></span><br><span class="line">		TbUser user = <span class="built_in">list</span><span class="built_in">.</span>get(<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">if</span> (<span class="subst">!</span>DigestUtils<span class="built_in">.</span>md5DigestAsHex(password<span class="built_in">.</span>getBytes())<span class="built_in">.</span><span class="keyword">equals</span>(user<span class="built_in">.</span>getPassword())) &#123;</span><br><span class="line">			<span class="keyword">return</span> TaotaoResult<span class="built_in">.</span>build(<span class="number">400</span>, <span class="string">"username or password wrong"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">// token</span></span><br><span class="line">		<span class="built_in">String</span> token = UUID<span class="built_in">.</span>randomUUID()<span class="built_in">.</span>toString();</span><br><span class="line">		</span><br><span class="line">		<span class="comment">// add redis</span></span><br><span class="line">		redisPool<span class="built_in">.</span><span class="built_in">set</span>(SSO_SESSION_KEY + <span class="string">":"</span> + token, JsonUtils<span class="built_in">.</span>objectToJson(user));</span><br><span class="line">		redisPool<span class="built_in">.</span>expire(SSO_SESSION_KEY + <span class="string">":"</span> + token, SSO_SESSION_EXPIRE);</span><br><span class="line">		</span><br><span class="line">		<span class="comment">// add cookie</span></span><br><span class="line">		CookieUtils<span class="built_in">.</span>setCookie(request, response, <span class="string">"Z_TOKEN"</span>, token);</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//return token</span></span><br><span class="line">		<span class="keyword">return</span> TaotaoResult<span class="built_in">.</span>ok(token);</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="拦截器"><a href="#拦截器" class="headerlink" title="拦截器"></a>拦截器</h1><p>Interceptor拦截器用于拦截Controller层接口，以下3个步骤实现：</p>
<ol>
<li>需要实现HandlerInterceptor接口。</li>
<li>实现拦截逻辑</li>
<li>需要在springmvc.xml中配置。</li>
</ol>
<h2 id="实现HandlerInterceptor接口"><a href="#实现HandlerInterceptor接口" class="headerlink" title="实现HandlerInterceptor接口"></a>实现HandlerInterceptor接口</h2><p>Service:<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">@<span class="type">Service</span></span><br><span class="line">public class <span class="type">UserServiceImpl</span> implements <span class="type">UserService</span> &#123;</span><br><span class="line">	</span><br><span class="line">	@<span class="type">Value</span>(<span class="string">"$&#123;SSO_BASE_URL&#125;"</span>)</span><br><span class="line">	public <span class="type">String</span> <span class="type">SSO_BASE_URL</span>;</span><br><span class="line">	@<span class="type">Value</span>(<span class="string">"$&#123;SSO_USER_TOKEN&#125;"</span>)</span><br><span class="line">	public <span class="type">String</span> <span class="type">SSO_USER_TOKEN</span>;</span><br><span class="line">	@<span class="type">Value</span>(<span class="string">"$&#123;SSO_USER_LOGIN&#125;"</span>)</span><br><span class="line">	public <span class="type">String</span> <span class="type">SSO_USER_LOGIN</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	@<span class="type">Override</span></span><br><span class="line">	public <span class="type">TbUser</span> getUserByToken(<span class="type">String</span> token) &#123;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="type">String</span> json = <span class="type">HttpClientUtil</span>.doGet(<span class="type">SSO_BASE_URL</span> + <span class="type">SSO_USER_TOKEN</span> + token);</span><br><span class="line">			<span class="type">TaotaoResult</span> <span class="literal">result</span> = <span class="type">TaotaoResult</span>.formatToPojo(json, <span class="type">TbUser</span>.class);</span><br><span class="line">			<span class="keyword">if</span> (<span class="literal">result</span>.getStatus() == <span class="number">200</span>) &#123;</span><br><span class="line">				<span class="type">TbUser</span> user = (<span class="type">TbUser</span>) <span class="literal">result</span>.getData();</span><br><span class="line">				<span class="keyword">return</span> user;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; catch (<span class="type">Exception</span> e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> null;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Interceptor:<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginInterceptor</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> UserServiceImpl userService;</span><br><span class="line"></span><br><span class="line">	<span class="annotation">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object <span class="keyword">handler</span>)</span></span><br><span class="line">			<span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">		<span class="comment">/// get token from cookie</span></span><br><span class="line">		String token = CookieUtils.getCookieValue(request, <span class="string">"Z_TOKEN"</span>);</span><br><span class="line">		</span><br><span class="line">		<span class="comment">// get user by token</span></span><br><span class="line">		TbUser user = userService.getUserByToken(token);</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">if</span> (user == <span class="keyword">null</span>) &#123;</span><br><span class="line">			response.sendRedirect(userService.SSO_BASE_URL + userService.SSO_USER_LOGIN </span><br><span class="line">					+ <span class="string">"?redirect="</span> + request.getRequestURI());</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>springmvc.xml:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 拦截器配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">mvc:interceptors</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">mvc:interceptor</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 拦截订单类请求 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">mvc:mapping</span> <span class="attribute">path</span>=<span class="value">"/item/**"</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">bean</span> <span class="attribute">class</span>=<span class="value">"com.izheyi.portal.interceptor.LoginInterceptor"</span>/&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">mvc:interceptor</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">mvc:interceptors</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><img src="/images/javaproject/interceptor.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java项目实战-SSO]]></title>
      <url>http://izheyi.com/2018/07/28/Java%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-SSO/</url>
      <content type="html"><![CDATA[<p>创建一个新工程zheyi-sso，要用到Redis和DB。</p>
<h1 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h1><p>在注册用户之前，要先检查注册的用户信息的正确性。</p>
<h2 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h2><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span><br><span class="line"> * check user date</span><br><span class="line"> * @see com.izheyi.sso.service.SsoService#checkUserData(java.lang.String, java.lang.Integer)</span><br><span class="line"> */</span></span><br><span class="line">@Override</span><br><span class="line"><span class="keyword">public</span> TaotaoResult checkUserData(<span class="built_in">String</span> content, <span class="built_in">Integer</span> <span class="keyword">type</span>) &#123;</span><br><span class="line">	TbUserExample userExample = <span class="literal">new</span> TbUserExample();</span><br><span class="line">	Criteria criteria = userExample<span class="built_in">.</span>createCriteria();</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> (<span class="keyword">type</span> == <span class="number">1</span>) &#123;</span><br><span class="line">		criteria<span class="built_in">.</span>andUsernameEqualTo(content);</span><br><span class="line">	&#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">type</span> == <span class="number">2</span>) &#123;</span><br><span class="line">		criteria<span class="built_in">.</span>andPhoneEqualTo(content);</span><br><span class="line">	&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">		criteria<span class="built_in">.</span>andEmailEqualTo(content);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">List</span>&lt;TbUser&gt; <span class="built_in">list</span> = userMapper<span class="built_in">.</span>selectByExample(userExample);</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">list</span> == <span class="built_in">null</span> <span class="subst">||</span> <span class="built_in">list</span><span class="built_in">.</span>size() == <span class="number">0</span>) &#123;</span><br><span class="line">		<span class="keyword">return</span> TaotaoResult<span class="built_in">.</span>ok(<span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> TaotaoResult<span class="built_in">.</span>ok(<span class="literal">false</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span><br><span class="line"> * create user</span><br><span class="line"> * @see com.izheyi.sso.service.SsoService#createUser(com.izheyi.pojo.TbUser)</span><br><span class="line"> */</span></span><br><span class="line">@Override</span><br><span class="line"><span class="keyword">public</span> TaotaoResult createUser(TbUser user) &#123;</span><br><span class="line">	user<span class="built_in">.</span>setCreated(<span class="literal">new</span> <span class="built_in">Date</span>());</span><br><span class="line">	user<span class="built_in">.</span>setUpdated(<span class="literal">new</span> <span class="built_in">Date</span>());</span><br><span class="line">	</span><br><span class="line">	user<span class="built_in">.</span>setPassword(DigestUtils<span class="built_in">.</span>md5DigestAsHex(user<span class="built_in">.</span>getPassword()<span class="built_in">.</span>getBytes()));</span><br><span class="line">	userMapper<span class="built_in">.</span>insert(user);</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> TaotaoResult<span class="built_in">.</span>ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h2><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">	 * check user data</span><br><span class="line">	 */</span><br><span class="line">	@<span class="type">RequestMapping</span>(<span class="string">"/check/&#123;param&#125;/&#123;type&#125;"</span>)</span><br><span class="line">	@<span class="type">ResponseBody</span></span><br><span class="line">	public <span class="type">Object</span> checkUserData(@<span class="type">PathVariable</span> <span class="type">String</span> param, @<span class="type">PathVariable</span> <span class="type">Integer</span> <span class="keyword">type</span>, <span class="type">String</span> callback) &#123;</span><br><span class="line">		</span><br><span class="line">		<span class="type">TaotaoResult</span> <span class="literal">result</span> = null;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="literal">result</span> = ssoService.checkUserData(param, <span class="keyword">type</span>);</span><br><span class="line">		&#125; catch (<span class="type">Exception</span> e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">if</span> (!<span class="type">StringUtils</span>.isBlank(callback)) &#123;</span><br><span class="line">			<span class="type">MappingJacksonValue</span> mappingJacksonValue = new <span class="type">MappingJacksonValue</span>(<span class="literal">result</span>);</span><br><span class="line">			mappingJacksonValue.setJsonpFunction(callback);</span><br><span class="line">			<span class="keyword">return</span> mappingJacksonValue;</span><br><span class="line">		&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	/*</span><br><span class="line">	 * create user</span><br><span class="line">	 */</span><br><span class="line">	@<span class="type">RequestMapping</span>(value=<span class="string">"/register"</span>, <span class="keyword">method</span>=<span class="type">RequestMethod</span>.<span class="type">POST</span>)</span><br><span class="line">	@<span class="type">ResponseBody</span></span><br><span class="line">	public <span class="type">TaotaoResult</span> createUser(<span class="type">TbUser</span> user) &#123;</span><br><span class="line">		<span class="type">TaotaoResult</span> <span class="literal">result</span> = null;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="literal">result</span> = ssoService.createUser(user);</span><br><span class="line">			</span><br><span class="line">		&#125; catch (<span class="type">Exception</span> e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<p><img src="/images/javaproject/sso_user_register.jpg" alt=""></p>
<h1 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h1><h2 id="Service-1"><a href="#Service-1" class="headerlink" title="Service"></a>Service</h2><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">@Override</span><br><span class="line">	<span class="keyword">public</span> TaotaoResult userLogin(<span class="built_in">String</span> username, <span class="built_in">String</span> password) &#123;</span><br><span class="line">		TbUserExample example = <span class="literal">new</span> TbUserExample();</span><br><span class="line">		Criteria criteria = example<span class="built_in">.</span>createCriteria();</span><br><span class="line">		</span><br><span class="line">		<span class="comment">// username</span></span><br><span class="line">		criteria<span class="built_in">.</span>andUsernameEqualTo(username);</span><br><span class="line">		<span class="built_in">List</span>&lt;TbUser&gt; <span class="built_in">list</span> = userMapper<span class="built_in">.</span>selectByExample(example);</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">list</span> == <span class="built_in">null</span> <span class="subst">||</span> <span class="built_in">list</span><span class="built_in">.</span>size() == <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> TaotaoResult<span class="built_in">.</span>build(<span class="number">400</span>, <span class="string">"username or password wrong"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">// password</span></span><br><span class="line">		TbUser user = <span class="built_in">list</span><span class="built_in">.</span>get(<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">if</span> (<span class="subst">!</span>DigestUtils<span class="built_in">.</span>md5DigestAsHex(password<span class="built_in">.</span>getBytes())<span class="built_in">.</span><span class="keyword">equals</span>(user<span class="built_in">.</span>getPassword())) &#123;</span><br><span class="line">			<span class="keyword">return</span> TaotaoResult<span class="built_in">.</span>build(<span class="number">400</span>, <span class="string">"username or password wrong"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">// token</span></span><br><span class="line">		<span class="built_in">String</span> token = UUID<span class="built_in">.</span>randomUUID()<span class="built_in">.</span>toString();</span><br><span class="line">		</span><br><span class="line">		<span class="comment">// add redis</span></span><br><span class="line">		redisPool<span class="built_in">.</span><span class="built_in">set</span>(SSO_SESSION_KEY + <span class="string">":"</span> + token, JsonUtils<span class="built_in">.</span>objectToJson(user));</span><br><span class="line">		redisPool<span class="built_in">.</span>expire(SSO_SESSION_KEY + <span class="string">":"</span> + token, SSO_SESSION_EXPIRE);</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//return token</span></span><br><span class="line">		<span class="keyword">return</span> TaotaoResult<span class="built_in">.</span>ok(token);</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Controller-1"><a href="#Controller-1" class="headerlink" title="Controller"></a>Controller</h2><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@<span class="type">RequestMapping</span>(value=<span class="string">"/login"</span>, <span class="keyword">method</span>=<span class="type">RequestMethod</span>.<span class="type">POST</span>)</span><br><span class="line">@<span class="type">ResponseBody</span></span><br><span class="line">public <span class="type">TaotaoResult</span> userLogin(<span class="type">String</span> username, <span class="type">String</span> password)&#123;</span><br><span class="line">	<span class="keyword">try</span> &#123;</span><br><span class="line">		<span class="type">TaotaoResult</span> <span class="literal">result</span> = ssoService.userLogin(username, password);</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">	&#125; catch (<span class="type">Exception</span> e) &#123;</span><br><span class="line">		e.printStackTrace();</span><br><span class="line">		<span class="keyword">return</span> <span class="type">TaotaoResult</span>.build(<span class="number">500</span>, <span class="type">ExceptionUtil</span>.getStackTrace(e));</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="/images/javaproject/sso_user_login.jpg" alt=""></p>
<h1 id="查询用户-By-Token"><a href="#查询用户-By-Token" class="headerlink" title="查询用户 By Token"></a>查询用户 By Token</h1><h2 id="Service-2"><a href="#Service-2" class="headerlink" title="Service"></a>Service</h2><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">@<span class="type">Override</span></span><br><span class="line">public <span class="type">TaotaoResult</span> getUserByToken(<span class="type">String</span> token) &#123;</span><br><span class="line">	<span class="type">String</span> <span class="literal">result</span> = redisPool.get(<span class="type">SSO_SESSION_KEY</span> + <span class="string">":"</span> + token);</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> (<span class="type">StringUtils</span>.isBlank(<span class="literal">result</span>)) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="type">TaotaoResult</span>.build(<span class="number">400</span>, <span class="string">"session expired, please relogin"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	redisPool.expire(<span class="type">SSO_SESSION_KEY</span> + <span class="string">":"</span> + token, <span class="type">SSO_SESSION_EXPIRE</span>);</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> <span class="type">TaotaoResult</span>.ok(<span class="type">JsonUtils</span>.jsonToPojo(<span class="literal">result</span>, <span class="type">TbUser</span>.class));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Controller-2"><a href="#Controller-2" class="headerlink" title="Controller"></a>Controller</h2><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">@<span class="type">RequestMapping</span>(<span class="string">"/token/&#123;token&#125;"</span>)</span><br><span class="line">@<span class="type">ResponseBody</span></span><br><span class="line">public <span class="type">Object</span> getUserByToken(@<span class="type">PathVariable</span> <span class="type">String</span> token, <span class="type">String</span> callback) &#123;</span><br><span class="line">	<span class="type">TaotaoResult</span> <span class="literal">result</span> = null;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">try</span> &#123;</span><br><span class="line">		<span class="literal">result</span> = ssoService.getUserByToken(token);</span><br><span class="line">	&#125; catch (<span class="type">Exception</span> e) &#123;</span><br><span class="line">		e.printStackTrace();</span><br><span class="line">		<span class="literal">result</span> = <span class="type">TaotaoResult</span>.build(<span class="number">500</span>, <span class="type">ExceptionUtil</span>.getStackTrace(e));</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> (!<span class="type">StringUtils</span>.isBlank(callback)) &#123;</span><br><span class="line">		<span class="type">MappingJacksonValue</span> mappingJacksonValue = new <span class="type">MappingJacksonValue</span>(<span class="literal">result</span>);</span><br><span class="line">		mappingJacksonValue.setJsonpFunction(callback);</span><br><span class="line">		<span class="keyword">return</span> mappingJacksonValue;</span><br><span class="line">	&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="/images/javaproject/sso_user_token.jpg" alt=""></p>
<h1 id="实现SSO功能"><a href="#实现SSO功能" class="headerlink" title="实现SSO功能"></a>实现SSO功能</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Controller</span></span><br><span class="line"><span class="annotation">@RequestMapping</span>(<span class="string">"/user"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@RequestMapping</span>(<span class="string">"/register"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">registerPage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">"register"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@RequestMapping</span>(<span class="string">"/login"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">loginPage</span><span class="params">(String redirect, Model model)</span> </span>&#123;</span><br><span class="line">		model.addAttribute(<span class="string">"redirect"</span>, redirect);</span><br><span class="line">		<span class="keyword">return</span> <span class="string">"login"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这，登录和注册的功能在SSO系统中完成，其他系统可调用。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java项目实战 - 展示商品详情页]]></title>
      <url>http://izheyi.com/2018/07/25/Java%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-%E5%B1%95%E7%A4%BA%E5%95%86%E5%93%81%E8%AF%A6%E6%83%85%E9%A1%B5/</url>
      <content type="html"><![CDATA[<h1 id="发布服务"><a href="#发布服务" class="headerlink" title="发布服务"></a>发布服务</h1><p>zheyi-rest实现：商品基本信息和描述的显示，并添加缓存。</p>
<h1 id="Dao"><a href="#Dao" class="headerlink" title="Dao"></a>Dao</h1><p>无。</p>
<h1 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h1><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ItemServiceImpl</span> <span class="keyword">implements</span> <span class="title">ItemService</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@Value</span>(<span class="string">"$&#123;REDIS_ITEM_KEY&#125;"</span>)</span><br><span class="line">	<span class="keyword">private</span> String REDIS_ITEM_KEY;</span><br><span class="line">	<span class="annotation">@Value</span>(<span class="string">"$&#123;REDIS_ITEM_EXPIRE&#125;"</span>)</span><br><span class="line">	<span class="keyword">private</span> Integer REDIS_ITEM_EXPIRE;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> TbItemMapper itemMapper;</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> TbItemDescMapper itemDescMapper;</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> RedisUtils redisUtils;</span><br><span class="line"></span><br><span class="line">	<span class="annotation">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="function">TaotaoResult <span class="title">getItemBasicInfo</span><span class="params">(<span class="keyword">long</span> itemId)</span> </span>&#123;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//get cache</span></span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			String cache = redisUtils.get(REDIS_ITEM_KEY + <span class="string">":"</span> + itemId + <span class="string">":basic"</span>);</span><br><span class="line">			<span class="keyword">if</span> (!StringUtils.isBlank(cache)) &#123;</span><br><span class="line">				TbItem item = JsonUtils.jsonToPojo(cache, TbItem.class);</span><br><span class="line">				<span class="function"><span class="keyword">return</span> TaotaoResult.<span class="title">ok</span><span class="params">(item)</span></span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">		TbItem item = itemMapper.selectByPrimaryKey(itemId);</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//add cache</span></span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			redisUtils.set(REDIS_ITEM_KEY + <span class="string">":"</span> + itemId + <span class="string">":basic"</span>, JsonUtils.objectToJson(item));</span><br><span class="line">			redisUtils.expire(REDIS_ITEM_KEY + <span class="string">":"</span> + itemId + <span class="string">":basic"</span>, REDIS_ITEM_EXPIRE);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="function"><span class="keyword">return</span> TaotaoResult.<span class="title">ok</span><span class="params">(item)</span></span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="annotation">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="function">TaotaoResult <span class="title">getItemDesc</span><span class="params">(<span class="keyword">long</span> itemId)</span> </span>&#123;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//get cache</span></span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			String cache = redisUtils.get(REDIS_ITEM_KEY + <span class="string">":"</span> + itemId + <span class="string">":desc"</span>);</span><br><span class="line">			<span class="keyword">if</span> (!StringUtils.isBlank(cache)) &#123;</span><br><span class="line">				</span><br><span class="line">				TbItemDesc itemDesc = JsonUtils.jsonToPojo(cache, TbItemDesc.class);</span><br><span class="line">				<span class="function"><span class="keyword">return</span> TaotaoResult.<span class="title">ok</span><span class="params">(itemDesc)</span></span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			<span class="comment">// <span class="doctag">TODO:</span> handle exception</span></span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		TbItemDesc itemDesc = itemDescMapper.selectByPrimaryKey(itemId);</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//add cache</span></span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			redisUtils.set(REDIS_ITEM_KEY + <span class="string">":"</span> + itemId + <span class="string">":desc"</span>, JsonUtils.objectToJson(itemDesc));</span><br><span class="line">			redisUtils.expire(REDIS_ITEM_KEY + <span class="string">":"</span> + itemId + <span class="string">":desc"</span>, REDIS_ITEM_EXPIRE);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="function"><span class="keyword">return</span> TaotaoResult.<span class="title">ok</span><span class="params">(itemDesc)</span></span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="Portal调用"><a href="#Portal调用" class="headerlink" title="Portal调用"></a>Portal调用</h1><p>zheyi-portal实现：当用户访问商品详情页面时，需要加载商品信息。</p>
<h1 id="Dao-1"><a href="#Dao-1" class="headerlink" title="Dao"></a>Dao</h1><p>需要添加POJO:<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">ItemInfo</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">TbItem</span>&#123;</span></span><br><span class="line">	</span><br><span class="line">	public <span class="type">String</span>[] getImages() &#123;</span><br><span class="line">		<span class="type">String</span> image = getImage();</span><br><span class="line">		<span class="keyword">if</span> (image != <span class="literal">null</span>) &#123;</span><br><span class="line">			<span class="type">String</span>[] images = image.split(<span class="string">","</span>);</span><br><span class="line">			<span class="keyword">return</span> images;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="Service-1"><a href="#Service-1" class="headerlink" title="Service"></a>Service</h1><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">@<span class="type">Service</span></span><br><span class="line">public class <span class="type">ItemServiceImpl</span> implements <span class="type">ItemService</span> &#123;</span><br><span class="line">	</span><br><span class="line">	@<span class="type">Value</span>(<span class="string">"$&#123;REST_BASE_URL&#125;"</span>)</span><br><span class="line">	private <span class="type">String</span> <span class="type">REST_BASE_URL</span>;</span><br><span class="line">	@<span class="type">Value</span>(<span class="string">"$&#123;ITEM_INFO&#125;"</span>)</span><br><span class="line">	private <span class="type">String</span> <span class="type">ITEM_INFO</span>;</span><br><span class="line">	@<span class="type">Value</span>(<span class="string">"$&#123;ITEM_DESC_URL&#125;"</span>)</span><br><span class="line">	private <span class="type">String</span> <span class="type">ITEM_DESC_URL</span>;</span><br><span class="line"></span><br><span class="line">	@<span class="type">Override</span></span><br><span class="line">	public <span class="type">ItemInfo</span> getItemById(<span class="type">Long</span> itemId) &#123;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="type">String</span> itemJson = <span class="type">HttpClientUtil</span>.doGet(<span class="type">REST_BASE_URL</span> + <span class="type">ITEM_INFO</span> + itemId);</span><br><span class="line">			<span class="keyword">if</span> (!<span class="type">StringUtils</span>.isBlank(itemJson)) &#123;</span><br><span class="line">				<span class="type">TaotaoResult</span> <span class="literal">result</span> = <span class="type">TaotaoResult</span>.formatToPojo(itemJson, <span class="type">ItemInfo</span>.class);</span><br><span class="line">				<span class="keyword">if</span> (<span class="literal">result</span>.getStatus() == <span class="number">200</span>) &#123;</span><br><span class="line">					<span class="type">ItemInfo</span> itemInfo = (<span class="type">ItemInfo</span>) <span class="literal">result</span>.getData();</span><br><span class="line">					<span class="keyword">return</span> itemInfo;</span><br><span class="line">				&#125;	</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; catch (<span class="type">Exception</span> e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> null;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	@<span class="type">Override</span></span><br><span class="line">	public <span class="type">String</span> getItemDescById(<span class="type">Long</span> itemId) &#123;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			//查询商品描述</span><br><span class="line">			<span class="type">String</span> json = <span class="type">HttpClientUtil</span>.doGet(<span class="type">REST_BASE_URL</span> + <span class="type">ITEM_DESC_URL</span> + itemId);</span><br><span class="line">			//转换成java对象</span><br><span class="line">			<span class="type">TaotaoResult</span> taotaoResult = <span class="type">TaotaoResult</span>.formatToPojo(json, <span class="type">TbItemDesc</span>.class);</span><br><span class="line">			<span class="keyword">if</span> (taotaoResult.getStatus() == <span class="number">200</span>) &#123;</span><br><span class="line">				<span class="type">TbItemDesc</span> itemDesc = (<span class="type">TbItemDesc</span>) taotaoResult.getData();</span><br><span class="line">				//取商品描述信息</span><br><span class="line">				<span class="type">String</span> <span class="literal">result</span> = itemDesc.getItemDesc();</span><br><span class="line">				<span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; catch (<span class="type">Exception</span> e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> null;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h1><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> ItemController &#123;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> ItemService itemService;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">@RequestMapping</span>(<span class="string">"/item/&#123;itemId&#125;"</span>)</span><br><span class="line">	<span class="keyword">public</span> String getItem(<span class="keyword">@PathVariable</span> Long itemId, Model model)&#123;</span><br><span class="line">		ItemInfo itemInfo = itemService.getItemById(itemId);</span><br><span class="line">		</span><br><span class="line">		model.addAttribute(<span class="string">"item"</span>, itemInfo);</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> <span class="string">"item"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">@RequestMapping</span>(value=<span class="string">"/item/desc/&#123;itemId&#125;"</span>, produces=MediaType.TEXT_HTML_VALUE+<span class="string">";charset=utf-8"</span>)</span><br><span class="line">	<span class="keyword">@ResponseBody</span></span><br><span class="line">	<span class="keyword">public</span> String getItemDesc(<span class="keyword">@PathVariable</span> Long itemId) &#123;</span><br><span class="line">		String <span class="built_in">string</span> = itemService.getItemDescById(itemId);</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">string</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="/images/javaproject/rest_item_detail_service.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java项目实战 - solr实现前端商品搜索]]></title>
      <url>http://izheyi.com/2018/07/22/Java%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-solr%E5%AE%9E%E7%8E%B0%E5%89%8D%E7%AB%AF%E5%95%86%E5%93%81%E6%90%9C%E7%B4%A2/</url>
      <content type="html"><![CDATA[<p>在zheyi-portal工程中实现。</p>
<h1 id="Dao"><a href="#Dao" class="headerlink" title="Dao"></a>Dao</h1><p>无。</p>
<h1 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h1><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">@<span class="type">Service</span></span><br><span class="line">public class <span class="type">SearchServiceImpl</span> implements <span class="type">SearchService</span> &#123;</span><br><span class="line">	</span><br><span class="line">	@<span class="type">Value</span>(<span class="string">"$&#123;SEARCH_BASE_URL&#125;"</span>)</span><br><span class="line">	private <span class="type">String</span> <span class="type">SEARCH_BASE_URL</span>;</span><br><span class="line"></span><br><span class="line">	@<span class="type">Override</span></span><br><span class="line">	public <span class="type">SearchResult</span> search(<span class="type">String</span> query, <span class="type">int</span> page) &#123;</span><br><span class="line">		<span class="type">Map</span>&lt;<span class="type">String</span>, <span class="type">String</span>&gt; param = new <span class="type">HashMap</span>&lt;&gt;();</span><br><span class="line">		param.put(<span class="string">"q"</span>, query);</span><br><span class="line">		param.put(<span class="string">"page"</span>, page + <span class="string">""</span>);</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="type">String</span> getString = <span class="type">HttpClientUtil</span>.doGet(<span class="type">SEARCH_BASE_URL</span>, param);</span><br><span class="line">			<span class="type">TaotaoResult</span> <span class="literal">result</span> = <span class="type">TaotaoResult</span>.formatToPojo(getString, <span class="type">SearchResult</span>.class);</span><br><span class="line">			<span class="keyword">if</span> (<span class="literal">result</span>.getStatus() == <span class="number">200</span>) &#123;</span><br><span class="line">				<span class="type">SearchResult</span> searchResult = (<span class="type">SearchResult</span>) <span class="literal">result</span>.getData();</span><br><span class="line">				<span class="keyword">return</span> searchResult;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; catch (<span class="type">Exception</span> e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> null;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Controller</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">SearchServiceController</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@Autowired</span></span><br><span class="line">	private SearchService searchService;</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@RequestMapping</span>(<span class="string">"/search"</span>)</span><br><span class="line">	public <span class="built_in">String</span> search(<span class="annotation">@RequestParam</span>(<span class="string">"q"</span>)<span class="built_in">String</span> query, <span class="annotation">@RequestParam</span>(defaultValue=<span class="string">"1"</span>)Integer page, </span><br><span class="line">			Model model) &#123;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">if</span> (query != <span class="keyword">null</span>) &#123;</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				query = <span class="keyword">new</span> <span class="built_in">String</span>(query.getBytes(<span class="string">"iso8859-1"</span>), <span class="string">"utf-8"</span>);</span><br><span class="line">			&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">		&#125;</span><br><span class="line">		SearchResult searchResult = searchService.search(query, page);</span><br><span class="line">		</span><br><span class="line">		model.addAttribute(<span class="string">"query"</span>, query);</span><br><span class="line">		model.addAttribute(<span class="string">"totalPages"</span>, searchResult.getTotalPageCount());</span><br><span class="line">		model.addAttribute(<span class="string">"itemList"</span>, searchResult.getItemList());</span><br><span class="line">		model.addAttribute(<span class="string">"page"</span>, page);</span><br><span class="line">	</span><br><span class="line">		<span class="keyword">return</span> <span class="string">"search"</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java项目实战 - solr发布搜索服务]]></title>
      <url>http://izheyi.com/2018/07/22/Java%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-solr%E5%8F%91%E5%B8%83%E6%90%9C%E7%B4%A2%E6%9C%8D%E5%8A%A1/</url>
      <content type="html"><![CDATA[<p>发布搜索服务供其它工程调用。</p>
<h1 id="Dao"><a href="#Dao" class="headerlink" title="Dao"></a>Dao</h1><p>要定义返回的POJO：<br><figure class="highlight zephir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SearchResult</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">List</span>&lt;Item&gt; itemList;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">long</span> totalItemCount;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">long</span> totalPageCount;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">long</span> currentPageNumber;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">long</span> currentRowCount;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>并实现Dao:<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Repository</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">SearchDaoImpl</span> <span class="keyword">implements</span> <span class="title">SearchDao</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@Autowired</span></span><br><span class="line">	private SolrServer solrServer;</span><br><span class="line"></span><br><span class="line">	<span class="annotation">@Override</span></span><br><span class="line">	public SearchResult search(SolrQuery query) throws Exception &#123;</span><br><span class="line">		<span class="comment">// return result</span></span><br><span class="line">		SearchResult resultList = <span class="keyword">new</span> SearchResult();</span><br><span class="line">		</span><br><span class="line">		<span class="comment">// solr search</span></span><br><span class="line">		QueryResponse response =  solrServer.query(query);</span><br><span class="line">		SolrDocumentList solrDocumentList = response.getResults();</span><br><span class="line">		</span><br><span class="line">		<span class="comment">// highlight</span></span><br><span class="line">		<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt;&gt;&gt; highlighting = response.getHighlighting();</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//get item list</span></span><br><span class="line">		<span class="built_in">List</span>&lt;Item&gt; itemList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">for</span> (SolrDocument solrDocument : solrDocumentList) &#123;</span><br><span class="line">			Item item = <span class="keyword">new</span> Item();</span><br><span class="line">			</span><br><span class="line">			item.setId((<span class="built_in">String</span>) solrDocument.<span class="literal">get</span>(<span class="string">"id"</span>));</span><br><span class="line">			<span class="comment">//get highlight</span></span><br><span class="line">			<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; list = highlighting.<span class="literal">get</span>(solrDocument.<span class="literal">get</span>(<span class="string">"id"</span>)).<span class="literal">get</span>(<span class="string">"item_title"</span>);</span><br><span class="line">			<span class="built_in">String</span> title = <span class="string">""</span>;</span><br><span class="line">			<span class="keyword">if</span>(list != <span class="keyword">null</span> &amp;&amp; list.size()&gt;<span class="number">0</span>)&#123;</span><br><span class="line">				title = list.<span class="literal">get</span>(<span class="number">0</span>);</span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">				title = (<span class="built_in">String</span>) solrDocument.<span class="literal">get</span>(<span class="string">"item_title"</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			item.setTitle(title);</span><br><span class="line">			item.setImage((<span class="built_in">String</span>) solrDocument.<span class="literal">get</span>(<span class="string">"item_image"</span>));</span><br><span class="line">			item.setPrice((long) solrDocument.<span class="literal">get</span>(<span class="string">"item_price"</span>));</span><br><span class="line">			item.setSell_point((<span class="built_in">String</span>) solrDocument.<span class="literal">get</span>(<span class="string">"item_sell_point"</span>));</span><br><span class="line">			item.setCategory_name((<span class="built_in">String</span>) solrDocument.<span class="literal">get</span>(<span class="string">"item_category_name"</span>));</span><br><span class="line">			</span><br><span class="line">			itemList.add(item);</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		resultList.setItemList(itemList);</span><br><span class="line">		</span><br><span class="line">		<span class="comment">// get total item number</span></span><br><span class="line">		resultList.setTotalItemCount(solrDocumentList.getNumFound());</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> resultList;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h1><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">@<span class="type">Service</span></span><br><span class="line">public class <span class="type">ServiceSearchImpl</span> implements <span class="type">SearchService</span> &#123;</span><br><span class="line">	</span><br><span class="line">	@<span class="type">Autowired</span></span><br><span class="line">	private <span class="type">SearchDao</span> searchDao;</span><br><span class="line"></span><br><span class="line">	@<span class="type">Override</span></span><br><span class="line">	public <span class="type">SearchResult</span> search(<span class="type">String</span> query, <span class="type">int</span> page, <span class="type">int</span> rows) throws <span class="type">Exception</span> &#123;</span><br><span class="line">		<span class="type">SolrQuery</span> solrQuery = new <span class="type">SolrQuery</span>();</span><br><span class="line">		</span><br><span class="line">		solrQuery.setQuery(query);</span><br><span class="line">		</span><br><span class="line">		solrQuery.setStart((page -<span class="number">1</span>) * rows);</span><br><span class="line">		solrQuery.setRows(rows);</span><br><span class="line">		</span><br><span class="line">		solrQuery.<span class="type">set</span>(<span class="string">"df"</span>, <span class="string">"item_keywords"</span>);</span><br><span class="line">		</span><br><span class="line">		solrQuery.setHighlight(<span class="literal">true</span>);</span><br><span class="line">		solrQuery.addHighlightField(<span class="string">"item_title"</span>);</span><br><span class="line">		solrQuery.setHighlightSimplePre(<span class="string">"&lt;em style=\"color:red\"&gt;"</span>);</span><br><span class="line">		solrQuery.setHighlightSimplePost(<span class="string">"&lt;/em&gt;"</span>);</span><br><span class="line">		</span><br><span class="line">		<span class="type">SearchResult</span> <span class="literal">result</span> = searchDao.search(solrQuery);</span><br><span class="line">		</span><br><span class="line">		long totalItemCount = <span class="literal">result</span>.getTotalItemCount();</span><br><span class="line">		long totalPageCount = totalItemCount / rows;</span><br><span class="line">		<span class="keyword">if</span> (totalItemCount % rows &gt; <span class="number">0</span>)&#123;</span><br><span class="line">			totalPageCount++;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="literal">result</span>.setTotalPageCount(totalPageCount);</span><br><span class="line">		<span class="literal">result</span>.setCurrentPageNumber(page);</span><br><span class="line">		<span class="literal">result</span>.setCurrentRowCount(rows);</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h1><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SearchServiceController</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> SearchService searchService;</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@RequestMapping</span>(value=<span class="string">"/query"</span>, method=RequestMethod.GET)</span><br><span class="line">	<span class="annotation">@ResponseBody</span></span><br><span class="line">	<span class="keyword">public</span> TaotaoResult search(<span class="annotation">@RequestParam</span>(<span class="string">"q"</span>)String query, </span><br><span class="line">			<span class="annotation">@RequestParam</span>(defaultValue=<span class="string">"1"</span>)Integer page,</span><br><span class="line">			<span class="annotation">@RequestParam</span>(defaultValue=<span class="string">"20"</span>)Integer rows)&#123;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//query is null</span></span><br><span class="line">		<span class="keyword">if</span>(StringUtils.isBlank(query))</span><br><span class="line">			<span class="function"><span class="keyword">return</span> TaotaoResult.<span class="title">build</span><span class="params">(<span class="number">400</span>, <span class="string">"Should contain query string"</span>)</span></span>;</span><br><span class="line">		</span><br><span class="line">		SearchResult searchResult = <span class="keyword">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			query = <span class="keyword">new</span> String(query.getBytes(<span class="string">"iso8859-1"</span>), <span class="string">"utf-8"</span>);</span><br><span class="line">			searchResult = searchService.search(query, page, rows);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="function"><span class="keyword">return</span> TaotaoResult.<span class="title">ok</span><span class="params">(searchResult)</span></span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="/images/javaproject/solr_search_service.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java项目实战 - solr导入索引库]]></title>
      <url>http://izheyi.com/2018/07/22/Java%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-solr%E5%AF%BC%E5%85%A5%E7%B4%A2%E5%BC%95%E5%BA%93/</url>
      <content type="html"><![CDATA[<p>实现：<br>使用java程序读取mysql数据库中的商品信息，然后创建solr文档对象，把商品信息写入索引库。</p>
<h1 id="Dao"><a href="#Dao" class="headerlink" title="Dao"></a>Dao</h1><p>多表查询，要创建相应的POJO和Mapper。<br>POJO:<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> class Item &#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">String</span> id;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">String</span> title;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">String</span> sell_point;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">long</span> price;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">String</span> <span class="built_in">image</span>;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">String</span> category_name;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">String</span> item_des;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Mapper:<br><figure class="highlight capnproto"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">interface</span> <span class="title">ItemMapper</span> </span>&#123;</span><br><span class="line">	<span class="built_in">List</span>&lt;Item&gt; getItemList();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<ul>
<li>xml<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="doctype">&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">mapper</span> <span class="attribute">namespace</span>=<span class="value">"com.izheyi.search.mapper.ItemMapper"</span> &gt;</span></span><br><span class="line">	</span><br><span class="line">	<span class="tag">&lt;<span class="title">select</span> <span class="attribute">id</span>=<span class="value">"getItemList"</span> <span class="attribute">resultType</span>=<span class="value">"com.izheyi.search.pojo.Item"</span>&gt;</span></span><br><span class="line">		SELECT</span><br><span class="line">			a.id,</span><br><span class="line">			a.title,</span><br><span class="line">			a.sell_point,</span><br><span class="line">			a.price,</span><br><span class="line">			a.image,</span><br><span class="line">			b. NAME category_name</span><br><span class="line">		FROM</span><br><span class="line">			tb_item a</span><br><span class="line">		LEFT JOIN tb_item_cat b ON a.cid = b.id</span><br><span class="line">	<span class="tag">&lt;/<span class="title">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Service</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">ItemServiceImpl</span> <span class="keyword">implements</span> <span class="title">ItemService</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@Autowired</span></span><br><span class="line">	private ItemMapper itemMapper;</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@Autowired</span></span><br><span class="line">	private SolrServer solrServer;</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@Override</span></span><br><span class="line">	public TaotaoResult importItemsToSolr() &#123;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			</span><br><span class="line">			<span class="comment">//查询商品列表</span></span><br><span class="line">			<span class="built_in">List</span>&lt;Item&gt; list = itemMapper.getItemList();</span><br><span class="line">			<span class="comment">//把商品信息写入索引库</span></span><br><span class="line">			<span class="keyword">for</span> (Item item : list) &#123;</span><br><span class="line">				<span class="comment">//创建一个SolrInputDocument对象</span></span><br><span class="line">				SolrInputDocument <span class="built_in">document</span> = <span class="keyword">new</span> SolrInputDocument();</span><br><span class="line">				<span class="built_in">document</span>.setField(<span class="string">"id"</span>, item.getId());</span><br><span class="line">				<span class="built_in">document</span>.setField(<span class="string">"item_title"</span>, item.getTitle());</span><br><span class="line">				<span class="built_in">document</span>.setField(<span class="string">"item_sell_point"</span>, item.getSell_point());</span><br><span class="line">				<span class="built_in">document</span>.setField(<span class="string">"item_price"</span>, item.getPrice());</span><br><span class="line">				<span class="built_in">document</span>.setField(<span class="string">"item_image"</span>, item.getImage());</span><br><span class="line">				<span class="built_in">document</span>.setField(<span class="string">"item_category_name"</span>, item.getCategory_name());</span><br><span class="line">				<span class="built_in">document</span>.setField(<span class="string">"item_desc"</span>, item.getItem_des());</span><br><span class="line">				<span class="comment">//写入索引库</span></span><br><span class="line">				solrServer.add(<span class="built_in">document</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">//提交修改</span></span><br><span class="line">			solrServer.commit();</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">			<span class="keyword">return</span> TaotaoResult.build(<span class="number">500</span>, ExceptionUtil.getStackTrace(e));</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> TaotaoResult.ok();</span><br><span class="line">	&#125;	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>需要配置applicationContext-solr.xml。</p>
<h1 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h1><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">@<span class="type">Controller</span></span><br><span class="line">@<span class="type">RequestMapping</span>(<span class="string">"/manager"</span>)</span><br><span class="line">public class <span class="type">ItemController</span> &#123;</span><br><span class="line">	</span><br><span class="line">	@<span class="type">Autowired</span> <span class="type">ItemService</span> itemService;</span><br><span class="line">	</span><br><span class="line">	@<span class="type">RequestMapping</span>(<span class="string">"/import"</span>)</span><br><span class="line">	@<span class="type">ResponseBody</span></span><br><span class="line">	public <span class="type">TaotaoResult</span> importItemsToSolr()&#123;</span><br><span class="line">		<span class="type">TaotaoResult</span> <span class="literal">result</span> = itemService.importItemsToSolr();</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="/images/javaproject/solr_import.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java项目实战 - solr安装与配置]]></title>
      <url>http://izheyi.com/2018/07/22/Java%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-solr%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<p>Solr是一个全文检索服务器，只需要进行配置就可以实现全文检索服务。</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><ol>
<li>前提，有JDK和Tomcat。</li>
<li>下载solr的安装包，解压，并把dist下的war包部署到Tomcat下。</li>
<li>解压war包。启动tomcat自动解压。</li>
<li>把solr/example/lib/ext目录下所有的jar包复制Tomcat下/webapps/solr/WEB-INF/lib/。</li>
<li>创建solrhome，把example/sor复制到/opt/solrhome。</li>
<li>配置solrhome，在/apache-tomcat-8.0.28/webapps/solr/WEB-INF/web.xml。</li>
<li>启动Tomcat。<br><img src="/images/javaproject/solr.jpg" alt=""></li>
</ol>
<h1 id="中文分析器IK-Analyzer"><a href="#中文分析器IK-Analyzer" class="headerlink" title="中文分析器IK-Analyzer"></a>中文分析器IK-Analyzer</h1><p>Solr中默认是没有中文分析器的，需要手工配置，配置一个FieldType，在FieldType中指定使用的中文分析器。</p>
<ol>
<li>下载包。</li>
<li>把中文分析器的jar复制到Tomcat下/webapps/solr/WEB-INF/lib/。</li>
<li>把IK Analyzer需要的扩展词典及停用词词典、配置文件复制到Tomcat下/webapps/solr/WEB-INF/classes。</li>
<li>在solrhome/collection1/conf/schema.xml中配置FileType。</li>
</ol>
<h1 id="配置业务域"><a href="#配置业务域" class="headerlink" title="配置业务域"></a>配置业务域</h1><p>就是配置要搜索的字段，和后续用到的字段。<br>业务系统Fileds：<br><figure class="highlight fsharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;field name=<span class="string">"item_title"</span> <span class="class"><span class="keyword">type</span></span>=<span class="string">"text_ik"</span> indexed=<span class="string">"true"</span> stored=<span class="string">"true"</span>/&gt;</span><br><span class="line">&lt;field name=<span class="string">"item_sell_point"</span> <span class="class"><span class="keyword">type</span></span>=<span class="string">"text_ik"</span> indexed=<span class="string">"true"</span> stored=<span class="string">"true"</span>/&gt;</span><br><span class="line">&lt;field name=<span class="string">"item_price"</span>  <span class="class"><span class="keyword">type</span></span>=<span class="string">"long"</span> indexed=<span class="string">"true"</span> stored=<span class="string">"true"</span>/&gt;</span><br><span class="line">&lt;field name=<span class="string">"item_image"</span> <span class="class"><span class="keyword">type</span></span>=<span class="string">"string"</span> indexed=<span class="string">"false"</span> stored=<span class="string">"true"</span> /&gt;</span><br><span class="line">&lt;field name=<span class="string">"item_category_name"</span> <span class="class"><span class="keyword">type</span></span>=<span class="string">"string"</span> indexed=<span class="string">"true"</span> stored=<span class="string">"true"</span> /&gt;</span><br><span class="line">&lt;field name=<span class="string">"item_desc"</span> <span class="class"><span class="keyword">type</span></span>=<span class="string">"text_ik"</span> indexed=<span class="string">"true"</span> stored=<span class="string">"false"</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;field name=<span class="string">"item_keywords"</span> <span class="class"><span class="keyword">type</span></span>=<span class="string">"text_ik"</span> indexed=<span class="string">"true"</span> stored=<span class="string">"false"</span> multiValued=<span class="string">"true"</span>/&gt;</span><br><span class="line">&lt;copyField source=<span class="string">"item_title"</span> dest=<span class="string">"item_keywords"</span>/&gt;</span><br><span class="line">&lt;copyField source=<span class="string">"item_sell_point"</span> dest=<span class="string">"item_keywords"</span>/&gt;</span><br><span class="line">&lt;copyField source=<span class="string">"item_category_name"</span> dest=<span class="string">"item_keywords"</span>/&gt;</span><br><span class="line">&lt;copyField source=<span class="string">"item_desc"</span> dest=<span class="string">"item_keywords"</span>/&gt;</span><br></pre></td></tr></table></figure></p>
<p><img src="/images/javaproject/solr_config.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java项目实战 - Redis缓存同步]]></title>
      <url>http://izheyi.com/2018/07/21/Java%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-Redis%E7%BC%93%E5%AD%98%E5%90%8C%E6%AD%A5/</url>
      <content type="html"><![CDATA[<p>缓存有个问题就是如果数据库表中的数据做了修改，缓存是需要同步的，否则查询的还是老数据，所有涉及增、删、改的操作都需要同步缓存。</p>
<p>我们创建一个rest服务供manager-service层调用。</p>
<h1 id="Redis-Service"><a href="#Redis-Service" class="headerlink" title="Redis Service"></a>Redis Service</h1><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisServiceImpl</span> <span class="keyword">implements</span> <span class="title">RedisService</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@Value</span>(<span class="string">"$&#123;CONTENT_KEY&#125;"</span>)</span><br><span class="line">	<span class="keyword">private</span> String CONTENT_KEY;</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> RedisUtils redisUtils;</span><br><span class="line"></span><br><span class="line">	<span class="annotation">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="function">TaotaoResult <span class="title">syncContent</span><span class="params">(<span class="keyword">long</span> contentCategoryId)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			redisUtils.hdel(CONTENT_KEY, contentCategoryId + <span class="string">""</span>);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			<span class="comment">// <span class="doctag">TODO:</span> handle exception</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="function"><span class="keyword">return</span> TaotaoResult.<span class="title">ok</span><span class="params">()</span></span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="Redis-Controller"><a href="#Redis-Controller" class="headerlink" title="Redis Controller"></a>Redis Controller</h1><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">@<span class="type">Controller</span></span><br><span class="line">@<span class="type">RequestMapping</span>(<span class="string">"/cache"</span>)</span><br><span class="line">public class <span class="type">RedisController</span> &#123;</span><br><span class="line">	</span><br><span class="line">	@<span class="type">Autowired</span></span><br><span class="line">	private <span class="type">RedisService</span> redisService;</span><br><span class="line">	</span><br><span class="line">	@<span class="type">RequestMapping</span>(<span class="string">"/content/&#123;contentCategoryId&#125;"</span>)</span><br><span class="line">	@<span class="type">ResponseBody</span></span><br><span class="line">	public <span class="type">TaotaoResult</span> syncContent(@<span class="type">PathVariable</span> long contentCategoryId) &#123;</span><br><span class="line">		<span class="type">TaotaoResult</span> <span class="literal">result</span> = redisService.syncContent(contentCategoryId);</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="Content-Service"><a href="#Content-Service" class="headerlink" title="Content Service"></a>Content Service</h1><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="function">TaotaoResult <span class="title">createContent</span><span class="params">(TbContent tbContent)</span> </span>&#123;</span><br><span class="line">	tbContent.setCreated(<span class="keyword">new</span> Date());</span><br><span class="line">	tbContent.setUpdated(<span class="keyword">new</span> Date());</span><br><span class="line">	</span><br><span class="line">	contentMapper.insert(tbContent);</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//添加缓存同步</span></span><br><span class="line">	<span class="keyword">try</span> &#123;</span><br><span class="line">		HttpClientUtil.doGet(REST_BASE_URL + REST_CONTENT_SYNC_URL + tbContent.getCategoryId());</span><br><span class="line">	&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">		e.printStackTrace();</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">return</span> TaotaoResult.<span class="title">ok</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="Verify"><a href="#Verify" class="headerlink" title="Verify"></a>Verify</h1><p>在后台添加一个Content，删除缓存。<br><img src="/images/javaproject/redis_result.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java项目实战 - Redis集成Spring]]></title>
      <url>http://izheyi.com/2018/07/21/Java%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-Redis%E9%9B%86%E6%88%90Spring/</url>
      <content type="html"><![CDATA[<p>一般只会在生产环境使用集群，而开发环境使用Redis单机版，所以我们在整合项目的时候，单机版和集群版都要有。</p>
<h1 id="Spring整合Redis"><a href="#Spring整合Redis" class="headerlink" title="Spring整合Redis"></a>Spring整合Redis</h1><p>创建一个接口，再编写单机版和集群版的实现类，使用spring进行管理，在部署时，使用哪种Redis，就切换那种实现类。</p>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>Interface:<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.izheyi.rest.redis;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> interface RedisUtils &#123;</span><br><span class="line">	<span class="keyword">String</span> <span class="built_in">set</span>(<span class="keyword">String</span> <span class="variable">key</span>, <span class="keyword">String</span> value);</span><br><span class="line">    <span class="keyword">String</span> <span class="built_in">get</span>(<span class="keyword">String</span> <span class="variable">key</span>);</span><br><span class="line">    Boolean exists(<span class="keyword">String</span> <span class="variable">key</span>);</span><br><span class="line">    Long expire(<span class="keyword">String</span> <span class="variable">key</span>, <span class="built_in">int</span> seconds);</span><br><span class="line">    Long ttl(<span class="keyword">String</span> <span class="variable">key</span>);</span><br><span class="line">    Long incr(<span class="keyword">String</span> <span class="variable">key</span>);</span><br><span class="line">    Long hset(<span class="keyword">String</span> <span class="variable">key</span>, <span class="keyword">String</span> field, <span class="keyword">String</span> value);</span><br><span class="line">    <span class="keyword">String</span> hget(<span class="keyword">String</span> <span class="variable">key</span>, <span class="keyword">String</span> field);</span><br><span class="line">    Long hdel(<span class="keyword">String</span> <span class="variable">key</span>, <span class="keyword">String</span>... field);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>单机版：<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">public class <span class="type">RedisPool</span> implements <span class="type">RedisUtils</span> &#123;</span><br><span class="line"></span><br><span class="line">	@<span class="type">Autowired</span></span><br><span class="line">    private <span class="type">JedisPool</span> jedisPool;</span><br><span class="line"></span><br><span class="line">    @<span class="type">Override</span></span><br><span class="line">    public <span class="type">String</span> <span class="type">set</span>(<span class="type">String</span> key, <span class="type">String</span> value) &#123;</span><br><span class="line">        <span class="type">Jedis</span> jedis = jedisPool.getResource();</span><br><span class="line">        <span class="type">String</span> <span class="literal">result</span> = jedis.<span class="type">set</span>(key, value);</span><br><span class="line">        jedis.close();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @<span class="type">Override</span></span><br><span class="line">    public <span class="type">String</span> get(<span class="type">String</span> key) &#123;</span><br><span class="line">        <span class="type">Jedis</span> jedis = jedisPool.getResource();</span><br><span class="line">        <span class="type">String</span> <span class="literal">result</span> = jedis.get(key);</span><br><span class="line">        jedis.close();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @<span class="type">Override</span></span><br><span class="line">    public <span class="type">Boolean</span> exists(<span class="type">String</span> key) &#123;</span><br><span class="line">        <span class="type">Jedis</span> jedis = jedisPool.getResource();</span><br><span class="line">        <span class="type">Boolean</span> <span class="literal">result</span> = jedis.exists(key);</span><br><span class="line">        jedis.close();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @<span class="type">Override</span></span><br><span class="line">    public <span class="type">Long</span> expire(<span class="type">String</span> key, <span class="type">int</span> seconds) &#123;</span><br><span class="line">        <span class="type">Jedis</span> jedis = jedisPool.getResource();</span><br><span class="line">        <span class="type">Long</span> <span class="literal">result</span> = jedis.expire(key, seconds);</span><br><span class="line">        jedis.close();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @<span class="type">Override</span></span><br><span class="line">    public <span class="type">Long</span> ttl(<span class="type">String</span> key) &#123;</span><br><span class="line">        <span class="type">Jedis</span> jedis = jedisPool.getResource();</span><br><span class="line">        <span class="type">Long</span> <span class="literal">result</span> = jedis.ttl(key);</span><br><span class="line">        jedis.close();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @<span class="type">Override</span></span><br><span class="line">    public <span class="type">Long</span> incr(<span class="type">String</span> key) &#123;</span><br><span class="line">        <span class="type">Jedis</span> jedis = jedisPool.getResource();</span><br><span class="line">        <span class="type">Long</span> <span class="literal">result</span> = jedis.incr(key);</span><br><span class="line">        jedis.close();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @<span class="type">Override</span></span><br><span class="line">    public <span class="type">Long</span> hset(<span class="type">String</span> key, <span class="type">String</span> field, <span class="type">String</span> value) &#123;</span><br><span class="line">        <span class="type">Jedis</span> jedis = jedisPool.getResource();</span><br><span class="line">        <span class="type">Long</span> <span class="literal">result</span> = jedis.hset(key, field, value);</span><br><span class="line">        jedis.close();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @<span class="type">Override</span></span><br><span class="line">    public <span class="type">String</span> hget(<span class="type">String</span> key, <span class="type">String</span> field) &#123;</span><br><span class="line">        <span class="type">Jedis</span> jedis = jedisPool.getResource();</span><br><span class="line">        <span class="type">String</span> <span class="literal">result</span> = jedis.hget(key, field);</span><br><span class="line">        jedis.close();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @<span class="type">Override</span></span><br><span class="line">    public <span class="type">Long</span> hdel(<span class="type">String</span> key, <span class="type">String</span>... field) &#123;</span><br><span class="line">        <span class="type">Jedis</span> jedis = jedisPool.getResource();</span><br><span class="line">        <span class="type">Long</span> <span class="literal">result</span> = jedis.hdel(key, field);</span><br><span class="line">        jedis.close();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>集群版：<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> class RedisCluster implements RedisUtils &#123;</span><br><span class="line"></span><br><span class="line">	@Autowired</span><br><span class="line">    <span class="keyword">private</span> JedisCluster jedisCluster;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">String</span> <span class="built_in">set</span>(<span class="keyword">String</span> <span class="variable">key</span>, <span class="keyword">String</span> value) &#123;</span><br><span class="line">        <span class="keyword">return</span> jedisCluster.<span class="built_in">set</span>(<span class="variable">key</span>, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">String</span> <span class="built_in">get</span>(<span class="keyword">String</span> <span class="variable">key</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> jedisCluster.<span class="built_in">get</span>(<span class="variable">key</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> Boolean exists(<span class="keyword">String</span> <span class="variable">key</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> jedisCluster.exists(<span class="variable">key</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> Long expire(<span class="keyword">String</span> <span class="variable">key</span>, <span class="built_in">int</span> seconds) &#123;</span><br><span class="line">        <span class="keyword">return</span> jedisCluster.expire(<span class="variable">key</span>, seconds);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> Long ttl(<span class="keyword">String</span> <span class="variable">key</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> jedisCluster.ttl(<span class="variable">key</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> Long incr(<span class="keyword">String</span> <span class="variable">key</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> jedisCluster.incr(<span class="variable">key</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> Long hset(<span class="keyword">String</span> <span class="variable">key</span>, <span class="keyword">String</span> field, <span class="keyword">String</span> value) &#123;</span><br><span class="line">        <span class="keyword">return</span> jedisCluster.hset(<span class="variable">key</span>, field, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">String</span> hget(<span class="keyword">String</span> <span class="variable">key</span>, <span class="keyword">String</span> field) &#123;</span><br><span class="line">        <span class="keyword">return</span> jedisCluster.hget(<span class="variable">key</span>, field);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> Long hdel(<span class="keyword">String</span> <span class="variable">key</span>, <span class="keyword">String</span>... field) &#123;</span><br><span class="line">        <span class="keyword">return</span> jedisCluster.hdel(<span class="variable">key</span>, field);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="applicationContext-redis-xml"><a href="#applicationContext-redis-xml" class="headerlink" title="applicationContext-redis.xml"></a>applicationContext-redis.xml</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 两种方案：使用jedis连接池(单机版)和jedis集群 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 一般生产环境使用集群，开发环境使用单机版 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 使用哪种，可以将另一种注释掉 --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 单机版 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置jedis连接池 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">bean</span> <span class="attribute">class</span>=<span class="value">"redis.clients.jedis.JedisPool"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">constructor-arg</span> <span class="attribute">name</span>=<span class="value">"host"</span> <span class="attribute">value</span>=<span class="value">"$&#123;redis.host&#125;"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">constructor-arg</span> <span class="attribute">name</span>=<span class="value">"port"</span> <span class="attribute">value</span>=<span class="value">"$&#123;redis.port&#125;"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 集群版 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置jedis集群 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">bean</span> <span class="attribute">class</span>=<span class="value">"redis.clients.jedis.JedisCluster"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">constructor-arg</span> <span class="attribute">name</span>=<span class="value">"nodes"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">set</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">bean</span> <span class="attribute">class</span>=<span class="value">"redis.clients.jedis.HostAndPort"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">constructor-arg</span> <span class="attribute">name</span>=<span class="value">"host"</span> <span class="attribute">value</span>=<span class="value">"$&#123;cluster.host1&#125;"</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">constructor-arg</span> <span class="attribute">name</span>=<span class="value">"port"</span> <span class="attribute">value</span>=<span class="value">"$&#123;cluster.port1&#125;"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">bean</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">bean</span> <span class="attribute">class</span>=<span class="value">"redis.clients.jedis.HostAndPort"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">constructor-arg</span> <span class="attribute">name</span>=<span class="value">"host"</span> <span class="attribute">value</span>=<span class="value">"$&#123;cluster.host2&#125;"</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">constructor-arg</span> <span class="attribute">name</span>=<span class="value">"port"</span> <span class="attribute">value</span>=<span class="value">"$&#123;cluster.port2&#125;"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">bean</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">bean</span> <span class="attribute">class</span>=<span class="value">"redis.clients.jedis.HostAndPort"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">constructor-arg</span> <span class="attribute">name</span>=<span class="value">"host"</span> <span class="attribute">value</span>=<span class="value">"$&#123;cluster.host3&#125;"</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">constructor-arg</span> <span class="attribute">name</span>=<span class="value">"port"</span> <span class="attribute">value</span>=<span class="value">"$&#123;cluster.port3&#125;"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">bean</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">bean</span> <span class="attribute">class</span>=<span class="value">"redis.clients.jedis.HostAndPort"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">constructor-arg</span> <span class="attribute">name</span>=<span class="value">"host"</span> <span class="attribute">value</span>=<span class="value">"$&#123;cluster.host4&#125;"</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">constructor-arg</span> <span class="attribute">name</span>=<span class="value">"port"</span> <span class="attribute">value</span>=<span class="value">"$&#123;cluster.port4&#125;"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">bean</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">bean</span> <span class="attribute">class</span>=<span class="value">"redis.clients.jedis.HostAndPort"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">constructor-arg</span> <span class="attribute">name</span>=<span class="value">"host"</span> <span class="attribute">value</span>=<span class="value">"$&#123;cluster.host5&#125;"</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">constructor-arg</span> <span class="attribute">name</span>=<span class="value">"port"</span> <span class="attribute">value</span>=<span class="value">"$&#123;cluster.port5&#125;"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">bean</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">bean</span> <span class="attribute">class</span>=<span class="value">"redis.clients.jedis.HostAndPort"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">constructor-arg</span> <span class="attribute">name</span>=<span class="value">"host"</span> <span class="attribute">value</span>=<span class="value">"$&#123;cluster.host6&#125;"</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">constructor-arg</span> <span class="attribute">name</span>=<span class="value">"port"</span> <span class="attribute">value</span>=<span class="value">"$&#123;cluster.port6&#125;"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">bean</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">set</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">constructor-arg</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="添加到业务中"><a href="#添加到业务中" class="headerlink" title="添加到业务中"></a>添加到业务中</h1><p>缓存的添加不能影响正常的业务逻辑。</p>
<p>以首页大广告位的展示为例。在请求的时候如果有缓存，就直接响应；如果没有，就从DB中读取，并写入到缓存中，再响应。<br>对获得大广告位的Service进行修改：<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">public <span class="type">List</span>&lt;<span class="type">TbContent</span>&gt; getContentList(long contentCategoryId) &#123;</span><br><span class="line">		// 查询数据库之前，先查询缓存</span><br><span class="line">	    <span class="keyword">try</span> &#123;</span><br><span class="line">	        <span class="type">String</span> json = redisUtils.hget(<span class="type">CONTENT_KEY</span>, contentCategoryId + <span class="string">""</span>);</span><br><span class="line">	        // 判断是否命中缓存</span><br><span class="line">	        <span class="keyword">if</span> (<span class="type">StringUtils</span>.isNotBlank(json)) &#123;</span><br><span class="line">	            // 把这个json转换成<span class="type">List</span>集合</span><br><span class="line">	            <span class="type">List</span>&lt;<span class="type">TbContent</span>&gt; list = <span class="type">JsonUtils</span>.jsonToList(json, <span class="type">TbContent</span>.class);</span><br><span class="line">	            <span class="keyword">return</span> list;</span><br><span class="line">	        &#125;</span><br><span class="line">	    &#125; catch (<span class="type">Exception</span> e) &#123;</span><br><span class="line">	        e.printStackTrace();</span><br><span class="line">	    &#125;</span><br><span class="line">		</span><br><span class="line">		<span class="type">TbContentExample</span> example = new <span class="type">TbContentExample</span>();</span><br><span class="line">		<span class="type">Criteria</span> criteria = example.createCriteria();</span><br><span class="line">		criteria.andCategoryIdEqualTo(contentCategoryId);</span><br><span class="line">		</span><br><span class="line">		<span class="type">List</span>&lt;<span class="type">TbContent</span>&gt; <span class="literal">result</span> = contentMapper.selectByExample(example);</span><br><span class="line">		</span><br><span class="line">		// 添加缓存，并且不能影响正常业务逻辑</span><br><span class="line">	    <span class="keyword">try</span> &#123;</span><br><span class="line">	    	redisUtils.hset(<span class="type">CONTENT_KEY</span>, contentCategoryId + <span class="string">""</span>, <span class="type">JsonUtils</span>.objectToJson(<span class="literal">result</span>));</span><br><span class="line">	    &#125; catch (<span class="type">Exception</span> e) &#123;</span><br><span class="line">	        e.printStackTrace();</span><br><span class="line">	    &#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h1><p>刷新首页，检查redis缓存。<br><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; hget CONTENT_KEY 89</span><br><span class="line">(nil)</span><br><span class="line">127.0.0.1:6379&gt; hget CONTENT_KEY 89</span><br><span class="line">"<span class="special">[</span><span class="special">&#123;</span><span class="command">\"</span>id<span class="command">\"</span>:33,<span class="command">\"</span>categoryId<span class="command">\"</span>:89,<span class="command">\"</span>title<span class="command">\"</span>:<span class="command">\"</span>ad1<span class="command">\"</span>,<span class="command">\"</span>subTitle<span class="command">\"</span>:<span class="command">\"</span>ad1<span class="command">\"</span>,<span class="command">\"</span>titleDesc<span class="command">\"</span>:<span class="command">\"</span>ad1<span class="command">\"</span>,<span class="command">\"</span>url<span class="command">\"</span>:<span class="command">\"</span>http://google.com<span class="command">\"</span>,<span class="command">\"</span>pic<span class="command">\"</span>:<span class="command">\"</span>http://192.168.220.133/images/2018/07/18/c7ae33f0-1e56-451c-94b3-a7cc5dbd5101.jpg<span class="command">\"</span>,<span class="command">\"</span>pic2<span class="command">\"</span>:<span class="command">\"</span>http://192.168.220.133/images/2018/07/18/f7622208-d7df-4a95-b279-69e48c148fdf.jpg<span class="command">\"</span>,<span class="command">\"</span>created<span class="command">\"</span>:1531905943000,<span class="command">\"</span>updated<span class="command">\"</span>:1531905943000,<span class="command">\"</span>content<span class="command">\"</span>:null<span class="special">&#125;</span>,<span class="special">&#123;</span><span class="command">\"</span>id<span class="command">\"</span>:34,<span class="command">\"</span>categoryId<span class="command">\"</span>:89,<span class="command">\"</span>title<span class="command">\"</span>:<span class="command">\"</span>ad2<span class="command">\"</span>,<span class="command">\"</span>subTitle<span class="command">\"</span>:<span class="command">\"</span>ad2<span class="command">\"</span>,<span class="command">\"</span>titleDesc<span class="command">\"</span>:<span class="command">\"</span>ad2<span class="command">\"</span>,<span class="command">\"</span>url<span class="command">\"</span>:<span class="command">\"</span><span class="special">#</span><span class="command">\"</span>,<span class="command">\"</span>pic<span class="command">\"</span>:<span class="command">\"</span>http://192.168.220.133/images/2018/07/18/b83eae10-105e-4fa4-8b46-26f16114c11b.jpg<span class="command">\"</span>,<span class="command">\"</span>pic2<span class="command">\"</span>:<span class="command">\"</span>http://192.168.220.133/images/2018/07/18/7dec8ede-5fae-4e80-90cc-15a6a7781355.jpg<span class="command">\"</span>,<span class="command">\"</span>created<span class="command">\"</span>:1531905966000,<span class="command">\"</span>updated<span class="command">\"</span>:1531905966000,<span class="command">\"</span>content<span class="command">\"</span>:null<span class="special">&#125;</span>,<span class="special">&#123;</span><span class="command">\"</span>id<span class="command">\"</span>:35,<span class="command">\"</span>categoryId<span class="command">\"</span>:89,<span class="command">\"</span>title<span class="command">\"</span>:<span class="command">\"</span>ad3<span class="command">\"</span>,<span class="command">\"</span>subTitle<span class="command">\"</span>:<span class="command">\"</span>ad3<span class="command">\"</span>,<span class="command">\"</span>titleDesc<span class="command">\"</span>:<span class="command">\"</span>ad3<span class="command">\"</span>,<span class="command">\"</span>url<span class="command">\"</span>:<span class="command">\"</span>ad3<span class="command">\"</span>,<span class="command">\"</span>pic<span class="command">\"</span>:<span class="command">\"</span>http://192.168.220.133/images/2018/07/18/7adf566c-2967-4e99-9265-283244d3379d.jpg<span class="command">\"</span>,<span class="command">\"</span>pic2<span class="command">\"</span>:<span class="command">\"</span>http://192.168.220.133/images/2018/07/18/2381bf63-2b89-40ad-858c-498ea01e5abf.jpg<span class="command">\"</span>,<span class="command">\"</span>created<span class="command">\"</span>:1531905995000,<span class="command">\"</span>updated<span class="command">\"</span>:1531905995000,<span class="command">\"</span>content<span class="command">\"</span>:null<span class="special">&#125;</span><span class="special">]</span>"</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java项目实战 - Redis安装和集群搭建]]></title>
      <url>http://izheyi.com/2018/07/21/Java%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-Redis%E5%AE%89%E8%A3%85%E5%92%8C%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<h1 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h1><p>Redis是用C语言开发的一个开源的高性能键值对（key-value）数据库。它通过提供多种键值数据类型来适应不同场景下的存储需求，目前为止Redis支持的键值数据类型如下：</p>
<ul>
<li>字符串类型</li>
<li>散列类型</li>
<li>列表类型</li>
<li>集合类型</li>
<li>有序集合类型</li>
</ul>
<p>详细内容，参考：<a href="https://redis.io/" target="_blank" rel="external">Redis</a></p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>安装还是很简单的，如下：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ wget http:<span class="comment">//download.redis.io/releases/redis-4.0.10.tar.gz</span></span><br><span class="line">$ tar xzf redis-<span class="number">4.0</span><span class="number">.10</span>.tar.gz</span><br><span class="line">$ cd redis-<span class="number">4.0</span><span class="number">.10</span></span><br><span class="line">$ make</span><br></pre></td></tr></table></figure></p>
<h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><ol>
<li><p>直接启动</p>
 <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation redis-4.0.10]# src/redis-server </span><br><span class="line">9833:C 13 Jun 23:58:18.056 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo</span><br><span class="line">9833:C 13 Jun 23:58:18.056 # Redis version=4.0.10, bits=64, <span class="operator"><span class="keyword">commit</span>=<span class="number">00000000</span>, modified=<span class="number">0</span>, pid=<span class="number">9833</span>, just started</span><br><span class="line"><span class="number">9833</span>:<span class="keyword">C</span> <span class="number">13</span> Jun <span class="number">23</span>:<span class="number">58</span>:<span class="number">18.056</span> # <span class="keyword">Warning</span>: <span class="keyword">no</span> config <span class="keyword">file</span> specified, <span class="keyword">using</span> the <span class="keyword">default</span> config. <span class="keyword">In</span> <span class="keyword">order</span> <span class="keyword">to</span> specify a config <span class="keyword">file</span> <span class="keyword">use</span> src/redis-<span class="keyword">server</span> /<span class="keyword">path</span>/<span class="keyword">to</span>/redis.conf</span><br><span class="line"><span class="number">9833</span>:<span class="keyword">M</span> <span class="number">13</span> Jun <span class="number">23</span>:<span class="number">58</span>:<span class="number">18.058</span> * Increased maximum <span class="built_in">number</span> <span class="keyword">of</span> <span class="keyword">open</span> files <span class="keyword">to</span> <span class="number">10032</span> (it was originally <span class="keyword">set</span> <span class="keyword">to</span> <span class="number">1024</span>).</span><br><span class="line">                _._                                                  </span><br><span class="line">           _.-<span class="string">``</span>__ <span class="string">''</span>-._                                             </span><br><span class="line">      _.-<span class="string">``</span>    <span class="string">`.  `</span>_.  <span class="string">''</span>-._           Redis <span class="number">4.0</span><span class="number">.10</span> (<span class="number">00000000</span>/<span class="number">0</span>) <span class="number">64</span> <span class="built_in">bit</span></span><br><span class="line">  .-<span class="string">``</span> .-<span class="string">``</span><span class="string">`.  `</span><span class="string">``</span>\/    _.,_ <span class="string">''</span>-._                                   </span><br><span class="line"> (    <span class="string">'      ,       .-`  | `,    )     Running in standalone mode</span><br><span class="line"> |`-._`-...-` __...-.``-._|'</span><span class="string">` _.-'|     Port: 6379</span><br><span class="line"> |    `</span>-._   <span class="string">`._    /     _.-'    |     PID: 9833</span><br><span class="line">  `</span>-._    <span class="string">`-._  `</span>-./  _.-<span class="string">'    _.-'</span>                                   </span><br><span class="line"> |<span class="string">`-._`</span>-._    <span class="string">`-.__.-'    _.-'_.-'|                                  </span><br><span class="line"> |    `</span>-._<span class="string">`-._        _.-'_.-'    |           http://redis.io        </span><br><span class="line">  `</span>-._    <span class="string">`-._`</span>-.__.-<span class="string">'_.-'</span>    _.-<span class="string">'                                   </span><br><span class="line"> |`-._`-._    `-.__.-'</span>    _.-<span class="string">'_.-'</span>|                                  </span><br><span class="line"> |    <span class="string">`-._`</span>-._        _.-<span class="string">'_.-'</span>    |                                  </span><br><span class="line">  <span class="string">`-._    `</span>-._<span class="string">`-.__.-'_.-'    _.-'                                   </span><br><span class="line">      `</span>-._    <span class="string">`-.__.-'    _.-'                                       </span><br><span class="line">          `</span>-._        _.-<span class="string">'                                           </span><br><span class="line">              `-.__.-'</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>指定配置文件启动<br>把redis的解压缩目录的redis.conf文件复制一份到/usr/local/redis/bin目录下</p>
 <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation redis-<span class="number">4.0</span><span class="number">.10</span>]<span class="preprocessor"># src/redis-server redis.conf </span></span><br><span class="line"><span class="number">12033</span>:C <span class="number">14</span> Jun <span class="number">00</span>:<span class="number">15</span>:<span class="number">48.382</span> <span class="preprocessor"># oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo</span></span><br><span class="line"><span class="number">12033</span>:C <span class="number">14</span> Jun <span class="number">00</span>:<span class="number">15</span>:<span class="number">48.383</span> <span class="preprocessor"># Redis version=<span class="number">4.0</span><span class="number">.10</span>, bits=<span class="number">64</span>, commit=<span class="number">00000000</span>, modified=<span class="number">0</span>, pid=<span class="number">12033</span>, just started</span></span><br><span class="line"><span class="number">12033</span>:C <span class="number">14</span> Jun <span class="number">00</span>:<span class="number">15</span>:<span class="number">48.383</span> <span class="preprocessor"># Configuration loaded</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>验证</p>
 <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation redis-<span class="number">4.0</span><span class="number">.10</span>]<span class="preprocessor"># src/redis-cli </span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; <span class="built_in">set</span> a <span class="number">10</span></span><br><span class="line">OK</span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; get a</span><br><span class="line"><span class="string">"10"</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>关闭</p>
 <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation redis-<span class="number">4.0</span><span class="number">.10</span>]<span class="preprocessor"># src/redis-cli shutdown</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="集群搭建"><a href="#集群搭建" class="headerlink" title="集群搭建"></a>集群搭建</h1><h2 id="需要安装以下环境"><a href="#需要安装以下环境" class="headerlink" title="需要安装以下环境"></a>需要安装以下环境</h2><ul>
<li>ruby的环境：yum install ruby</li>
<li>rubygems组件：yum install rubygems</li>
<li>redis和ruby的接口：gem install redis</li>
</ul>
<h2 id="在同一台机器上搭建环境"><a href="#在同一台机器上搭建环境" class="headerlink" title="在同一台机器上搭建环境"></a>在同一台机器上搭建环境</h2><ol>
<li>在<code>/usr/local/</code>下创建文件夹redis-cluster</li>
<li><p>为每个实例创建一个文件夹，共6个</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation redis-cluster]<span class="preprocessor"># ls</span></span><br><span class="line"><span class="number">7001</span>  <span class="number">7002</span>  <span class="number">7003</span>  <span class="number">7004</span>  <span class="number">7005</span>  <span class="number">7006</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>把redis安装目录bin Copy到6个文件夹</p>
</li>
<li>修改每个实例<ol>
<li>Port 7001 - 7006</li>
<li>屏蔽限制本地访问,在bind 127.0.0.1之前加#</li>
<li>protected-mode后的yes改为no</li>
<li>daemonize后的no改为yes</li>
<li>去掉cluster-enabled前面的#</li>
<li>去掉cluster-node-timeout前面的#</li>
</ol>
</li>
<li>启动6个实例 - 可以建个脚本一并启动</li>
<li>验证启动 <figure class="highlight"><figcaption><span>redis-cluster]# ps -ef | grep redis</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root     24891     1  0 00:05 ?        00:00:00 ./redis-server 127.0.0.1:7001 [cluster]&#10;root     24896     1  0 00:05 ?        00:00:00 ./redis-server 127.0.0.1:7002 [cluster]&#10;root     24901     1  0 00:05 ?        00:00:00 ./redis-server 127.0.0.1:7003 [cluster]&#10;root     24906     1  0 00:05 ?        00:00:00 ./redis-server 127.0.0.1:7004 [cluster]&#10;root     24911     1  0 00:05 ?        00:00:00 ./redis-server 127.0.0.1:7005 [cluster]&#10;root     24913     1  0 00:05 ?        00:00:00 ./redis-server 127.0.0.1:7006 [cluster]&#10;root     24921 23221  0 00:05 pts/2    00:00:00 grep redis</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="创建集群"><a href="#创建集群" class="headerlink" title="创建集群"></a>创建集群</h2><ol>
<li><p>创建<br>把这个脚本（redis-trib.rb）从解压目录下复制到/usr/local/redis-cluster。</p>
 <figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation redis-cluster]# ./redis-trib.rb create --replicas <span class="number">1 10.24.33</span>.<span class="number">147:7001 10</span>.<span class="number">24.33.147:70</span><span class="number">02 10.24.33</span>.<span class="number">147:7003 10</span>.<span class="number">24.33.147:70</span><span class="number">04 10.24.33</span>.<span class="number">147:7005</span>  <span class="number">10.24.33.147</span>:7006</span><br><span class="line">&gt;&gt;&gt; Creating cluster</span><br><span class="line">&gt;&gt;&gt; Performing hash slots allocation on 6 nodes...</span><br><span class="line">Using 3 masters:</span><br><span class="line"><span class="number">10.24.33.147</span>:7001</span><br><span class="line"><span class="number">10.24.33.147</span>:7002</span><br><span class="line"><span class="number">10.24.33.147</span>:7003</span><br><span class="line">Adding replica <span class="number">10.24.33.147</span>:7005 to <span class="number">10.24.33.147</span>:7001</span><br><span class="line">Adding replica <span class="number">10.24.33.147</span>:7006 to <span class="number">10.24.33.147</span>:7002</span><br><span class="line">Adding replica <span class="number">10.24.33.147</span>:7004 to <span class="number">10.24.33.147</span>:7003</span><br><span class="line">&gt;&gt;&gt; Trying to optimize slaves allocation for anti-affinity</span><br><span class="line">[WARNING] Some slaves are in the same host as their master</span><br><span class="line">M: 6d9cab<span class="number">72763d1a1</span>fe85be<span class="number">04b6448998</span>b88ea<span class="number">18a2 10.24</span>.<span class="number">33.147:7001</span></span><br><span class="line">   slots:0-5460 (5461 slots) master</span><br><span class="line">M: c<span class="number">7693a9c9</span>e<span class="number">1189196481f65</span>153ed41ca9a6fe<span class="number">449 10.24</span>.<span class="number">33.147:7002</span></span><br><span class="line">   slots:<span class="number">5461-10922</span> (5462 slots) master</span><br><span class="line">M: e<span class="number">3c3977d52</span>165dcb<span class="number">589f59d16</span>a713888abdc<span class="number">0c56 10.24</span>.<span class="number">33.147:7003</span></span><br><span class="line">   slots:<span class="number">10923-16383</span> (5461 slots) master</span><br><span class="line">S: 089b61bc<span class="number">451920a7</span>a0cba<span class="number">996a4a43</span><span class="number">0b8a8805</span>c<span class="number">03 10.24.33</span>.<span class="number">147:7004</span></span><br><span class="line">   replicates e<span class="number">3c3977d52</span>165dcb<span class="number">589f59d16</span>a713888abdc0c56</span><br><span class="line">S: f<span class="number">3e9541424</span>af4fcad<span class="number">212456d2f5</span>ae<span class="number">5b6a35635</span><span class="number">25 10.24.33</span>.<span class="number">147:7005</span></span><br><span class="line">   replicates 6d9cab<span class="number">72763d1a1</span>fe85be<span class="number">04b6448998</span>b88ea18a2</span><br><span class="line">S: 0c16f9babaa8def8b721bcd<span class="number">82e43d9258</span>f<span class="number">3f68d9 10</span>.<span class="number">24.33.147:70</span>06</span><br><span class="line">   replicates c<span class="number">7693a9c9</span>e<span class="number">1189196481f65</span>153ed41ca9a6fe449</span><br><span class="line">Can I set the above configuration? (type 'yes' to accept): yes</span><br><span class="line">&gt;&gt;&gt; Nodes configuration updated</span><br><span class="line">&gt;&gt;&gt; Assign a different config epoch to each node</span><br><span class="line">&gt;&gt;&gt; Sending CLUSTER MEET messages to join the cluster</span><br><span class="line">Waiting for the cluster to join.....</span><br><span class="line">&gt;&gt;&gt; Performing Cluster Check (using node <span class="number">10.24.33.147</span>:7001)</span><br><span class="line">M: 6d9cab<span class="number">72763d1a1</span>fe85be<span class="number">04b6448998</span>b88ea<span class="number">18a2 10.24</span>.<span class="number">33.147:7001</span></span><br><span class="line">   slots:0-5460 (5461 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">S: f<span class="number">3e9541424</span>af4fcad<span class="number">212456d2f5</span>ae<span class="number">5b6a35635</span><span class="number">25 10.24.33</span>.<span class="number">147:7005</span></span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 6d9cab<span class="number">72763d1a1</span>fe85be<span class="number">04b6448998</span>b88ea18a2</span><br><span class="line">M: e<span class="number">3c3977d52</span>165dcb<span class="number">589f59d16</span>a713888abdc<span class="number">0c56 10.24</span>.<span class="number">33.147:7003</span></span><br><span class="line">   slots:<span class="number">10923-16383</span> (5461 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">S: 0c16f9babaa8def8b721bcd<span class="number">82e43d9258</span>f<span class="number">3f68d9 10</span>.<span class="number">24.33.147:70</span>06</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates c<span class="number">7693a9c9</span>e<span class="number">1189196481f65</span>153ed41ca9a6fe449</span><br><span class="line">S: 089b61bc<span class="number">451920a7</span>a0cba<span class="number">996a4a43</span><span class="number">0b8a8805</span>c<span class="number">03 10.24.33</span>.<span class="number">147:7004</span></span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates e<span class="number">3c3977d52</span>165dcb<span class="number">589f59d16</span>a713888abdc0c56</span><br><span class="line">M: c<span class="number">7693a9c9</span>e<span class="number">1189196481f65</span>153ed41ca9a6fe<span class="number">449 10.24</span>.<span class="number">33.147:7002</span></span><br><span class="line">   slots:<span class="number">5461-10922</span> (5462 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">[OK] All nodes agree about slots configuration.</span><br><span class="line">&gt;&gt;&gt; Check for open slots...</span><br><span class="line">&gt;&gt;&gt; Check slots coverage...</span><br><span class="line">[OK] All 16384 slots covered.</span><br></pre></td></tr></table></figure>
</li>
<li><p>验证</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation <span class="number">7001</span>]<span class="preprocessor"># redis-cli -h <span class="number">10.24</span><span class="number">.33</span><span class="number">.147</span> -p <span class="number">7001</span> -c</span></span><br><span class="line"><span class="number">10.24</span><span class="number">.33</span><span class="number">.147</span>:<span class="number">7001</span>&gt; CLUSTER NODES</span><br><span class="line">f3e9541424af4fcad212456d2f5ae5b6a3563525 <span class="number">10.24</span><span class="number">.33</span><span class="number">.147</span>:<span class="number">7005</span>@<span class="number">17005</span> slave <span class="number">6</span>d9cab72763d1a1fe85be04b6448998b88ea18a2 <span class="number">0</span> <span class="number">1528994341234</span> <span class="number">5</span> connected</span><br><span class="line">e3c3977d52165dcb589f59d16a713888abdc0c56 <span class="number">10.24</span><span class="number">.33</span><span class="number">.147</span>:<span class="number">7003</span>@<span class="number">17003</span> master - <span class="number">0</span> <span class="number">1528994340000</span> <span class="number">3</span> connected <span class="number">10923</span>-<span class="number">16383</span></span><br><span class="line"><span class="number">0</span>c16f9babaa8def8b721bcd82e43d9258f3f68d9 <span class="number">10.24</span><span class="number">.33</span><span class="number">.147</span>:<span class="number">7006</span>@<span class="number">17006</span> slave c7693a9c9e1189196481f65153ed41ca9a6fe449 <span class="number">0</span> <span class="number">1528994339000</span> <span class="number">6</span> connected</span><br><span class="line"><span class="number">6</span>d9cab72763d1a1fe85be04b6448998b88ea18a2 <span class="number">10.24</span><span class="number">.33</span><span class="number">.147</span>:<span class="number">7001</span>@<span class="number">17001</span> myself,master - <span class="number">0</span> <span class="number">1528994338000</span> <span class="number">1</span> connected <span class="number">0</span>-<span class="number">5460</span></span><br><span class="line"><span class="number">089</span>b61bc451920a7a0cba996a4a430b8a8805c03 <span class="number">10.24</span><span class="number">.33</span><span class="number">.147</span>:<span class="number">7004</span>@<span class="number">17004</span> slave e3c3977d52165dcb589f59d16a713888abdc0c56 <span class="number">0</span> <span class="number">1528994339221</span> <span class="number">4</span> connected</span><br><span class="line">c7693a9c9e1189196481f65153ed41ca9a6fe449 <span class="number">10.24</span><span class="number">.33</span><span class="number">.147</span>:<span class="number">7002</span>@<span class="number">17002</span> master - <span class="number">0</span> <span class="number">1528994340228</span> <span class="number">2</span> connected <span class="number">5461</span>-<span class="number">10922</span></span><br><span class="line"><span class="number">10.24</span><span class="number">.33</span><span class="number">.147</span>:<span class="number">7001</span>&gt; <span class="built_in">set</span> a <span class="number">100</span></span><br><span class="line">-&gt; Redirected to slot [<span class="number">15495</span>] located at <span class="number">10.24</span><span class="number">.33</span><span class="number">.147</span>:<span class="number">7003</span></span><br><span class="line">OK</span><br><span class="line"><span class="number">10.24</span><span class="number">.33</span><span class="number">.147</span>:<span class="number">7003</span>&gt; get a</span><br><span class="line"><span class="string">"100"</span></span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java项目实战 - 通过httpclient实现前后端调用]]></title>
      <url>http://izheyi.com/2018/07/20/Java%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-%E9%80%9A%E8%BF%87httpclient%E5%AE%9E%E7%8E%B0%E5%89%8D%E5%90%8E%E7%AB%AF%E8%B0%83%E7%94%A8/</url>
      <content type="html"><![CDATA[<p>实现效果：中间大广告显示<br><img src="/images/javaproject/httpclient.jpg" alt=""><br>实现前端系统获取后端系统提供的接口。zheyi-portal调用zheyi-rest调用zheyi-manager。</p>
<h1 id="Rest层"><a href="#Rest层" class="headerlink" title="Rest层"></a>Rest层</h1><p>在zheyi-rest工程下创建。<br>Service:<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">@<span class="type">Service</span></span><br><span class="line">public class <span class="type">ContentServiceImpl</span> implements <span class="type">ContentService</span> &#123;</span><br><span class="line">	</span><br><span class="line">	@<span class="type">Autowired</span></span><br><span class="line">	private <span class="type">TbContentMapper</span> contentMapper;</span><br><span class="line"></span><br><span class="line">	@<span class="type">Override</span></span><br><span class="line">	public <span class="type">List</span>&lt;<span class="type">TbContent</span>&gt; getContentList(long contentCategoryId) &#123;</span><br><span class="line">		<span class="type">TbContentExample</span> example = new <span class="type">TbContentExample</span>();</span><br><span class="line">		<span class="type">Criteria</span> criteria = example.createCriteria();</span><br><span class="line">		criteria.andCategoryIdEqualTo(contentCategoryId);</span><br><span class="line">		</span><br><span class="line">		<span class="type">List</span>&lt;<span class="type">TbContent</span>&gt; <span class="literal">result</span> = contentMapper.selectByExample(example);</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Controller:<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">@<span class="type">Controller</span></span><br><span class="line">@<span class="type">RequestMapping</span>(<span class="string">"/content"</span>)</span><br><span class="line">public class <span class="type">ContentServiceController</span> &#123;</span><br><span class="line">	</span><br><span class="line">	@<span class="type">Autowired</span></span><br><span class="line">	private <span class="type">ContentService</span> contentService;</span><br><span class="line">	</span><br><span class="line">	@<span class="type">RequestMapping</span>(<span class="string">"/list/&#123;contentCategoryId&#125;"</span>)</span><br><span class="line">	@<span class="type">ResponseBody</span></span><br><span class="line">	public <span class="type">TaotaoResult</span> getContentList(@<span class="type">PathVariable</span> long contentCategoryId)&#123;</span><br><span class="line">		<span class="type">List</span>&lt;<span class="type">TbContent</span>&gt; <span class="literal">result</span> = contentService.getContentList(contentCategoryId);</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> <span class="type">TaotaoResult</span>.ok(<span class="literal">result</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="httpclient"><a href="#httpclient" class="headerlink" title="httpclient"></a>httpclient</h1><p>HttpClient是Apache Jakarta Common下的子项目，用来提供高效的、最新的、功能丰富的支持HTTP协议的客户端编程工具包，并且它支持HTTP协议最新的版本和建议。<br>官网: <a href="http://hc.apache.org/" target="_blank" rel="external">httpclient</a></p>
<h1 id="Frontend层"><a href="#Frontend层" class="headerlink" title="Frontend层"></a>Frontend层</h1><p>在zheyi-portal，需要使用httpclient调用taotao-rest的服务。<br>Service:<br>返回一个json字符串。<br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">@Service</span><br><span class="line"><span class="keyword">public</span> class ContentServiceImpl implements ContentService &#123;</span><br><span class="line">	</span><br><span class="line">	@Value(<span class="string">"$&#123;REST_BASE_URL&#125;"</span>)</span><br><span class="line">	<span class="keyword">private</span> <span class="built_in">String</span> REST_BASE_URL;</span><br><span class="line">	@Value(<span class="string">"$&#123;REST_INDEX_AD_URL&#125;"</span>)</span><br><span class="line">	<span class="keyword">private</span> <span class="built_in">String</span> REST_INDEX_AD_URL;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	@Override</span><br><span class="line">	<span class="keyword">public</span> <span class="built_in">String</span> getContentList() &#123;</span><br><span class="line">		<span class="built_in">String</span> result = HttpClientUtil<span class="built_in">.</span>doGet(REST_BASE_URL + REST_INDEX_AD_URL);</span><br><span class="line">		TaotaoResult taotaoResult = TaotaoResult<span class="built_in">.</span>formatToList(result, TbContent<span class="built_in">.</span>class);</span><br><span class="line">		<span class="comment">//取内容列表</span></span><br><span class="line">		<span class="built_in">List</span>&lt;TbContent&gt; <span class="built_in">list</span> = (<span class="built_in">List</span>&lt;TbContent&gt;) taotaoResult<span class="built_in">.</span>getData();</span><br><span class="line">		<span class="built_in">List</span>&lt;<span class="built_in">Map</span>&gt; resultList = <span class="literal">new</span> ArrayList&lt;&gt;();</span><br><span class="line">			<span class="comment">//创建一个jsp页码要求的pojo列表</span></span><br><span class="line">		f<span class="subst">or</span> (TbContent tbContent : <span class="built_in">list</span>) &#123;</span><br><span class="line">			<span class="built_in">Map</span> <span class="built_in">map</span> = <span class="literal">new</span> HashMap&lt;&gt;();</span><br><span class="line">			<span class="built_in">map</span><span class="built_in">.</span>put(<span class="string">"src"</span>, tbContent<span class="built_in">.</span>getPic());</span><br><span class="line">			<span class="built_in">map</span><span class="built_in">.</span>put(<span class="string">"height"</span>, <span class="number">240</span>);</span><br><span class="line">			<span class="built_in">map</span><span class="built_in">.</span>put(<span class="string">"width"</span>, <span class="number">670</span>);</span><br><span class="line">			<span class="built_in">map</span><span class="built_in">.</span>put(<span class="string">"srcB"</span>, tbContent<span class="built_in">.</span>getPic2());</span><br><span class="line">			<span class="built_in">map</span><span class="built_in">.</span>put(<span class="string">"widthB"</span>, <span class="number">550</span>);</span><br><span class="line">			<span class="built_in">map</span><span class="built_in">.</span>put(<span class="string">"heightB"</span>, <span class="number">240</span>);</span><br><span class="line">			<span class="built_in">map</span><span class="built_in">.</span>put(<span class="string">"href"</span>, tbContent<span class="built_in">.</span>getUrl());</span><br><span class="line">			<span class="built_in">map</span><span class="built_in">.</span>put(<span class="string">"alt"</span>, tbContent<span class="built_in">.</span>getSubTitle());</span><br><span class="line">			resultList<span class="built_in">.</span>add(<span class="built_in">map</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> JsonUtils<span class="built_in">.</span>objectToJson(resultList);</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Controller:<br>返回一个逻辑视图。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HomeConrtoller</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> ContentService contentService;</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@RequestMapping</span>(<span class="string">"/index"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">home</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">		String adJson = contentService.getContentList();</span><br><span class="line">		model.addAttribute(<span class="string">"ad1"</span>, adJson);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java项目实战 - 前台工程搭建]]></title>
      <url>http://izheyi.com/2018/07/19/Java%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-%E5%89%8D%E5%8F%B0%E5%B7%A5%E7%A8%8B%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<p>把Service和Frontend分离，创建两个独立的war工程：</p>
<h1 id="zheyi-rest"><a href="#zheyi-rest" class="headerlink" title="zheyi-rest"></a>zheyi-rest</h1><p>要配置的项：</p>
<ul>
<li>Mybatis</li>
<li>Spring</li>
<li>Springmvc</li>
<li>web.xml<br><img src="/images/javaproject/rest_project_config.jpg" alt=""></li>
</ul>
<p>运行：<br><img src="/images/javaproject/rest_project.jpg" alt=""></p>
<h1 id="zheyi-portal"><a href="#zheyi-portal" class="headerlink" title="zheyi-portal"></a>zheyi-portal</h1><p>要配置的项：</p>
<ul>
<li>Spring</li>
<li>Springmvc</li>
<li>Jstl、jQuery</li>
<li>web.xml<br><img src="/images/javaproject/portal_project_config.jpg" alt=""></li>
</ul>
<p>添加前端相关静态资源。</p>
<p>运行：<br><img src="/images/javaproject/portal_project.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java项目实战 - CMS实现]]></title>
      <url>http://izheyi.com/2018/07/18/Java%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-CMS%E5%AE%9E%E7%8E%B0/</url>
      <content type="html"><![CDATA[<p>最终实现效果：<br><img src="/images/javaproject/cms.jpg" alt=""></p>
<h1 id="内容分类管理"><a href="#内容分类管理" class="headerlink" title="内容分类管理"></a>内容分类管理</h1><p>实现内容分类列表的展示和内容的添加功能。<br>Service:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ContentCategoryServiceImpl</span> <span class="keyword">implements</span> <span class="title">ContentCategoryService</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> TbContentCategoryMapper contentCategoryMapper;</span><br><span class="line"></span><br><span class="line">	<span class="annotation">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> List&lt;EasyUiTreeNode&gt; <span class="title">getContentCategoryList</span><span class="params">(<span class="keyword">long</span> parentId)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">		TbContentCategoryExample example = <span class="keyword">new</span> TbContentCategoryExample();</span><br><span class="line">		Criteria criteria = example.createCriteria();</span><br><span class="line">		criteria.andParentIdEqualTo(parentId);</span><br><span class="line">		</span><br><span class="line">		List&lt;TbContentCategory&gt; list = contentCategoryMapper.selectByExample(example);</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">		List&lt;EasyUiTreeNode&gt; resultList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">		<span class="keyword">for</span> (TbContentCategory tbContentCategory : list) &#123;</span><br><span class="line">			EasyUiTreeNode node = <span class="keyword">new</span> EasyUiTreeNode();</span><br><span class="line">			node.setId(tbContentCategory.getId());</span><br><span class="line">			node.setText(tbContentCategory.getName());</span><br><span class="line">			node.setState(tbContentCategory.getIsParent()?<span class="string">"closed"</span>:<span class="string">"open"</span>);</span><br><span class="line">			resultList.add(node);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> resultList;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="annotation">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> TaotaoResult <span class="title">createContentCategory</span><span class="params">(<span class="keyword">long</span> parentId, String name)</span> </span>&#123;</span><br><span class="line">		TbContentCategory contentCategory = <span class="keyword">new</span> TbContentCategory();</span><br><span class="line">		</span><br><span class="line">		contentCategory.setParentId(parentId);</span><br><span class="line">		contentCategory.setIsParent(<span class="keyword">false</span>);</span><br><span class="line">		contentCategory.setName(name);</span><br><span class="line">		contentCategory.setStatus(<span class="number">1</span>);</span><br><span class="line">		contentCategory.setSortOrder(<span class="number">1</span>);</span><br><span class="line">		contentCategory.setCreated(<span class="keyword">new</span> Date());</span><br><span class="line">		contentCategory.setUpdated(<span class="keyword">new</span> Date());</span><br><span class="line">		</span><br><span class="line">		contentCategoryMapper.insert(contentCategory);</span><br><span class="line">		</span><br><span class="line">		TbContentCategory parentCategory = contentCategoryMapper.selectByPrimaryKey(parentId);</span><br><span class="line">		<span class="keyword">if</span>(!parentCategory.getIsParent())&#123;</span><br><span class="line">			parentCategory.setIsParent(<span class="keyword">true</span>);</span><br><span class="line">			contentCategoryMapper.updateByPrimaryKey(parentCategory);</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> TaotaoResult.ok(contentCategory);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Controller:<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">@<span class="type">Controller</span></span><br><span class="line">@<span class="type">RequestMapping</span>(<span class="string">"/content/category"</span>)</span><br><span class="line">public class <span class="type">ContentCategoryController</span> &#123;</span><br><span class="line">	</span><br><span class="line">	@<span class="type">Autowired</span></span><br><span class="line">	private <span class="type">ContentCategoryService</span> contentCategoryService;</span><br><span class="line">	</span><br><span class="line">	@<span class="type">RequestMapping</span>(<span class="string">"/list"</span>)</span><br><span class="line">	@<span class="type">ResponseBody</span></span><br><span class="line">	public <span class="type">List</span>&lt;<span class="type">EasyUiTreeNode</span>&gt; getContentCategoryList(@<span class="type">RequestParam</span>(value=<span class="string">"id"</span>, defaultValue=<span class="string">"0"</span>)long parentId) &#123;</span><br><span class="line">		<span class="type">List</span>&lt;<span class="type">EasyUiTreeNode</span>&gt; <span class="literal">result</span> = contentCategoryService.getContentCategoryList(parentId);</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	@<span class="type">RequestMapping</span>(<span class="string">"/create"</span>)</span><br><span class="line">	@<span class="type">ResponseBody</span></span><br><span class="line">	public <span class="type">TaotaoResult</span> createContentCategory(long parentId, <span class="type">String</span> name)&#123;</span><br><span class="line">		<span class="type">TaotaoResult</span> <span class="literal">result</span> = contentCategoryService.createContentCategory(parentId, name);</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="内容管理"><a href="#内容管理" class="headerlink" title="内容管理"></a>内容管理</h1><p>实现内容列表的展示和内容的添加功能。<br>Service:<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">@<span class="type">Service</span></span><br><span class="line">public class <span class="type">ContentServiceImpl</span> implements <span class="type">ContentService</span> &#123;</span><br><span class="line">	</span><br><span class="line">	@<span class="type">Autowired</span></span><br><span class="line">	private <span class="type">TbContentMapper</span> contentMapper;</span><br><span class="line">	</span><br><span class="line">	@<span class="type">Override</span></span><br><span class="line">	public <span class="type">EasyUiDataGridResult</span> getContentList(long categoryId, <span class="type">int</span> page, <span class="type">int</span> rows) &#123;</span><br><span class="line">		<span class="type">TbContentExample</span> example = new <span class="type">TbContentExample</span>();</span><br><span class="line">		</span><br><span class="line">		<span class="type">PageHelper</span>.startPage(page, rows);</span><br><span class="line">		<span class="type">Criteria</span> criteria = example.createCriteria();</span><br><span class="line">		criteria.andCategoryIdEqualTo(categoryId);</span><br><span class="line">		</span><br><span class="line">		<span class="type">List</span>&lt;<span class="type">TbContent</span>&gt; list = contentMapper.selectByExample(example);</span><br><span class="line"></span><br><span class="line">		<span class="type">EasyUiDataGridResult</span> <span class="literal">result</span> = new <span class="type">EasyUiDataGridResult</span>();</span><br><span class="line">		<span class="literal">result</span>.setRows(list);</span><br><span class="line">		</span><br><span class="line">		<span class="type">PageInfo</span>&lt;<span class="type">TbContent</span>&gt; pageInfo = new <span class="type">PageInfo</span>&lt;&gt;(list);</span><br><span class="line">		<span class="literal">result</span>.setTotal(pageInfo.getTotal());</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	@<span class="type">Override</span></span><br><span class="line">	public <span class="type">TaotaoResult</span> createContent(<span class="type">TbContent</span> tbContent) &#123;</span><br><span class="line">		tbContent.setCreated(new <span class="type">Date</span>());</span><br><span class="line">		tbContent.setUpdated(new <span class="type">Date</span>());</span><br><span class="line">		</span><br><span class="line">		contentMapper.insert(tbContent);</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> <span class="type">TaotaoResult</span>.ok();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Controller:<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">@<span class="type">Controller</span></span><br><span class="line">@<span class="type">RequestMapping</span>(<span class="string">"/content"</span>)</span><br><span class="line">public class <span class="type">ContentController</span> &#123;</span><br><span class="line">	</span><br><span class="line">	@<span class="type">Autowired</span></span><br><span class="line">	private <span class="type">ContentService</span> contentService;</span><br><span class="line">	</span><br><span class="line">	@<span class="type">RequestMapping</span>(<span class="string">"/query/list"</span>)</span><br><span class="line">	@<span class="type">ResponseBody</span></span><br><span class="line">	public <span class="type">EasyUiDataGridResult</span> getContentList(long categoryId, <span class="type">int</span> page, <span class="type">int</span> rows)&#123;</span><br><span class="line">		<span class="type">EasyUiDataGridResult</span> <span class="literal">result</span> = contentService.getContentList(categoryId, page, rows);</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	@<span class="type">RequestMapping</span>(<span class="string">"/save"</span>)</span><br><span class="line">	@<span class="type">ResponseBody</span></span><br><span class="line">	public <span class="type">TaotaoResult</span> createContent(<span class="type">TbContent</span> tbContent)&#123;</span><br><span class="line">		<span class="type">TaotaoResult</span> <span class="literal">result</span> = contentService.createContent(tbContent);</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>逆向工程自动生成的insert方法不会自动帮我们给主键的值赋值，需要添加主键返回，在TbContentCategoryMapper.xml文件中做如下修改：</p>
<pre><code>&lt;insert id=&quot;insert&quot; parameterType=&quot;com.izheyi.pojo.TbContentCategory&quot; &gt;
      &lt;selectKey keyProperty=&quot;id&quot; resultType=&quot;long&quot; order=&quot;AFTER&quot;&gt;
          SELECT LAST_INSERT_ID()
      &lt;/selectKey&gt;
    insert into tb_content_category (id, parent_id, name, 
      status, sort_order, is_parent, 
      created, updated)
    values (#{id,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{sortOrder,jdbcType=INTEGER}, #{isParent,jdbcType=BIT}, 
      #{created,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP})
  &lt;/insert&gt;
  &lt;insert id=&quot;insertSelective&quot; parameterType=&quot;com.izheyi.pojo.TbContentCategory&quot; &gt;
      &lt;selectKey keyProperty=&quot;id&quot; resultType=&quot;long&quot; order=&quot;AFTER&quot;&gt;
          SELECT LAST_INSERT_ID()
      &lt;/selectKey&gt;
    insert into tb_content_category
    &lt;trim prefix=&quot;(&quot; suffix=&quot;)&quot; suffixOverrides=&quot;,&quot; &gt;
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java项目实战 - 实现商品添加]]></title>
      <url>http://izheyi.com/2018/07/17/Java%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-%E5%AE%9E%E7%8E%B0%E5%95%86%E5%93%81%E6%B7%BB%E5%8A%A0/</url>
      <content type="html"><![CDATA[<p>商品的添加不只添加基本的商品信息，还要添加商品描述信息。</p>
<h1 id="Dao"><a href="#Dao" class="headerlink" title="Dao"></a>Dao</h1><p>逆向工程已经实现了Mapper，不需要再做修改</p>
<h1 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h1><p>在ItemService中实现。<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="function">TaotaoResult <span class="title">createItem</span><span class="params">(TbItem item, String desc)</span> </span>&#123;</span><br><span class="line">		<span class="comment">// 补全字段</span></span><br><span class="line">		<span class="keyword">long</span> itemId = IDUtils.genItemId();</span><br><span class="line">		item.setId(itemId); <span class="comment">//id</span></span><br><span class="line">		item.setStatus((<span class="keyword">byte</span>) <span class="number">1</span>); <span class="comment">//商品状态，1-正常，2-下架，3-删除</span></span><br><span class="line">		item.setCreated(<span class="keyword">new</span> Date());</span><br><span class="line">		item.setUpdated(<span class="keyword">new</span> Date());</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//Add Item</span></span><br><span class="line">		itemMapper.insert(item);</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//Insert Desc</span></span><br><span class="line">		TaotaoResult result = insertItemDesc(itemId, desc);</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">return</span> TaotaoResult.<span class="title">ok</span><span class="params">()</span></span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">private</span> <span class="function">TaotaoResult <span class="title">insertItemDesc</span><span class="params">(Long itemId, String desc)</span></span>&#123;</span><br><span class="line">		TbItemDesc itemDesc = <span class="keyword">new</span> TbItemDesc();</span><br><span class="line">		itemDesc.setItemId(itemId);</span><br><span class="line">		itemDesc.setItemDesc(desc);</span><br><span class="line">		itemDesc.setCreated(<span class="keyword">new</span> Date());</span><br><span class="line">		itemDesc.setUpdated(<span class="keyword">new</span> Date());</span><br><span class="line">		itemDescMapper.insert(itemDesc);</span><br><span class="line">		</span><br><span class="line">		<span class="function"><span class="keyword">return</span> TaotaoResult.<span class="title">ok</span><span class="params">()</span></span>;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h1><p>在ItemServiceController中实现。<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@<span class="type">RequestMapping</span>(value = <span class="string">"/save"</span>, <span class="keyword">method</span> = <span class="type">RequestMethod</span>.<span class="type">POST</span>)</span><br><span class="line">	@<span class="type">ResponseBody</span></span><br><span class="line">	public <span class="type">TaotaoResult</span> createItem(<span class="type">TbItem</span> item, <span class="type">String</span> desc)&#123;</span><br><span class="line">		<span class="type">TaotaoResult</span> <span class="literal">result</span> = itemService.createItem(item, desc);</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="DB结果验证"><a href="#DB结果验证" class="headerlink" title="DB结果验证"></a>DB结果验证</h1><p>商品：<br><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT <span class="keyword">*</span> FROM `tb_item` where title='商务投资';</span><br><span class="line"></span><br><span class="line">+-----------------+----------+------------+-------+------+---------+-----------------------------------------------------------------------------------+-----+--------+---------------------+---------------------+</span><br><span class="line">|<span class="string"> id              </span>|<span class="string"> title    </span>|<span class="string"> sell_point </span>|<span class="string"> price </span>|<span class="string"> num  </span>|<span class="string"> barcode </span>|<span class="string"> image                                                                             </span>|<span class="string"> cid </span>|<span class="string"> status </span>|<span class="string"> created             </span>|<span class="string"> updated             </span>|</span><br><span class="line">+-----------------+----------+------------+-------+------+---------+-----------------------------------------------------------------------------------+-----+--------+---------------------+---------------------+</span><br><span class="line">|<span class="string"> 153156317952887 </span>|<span class="string"> 商务投资 </span>|<span class="string"> 商务投资   </span>|<span class="string"> 33300 </span>|<span class="string"> 4444 </span>|<span class="string"> 1241324 </span>|<span class="string"> http://192.168.220.133/images/2018/07/14/f93d15e9-2153-4d81-af0b-32fe26d63f01.png </span>|<span class="string">  13 </span>|<span class="string">      1 </span>|<span class="string"> 2018-07-14 18:13:00 </span>|<span class="string"> 2018-07-14 18:13:00 </span>|</span><br><span class="line">+-----------------+----------+------------+-------+------+---------+-----------------------------------------------------------------------------------+-----+--------+---------------------+---------------------+</span><br></pre></td></tr></table></figure></p>
<p>描述：<br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT * FROM <span class="code">`tb_item_desc`</span> where item<span class="emphasis">_id=153156317952887;</span><br><span class="line"></span><br><span class="line"></span><span class="header">+-----------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="header">---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">--------------------------------+---------------------+---------------------+</span></span><br><span class="line">| item<span class="emphasis">_id         | item_</span>desc</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="header">                                | created             | updated             |</span><br><span class="line">+-----------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="header">---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></span><br><span class="line">--------------------------------<span class="code">+---------------------+</span>---------------------+</span><br><span class="line">| 153156317952887 | &lt;p&gt;</span><br><span class="line"><span class="code">        &lt;span style="font-family:&amp;quot;background-color:#FFFFFF;"&gt;商务投资&lt;/span&gt;&lt;span style="font-family:&amp;quot;background-color:#FFFFFF;"&gt;商务投资&lt;/span&gt;&lt;span style="font-family:&amp;quot;background-color:#FFFFFF;"&gt;商务投资&lt;/span&gt;&lt;span style="font-fami</span></span><br><span class="line">y:&amp;quot;background-color:#FFFFFF;"&gt;商务投资&lt;/span&gt;&lt;span style="font-family:&amp;quot;background-color:#FFFFFF;"&gt;商务投资&lt;/span&gt;&lt;span style="font-family:&amp;quot;background-color:#FFFFFF;"&gt;&lt;/span&gt;&lt;span style="font-family:&amp;quot;background-color:#FFFFFF;"&gt;&lt;/s</span><br><span class="line">an&gt;&lt;span style="font-family:&amp;quot;background-color:#FFFFFF;"&gt;&lt;/span&gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;p&gt;</span><br><span class="line"><span class="code">        &lt;span style="font-family:&amp;quot;background-color:#FFFFFF;"&gt;&lt;img src="http://192.168.220.133/images/2018/07/14/c23109f3-c223-4ffc-b58f-b5d286114a4a.png" alt="" /&gt;&lt;br /&gt;</span></span><br><span class="line">&lt;/span&gt;</span><br><span class="line"><span class="header">&lt;/p&gt; | 2018-07-14 18:13:00 | 2018-07-14 18:13:00 |</span><br><span class="line">+-----------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="header">---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java项目实战 - 图片Server管理和图片上传]]></title>
      <url>http://izheyi.com/2018/07/16/Java%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-%E5%9B%BE%E7%89%87Server%E7%AE%A1%E7%90%86%E5%92%8C%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0/</url>
      <content type="html"><![CDATA[<p>要分布式的环境中，一般会配置一个专门的图片Server。</p>
<h1 id="图片服务器"><a href="#图片服务器" class="headerlink" title="图片服务器"></a>图片服务器</h1><ul>
<li>Nginx作为http服务</li>
<li>ftp上传图片 - linux自带：vsftpd。</li>
</ul>
<p>Nginx和vsftpd都需要安装配置，不做说明。</p>
<h1 id="配置信息"><a href="#配置信息" class="headerlink" title="配置信息"></a>配置信息</h1><h2 id="文件上传解析器"><a href="#文件上传解析器" class="headerlink" title="文件上传解析器"></a>文件上传解析器</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 定义文件上传解析器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">bean</span> <span class="attribute">id</span>=<span class="value">"multipartResolver"</span></span><br><span class="line">    <span class="attribute">class</span>=<span class="value">"org.springframework.web.multipart.commons.CommonsMultipartResolver"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 设定默认编码 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"defaultEncoding"</span> <span class="attribute">value</span>=<span class="value">"UTF-8"</span>&gt;</span><span class="tag">&lt;/<span class="title">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 设定文件上传的最大值5MB，5*1024*1024 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"maxUploadSize"</span> <span class="attribute">value</span>=<span class="value">"5242880"</span>&gt;</span><span class="tag">&lt;/<span class="title">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="创建公共Properties"><a href="#创建公共Properties" class="headerlink" title="创建公共Properties"></a>创建公共Properties</h2><p>在properties下创建resource.properties文件<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#FTP配置</span></span><br><span class="line"><span class="setting">FTP_IP=<span class="value"><span class="number">192.168</span>.<span class="number">220.133</span></span></span></span><br><span class="line"><span class="setting">FTP_PORT=<span class="value"><span class="number">21</span></span></span></span><br><span class="line"><span class="setting">FTP_USERNAME=<span class="value">ftpuser</span></span></span><br><span class="line"><span class="setting">FTP_PASSWORD=<span class="value">ftpuser</span></span></span><br><span class="line"><span class="setting">FTP_BASE_PATH=<span class="value">/home/ftpuser/www/images</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">#图片Several配置</span></span><br><span class="line"><span class="setting">IMAGE_BASE_PATH=<span class="value">http://<span class="number">192.168</span>.<span class="number">220.133</span>/images</span></span></span><br></pre></td></tr></table></figure></p>
<p>并修改<code>&lt;context:property-placeholder location=&quot;classpath:properties/db.properties&quot; /&gt;</code> to <code>&lt;context:property-placeholder location=&quot;classpath:properties/*.properties&quot; /&gt;</code></p>
<h1 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h1><p>封装了一个公共的File Upload的方法。</p>
<figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Service</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">PictureServiceImpl</span> <span class="keyword">implements</span> <span class="title">PictureService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//利用这种方式来取resource.properties的配置</span></span><br><span class="line">	<span class="annotation">@Value</span>(<span class="string">"<span class="subst">$&#123;FTP_IP&#125;</span>"</span>)</span><br><span class="line">	private <span class="built_in">String</span> FTP_IP;</span><br><span class="line">	<span class="annotation">@Value</span>(<span class="string">"<span class="subst">$&#123;FTP_PORT&#125;</span>"</span>)</span><br><span class="line">	private Integer FTP_PORT;</span><br><span class="line">	<span class="annotation">@Value</span>(<span class="string">"<span class="subst">$&#123;FTP_USERNAME&#125;</span>"</span>)</span><br><span class="line">	private <span class="built_in">String</span> FTP_USERNAME;</span><br><span class="line">	<span class="annotation">@Value</span>(<span class="string">"<span class="subst">$&#123;FTP_PASSWORD&#125;</span>"</span>)</span><br><span class="line">	private <span class="built_in">String</span> FTP_PASSWORD;</span><br><span class="line">	<span class="annotation">@Value</span>(<span class="string">"<span class="subst">$&#123;FTP_BASE_PATH&#125;</span>"</span>)</span><br><span class="line">	private <span class="built_in">String</span> FTP_BASE_PATH;</span><br><span class="line">	<span class="annotation">@Value</span>(<span class="string">"<span class="subst">$&#123;IMAGE_BASE_PATH&#125;</span>"</span>)</span><br><span class="line">	private <span class="built_in">String</span> IMAGE_BASE_PATH;</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="annotation">@Override</span></span><br><span class="line">	public <span class="built_in">Map</span> uploadPicture(MultipartFile uploadFile) &#123;</span><br><span class="line">		<span class="built_in">Map</span> resultMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="comment">// 生成新文件名</span></span><br><span class="line">			<span class="built_in">String</span> oldname = uploadFile.getOriginalFilename();</span><br><span class="line">			<span class="built_in">String</span> newname = UUID.randomUUID().toString();</span><br><span class="line">			newname = newname + oldname.substring(oldname.lastIndexOf(<span class="string">"."</span>));</span><br><span class="line">			</span><br><span class="line">			<span class="comment">//上传图片</span></span><br><span class="line">			<span class="built_in">String</span> filepath = <span class="keyword">new</span> <span class="built_in">DateTime</span>().toString(<span class="string">"/yyyy/MM/dd"</span>);</span><br><span class="line">			boolean result = FtpUtil.uploadFile(FTP_IP, FTP_PORT, FTP_USERNAME, FTP_PASSWORD, FTP_BASE_PATH, </span><br><span class="line">					filepath, newname, uploadFile.getInputStream());</span><br><span class="line">			<span class="keyword">if</span>(!result)&#123;</span><br><span class="line">				resultMap.put(<span class="string">"error"</span>, <span class="number">1</span>);</span><br><span class="line">				resultMap.put(<span class="string">"message"</span>, <span class="string">"File upload failed"</span>);</span><br><span class="line">				<span class="keyword">return</span> resultMap;</span><br><span class="line">			&#125;</span><br><span class="line">			resultMap.put(<span class="string">"error"</span>, <span class="number">0</span>);</span><br><span class="line">			resultMap.put(<span class="string">"url"</span>, IMAGE_BASE_PATH + filepath + <span class="string">"/"</span> + newname);</span><br><span class="line">			<span class="keyword">return</span> resultMap;</span><br><span class="line">			</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			resultMap.put(<span class="string">"error"</span>, <span class="number">1</span>);</span><br><span class="line">			resultMap.put(<span class="string">"message"</span>, <span class="string">"File upload failed"</span>);</span><br><span class="line">			<span class="keyword">return</span> resultMap;</span><br><span class="line">		&#125;		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h1><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@<span class="type">Controller</span></span><br><span class="line">public class <span class="type">PictureController</span> &#123;</span><br><span class="line">	</span><br><span class="line">	@<span class="type">Autowired</span></span><br><span class="line">	private <span class="type">PictureService</span> pictureService;</span><br><span class="line">	</span><br><span class="line">	@<span class="type">RequestMapping</span>(<span class="string">"/pic/upload"</span>)</span><br><span class="line">	@<span class="type">ResponseBody</span></span><br><span class="line">	public <span class="type">String</span> pictureUpload(<span class="type">MultipartFile</span> uploadFile)&#123;</span><br><span class="line">		<span class="type">Map</span> <span class="literal">result</span> = pictureService.uploadPicture(uploadFile);</span><br><span class="line">		<span class="keyword">return</span> <span class="type">JsonUtils</span>.objectToJson(<span class="literal">result</span>);//处理浏览器兼容性</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h1><p><img src="/images/javaproject/item_pic.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java项目实战 - 商品类目选择]]></title>
      <url>http://izheyi.com/2018/07/15/Java%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-%E5%95%86%E5%93%81%E7%B1%BB%E7%9B%AE%E9%80%89%E6%8B%A9/</url>
      <content type="html"><![CDATA[<h1 id="Dao"><a href="#Dao" class="headerlink" title="Dao"></a>Dao</h1><p>逆向工程已经实现了Mapper，不需要再做修改。</p>
<h1 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h1><p>接收parentId参数。<br>调用dao查询Tree节点，返回一个EasyUITreeNode支持的数据格式的Tree节点。<br>pojo:<br>把它放到izheyi-manager-common里，代码如下：<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> class EasyUiTreeNode &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">long</span> id;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">String</span> <span class="built_in">text</span>;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">long</span> getId() &#123;</span><br><span class="line">		<span class="keyword">return</span> id;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> setId(<span class="keyword">long</span> id) &#123;</span><br><span class="line">		<span class="keyword">this</span>.id = id;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">String</span> getText() &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">text</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> setText(<span class="keyword">String</span> <span class="built_in">text</span>) &#123;</span><br><span class="line">		<span class="keyword">this</span>.<span class="built_in">text</span> = <span class="built_in">text</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">String</span> getState() &#123;</span><br><span class="line">		<span class="keyword">return</span> state;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> setState(<span class="keyword">String</span> state) &#123;</span><br><span class="line">		<span class="keyword">this</span>.state = state;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">String</span> state;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>接口类：<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">ItemCategoryService</span> &#123;</span><br><span class="line">	</span><br><span class="line">	<span class="function">List&lt;EasyUiTreeNode&gt; <span class="title">getItemCategoryNode</span>(<span class="params"><span class="keyword">long</span> parentId</span>)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>实现类：<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">@<span class="type">Service</span></span><br><span class="line">public class <span class="type">ItemCategoryServiceImpl</span> implements <span class="type">ItemCategoryService</span> &#123;</span><br><span class="line">	@<span class="type">Autowired</span></span><br><span class="line">	private <span class="type">TbItemCatMapper</span> itemCategoryMapper;</span><br><span class="line"></span><br><span class="line">	@<span class="type">Override</span></span><br><span class="line">	public <span class="type">List</span>&lt;<span class="type">EasyUiTreeNode</span>&gt; getItemCategoryNode(long parentId) &#123;</span><br><span class="line">		// <span class="type">Search</span></span><br><span class="line">		<span class="type">TbItemCatExample</span> example = new <span class="type">TbItemCatExample</span>();</span><br><span class="line">		<span class="type">Criteria</span> criteria = example.createCriteria();</span><br><span class="line">		criteria.andParentIdEqualTo(parentId);</span><br><span class="line">		</span><br><span class="line">		//返回结果列表</span><br><span class="line">		<span class="type">List</span>&lt;<span class="type">TbItemCat</span>&gt; list = itemCategoryMapper.selectByExample(example);</span><br><span class="line">		</span><br><span class="line">		//转换成<span class="type">EasyUiTree</span></span><br><span class="line">		<span class="type">List</span>&lt;<span class="type">EasyUiTreeNode</span>&gt; <span class="literal">result</span> = new <span class="type">ArrayList</span>&lt;<span class="type">EasyUiTreeNode</span>&gt;();</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">TbItemCat</span> tbItemCat : list) &#123;</span><br><span class="line">			<span class="type">EasyUiTreeNode</span> node = new <span class="type">EasyUiTreeNode</span>();</span><br><span class="line">			node.setId(tbItemCat.getId());</span><br><span class="line">			node.setText(tbItemCat.getName());</span><br><span class="line">			node.setState(tbItemCat.getIsParent()?<span class="string">"closed"</span>:<span class="string">"open"</span>);</span><br><span class="line">			</span><br><span class="line">			<span class="literal">result</span>.add(node);	</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h1><p>接收页面传递过来的参数id。<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@<span class="type">Controller</span></span><br><span class="line">public class <span class="type">ItemCategoryController</span> &#123;</span><br><span class="line">	@<span class="type">Autowired</span></span><br><span class="line">	private <span class="type">ItemCategoryService</span> itemCategoryService;</span><br><span class="line">	</span><br><span class="line">	@<span class="type">RequestMapping</span>(<span class="string">"/item/cat/list"</span>)</span><br><span class="line">	@<span class="type">ResponseBody</span></span><br><span class="line">	public <span class="type">List</span>&lt;<span class="type">EasyUiTreeNode</span>&gt; getItemCategoryNode(@<span class="type">RequestParam</span>(value=<span class="string">"id"</span>, defaultValue=<span class="string">"0"</span>) long parentId)&#123;</span><br><span class="line">		</span><br><span class="line">		<span class="type">List</span>&lt;<span class="type">EasyUiTreeNode</span>&gt; <span class="literal">result</span> = itemCategoryService.getItemCategoryNode(parentId);</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h1><p><img src="/images/javaproject/item_cat_tree.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java项目实战 - JS跨域：jsonp]]></title>
      <url>http://izheyi.com/2018/07/15/Java%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-JS%E8%B7%A8%E5%9F%9F%EF%BC%9Ajsonp/</url>
      <content type="html"><![CDATA[<h1 id="Jsonp"><a href="#Jsonp" class="headerlink" title="Jsonp"></a>Jsonp</h1><p>ajax请求受同源策略影响，不允许进行跨域请求，而script标签src属性中的链接却可以访问跨域的js脚本，利用这个特性，服务端不再返回JSON格式的数据，而是返回一段调用某个函数的js代码，在src中进行了调用，这样实现了跨域。</p>
<h1 id="商品分类显示"><a href="#商品分类显示" class="headerlink" title="商品分类显示"></a>商品分类显示</h1><p>通过这个例子来验证跨域请求。</p>
<h2 id="Dao"><a href="#Dao" class="headerlink" title="Dao"></a>Dao</h2><p>逆向工程已经实现了Mapper，不需要再做修改。</p>
<h2 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h2><p>查询所有商品分类生成前台页面要求的json数据格式。返回一个pojo。<br>pojo:<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CategoryNode</span> &#123;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> String name;</span><br><span class="line">	<span class="keyword">public</span> String url;</span><br><span class="line">	<span class="keyword">public</span> List&lt;?&gt; item;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getName</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> name;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span>(<span class="params">String name</span>) </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.name = name;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getUrl</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> url;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUrl</span>(<span class="params">String url</span>) </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.url = url;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> List&lt;?&gt; getItem() &#123;</span><br><span class="line">		<span class="keyword">return</span> item;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setItem</span>(<span class="params">List&lt;?&gt; item</span>) </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.item = item;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>and<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CategoryResult</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">List</span><span class="preprocessor">&lt;?</span>&gt; data;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">List</span><span class="preprocessor">&lt;?</span>&gt; getData() &#123;</span><br><span class="line">		<span class="keyword">return</span> data;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> void setData(<span class="keyword">List</span><span class="preprocessor">&lt;?</span>&gt; data) &#123;</span><br><span class="line">		this.data = data;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>接口类：<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">ItemCategoryService</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="function">CategoryResult <span class="title">getItemCategoryList</span>(<span class="params"></span>)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>实现类：<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">@<span class="type">Service</span></span><br><span class="line">public class <span class="type">ItemCategoryServiceImpl</span> implements <span class="type">ItemCategoryService</span> &#123;</span><br><span class="line">	</span><br><span class="line">	@<span class="type">Autowired</span></span><br><span class="line">	private <span class="type">TbItemCatMapper</span> itemCatMapper;</span><br><span class="line">	</span><br><span class="line">	public <span class="type">CategoryResult</span> getItemCategoryList()&#123;</span><br><span class="line">		<span class="type">CategoryResult</span> <span class="literal">result</span> = new <span class="type">CategoryResult</span>();</span><br><span class="line">		<span class="literal">result</span>.setData(getCatetoryList(<span class="number">0</span>));</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	private <span class="type">List</span>&lt;?&gt; getCatetoryList(long parentId)&#123;</span><br><span class="line">		</span><br><span class="line">		<span class="type">TbItemCatExample</span> example = new <span class="type">TbItemCatExample</span>();</span><br><span class="line">		<span class="type">Criteria</span> criteria = example.createCriteria();</span><br><span class="line">		criteria.andParentIdEqualTo(parentId);</span><br><span class="line">		</span><br><span class="line">		<span class="type">List</span>&lt;<span class="type">TbItemCat</span>&gt;  list= itemCatMapper.selectByExample(example);</span><br><span class="line">		</span><br><span class="line">		<span class="type">List</span> resultList = new <span class="type">ArrayList</span>&lt;&gt;();</span><br><span class="line">		//向list中添加节点</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">TbItemCat</span> tbItemCat : list) &#123;</span><br><span class="line">			//判断是否为父节点</span><br><span class="line">			<span class="keyword">if</span> (tbItemCat.getIsParent()) &#123;</span><br><span class="line">				<span class="type">CategoryNode</span> catNode = new <span class="type">CategoryNode</span>();</span><br><span class="line">				<span class="keyword">if</span> (parentId == <span class="number">0</span>) &#123;</span><br><span class="line">					catNode.setName(<span class="string">"&lt;a href='/products/"</span>+tbItemCat.getId()+<span class="string">".html'&gt;"</span>+tbItemCat.getName()+<span class="string">"&lt;/a&gt;"</span>);</span><br><span class="line">				&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">					catNode.setName(tbItemCat.getName());</span><br><span class="line">				&#125;</span><br><span class="line">				catNode.setUrl(<span class="string">"/products/"</span>+tbItemCat.getId()+<span class="string">".html"</span>);</span><br><span class="line">				catNode.setItem(getCatetoryList(tbItemCat.getId()));</span><br><span class="line">				</span><br><span class="line">				resultList.add(catNode);</span><br><span class="line">			//如果是叶子节点</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				resultList.add(<span class="string">"/products/"</span>+tbItemCat.getId()+<span class="string">".html|"</span> + tbItemCat.getName());</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> resultList;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h2><p>接收页面传递过来的参数id。<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">@<span class="type">Controller</span></span><br><span class="line">public class <span class="type">ItemCategoryController</span> &#123;</span><br><span class="line">	</span><br><span class="line">	@<span class="type">Autowired</span></span><br><span class="line">	private <span class="type">ItemCategoryService</span> itemCategoryService;</span><br><span class="line"></span><br><span class="line">	@<span class="type">RequestMapping</span>(value=<span class="string">"/itemcat/list"</span>, </span><br><span class="line">			produces=<span class="type">MediaType</span>.<span class="type">APPLICATION_JSON_VALUE</span> + <span class="string">";charset=utf-8"</span>)</span><br><span class="line">	@<span class="type">ResponseBody</span></span><br><span class="line">	public <span class="type">String</span> getItemCatList(<span class="type">String</span> callback) &#123;</span><br><span class="line">		<span class="type">CategoryResult</span> catResult = itemCategoryService.getItemCategoryList();</span><br><span class="line">				</span><br><span class="line">		//把pojo转换成字符串</span><br><span class="line">		<span class="type">String</span> json = <span class="type">JsonUtils</span>.objectToJson(catResult);</span><br><span class="line">		//拼装返回值</span><br><span class="line">		<span class="type">String</span> <span class="literal">result</span> = callback + <span class="string">"("</span> + json + <span class="string">");"</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h1><p><img src="/images/javaproject/jsonp.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java项目实战 - 商品列表展示：with PageHelper]]></title>
      <url>http://izheyi.com/2018/07/15/Java%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-%E5%95%86%E5%93%81%E5%88%97%E8%A1%A8%E5%B1%95%E7%A4%BA%EF%BC%9Awith-PageHelper/</url>
      <content type="html"><![CDATA[<h1 id="Mybatis-PageHelper"><a href="#Mybatis-PageHelper" class="headerlink" title="Mybatis - PageHelper"></a>Mybatis - PageHelper</h1><p>Mybatis的一个插件，PageHelper，非常方便mybatis分页查询。详细请参见：<a href="https://pagehelper.github.io/" target="_blank" rel="external">PageHelper</a></p>
<p>使用方法：</p>
<ol>
<li>引入分页插件</li>
<li>配置拦截器插件<br>在SqlMapConfig.xml中配置插件。<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置分页插件 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">plugins</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">plugin</span> <span class="attribute">interceptor</span>=<span class="value">"com.github.pagehelper.PageHelper"</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 设置数据库类型 Oracle,Mysql,MariaDB,SQLite,Hsqldb,PostgreSQL六种数据库--&gt;</span>        </span><br><span class="line">        	<span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"dialect"</span> <span class="attribute">value</span>=<span class="value">"mysql"</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="title">plugin</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">plugins</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="Dao"><a href="#Dao" class="headerlink" title="Dao"></a>Dao</h1><p>逆向工程已经实现了Mapper，不需要再做修改。</p>
<h1 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h1><p>接收分页参数，一个是page一个是rows。<br>调用dao查询商品列表，返回一个EasyUIDataGrid支持的数据格式的商品列表。<br>pojo:<br>把它放到izheyi-manager-common里，代码如下：<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">EasyUiDataGridResult</span> &#123;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">long</span> total;</span><br><span class="line">	<span class="keyword">private</span> List&lt;?&gt; rows;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getTotal</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> total;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTotal</span>(<span class="params"><span class="keyword">long</span> total</span>) </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.total = total;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> List&lt;?&gt; getRows() &#123;</span><br><span class="line">		<span class="keyword">return</span> rows;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRows</span>(<span class="params">List&lt;?&gt; rows</span>) </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.rows = rows;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>接口类：<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">ItemService</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="function">EasyUiDataGridResult <span class="title">getItemList</span>(<span class="params"><span class="keyword">int</span> page, <span class="keyword">int</span> rows</span>)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>实现类：<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">@<span class="type">Service</span></span><br><span class="line">public class <span class="type">ItemServiceImpl</span> implements <span class="type">ItemService</span> &#123;</span><br><span class="line"></span><br><span class="line">	@<span class="type">Autowired</span></span><br><span class="line">	private <span class="type">TbItemMapper</span> itemMapper;</span><br><span class="line">	</span><br><span class="line">	@<span class="type">Override</span></span><br><span class="line">	public <span class="type">EasyUiDataGridResult</span> getItemList(<span class="type">int</span> page, <span class="type">int</span> rows) &#123;</span><br><span class="line">		//<span class="type">Search</span></span><br><span class="line">		<span class="type">TbItemExample</span> example = new <span class="type">TbItemExample</span>();</span><br><span class="line">		<span class="type">PageHelper</span>.startPage(page, rows);//分页</span><br><span class="line">		<span class="type">List</span>&lt;<span class="type">TbItem</span>&gt; list = itemMapper.selectByExample(example);</span><br><span class="line">		</span><br><span class="line">		//创建返回对象</span><br><span class="line">		<span class="type">EasyUiDataGridResult</span> <span class="literal">result</span> = new <span class="type">EasyUiDataGridResult</span>();</span><br><span class="line">		<span class="literal">result</span>.setRows(list);</span><br><span class="line">		</span><br><span class="line">		//总条数</span><br><span class="line">		<span class="type">PageInfo</span>&lt;<span class="type">TbItem</span>&gt; pageInfo = new <span class="type">PageInfo</span>&lt;&gt;(list);</span><br><span class="line">		<span class="literal">result</span>.setTotal(pageInfo.getTotal());</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h1><p>接收页面传递过来的参数page、rows。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ItemController</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> ItemService itemService;</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@RequestMapping</span>(<span class="string">"/item/list"</span>)</span><br><span class="line">	<span class="annotation">@ResponseBody</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> EasyUiDataGridResult <span class="title">getItemList</span><span class="params">(<span class="keyword">int</span> page, <span class="keyword">int</span> rows)</span></span>&#123;</span><br><span class="line">		EasyUiDataGridResult tbItem = itemService.getItemList(page, rows);</span><br><span class="line">		<span class="keyword">return</span> tbItem;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h1><p><img src="/images/javaproject/item_list.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java项目实战 - 打开后台管理页面]]></title>
      <url>http://izheyi.com/2018/07/15/Java%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-%E6%89%93%E5%BC%80%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E9%A1%B5%E9%9D%A2/</url>
      <content type="html"><![CDATA[<h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><p>需要把静态资源Copy到WEB-INF下。</p>
<p>在web.xml文件中定义的url拦截形式为“/”表示拦截所有的url请求，包括静态资源例如css、js等，需要在springmvc.xml中添加资源映射标签：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">mvc:resources</span> <span class="attribute">location</span>=<span class="value">"/WEB-INF/js/"</span> <span class="attribute">mapping</span>=<span class="value">"/js/**"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">mvc:resources</span> <span class="attribute">location</span>=<span class="value">"/WEB-INF/css/"</span> <span class="attribute">mapping</span>=<span class="value">"/css/**"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p>
<h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><p>在izheyi-manager-web工程下src/main/main下添加Controller。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">package</span> <span class="tag">com</span><span class="class">.izheyi</span><span class="class">.controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="tag">import</span> <span class="tag">org</span><span class="class">.springframework</span><span class="class">.stereotype</span><span class="class">.Controller</span>;</span><br><span class="line"><span class="tag">import</span> <span class="tag">org</span><span class="class">.springframework</span><span class="class">.web</span><span class="class">.bind</span><span class="class">.annotation</span><span class="class">.PathVariable</span>;</span><br><span class="line"><span class="tag">import</span> <span class="tag">org</span><span class="class">.springframework</span><span class="class">.web</span><span class="class">.bind</span><span class="class">.annotation</span><span class="class">.RequestMapping</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * This is for page controller</span><br><span class="line"> * @author yongfei.hu</span><br><span class="line"> *</span><br><span class="line"> */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">Controller</span></span><br><span class="line">public class PageController </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/*</span><br><span class="line">	 * Open homepage</span><br><span class="line">	 */</span></span><br><span class="line">	<span class="at_rule">@<span class="keyword">RequestMapping("/")</span></span><br><span class="line">	public String <span class="function">homePage</span>()</span>&#123;</span><br><span class="line">		<span class="tag">return</span> "<span class="tag">index</span>";</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">/*</span><br><span class="line">	 * Navigator to page</span><br><span class="line">	 */</span></span><br><span class="line">	<span class="at_rule">@<span class="keyword">RequestMapping("/&#123;page&#125;")</span></span><br><span class="line">	public String <span class="function">goToPage</span>(@PathVariable String page) </span>&#123;</span><br><span class="line">		<span class="tag">return</span> <span class="tag">page</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行打开页面：<br><img src="/images/javaproject/manager_verify.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java项目实战 - SSM整合：表现层]]></title>
      <url>http://izheyi.com/2018/07/14/Java%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-SSM%E6%95%B4%E5%90%88%EF%BC%9A%E8%A1%A8%E7%8E%B0%E5%B1%82/</url>
      <content type="html"><![CDATA[<h1 id="springmvc-xml"><a href="#springmvc-xml" class="headerlink" title="springmvc.xml"></a>springmvc.xml</h1><p>在izheyi-manager-web工程下src/main/resources，该spring文件夹下创建配置文件——springmvc.xml，内容如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">beans</span> <span class="attribute">xmlns</span>=<span class="value">"http://www.springframework.org/schema/beans"</span></span><br><span class="line">	<span class="attribute">xmlns:xsi</span>=<span class="value">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attribute">xmlns:p</span>=<span class="value">"http://www.springframework.org/schema/p"</span></span><br><span class="line">	<span class="attribute">xmlns:context</span>=<span class="value">"http://www.springframework.org/schema/context"</span></span><br><span class="line">	<span class="attribute">xmlns:mvc</span>=<span class="value">"http://www.springframework.org/schema/mvc"</span></span><br><span class="line">	<span class="attribute">xsi:schemaLocation</span>=<span class="value">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span><br><span class="line">        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd</span><br><span class="line">        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 掃描Controller --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">context:component-scan</span> <span class="attribute">base-package</span>=<span class="value">"com.izheyi.controller"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 配置注解驱动 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">mvc:annotation-driven</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 配置视图解析器 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">bean</span></span><br><span class="line">		<span class="attribute">class</span>=<span class="value">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"prefix"</span> <span class="attribute">value</span>=<span class="value">"/WEB-INF/jsp/"</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"suffix"</span> <span class="attribute">value</span>=<span class="value">".jsp"</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 资源映射 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">mvc:resources</span> <span class="attribute">location</span>=<span class="value">"/WEB-INF/css/"</span> <span class="attribute">mapping</span>=<span class="value">"/css/**"</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">mvc:resources</span> <span class="attribute">location</span>=<span class="value">"/WEB-INF/js/"</span> <span class="attribute">mapping</span>=<span class="value">"/js/**"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h1 id="web-xml"><a href="#web-xml" class="headerlink" title="web.xml"></a>web.xml</h1><p>在izheyi-manager-web工程下src/main/webapp，该WEB-INF文件夹下创建配置文件——web.xml，内容如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">web-app</span> <span class="attribute">xmlns:xsi</span>=<span class="value">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line">	<span class="attribute">xmlns</span>=<span class="value">"http://java.sun.com/xml/ns/javaee"</span> <span class="attribute">xmlns:web</span>=<span class="value">"http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"</span></span><br><span class="line">	<span class="attribute">xsi:schemaLocation</span>=<span class="value">"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"</span></span><br><span class="line">	<span class="attribute">id</span>=<span class="value">"taotao"</span> <span class="attribute">version</span>=<span class="value">"2.5"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">display-name</span>&gt;</span>taotao-manager<span class="tag">&lt;/<span class="title">display-name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">welcome-file-list</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">welcome-file</span>&gt;</span>index.html<span class="tag">&lt;/<span class="title">welcome-file</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">welcome-file</span>&gt;</span>index.htm<span class="tag">&lt;/<span class="title">welcome-file</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="title">welcome-file</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">welcome-file</span>&gt;</span>default.html<span class="tag">&lt;/<span class="title">welcome-file</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">welcome-file</span>&gt;</span>default.htm<span class="tag">&lt;/<span class="title">welcome-file</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">welcome-file</span>&gt;</span>default.jsp<span class="tag">&lt;/<span class="title">welcome-file</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">welcome-file-list</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 加载spring容器 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">context-param</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="title">param-name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">param-value</span>&gt;</span>classpath:spring/applicationContext-*.xml<span class="tag">&lt;/<span class="title">param-value</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">context-param</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">listener</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="title">listener-class</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">listener</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 解决post乱码 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">filter</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="title">filter-name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="title">filter-class</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">init-param</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="title">param-name</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">param-value</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="title">param-value</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="title">init-param</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">filter</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">filter-mapping</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="title">filter-name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="title">url-pattern</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- springmvc的前端控制器 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">servlet</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">servlet-name</span>&gt;</span>zheyi-manager<span class="tag">&lt;/<span class="title">servlet-name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="title">servlet-class</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- contextConfigLocation不是必须的， 如果不配置contextConfigLocation， springmvc的配置文件默认在：WEB-INF/servlet的name+"-servlet.xml" --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">init-param</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="title">param-name</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">param-value</span>&gt;</span>classpath:spring/springmvc.xml<span class="tag">&lt;/<span class="title">param-value</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="title">init-param</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="title">load-on-startup</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">servlet</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">servlet-mapping</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">servlet-name</span>&gt;</span>zheyi-manager<span class="tag">&lt;/<span class="title">servlet-name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="title">url-pattern</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><strong>实现在服务层初始化spring容器</strong></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java项目实战 - SSM整合：Service层]]></title>
      <url>http://izheyi.com/2018/07/14/Java%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-SSM%E6%95%B4%E5%90%88%EF%BC%9AServicd/</url>
      <content type="html"><![CDATA[<h1 id="applicationContext-service-xml"><a href="#applicationContext-service-xml" class="headerlink" title="applicationContext-service.xml"></a>applicationContext-service.xml</h1><p>在izheyi-manager-web工程下src/main/resources，该spring文件夹下创建配置文件——applicationContext-service.xml，内容如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">beans</span> <span class="attribute">xmlns</span>=<span class="value">"http://www.springframework.org/schema/beans"</span></span><br><span class="line">	<span class="attribute">xmlns:context</span>=<span class="value">"http://www.springframework.org/schema/context"</span> <span class="attribute">xmlns:p</span>=<span class="value">"http://www.springframework.org/schema/p"</span></span><br><span class="line">	<span class="attribute">xmlns:aop</span>=<span class="value">"http://www.springframework.org/schema/aop"</span> <span class="attribute">xmlns:tx</span>=<span class="value">"http://www.springframework.org/schema/tx"</span></span><br><span class="line">	<span class="attribute">xmlns:xsi</span>=<span class="value">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line">	<span class="attribute">xsi:schemaLocation</span>=<span class="value">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd</span><br><span class="line">	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd</span><br><span class="line">	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd</span><br><span class="line">	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 扫描包加载Service实现类 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">context:component-scan</span> <span class="attribute">base-package</span>=<span class="value">"com.izheyi.service"</span>&gt;</span><span class="tag">&lt;/<span class="title">context:component-scan</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><strong>service一般是由接口和实现类组成</strong></p>
<h1 id="applicationContext-trans-xml"><a href="#applicationContext-trans-xml" class="headerlink" title="applicationContext-trans.xml"></a>applicationContext-trans.xml</h1><p>在izheyi-manager-web工程下src/main/resources，该spring文件夹下创建配置文件——applicationContext-trans.xml，内容如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">beans</span> <span class="attribute">xmlns</span>=<span class="value">"http://www.springframework.org/schema/beans"</span></span><br><span class="line">	<span class="attribute">xmlns:context</span>=<span class="value">"http://www.springframework.org/schema/context"</span> <span class="attribute">xmlns:p</span>=<span class="value">"http://www.springframework.org/schema/p"</span></span><br><span class="line">	<span class="attribute">xmlns:aop</span>=<span class="value">"http://www.springframework.org/schema/aop"</span> <span class="attribute">xmlns:tx</span>=<span class="value">"http://www.springframework.org/schema/tx"</span></span><br><span class="line">	<span class="attribute">xmlns:xsi</span>=<span class="value">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line">	<span class="attribute">xsi:schemaLocation</span>=<span class="value">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd</span><br><span class="line">	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd</span><br><span class="line">	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd</span><br><span class="line">	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 事务管理器 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">bean</span> <span class="attribute">id</span>=<span class="value">"transactionManager"</span></span><br><span class="line">		<span class="attribute">class</span>=<span class="value">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 数据源 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"dataSource"</span> <span class="attribute">ref</span>=<span class="value">"dataSource"</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 通知 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">tx:advice</span> <span class="attribute">id</span>=<span class="value">"txAdvice"</span> <span class="attribute">transaction-manager</span>=<span class="value">"transactionManager"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">tx:attributes</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 传播行为 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">tx:method</span> <span class="attribute">name</span>=<span class="value">"save*"</span> <span class="attribute">propagation</span>=<span class="value">"REQUIRED"</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">tx:method</span> <span class="attribute">name</span>=<span class="value">"insert*"</span> <span class="attribute">propagation</span>=<span class="value">"REQUIRED"</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">tx:method</span> <span class="attribute">name</span>=<span class="value">"add*"</span> <span class="attribute">propagation</span>=<span class="value">"REQUIRED"</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">tx:method</span> <span class="attribute">name</span>=<span class="value">"create*"</span> <span class="attribute">propagation</span>=<span class="value">"REQUIRED"</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">tx:method</span> <span class="attribute">name</span>=<span class="value">"delete*"</span> <span class="attribute">propagation</span>=<span class="value">"REQUIRED"</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">tx:method</span> <span class="attribute">name</span>=<span class="value">"update*"</span> <span class="attribute">propagation</span>=<span class="value">"REQUIRED"</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">tx:method</span> <span class="attribute">name</span>=<span class="value">"find*"</span> <span class="attribute">propagation</span>=<span class="value">"SUPPORTS"</span> <span class="attribute">read-only</span>=<span class="value">"true"</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">tx:method</span> <span class="attribute">name</span>=<span class="value">"select*"</span> <span class="attribute">propagation</span>=<span class="value">"SUPPORTS"</span> <span class="attribute">read-only</span>=<span class="value">"true"</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">tx:method</span> <span class="attribute">name</span>=<span class="value">"get*"</span> <span class="attribute">propagation</span>=<span class="value">"SUPPORTS"</span> <span class="attribute">read-only</span>=<span class="value">"true"</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="title">tx:attributes</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">tx:advice</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 切面 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">aop:config</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">aop:advisor</span> <span class="attribute">advice-ref</span>=<span class="value">"txAdvice"</span></span><br><span class="line">			<span class="attribute">pointcut</span>=<span class="value">"execution(* com.izheyi.service.*.*(..))"</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">aop:config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><strong>切面，也就是事务的作用范围</strong></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java项目实战 - SSM整合：Dao层]]></title>
      <url>http://izheyi.com/2018/07/14/Java%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-SSM%E6%95%B4%E5%90%88%EF%BC%9ADao/</url>
      <content type="html"><![CDATA[<h1 id="SqlMapConfig-xml"><a href="#SqlMapConfig-xml" class="headerlink" title="SqlMapConfig.xml"></a>SqlMapConfig.xml</h1><p>在izheyi-manager-web工程下src/main/resources，创建文件夹mybatis；在该文件夹下创建Mybatis的配置文件——SqlMapConfig.xml，内容如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="doctype">&lt;!DOCTYPE configuration</span><br><span class="line">		PUBLIC "-//mybatis.org//DTD Config 3.0//EN"</span><br><span class="line">		"http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h1 id="applicationContext-dao-xml"><a href="#applicationContext-dao-xml" class="headerlink" title="applicationContext-dao.xml"></a>applicationContext-dao.xml</h1><p>在izheyi-manager-web工程下src/main/resources，创建文件夹spring；在该文件夹下创建Dao的配置文件——applicationContext-dao.xml，内容如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">beans</span> <span class="attribute">xmlns</span>=<span class="value">"http://www.springframework.org/schema/beans"</span></span><br><span class="line">	<span class="attribute">xmlns:context</span>=<span class="value">"http://www.springframework.org/schema/context"</span> <span class="attribute">xmlns:p</span>=<span class="value">"http://www.springframework.org/schema/p"</span></span><br><span class="line">	<span class="attribute">xmlns:aop</span>=<span class="value">"http://www.springframework.org/schema/aop"</span> <span class="attribute">xmlns:tx</span>=<span class="value">"http://www.springframework.org/schema/tx"</span></span><br><span class="line">	<span class="attribute">xmlns:xsi</span>=<span class="value">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line">	<span class="attribute">xsi:schemaLocation</span>=<span class="value">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd</span><br><span class="line">    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd</span><br><span class="line">    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd</span><br><span class="line">    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 加载配置文件 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">context:property-placeholder</span> <span class="attribute">location</span>=<span class="value">"classpath:properties/db.properties"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 数据库连接池 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">bean</span> <span class="attribute">id</span>=<span class="value">"dataSource"</span> <span class="attribute">class</span>=<span class="value">"com.alibaba.druid.pool.DruidDataSource"</span></span><br><span class="line">		<span class="attribute">destroy-method</span>=<span class="value">"close"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"url"</span> <span class="attribute">value</span>=<span class="value">"$&#123;jdbc.url&#125;"</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"username"</span> <span class="attribute">value</span>=<span class="value">"$&#123;jdbc.username&#125;"</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"password"</span> <span class="attribute">value</span>=<span class="value">"$&#123;jdbc.password&#125;"</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"driverClassName"</span> <span class="attribute">value</span>=<span class="value">"$&#123;jdbc.driver&#125;"</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"maxActive"</span> <span class="attribute">value</span>=<span class="value">"10"</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"minIdle"</span> <span class="attribute">value</span>=<span class="value">"5"</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 让spring管理sqlsessionfactory 使用mybatis和spring整合包中的 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">bean</span> <span class="attribute">id</span>=<span class="value">"sqlSessionFactory"</span> <span class="attribute">class</span>=<span class="value">"org.mybatis.spring.SqlSessionFactoryBean"</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 数据库连接池 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"dataSource"</span> <span class="attribute">ref</span>=<span class="value">"dataSource"</span> /&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 加载mybatis的全局配置文件 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"configLocation"</span> <span class="attribute">value</span>=<span class="value">"classpath:mybatis/SqlMapConfig.xml"</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 扫描Mapper文件 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">bean</span> <span class="attribute">class</span>=<span class="value">"org.mybatis.spring.mapper.MapperScannerConfigurer"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"basePackage"</span> <span class="attribute">value</span>=<span class="value">"com.izheyi.mapper"</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>数据库的配置放到配置文件，要在src/main/resource下创建文件夹properties，在该文件夹下创建db.properties文件，内容如下：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">jdbc.driver=com<span class="class">.mysql</span><span class="class">.jdbc</span><span class="class">.Driver</span></span><br><span class="line">jdbc.url=jdbc:mysql:<span class="comment">//localhost:3306/zheyi?characterEncoding=utf-8</span></span><br><span class="line">jdbc.username=root</span><br><span class="line">jdbc.password=</span><br></pre></td></tr></table></figure></p>
<p><img src="/images/javaproject/ssm_dao.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java项目实战 - SSM整合：思路]]></title>
      <url>http://izheyi.com/2018/07/12/Java%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-SSM%E6%95%B4%E5%90%88%EF%BC%9A%E6%80%9D%E8%B7%AF/</url>
      <content type="html"><![CDATA[<p>SSM框架是spring MVC ，spring和mybatis框架的整合，是标准的MVC模式，将整个系统划分为表现层，controller层，service层，DAO层四层</p>
<ul>
<li>spring MVC负责请求的转发和视图管理</li>
<li>spring实现业务对象管理</li>
<li>mybatis作为数据对象的持久化引擎, mapper代理开发方式开发Dao</li>
</ul>
<p><img src="/images/javaproject/ssm.jpg" alt=""></p>
<p><strong>DataBase ===&gt; Entity ===&gt; Mapper.xml ===&gt; Mapper.Java ===&gt; Service.java ===&gt; Controller.java ===&gt; Jsp.  </strong></p>
<h3 id="Dao层"><a href="#Dao层" class="headerlink" title="Dao层"></a>Dao层</h3><p>mybatis整合spring，通过spring管理SqlSessionFactory、mapper代理对象。</p>
<ul>
<li>SqlMapConfig.xml - Mybatis核心配置文件</li>
<li>applicationContext-dao.xml <ul>
<li>数据库连接池。</li>
<li>SqlSessionFactory对象。</li>
<li>配置mapper文件扫描器。</li>
</ul>
</li>
</ul>
<h3 id="Service层"><a href="#Service层" class="headerlink" title="Service层"></a>Service层</h3><p>所有的service实现类都要放到spring容器中管理。</p>
<ul>
<li>applicationContext-service.xml文件中配置包扫描器，扫描带@service注解的类。</li>
<li>applicationContext-trans.xml文件中配置事务。</li>
</ul>
<h3 id="表现层"><a href="#表现层" class="headerlink" title="表现层"></a>表现层</h3><p>表现层就一个springmvc框架，由springmvc来管理controller。</p>
<ul>
<li>包扫描器，扫描带@Controller注解的类。</li>
<li>配置注解驱动。</li>
<li>配置视图解析器。</li>
</ul>
<h3 id="web-xml"><a href="#web-xml" class="headerlink" title="web.xml"></a>web.xml</h3><ul>
<li>配置Spring容器</li>
<li>配置前端控制器</li>
<li>配置Post乱码过滤器</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java项目实战 - MyBatis及逆向工程]]></title>
      <url>http://izheyi.com/2018/07/08/Java%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-MyBatis%E5%8F%8A%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><p>先创建Mysql DB，并准备数据。<br><img src="/images/javaproject/mysql.jpg" alt=""></p>
<h1 id="MyBatis"><a href="#MyBatis" class="headerlink" title="MyBatis"></a>MyBatis</h1><p><img src="/images/javaproject/mybatis.jpg" alt=""></p>
<ul>
<li>SqlMapConfig.xml，此文件作为mybatis的全局配置文件，配置了mybatis的运行环境等信息。mapper.xml文件即sql映射文件，文件中配置了操作数据库的sql语句，此文件需要在SqlMapConfig.xml中加载。</li>
<li>通过mybatis环境等配置信息构造SqlSessionFactory(即会话工厂)。</li>
<li>由会话工厂创建sqlSession即会话，操作数据库需要通过sqlSession进行。</li>
<li>mybatis底层自定义了Executor执行器接口操作数据库，Executor接口有两个实现，一个是基本执行器、一个是缓存执行器。</li>
<li>MappedStatement也是mybatis一个底层封装对象，它包装了mybatis配置信息及sql映射信息等。mapper.xml文件中一个sql对应一个MappedStatement对象，sql的id即是MappedStatement的id。</li>
<li>MappedStatement对sql执行输入参数进行定义，包括HashMap、基本类型、pojo，Executor通过MappedStatement在执行sql前将输入的java对象映射至sql中，输入参数映射就是JDBC编程中对preparedStatement设置参数。</li>
<li>MappedStatement对sql执行输出结果进行定义，包括HashMap、基本类型、pojo，Executor通过MappedStatement在执行sql后将输出结果映射至java对象中，输出结果映射过程相当于JDBC编程中对结果的解析处理过程。</li>
</ul>
<h1 id="逆向工程"><a href="#逆向工程" class="headerlink" title="逆向工程"></a>逆向工程</h1><p><img src="/images/javaproject/nixiang.jpg" alt=""></p>
<p><strong>generatorConfig.xml</strong><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="doctype">&lt;!DOCTYPE generatorConfiguration</span><br><span class="line">  PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"</span><br><span class="line">  "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd"&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">generatorConfiguration</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">context</span> <span class="attribute">id</span>=<span class="value">"testTables"</span> <span class="attribute">targetRuntime</span>=<span class="value">"MyBatis3"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">commentGenerator</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 是否去除自动生成的注释 true：是 ： false:否 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"suppressAllComments"</span> <span class="attribute">value</span>=<span class="value">"true"</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="title">commentGenerator</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--数据库连接的信息：驱动类、连接地址、用户名、密码 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">jdbcConnection</span> <span class="attribute">driverClass</span>=<span class="value">"com.mysql.jdbc.Driver"</span></span><br><span class="line">			<span class="attribute">connectionURL</span>=<span class="value">"jdbc:mysql://localhost:3306/zheyi"</span> <span class="attribute">userId</span>=<span class="value">"root"</span></span><br><span class="line">			<span class="attribute">password</span>=<span class="value">""</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="title">jdbcConnection</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 和 </span><br><span class="line">			NUMERIC 类型解析为java.math.BigDecimal --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">javaTypeResolver</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"forceBigDecimals"</span> <span class="attribute">value</span>=<span class="value">"false"</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="title">javaTypeResolver</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- targetProject:生成PO类的位置 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">javaModelGenerator</span> <span class="attribute">targetPackage</span>=<span class="value">"com.izheyi.pojo"</span></span><br><span class="line">			<span class="attribute">targetProject</span>=<span class="value">".\src"</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- enableSubPackages:是否让schema作为包的后缀 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"enableSubPackages"</span> <span class="attribute">value</span>=<span class="value">"false"</span> /&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 从数据库返回的值被清理前后的空格 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"trimStrings"</span> <span class="attribute">value</span>=<span class="value">"true"</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="title">javaModelGenerator</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- targetProject:mapper映射文件生成的位置 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">sqlMapGenerator</span> <span class="attribute">targetPackage</span>=<span class="value">"com.izheyi.mapper"</span> </span><br><span class="line">			<span class="attribute">targetProject</span>=<span class="value">".\src"</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- enableSubPackages:是否让schema作为包的后缀 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"enableSubPackages"</span> <span class="attribute">value</span>=<span class="value">"false"</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="title">sqlMapGenerator</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- targetPackage：mapper接口生成的位置 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">javaClientGenerator</span> <span class="attribute">type</span>=<span class="value">"XMLMAPPER"</span></span><br><span class="line">			<span class="attribute">targetPackage</span>=<span class="value">"com.izheyi.mapper"</span> </span><br><span class="line">			<span class="attribute">targetProject</span>=<span class="value">".\src"</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- enableSubPackages:是否让schema作为包的后缀 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"enableSubPackages"</span> <span class="attribute">value</span>=<span class="value">"false"</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="title">javaClientGenerator</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 指定数据库表 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">table</span> <span class="attribute">schema</span>=<span class="value">""</span> <span class="attribute">tableName</span>=<span class="value">"tb_content"</span>&gt;</span><span class="tag">&lt;/<span class="title">table</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">table</span> <span class="attribute">schema</span>=<span class="value">""</span> <span class="attribute">tableName</span>=<span class="value">"tb_content_category"</span>&gt;</span><span class="tag">&lt;/<span class="title">table</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">table</span> <span class="attribute">schema</span>=<span class="value">""</span> <span class="attribute">tableName</span>=<span class="value">"tb_item"</span>&gt;</span><span class="tag">&lt;/<span class="title">table</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">table</span> <span class="attribute">schema</span>=<span class="value">""</span> <span class="attribute">tableName</span>=<span class="value">"tb_item_cat"</span>&gt;</span><span class="tag">&lt;/<span class="title">table</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">table</span> <span class="attribute">schema</span>=<span class="value">""</span> <span class="attribute">tableName</span>=<span class="value">"tb_item_desc"</span>&gt;</span><span class="tag">&lt;/<span class="title">table</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">table</span> <span class="attribute">schema</span>=<span class="value">""</span> <span class="attribute">tableName</span>=<span class="value">"tb_item_param"</span>&gt;</span><span class="tag">&lt;/<span class="title">table</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">table</span> <span class="attribute">schema</span>=<span class="value">""</span> <span class="attribute">tableName</span>=<span class="value">"tb_item_param_item"</span>&gt;</span><span class="tag">&lt;/<span class="title">table</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">table</span> <span class="attribute">schema</span>=<span class="value">""</span> <span class="attribute">tableName</span>=<span class="value">"tb_order"</span>&gt;</span><span class="tag">&lt;/<span class="title">table</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">table</span> <span class="attribute">schema</span>=<span class="value">""</span> <span class="attribute">tableName</span>=<span class="value">"tb_order_item"</span>&gt;</span><span class="tag">&lt;/<span class="title">table</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">table</span> <span class="attribute">schema</span>=<span class="value">""</span> <span class="attribute">tableName</span>=<span class="value">"tb_order_shipping"</span>&gt;</span><span class="tag">&lt;/<span class="title">table</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">table</span> <span class="attribute">schema</span>=<span class="value">""</span> <span class="attribute">tableName</span>=<span class="value">"tb_user"</span>&gt;</span><span class="tag">&lt;/<span class="title">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;/<span class="title">context</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>注意：逆向工程多次执行后，它不会把原来的文件覆盖，而是会在原来文件的内容里面再追加。 要再生成，要把已经生成的删除。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java项目实战 - 环境搭建]]></title>
      <url>http://izheyi.com/2018/07/08/Java%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<p>通过一个Java项目实战，对Java开发框架和流程有个更细的认知和学习。</p>
<h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><ul>
<li>JDK的安装配置</li>
<li>Tomcat的安装配置<ul>
<li>下载解压，运行tomcat目录中的bin/startup.bat，启动tomcat，启动后有浏览器输入<a href="http://localhost:8080/，验证安装。" target="_blank" rel="external">http://localhost:8080/，验证安装。</a></li>
</ul>
</li>
<li>Eclipse的配置<ul>
<li>默认字符集更改为utf-8</li>
<li>添加Tomcat运行环境</li>
<li>添加Tomcat Server</li>
</ul>
</li>
</ul>
<h1 id="工程创建"><a href="#工程创建" class="headerlink" title="工程创建"></a>工程创建</h1><p>Github: <a href="https://github.com/yongfeiuall/zheyi-taotao" target="_blank" rel="external">zheyi-taotao</a></p>
<h2 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h2><p>3种打包方式：</p>
<ul>
<li>jar<br>jar工程，很显然就是pom工程的子工程，由pom工程来管理。</li>
<li>war<br>war工程是一个web工程，是可以直接放到tomcat下运行的工程。</li>
<li>pom<br>pom工程一般都是父工程，管理jar包的版本、maven插件的版本、统一的依赖管理，它是一个聚合工程。其实说白了它只有一个pom.xml文件，一般是作为父工程出现的，只是定义了一些依赖、插件、还有一些版本号等等</li>
</ul>
<h2 id="工程目录"><a href="#工程目录" class="headerlink" title="工程目录"></a>工程目录</h2><p><img src="/images/javaproject/project_tree.jpg" alt=""></p>
<ul>
<li>zheyi-parent：父工程，其打包方式是pom，主要管理jar包的版本号。项目中的所有工程都应该继承父工程。</li>
<li>zheyi-common：存放一些通用的工具类、通用的pojo。其打包方式为jar，被其他的工程所依赖。</li>
<li>zheyi-manager：服务层工程，又称之为聚合工程或pom工程。<ul>
<li>zheyi-manager-pojo：这是一个独立的模块，其打包方式是jar。</li>
<li>zheyi-manager-mapper：这是一个独立的模块，其打包方式是jar。</li>
<li>zheyi-manager-service：打包方式是jar。</li>
<li>zheyi-manager-web：表现层工程，打包方式是war。</li>
</ul>
</li>
</ul>
<h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><p>创建完成后，运行，如下图所示：<br><img src="/images/javaproject/env_verify.jpg" alt=""></p>
<h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><ul>
<li>运行要先Install parent和common</li>
<li>pageHelper-3.4.2-fix couldn’t download, change to 5.0.1</li>
<li>要在web下创建web.xml</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[莫辜负自己，做一个努力上进的同学]]></title>
      <url>http://izheyi.com/2018/07/01/%E4%BA%BA%E7%94%9F%E8%8B%A6%E7%9F%AD%EF%BC%8C%E8%8E%AB%E8%BE%9C%E8%B4%9F%E8%87%AA%E5%B7%B1%EF%BC%8C%E5%81%9A%E4%B8%80%E4%B8%AA%E5%8A%AA%E5%8A%9B%E4%B8%8A%E8%BF%9B%E7%9A%84%E5%A5%BD%E5%90%8C%E5%AD%A6/</url>
      <content type="html"><![CDATA[<p>工作了这么多年，见到了各式各样的人，见过工作五六年就成总监的，也见过工作了十几年还是跟刚工作时基本一个样子的。偶尔在这种差别上会想很多，没有说要跟任何人去比较，每个人的追求和想要的状态都不一样，而是会想现在的自己有没有优于过去的自己，在这个快速发展且浮躁的社会，会不会被淘汰掉。</p>
<p>都说上学是三点一线，其实工作了，再加上外卖的盛行，就剩两点一线了，公司到家里。如果上班盼下班，周一盼周五，周末在家追剧，睡觉，玩游戏，得过且过，你这辈子可能也仅此而已。有梦想有目标的人，我想会找个能发挥自己最大价值的工作，并不断的提升自己，做出成绩。不要随波逐流，安于现状，没有梦想跟咸鱼有什么区别，来先定一个小目标，找一个自己适合且能体现价值的工作。</p>
<p>还有很多人说，老板给我这些钱和这个职位，我就干这些活，听着是合理的，拿多少钱办多少事。但你要想到你不是为公司打工，你是为自己，为你的发展而努力，你才是你自己的老板。你的竞争力是你能力的提升，是不可替代性，而不是你待了多长时间和重复的技能，能力是在不断的做挑战性的工作而得到提升。不要只看眼前的一亩三分地，要勇于挑战自己，抓住机会，要不然一旦有替代者出现，就会应了那句话：你可以不服，你可以委屈，但你被淘汰了。</p>
<p>你要试着让自己变得不可替代。罗胖说要变得更好就是要想清楚三件事：目标，方法和行动。跟我在精益思想里看的一模一样，里边也讲到了这个，怎样实现精益，并尽善尽美。人本质上是个懒惰的动物，一定要有不断的目标，给自己一个目标，其实就是给自己一个盼头，而这个盼头会让你变得不懒惰，会驱使着你不断的进取。</p>
<p>所以当你想做出改变的时候，当你想让自己变得更好的时候，或许前路布满荆棘，或许心里有恐慌和迷茫，但还是要勇敢的走出这一步，等你越过山丘，定会看到更美的风景和更好的自己。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[参观军事博物馆]]></title>
      <url>http://izheyi.com/2018/06/24/%E5%8F%82%E8%A7%82%E5%86%9B%E4%BA%8B%E5%8D%9A%E7%89%A9%E9%A6%86/</url>
      <content type="html"><![CDATA[<p>本来是去动物园，太热了，动物也都不怎么能看到，游乐园也不想玩。</p>
<p>就去了军事博物馆。看到那个年代的机器也是很复杂的，感受到人在武器，战争面前，显示那么的渺小和脆弱。</p>
<p><img src="/images/izheyi/2018/06/junbo_01.JPG" alt=""><br><img src="/images/izheyi/2018/06/junbo_02.JPG" alt=""><br><img src="/images/izheyi/2018/06/junbo_03.JPG" alt=""><br><img src="/images/izheyi/2018/06/junbo_04.JPG" alt=""><br><img src="/images/izheyi/2018/06/junbo_05.JPG" alt=""><br><img src="/images/izheyi/2018/06/junbo_06.JPG" alt=""><br><img src="/images/izheyi/2018/06/junbo_07.JPG" alt=""><br><img src="/images/izheyi/2018/06/junbo_08.JPG" alt=""><br><img src="/images/izheyi/2018/06/junbo_09.JPG" alt=""><br><img src="/images/izheyi/2018/06/junbo_10.JPG" alt=""><br><img src="/images/izheyi/2018/06/junbo_11.JPG" alt=""><br><img src="/images/izheyi/2018/06/junbo_12.JPG" alt=""><br><img src="/images/izheyi/2018/06/junbo_13.JPG" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[利用线程Dump来查找高消耗CPU代码]]></title>
      <url>http://izheyi.com/2018/06/20/%E5%88%A9%E7%94%A8%E7%BA%BF%E7%A8%8BDump%E6%9D%A5%E6%9F%A5%E6%89%BE%E9%AB%98%E6%B6%88%E8%80%97CPU%E4%BB%A3%E7%A0%81/</url>
      <content type="html"><![CDATA[<p>对于CPU消耗高的代码，可以用下面的方法来进行定位分析。</p>
<h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><p>运行一段Java代码，让它消耗CPU。</p>
<h1 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h1><ol>
<li><p>用<code>top</code>查找出高消耗CPU PID</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation logs]# top</span><br><span class="line">top - 10:14:33 up 19:47,  4 users,  <span class="operator"><span class="keyword">load</span> average: <span class="number">0.48</span>, <span class="number">0.41</span>, <span class="number">0.32</span></span><br><span class="line">Tasks: <span class="number">189</span> total,   <span class="number">1</span> running, <span class="number">188</span> sleeping,   <span class="number">0</span> stopped,   <span class="number">0</span> zombie</span><br><span class="line">Cpu(s): <span class="number">11.8</span>%us, <span class="number">15.0</span>%sy,  <span class="number">0.0</span>%ni, <span class="number">70.4</span>%<span class="keyword">id</span>,  <span class="number">0.0</span>%wa,  <span class="number">1.4</span>%hi,  <span class="number">1.4</span>%si,  <span class="number">0.0</span>%st</span><br><span class="line">Mem:   <span class="number">3389932</span><span class="keyword">k</span> total,  <span class="number">3284936</span><span class="keyword">k</span> used,   <span class="number">104996</span><span class="keyword">k</span> free,   <span class="number">182736</span><span class="keyword">k</span> buffers</span><br><span class="line">Swap:  <span class="number">3522556</span><span class="keyword">k</span> total,    <span class="number">11740</span><span class="keyword">k</span> used,  <span class="number">3510816</span><span class="keyword">k</span> free,  <span class="number">1144964</span><span class="keyword">k</span> cached</span><br><span class="line"></span><br><span class="line">  PID <span class="keyword">USER</span>      PR  NI  VIRT  RES  SHR S %CPU %MEM    <span class="keyword">TIME</span>+  COMMAND                                                                                                                                                                                                         </span><br><span class="line"><span class="number">14538</span> root      <span class="number">20</span>   <span class="number">0</span> <span class="number">1916</span><span class="keyword">m</span>  <span class="number">52</span><span class="keyword">m</span>  <span class="number">10</span><span class="keyword">m</span> S <span class="number">30.8</span>  <span class="number">1.6</span>   <span class="number">8</span>:<span class="number">33.55</span> <span class="keyword">java</span>                                                                                                                                                                                                             </span><br><span class="line"><span class="number">14087</span> root      <span class="number">20</span>   <span class="number">0</span>  <span class="number">100</span><span class="keyword">m</span> <span class="number">4688</span> <span class="number">3504</span> S <span class="number">16.3</span>  <span class="number">0.1</span>  <span class="number">14</span>:<span class="number">21.79</span> sshd                                                                                                                                                                                                             </span><br><span class="line"><span class="number">10032</span> root      <span class="number">20</span>   <span class="number">0</span> <span class="number">1125</span><span class="keyword">m</span> <span class="number">277</span><span class="keyword">m</span>  <span class="number">49</span><span class="keyword">m</span> S  <span class="number">4.0</span>  <span class="number">8.4</span>  <span class="number">99</span>:<span class="number">02.94</span> firefox</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>用<code>top -p &lt;PID&gt;</code>查找出线程ID - (输入H查看所有线程的统计信息)</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation logs]# top -p 14538</span><br><span class="line">top - 10:21:53 up 19:54,  4 users,  <span class="operator"><span class="keyword">load</span> average: <span class="number">0.48</span>, <span class="number">0.44</span>, <span class="number">0.35</span></span><br><span class="line">Tasks:   <span class="number">3</span> total,   <span class="number">0</span> running,   <span class="number">3</span> sleeping,   <span class="number">0</span> stopped,   <span class="number">0</span> zombie</span><br><span class="line">Cpu(s): <span class="number">11.9</span>%us, <span class="number">15.8</span>%sy,  <span class="number">0.0</span>%ni, <span class="number">69.9</span>%<span class="keyword">id</span>,  <span class="number">0.0</span>%wa,  <span class="number">0.9</span>%hi,  <span class="number">1.6</span>%si,  <span class="number">0.0</span>%st</span><br><span class="line">Mem:   <span class="number">3389932</span><span class="keyword">k</span> total,  <span class="number">3243372</span><span class="keyword">k</span> used,   <span class="number">146560</span><span class="keyword">k</span> free,   <span class="number">182704</span><span class="keyword">k</span> buffers</span><br><span class="line">Swap:  <span class="number">3522556</span><span class="keyword">k</span> total,    <span class="number">12700</span><span class="keyword">k</span> used,  <span class="number">3509856</span><span class="keyword">k</span> free,  <span class="number">1105400</span><span class="keyword">k</span> cached</span><br><span class="line"></span><br><span class="line">  PID <span class="keyword">USER</span>      PR  NI  VIRT  RES  SHR S %CPU %MEM    <span class="keyword">TIME</span>+  COMMAND                                                                                                                                                                                                         </span><br><span class="line"><span class="number">14539</span> root      <span class="number">20</span>   <span class="number">0</span> <span class="number">1916</span><span class="keyword">m</span>  <span class="number">52</span><span class="keyword">m</span>  <span class="number">10</span><span class="keyword">m</span> S <span class="number">33.0</span>  <span class="number">1.6</span>  <span class="number">10</span>:<span class="number">53.38</span> <span class="keyword">java</span>                                                                                                                                                                                                             </span><br><span class="line"><span class="number">14540</span> root      <span class="number">20</span>   <span class="number">0</span> <span class="number">1916</span><span class="keyword">m</span>  <span class="number">52</span><span class="keyword">m</span>  <span class="number">10</span><span class="keyword">m</span> S <span class="number">25.6</span>  <span class="number">1.6</span>   <span class="number">0</span>:<span class="number">00.77</span> <span class="keyword">java</span>                                                                                                                                                                                                             </span><br><span class="line"><span class="number">14538</span> root      <span class="number">20</span>   <span class="number">0</span> <span class="number">1916</span><span class="keyword">m</span>  <span class="number">52</span><span class="keyword">m</span>  <span class="number">10</span><span class="keyword">m</span> S  <span class="number">0.0</span>  <span class="number">1.6</span>   <span class="number">0</span>:<span class="number">00.00</span> <span class="keyword">java</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>用<code>jstack &lt;PID&gt;</code>做线程Dump</p>
<figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">[root@<span class="type">Automation</span> logs]<span class="comment"># jstack 14538</span></span><br><span class="line"><span class="number">2018</span>-<span class="number">06</span>-<span class="number">20</span> <span class="number">10</span>:<span class="number">18</span>:<span class="number">12</span></span><br><span class="line"><span class="type">Full</span> thread dump <span class="type">Java</span> <span class="type">HotSpot</span>(<span class="type">TM</span>) <span class="number">64</span>-<span class="type">Bit</span> <span class="type">Server</span> <span class="type">VM</span> (<span class="number">24</span>.<span class="number">80</span>-b11 mixed mode):</span><br><span class="line"></span><br><span class="line"><span class="string">"Attach Listener"</span> daemon prio=<span class="number">10</span> tid=<span class="number">0x00007f6cbc001000</span> nid=<span class="number">0x38fe</span> waiting on condition [<span class="number">0x0000000000000000</span>]</span><br><span class="line">   java.lang.<span class="type">Thread</span>.<span class="type">State</span>: <span class="type">RUNNABLE</span></span><br><span class="line"></span><br><span class="line"><span class="string">"Service Thread"</span> daemon prio=<span class="number">10</span> tid=<span class="number">0x00007f6ce8093000</span> nid=<span class="number">0x38d4</span> runnable [<span class="number">0x0000000000000000</span>]</span><br><span class="line">   java.lang.<span class="type">Thread</span>.<span class="type">State</span>: <span class="type">RUNNABLE</span></span><br><span class="line"></span><br><span class="line"><span class="string">"C2 CompilerThread1"</span> daemon prio=<span class="number">10</span> tid=<span class="number">0x00007f6ce8090800</span> nid=<span class="number">0x38d3</span> waiting on condition [<span class="number">0x0000000000000000</span>]</span><br><span class="line">   java.lang.<span class="type">Thread</span>.<span class="type">State</span>: <span class="type">RUNNABLE</span></span><br><span class="line"></span><br><span class="line"><span class="string">"C2 CompilerThread0"</span> daemon prio=<span class="number">10</span> tid=<span class="number">0x00007f6ce808d800</span> nid=<span class="number">0x38d2</span> waiting on condition [<span class="number">0x0000000000000000</span>]</span><br><span class="line">   java.lang.<span class="type">Thread</span>.<span class="type">State</span>: <span class="type">RUNNABLE</span></span><br><span class="line"></span><br><span class="line"><span class="string">"Signal Dispatcher"</span> daemon prio=<span class="number">10</span> tid=<span class="number">0x00007f6ce808b000</span> nid=<span class="number">0x38d1</span> runnable [<span class="number">0x0000000000000000</span>]</span><br><span class="line">   java.lang.<span class="type">Thread</span>.<span class="type">State</span>: <span class="type">RUNNABLE</span></span><br><span class="line"></span><br><span class="line"><span class="string">"Finalizer"</span> daemon prio=<span class="number">10</span> tid=<span class="number">0x00007f6ce806a800</span> nid=<span class="number">0x38d0</span> <span class="keyword">in</span> <span class="type">Object</span>.wait() [<span class="number">0x00007f6cd7efd000</span>]</span><br><span class="line">   java.lang.<span class="type">Thread</span>.<span class="type">State</span>: <span class="type">WAITING</span> (on <span class="keyword">object</span> monitor)</span><br><span class="line">	at java.lang.<span class="type">Object</span>.wait(<span class="type">Native</span> <span class="type">Method</span>)</span><br><span class="line">	- waiting on &lt;<span class="number">0x00000000cc4028c0</span>&gt; (a java.lang.<span class="keyword">ref</span>.<span class="type">ReferenceQueue</span>$<span class="type">Lock</span>)</span><br><span class="line">	at java.lang.<span class="keyword">ref</span>.<span class="type">ReferenceQueue</span>.remove(<span class="type">ReferenceQueue</span>.java:<span class="number">135</span>)</span><br><span class="line">	- locked &lt;<span class="number">0x00000000cc4028c0</span>&gt; (a java.lang.<span class="keyword">ref</span>.<span class="type">ReferenceQueue</span>$<span class="type">Lock</span>)</span><br><span class="line">	at java.lang.<span class="keyword">ref</span>.<span class="type">ReferenceQueue</span>.remove(<span class="type">ReferenceQueue</span>.java:<span class="number">151</span>)</span><br><span class="line">	at java.lang.<span class="keyword">ref</span>.<span class="type">Finalizer</span>$<span class="type">FinalizerThread</span>.run(<span class="type">Finalizer</span>.java:<span class="number">209</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">"Reference Handler"</span> daemon prio=<span class="number">10</span> tid=<span class="number">0x00007f6ce8068800</span> nid=<span class="number">0x38cf</span> <span class="keyword">in</span> <span class="type">Object</span>.wait() [<span class="number">0x00007f6cd7ffe000</span>]</span><br><span class="line">   java.lang.<span class="type">Thread</span>.<span class="type">State</span>: <span class="type">WAITING</span> (on <span class="keyword">object</span> monitor)</span><br><span class="line">	at java.lang.<span class="type">Object</span>.wait(<span class="type">Native</span> <span class="type">Method</span>)</span><br><span class="line">	- waiting on &lt;<span class="number">0x00000000cc4025c0</span>&gt; (a java.lang.<span class="keyword">ref</span>.<span class="type">Reference</span>$<span class="type">Lock</span>)</span><br><span class="line">	at java.lang.<span class="type">Object</span>.wait(<span class="type">Object</span>.java:<span class="number">503</span>)</span><br><span class="line">	at java.lang.<span class="keyword">ref</span>.<span class="type">Reference</span>$<span class="type">ReferenceHandler</span>.run(<span class="type">Reference</span>.java:<span class="number">133</span>)</span><br><span class="line">	- locked &lt;<span class="number">0x00000000cc4025c0</span>&gt; (a java.lang.<span class="keyword">ref</span>.<span class="type">Reference</span>$<span class="type">Lock</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">"main"</span> prio=<span class="number">10</span> tid=<span class="number">0x00007f6ce8008800</span> nid=<span class="number">0x38cb</span> runnable [<span class="number">0x00007f6ceec18000</span>]</span><br><span class="line">   java.lang.<span class="type">Thread</span>.<span class="type">State</span>: <span class="type">RUNNABLE</span></span><br><span class="line">	at java.io.<span class="type">FileOutputStream</span>.writeBytes(<span class="type">Native</span> <span class="type">Method</span>)</span><br><span class="line">	at java.io.<span class="type">FileOutputStream</span>.write(<span class="type">FileOutputStream</span>.java:<span class="number">345</span>)</span><br><span class="line">	at java.io.<span class="type">BufferedOutputStream</span>.flushBuffer(<span class="type">BufferedOutputStream</span>.java:<span class="number">82</span>)</span><br><span class="line">	at java.io.<span class="type">BufferedOutputStream</span>.flush(<span class="type">BufferedOutputStream</span>.java:<span class="number">140</span>)</span><br><span class="line">	- locked &lt;<span class="number">0x00000000cc405728</span>&gt; (a java.io.<span class="type">BufferedOutputStream</span>)</span><br><span class="line">	at java.io.<span class="type">PrintStream</span>.write(<span class="type">PrintStream</span>.java:<span class="number">482</span>)</span><br><span class="line">	- locked &lt;<span class="number">0x00000000cc405708</span>&gt; (a java.io.<span class="type">PrintStream</span>)</span><br><span class="line">	at sun.nio.cs.<span class="type">StreamEncoder</span>.writeBytes(<span class="type">StreamEncoder</span>.java:<span class="number">221</span>)</span><br><span class="line">	at sun.nio.cs.<span class="type">StreamEncoder</span>.implFlushBuffer(<span class="type">StreamEncoder</span>.java:<span class="number">291</span>)</span><br><span class="line">	at sun.nio.cs.<span class="type">StreamEncoder</span>.flushBuffer(<span class="type">StreamEncoder</span>.java:<span class="number">104</span>)</span><br><span class="line">	- locked &lt;<span class="number">0x00000000cc405800</span>&gt; (a java.io.<span class="type">OutputStreamWriter</span>)</span><br><span class="line">	at java.io.<span class="type">OutputStreamWriter</span>.flushBuffer(<span class="type">OutputStreamWriter</span>.java:<span class="number">185</span>)</span><br><span class="line">	at java.io.<span class="type">PrintStream</span>.write(<span class="type">PrintStream</span>.java:<span class="number">527</span>)</span><br><span class="line">	- locked &lt;<span class="number">0x00000000cc405708</span>&gt; (a java.io.<span class="type">PrintStream</span>)</span><br><span class="line">	at java.io.<span class="type">PrintStream</span>.print(<span class="type">PrintStream</span>.java:<span class="number">597</span>)</span><br><span class="line">	at java.io.<span class="type">PrintStream</span>.println(<span class="type">PrintStream</span>.java:<span class="number">736</span>)</span><br><span class="line">	- locked &lt;<span class="number">0x00000000cc405708</span>&gt; (a java.io.<span class="type">PrintStream</span>)</span><br><span class="line">	at <span class="type">TestA</span>.testA(<span class="type">TestA</span>.java:<span class="number">10</span>)</span><br><span class="line">	at <span class="type">TestA</span>.main(<span class="type">TestA</span>.java:<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">"VM Thread"</span> prio=<span class="number">10</span> tid=<span class="number">0x00007f6ce8064000</span> nid=<span class="number">0x38ce</span> runnable </span><br><span class="line"></span><br><span class="line"><span class="string">"GC task thread#0 (ParallelGC)"</span> prio=<span class="number">10</span> tid=<span class="number">0x00007f6ce801e000</span> nid=<span class="number">0x38cc</span> runnable </span><br><span class="line"></span><br><span class="line"><span class="string">"GC task thread#1 (ParallelGC)"</span> prio=<span class="number">10</span> tid=<span class="number">0x00007f6ce8020000</span> nid=<span class="number">0x38cd</span> runnable </span><br><span class="line"></span><br><span class="line"><span class="string">"VM Periodic Task Thread"</span> prio=<span class="number">10</span> tid=<span class="number">0x00007f6ce809e000</span> nid=<span class="number">0x38d5</span> waiting on condition </span><br><span class="line"></span><br><span class="line"><span class="type">JNI</span> global references: <span class="number">138</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>转换（十进制 - 十六进制）nid</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">14539</span> --&gt; <span class="number">38</span>cb</span><br></pre></td></tr></table></figure>
</li>
<li><p>在Dump中查找相应nid</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"main"</span> prio=<span class="number">10</span> tid=<span class="number">0</span>x00007f6ce8008800 nid=<span class="number">0</span>x38cb runnable [<span class="number">0</span>x00007f6ceec18000]</span><br><span class="line">   java<span class="class">.lang</span><span class="class">.Thread</span><span class="class">.State</span>: RUNNABLE</span><br><span class="line">	at java<span class="class">.io</span><span class="class">.FileOutputStream</span><span class="class">.writeBytes</span>(Native Method)</span><br><span class="line">	at java<span class="class">.io</span><span class="class">.FileOutputStream</span><span class="class">.write</span>(FileOutputStream<span class="class">.java</span>:<span class="number">345</span>)</span><br><span class="line">	at java<span class="class">.io</span><span class="class">.BufferedOutputStream</span><span class="class">.flushBuffer</span>(BufferedOutputStream<span class="class">.java</span>:<span class="number">82</span>)</span><br><span class="line">	at java<span class="class">.io</span><span class="class">.BufferedOutputStream</span><span class="class">.flush</span>(BufferedOutputStream<span class="class">.java</span>:<span class="number">140</span>)</span><br><span class="line">	- locked &lt;<span class="number">0</span>x00000000cc405728&gt; (<span class="tag">a</span> java<span class="class">.io</span><span class="class">.BufferedOutputStream</span>)</span><br><span class="line">	at java<span class="class">.io</span><span class="class">.PrintStream</span><span class="class">.write</span>(PrintStream<span class="class">.java</span>:<span class="number">482</span>)</span><br><span class="line">	- locked &lt;<span class="number">0</span>x00000000cc405708&gt; (<span class="tag">a</span> java<span class="class">.io</span><span class="class">.PrintStream</span>)</span><br><span class="line">	at sun<span class="class">.nio</span><span class="class">.cs</span><span class="class">.StreamEncoder</span><span class="class">.writeBytes</span>(StreamEncoder<span class="class">.java</span>:<span class="number">221</span>)</span><br><span class="line">	at sun<span class="class">.nio</span><span class="class">.cs</span><span class="class">.StreamEncoder</span><span class="class">.implFlushBuffer</span>(StreamEncoder<span class="class">.java</span>:<span class="number">291</span>)</span><br><span class="line">	at sun<span class="class">.nio</span><span class="class">.cs</span><span class="class">.StreamEncoder</span><span class="class">.flushBuffer</span>(StreamEncoder<span class="class">.java</span>:<span class="number">104</span>)</span><br><span class="line">	- locked &lt;<span class="number">0</span>x00000000cc405800&gt; (<span class="tag">a</span> java<span class="class">.io</span><span class="class">.OutputStreamWriter</span>)</span><br><span class="line">	at java<span class="class">.io</span><span class="class">.OutputStreamWriter</span><span class="class">.flushBuffer</span>(OutputStreamWriter<span class="class">.java</span>:<span class="number">185</span>)</span><br><span class="line">	at java<span class="class">.io</span><span class="class">.PrintStream</span><span class="class">.write</span>(PrintStream<span class="class">.java</span>:<span class="number">527</span>)</span><br><span class="line">	- locked &lt;<span class="number">0</span>x00000000cc405708&gt; (<span class="tag">a</span> java<span class="class">.io</span><span class="class">.PrintStream</span>)</span><br><span class="line">	at java<span class="class">.io</span><span class="class">.PrintStream</span><span class="class">.print</span>(PrintStream<span class="class">.java</span>:<span class="number">597</span>)</span><br><span class="line">	at java<span class="class">.io</span><span class="class">.PrintStream</span><span class="class">.println</span>(PrintStream<span class="class">.java</span>:<span class="number">736</span>)</span><br><span class="line">	- locked &lt;<span class="number">0</span>x00000000cc405708&gt; (<span class="tag">a</span> java<span class="class">.io</span><span class="class">.PrintStream</span>)</span><br><span class="line">	at TestA.<span class="function"><span class="title">testA</span><span class="params">(TestA.java:<span class="number">10</span>)</span></span></span><br><span class="line">	at TestA.<span class="function"><span class="title">main</span><span class="params">(TestA.java:<span class="number">3</span>)</span></span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>基本上一定位一个准。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[jvisualvm通过jmx监控Tomcat]]></title>
      <url>http://izheyi.com/2018/06/17/jvisualvm%E7%9B%91%E6%8E%A7Tomcat/</url>
      <content type="html"><![CDATA[<p>用JVisualVM连接远程JVM，监控系统运行性能参数。</p>
<p>要在监控的Server上，在tomcat的catalina.sh 中添加如下参数：<br><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># OS specific support.  $var _must_ be set to either <span class="literal">true</span> <span class="literal">or</span> <span class="literal">false</span>.</span><br><span class="line">JAV<span class="built_in">A_OPTS</span>='-Dcom.sun.management.jmxremote.port=<span class="number">8999</span> -Dcom.sun.management.jmxremote.ssl=<span class="literal">false</span> -Dcom.sun.management.jmxremote.authenticate=<span class="literal">false</span>'</span><br></pre></td></tr></table></figure></p>
<p>配置后重启Tomcat，发现在连接不上。 做以下配置</p>
<ul>
<li><p>Host Name</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">[root@Automation bin]</span><span class="comment"># vi /etc/sysconfig/network</span></span><br><span class="line"></span><br><span class="line"><span class="setting">NETWORKING=<span class="value"><span class="keyword">yes</span></span></span></span><br><span class="line"><span class="setting">HOSTNAME=<span class="value">Automation</span></span></span><br><span class="line"><span class="setting">NTPSERVERARGS=<span class="value">iburst</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Hosts</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation bin]<span class="preprocessor"># vi /etc/hosts</span></span><br><span class="line"></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>  localhost.localdomain localhost localhost4 localhost4.localdomain4</span><br><span class="line">::<span class="number">1</span>         localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="number">10.22</span><span class="number">.1</span><span class="number">.13</span>  gitserver Automation</span></span><br><span class="line"></span><br><span class="line"><span class="number">10.24</span><span class="number">.33</span><span class="number">.82</span> Automation</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>最终结果如下，可以查看查看远程CPU、堆、类、线程的使用情况了。<br><img src="/images/performancetesting/jvisualvm.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python + Selenium: Page Object and Page Factory]]></title>
      <url>http://izheyi.com/2018/06/10/Python-Selenium-Page-Object-and-Page-Factory/</url>
      <content type="html"><![CDATA[<p>基于种种原因，简单地对Python + Selenium的UI自动化做了一个简单的搭建。一些简单的分层：</p>
<ul>
<li>conf: 一些配置文件，如网址，Browser Type</li>
<li>data： 数据驱动的数据</li>
<li>pages： Page对象</li>
<li>report： HTML报告，Screenshot</li>
<li>tests： 脚本</li>
<li>utils： 公共的方法，封闭Selenium，处理csv</li>
</ul>
<p><a href="https://github.com/yongfeiuall/python_selenium_page_object_example" target="_blank" rel="external">python_selenium_page_object_example</a></p>
<h1 id="Page-Object"><a href="#Page-Object" class="headerlink" title="Page Object"></a>Page Object</h1><ol>
<li><p>做了一个BasicPage类，对Selenium做了简单封装</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BasicPage</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, driver)</span>:</span></span><br><span class="line">        self.driver = driver</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">open_page</span><span class="params">(self, url)</span>:</span></span><br><span class="line">        <span class="string">"""**Description**::</span><br><span class="line">                        open the page</span><br><span class="line">        """</span></span><br><span class="line">        self.driver.get(url)</span><br><span class="line">        self.driver.maximize_window()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">input_text</span><span class="params">(self, locator, value)</span>:</span></span><br><span class="line">        <span class="string">"""**Description**::</span><br><span class="line">                Fill value to the element located by locator</span><br><span class="line"></span><br><span class="line">        :param locator:The locator to locate the element.</span><br><span class="line">        :param value:value to set to the element</span><br><span class="line">        :return:</span><br><span class="line">        """</span></span><br><span class="line">        element = self._find_web_element(locator)</span><br><span class="line">        element.send_keys(value)</span><br><span class="line">        <span class="keyword">return</span> self</span><br></pre></td></tr></table></figure>
</li>
<li><p>Page Object实现</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> utils.page <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaiduPage</span><span class="params">(BasicPage)</span>:</span></span><br><span class="line"></span><br><span class="line">    search_box = (<span class="string">'id'</span>, <span class="string">'kw'</span>)</span><br><span class="line">    search_button = (<span class="string">'id'</span>, <span class="string">'su'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">search</span><span class="params">(self, keywords)</span>:</span></span><br><span class="line">        self.input_text(self.search_box, keywords)</span><br><span class="line">        self.click_element(self.search_button)</span><br></pre></td></tr></table></figure>
</li>
<li><p>对Browser进行封装，利用Pytest Fixture实现每个脚本运行前运行</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">import</span> pytest</span><br><span class="line"><span class="keyword">from</span> conf.const <span class="keyword">import</span> Const</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="decorator">@pytest.fixture(scope='function', params=[Const.browser])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">start_browser</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="string">"""**Description**::</span><br><span class="line">                    start browser</span><br><span class="line">    """</span></span><br><span class="line">    name = request.param</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> name == <span class="string">"firefox"</span> <span class="keyword">or</span> name == <span class="string">"Firefox"</span> <span class="keyword">or</span> name == <span class="string">"ff"</span>:</span><br><span class="line">            print(<span class="string">"start browser name :Firefox"</span>)</span><br><span class="line">            driver = webdriver.Firefox()</span><br><span class="line">            <span class="keyword">return</span> driver</span><br><span class="line">        <span class="keyword">elif</span> name == <span class="string">"chrome"</span> <span class="keyword">or</span> name == <span class="string">"Chrome"</span>:</span><br><span class="line">            print(<span class="string">"start browser name :Chrome"</span>)</span><br><span class="line">            driver = webdriver.Chrome()</span><br><span class="line">            <span class="keyword">return</span> driver</span><br><span class="line">        <span class="keyword">elif</span> name == <span class="string">"ie"</span> <span class="keyword">or</span> name == <span class="string">"Ie"</span>:</span><br><span class="line">            print(<span class="string">"start browser name :Ie"</span>)</span><br><span class="line">            driver = webdriver.Ie()</span><br><span class="line">            <span class="keyword">return</span> driver</span><br><span class="line">        <span class="keyword">elif</span> name == <span class="string">"phantomjs"</span> <span class="keyword">or</span> name == <span class="string">"Phantomjs"</span>:</span><br><span class="line">            print(<span class="string">"start browser name :phantomjs"</span>)</span><br><span class="line">            driver = webdriver.PhantomJS()</span><br><span class="line">            <span class="keyword">return</span> driver</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"Not found this browser,You can use 'firefox', 'chrome', 'ie' or 'phantomjs'"</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> msg:</span><br><span class="line">        print(<span class="string">"Couldn't start browser：%s"</span> % str(msg))</span><br></pre></td></tr></table></figure>
</li>
<li><p>脚本层实现</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pages.page_object <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> conf.const <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestPO</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_baidu</span><span class="params">(self, start_browser)</span>:</span></span><br><span class="line">        baidu = BaiduPage(start_browser)</span><br><span class="line">        baidu.open_page(URL.baidu)</span><br><span class="line">        baidu.search(<span class="string">"selenium"</span>)</span><br><span class="line">        start_browser.close()</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="Page-Factory"><a href="#Page-Factory" class="headerlink" title="Page Factory"></a>Page Factory</h1><p>Python跟Java不一样，没有专门的方法来实现，在网上看到有人做了个实现，只是在这里做了个简单的实验：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">__all__ = [<span class="string">'cacheable'</span>, <span class="string">'callable_find_by'</span>, <span class="string">'property_find_by'</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cacheable_decorator</span><span class="params">(lookup)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> hasattr(self, <span class="string">'_elements_cache'</span>):</span><br><span class="line">            self._elements_cache = &#123;&#125;  <span class="comment"># &#123;callable_id: element(s)&#125;</span></span><br><span class="line">        cache = self._elements_cache</span><br><span class="line"></span><br><span class="line">        key = id(lookup)</span><br><span class="line">        <span class="keyword">if</span> key <span class="keyword">not</span> <span class="keyword">in</span> cache:</span><br><span class="line">            cache[key] = lookup(self)</span><br><span class="line">        <span class="keyword">return</span> cache[key]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> func</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cacheable = cacheable_decorator</span><br><span class="line"></span><br><span class="line">_strategy_kwargs = [<span class="string">'id_'</span>, <span class="string">'xpath'</span>, <span class="string">'link_text'</span>, <span class="string">'partial_link_text'</span>,</span><br><span class="line">                    <span class="string">'name'</span>, <span class="string">'tag_name'</span>, <span class="string">'class_name'</span>, <span class="string">'css_selector'</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_callable_find_by</span><span class="params">(how, using, multiple, cacheable, context, driver_attr, **kwargs)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># context - driver or a certain element</span></span><br><span class="line">        <span class="keyword">if</span> context:</span><br><span class="line">            ctx = context() <span class="keyword">if</span> callable(context) <span class="keyword">else</span> context.__get__(self)  <span class="comment"># or property</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ctx = getattr(self, driver_attr)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 'how' AND 'using' take precedence over keyword arguments</span></span><br><span class="line">        <span class="keyword">if</span> how <span class="keyword">and</span> using:</span><br><span class="line">            lookup = ctx.find_elements <span class="keyword">if</span> multiple <span class="keyword">else</span> ctx.find_element</span><br><span class="line">            <span class="keyword">return</span> lookup(how, using)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> len(kwargs) != <span class="number">1</span> <span class="keyword">or</span> list(kwargs.keys())[<span class="number">0</span>] <span class="keyword">not</span> <span class="keyword">in</span> _strategy_kwargs:</span><br><span class="line">            <span class="keyword">raise</span> ValueError(</span><br><span class="line">                <span class="string">"If 'how' AND 'using' are not specified, one and only one of the following "</span></span><br><span class="line">                <span class="string">"valid keyword arguments should be provided: %s."</span> % _strategy_kwargs)</span><br><span class="line"></span><br><span class="line">        key = list(kwargs.keys())[<span class="number">0</span>];</span><br><span class="line">        value = kwargs[key]</span><br><span class="line">        suffix = key[:-<span class="number">1</span>] <span class="keyword">if</span> key.endswith(<span class="string">'_'</span>) <span class="keyword">else</span> key  <span class="comment"># find_element(s)_by_xxx</span></span><br><span class="line">        prefix = <span class="string">'find_elements_by'</span> <span class="keyword">if</span> multiple <span class="keyword">else</span> <span class="string">'find_element_by'</span></span><br><span class="line">        lookup = getattr(ctx, <span class="string">'%s_%s'</span> % (prefix, suffix))</span><br><span class="line">        <span class="keyword">return</span> lookup(value)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> cacheable_decorator(func) <span class="keyword">if</span> cacheable <span class="keyword">else</span> func</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">callable_find_by</span><span class="params">(how=None, using=None, multiple=False, cacheable=False, context=None, driver_attr=<span class="string">'driver'</span>,</span><br><span class="line">                     **kwargs)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> _callable_find_by(how, using, multiple, cacheable, context, driver_attr, **kwargs)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">property_find_by</span><span class="params">(how=None, using=None, multiple=False, cacheable=False, context=None, driver_attr=<span class="string">'driver'</span>,</span><br><span class="line">                     **kwargs)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> property(_callable_find_by(how, using, multiple, cacheable, context, driver_attr, **kwargs))</span><br></pre></td></tr></table></figure></p>
<p>Page:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> utils.page <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> utils.pageobject_support <span class="keyword">import</span> callable_find_by <span class="keyword">as</span> by</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaiduPage</span><span class="params">(BasicPage)</span>:</span></span><br><span class="line"></span><br><span class="line">    search_box = by(id_=<span class="string">"kw"</span>)</span><br><span class="line">    search_button = by(id_=<span class="string">'su'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">search</span><span class="params">(self, keywords)</span>:</span></span><br><span class="line">        self.search_box().send_keys(keywords)</span><br><span class="line">        self.search_button().click()</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[除了爱孩子，没有任何一个理由生二胎]]></title>
      <url>http://izheyi.com/2018/06/06/%E9%99%A4%E4%BA%86%E7%88%B1%E5%AD%A9%E5%AD%90%EF%BC%8C%E6%B2%A1%E6%9C%89%E4%BB%BB%E4%BD%95%E4%B8%80%E4%B8%AA%E7%90%86%E7%94%B1%E7%94%9F%E4%BA%8C%E8%83%8E%E3%80%82/</url>
      <content type="html"><![CDATA[<p>二胎，在中国是个永远逃不掉的话题，有的人甚至三胎都提上了日程。</p>
<p>二孩政策都放开了，你不生就是自私；重男轻女的思想，没有男孩就是无后；一个孩子太单了，给她有个伴；当你老了，多个孩子好养老；你看周围的朋友都生了，你也应该生……太多的所谓正确的理由和建议充斥在耳旁，但生与不生，只有你知道自己内心最真实的想法。</p>
<p>想生二胎，首先想到的就是经济基础，网上有太多计算，生二胎要花多少多少钱，特别是在大城市，感觉一般工薪族是生不起的。时代不同了，养孩子远不止吃饱穿好，就说一点，教育，记得奇葩说里说过不要假装现代社会金钱不重要，不要误导年轻人，没有钱也能很好养育孩子。</p>
<p>孩子好生不好养，最主要的还是时间和精力。你有没有内心强大到再来一轮？有没有人给你带孩子？你能不能给她足够多的陪伴？你能不能平衡好大宝和二宝的关系？</p>
<p>最近跟闺女聊了很多，发现她并不是大人眼中想的那么独立，在新环境中她也有委屈，有愤怒，有失落，在面对她的种种问题的时候，我却束手无策，心理难免还是会有一些不好受。浮躁的社会，跟风攀比的家长，眼花缭乱的培训班，让孩子无所适从。在教育孩子上面还有很长的路要走，实在是没有准备好再有一个孩子，应该怎样让她们都能在这个浮躁的社会里成为幸福的人。</p>
<p>生与不生都是自己的问题，每个家庭的情况不同，选择自然也不同。生育是一种能力，不是一种义务，除了爱孩子，没有任何一个理由生二胎。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[参观北京天文馆]]></title>
      <url>http://izheyi.com/2018/06/03/%E5%8F%82%E8%A7%82%E5%8C%97%E4%BA%AC%E5%A4%A9%E6%96%87%E9%A6%86/</url>
      <content type="html"><![CDATA[<p>上次来过一次，来的晚了票都卖完了，这次没开馆之前就到了。</p>
<p>a馆是老馆，就一个小展厅，球幕电影也一般；b馆是新馆，还可以吧。总体感觉，要是没有或者有少量天文知识的，不听讲解的话，其实啥也看不太明白了。孩子来了也是跟着看个热闹。<br><img src="/images/izheyi/2018/06/tianwenguan_00.JPG" alt=""><br><img src="/images/izheyi/2018/06/tianwenguan_01.JPG" alt=""><br><img src="/images/izheyi/2018/06/tianwenguan_02.JPG" alt=""><br><img src="/images/izheyi/2018/06/tianwenguan_03.JPG" alt=""><br><img src="/images/izheyi/2018/06/tianwenguan_04.JPG" alt=""><br><img src="/images/izheyi/2018/06/tianwenguan_05.JPG" alt=""><br><img src="/images/izheyi/2018/06/tianwenguan_06.JPG" alt=""><br><img src="/images/izheyi/2018/06/tianwenguan_07.JPG" alt=""><br><img src="/images/izheyi/2018/06/tianwenguan_08.JPG" alt=""><br><img src="/images/izheyi/2018/06/tianwenguan_09.JPG" alt=""><br><img src="/images/izheyi/2018/06/tianwenguan_10.JPG" alt=""><br><img src="/images/izheyi/2018/06/tianwenguan_11.JPG" alt=""><br><img src="/images/izheyi/2018/06/tianwenguan_12.JPG" alt=""><br><img src="/images/izheyi/2018/06/tianwenguan_13.JPG" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[少先队员入队 - Mini世界实践]]></title>
      <url>http://izheyi.com/2018/06/01/%E5%B0%91%E5%85%88%E9%98%9F%E5%91%98%E5%85%A5%E9%98%9F-Mini%E4%B8%96%E7%95%8C%E5%AE%9E%E8%B7%B5/</url>
      <content type="html"><![CDATA[<p>期盼了很长时间，也练习了很长时间，系红领巾，站队，唱歌。。。终于入队了。<br><img src="/images/izheyi/2018/06/rudui_01.JPG" alt=""><br><img src="/images/izheyi/2018/06/rudui_02.JPG" alt=""></p>
<p>正好赶上六一儿童节，学校有心的带领着大家去迷你世界体验馆感受了一把。<br><img src="/images/izheyi/2018/06/mini_01.jpg" alt=""><br><img src="/images/izheyi/2018/06/mini_02.jpg" alt=""><br><img src="/images/izheyi/2018/06/mini_03.jpg" alt=""><br><img src="/images/izheyi/2018/06/mini_04.jpg" alt=""><br><img src="/images/izheyi/2018/06/mini_05.jpg" alt=""><br><img src="/images/izheyi/2018/06/mini_06.jpg" alt=""><br><img src="/images/izheyi/2018/06/mini_07.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CI/CD - 环境搭建(7) - 集成Terraform]]></title>
      <url>http://izheyi.com/2018/05/31/CI-CD-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-7-%E9%9B%86%E6%88%90Terraform/</url>
      <content type="html"><![CDATA[<h1 id="Goal"><a href="#Goal" class="headerlink" title="Goal"></a>Goal</h1><p>实现Jenkins + Terraform在AWS上创建基本环境。</p>
<h1 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h1><ul>
<li>Terraform，please refer: <a href="/categories/Terraform/">Terraform知识</a></li>
</ul>
<h1 id="Terraform-Config"><a href="#Terraform-Config" class="headerlink" title="Terraform Config"></a>Terraform Config</h1><p>创建<code>main.tf</code>，并push到Github上。<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">provider</span> <span class="string">"aws"</span> &#123;</span><br><span class="line">	<span class="title">region</span> = <span class="string">"us-east-1"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resource <span class="string">"aws_instance"</span> <span class="string">"yongfeiuall"</span> &#123;</span><br><span class="line">	<span class="title">ami</span> = <span class="string">"ami-1853ac65"</span></span><br><span class="line">	instance_type = <span class="string">"t2.micro"</span></span><br><span class="line">	tags&#123;</span><br><span class="line">	<span class="title">Name</span> = <span class="string">"integration with jenkins"</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="Jenkins-Config"><a href="#Jenkins-Config" class="headerlink" title="Jenkins Config"></a>Jenkins Config</h1><p>创建Pipeline Job：<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">node &#123;</span><br><span class="line">    </span><br><span class="line">    stage(<span class="string">'Preparation'</span>) &#123; // for display purposes</span><br><span class="line">      // Get some code from a GitHub repository</span><br><span class="line">      git credentialsId: <span class="string">'ee7a726b-e672-424d-9b78-e8015668d55a'</span>, url: <span class="string">'git@github.com:yongfeiuall/pipeline-terraform-example.git'</span></span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   stage(<span class="string">'variable file'</span>) &#123;</span><br><span class="line">      sh <span class="string">'sudo cp ~/variables.tf ~/.jenkins/workspace/ci-terraform'</span></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    stage(<span class="string">'init'</span>)&#123;</span><br><span class="line">        sh <span class="string">"terraform --version"</span></span><br><span class="line">        sh <span class="string">"terraform init"</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    stage(<span class="string">'plan'</span>)&#123;</span><br><span class="line">        sh <span class="string">"terraform plan"</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    stage(<span class="string">'apply'</span>)&#123;</span><br><span class="line">        sh <span class="string">"terraform apply -auto-approve"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>说明：</p>
<ul>
<li>Terraform预先安装在了Server上，没有用Jenkins安装</li>
<li>AWS access key和secret key不能公开，所以加了<code>stage(&#39;variable file)</code>，提前放到Server上去</li>
<li><code>terraform apply</code>加上<code>-auto-approve</code></li>
</ul>
<h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><p><img src="/images/CI/jenkins_terraform.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[南戴河游玩]]></title>
      <url>http://izheyi.com/2018/05/27/%E5%8D%97%E6%88%B4%E6%B2%B3%E6%B8%B8%E7%8E%A9/</url>
      <content type="html"><![CDATA[<p>两周前的周末跟妈妈去了南戴河玩，妈妈公司组织的活动，爸爸没有去。</p>
<p>玩的很开心，下次带你看更大的海^_^</p>
<p><img src="/images/izheyi/2018/05/1.JPG" alt=""><br><img src="/images/izheyi/2018/05/2.JPG" alt=""><br><img src="/images/izheyi/2018/05/3.JPG" alt=""><br><img src="/images/izheyi/2018/05/4.JPG" alt=""><br><img src="/images/izheyi/2018/05/5.JPG" alt=""><br><img src="/images/izheyi/2018/05/6.JPG" alt=""><br><img src="/images/izheyi/2018/05/7.JPG" alt=""><br><img src="/images/izheyi/2018/05/8.JPG" alt=""><br><img src="/images/izheyi/2018/05/9.JPG" alt=""><br><img src="/images/izheyi/2018/05/10.JPG" alt=""><br><img src="/images/izheyi/2018/05/11.JPG" alt=""><br><img src="/images/izheyi/2018/05/12.JPG" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CI/CD - 环境搭建(6) - 实现Salt部署]]></title>
      <url>http://izheyi.com/2018/05/23/CI-CD-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-6-%E5%AE%9E%E7%8E%B0Salt%E9%83%A8%E7%BD%B2/</url>
      <content type="html"><![CDATA[<h1 id="Goal"><a href="#Goal" class="headerlink" title="Goal"></a>Goal</h1><p>利用Salt，从Artifactory上Get Build，并部署。</p>
<h1 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h1><ul>
<li>集成Artifactory，please refer: <a href="/2018/05/12/CI-CD-环境搭建-3-集成Artifactory/">集成Artifactory</a></li>
<li>Salt安装，refer：<a href="/2018/02/27/Salt-简单Demo/">安装SaltStack</a></li>
</ul>
<h1 id="Salt-Config"><a href="#Salt-Config" class="headerlink" title="Salt Config"></a>Salt Config</h1><ol>
<li><p>创建Salt State</p>
<figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="constant">@Automation</span> ~]<span class="preprocessor"># cd /srv/salt/</span></span><br><span class="line">[root<span class="constant">@Automation</span> salt]<span class="preprocessor"># ls</span></span><br><span class="line">artifact.sls  file.sls  _grains  mysql.sls  top.sls  webserver.sls</span><br><span class="line">[root<span class="constant">@Automation</span> salt]<span class="preprocessor"># cat artifact.sls </span></span><br><span class="line">spring_module_downloaded:</span><br><span class="line">  artifactory.downloaded:</span><br><span class="line">   - artifact:</span><br><span class="line">       artifactory_url: http://<span class="number">192.168</span><span class="number">.220</span><span class="number">.129</span>:<span class="number">8081</span>/artifactory</span><br><span class="line">       repository: <span class="string">'libs-release-local'</span></span><br><span class="line">       artifact_id: <span class="string">'ci-example'</span></span><br><span class="line">       group_id: <span class="string">'com.izheyi'</span></span><br><span class="line">       packaging: <span class="string">'jar'</span></span><br><span class="line">       classifier: <span class="string">'sources'</span></span><br><span class="line">       version: <span class="string">'1.0.1'</span></span><br><span class="line">   - target_file: /<span class="built_in">opt</span>/artifact_project.jar</span><br><span class="line">[root<span class="constant">@Automation</span> salt]<span class="preprocessor"># cat top.sls </span></span><br><span class="line">base:</span><br><span class="line">  <span class="string">'*'</span>:</span><br><span class="line">    - artifact</span><br></pre></td></tr></table></figure>
</li>
<li><p>执行Command</p>
<figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation salt]# salt <span class="emphasis">'*'</span> state.highstate</span><br><span class="line"><span class="header">192.168.220.131:</span><br><span class="line">----------</span></span><br><span class="line"><span class="code">          ID: spring_module_downloaded</span></span><br><span class="line"><span class="code">    Function: artifactory.downloaded</span></span><br><span class="line"><span class="code">      Result: True</span></span><br><span class="line"><span class="code">     Comment: Artifact downloaded from URL: http://192.168.220.129:8081/artifactory/libs-release-local/com/izheyi/ci-example/1.0.1/ci-example-1.0.1.jar</span></span><br><span class="line"><span class="code">     Started: 02:02:49.649477</span></span><br><span class="line"><span class="code">    Duration: 860.559 ms</span></span><br><span class="line"><span class="code">     Changes:   </span></span><br><span class="line"><span class="code">              ----------</span></span><br><span class="line"><span class="code">              downloaded_file:</span></span><br><span class="line"><span class="code">                  /opt/artifact_project.jar</span></span><br><span class="line"></span><br><span class="line"><span class="header">Summary</span><br><span class="line">------------</span></span><br><span class="line">Succeeded: 1 (changed=1)</span><br><span class="line"><span class="header">Failed:    0</span><br><span class="line">------------</span></span><br><span class="line">Total states run:     1</span><br><span class="line">[root@Automation salt]#</span><br></pre></td></tr></table></figure>
</li>
<li><p>去Minion检查</p>
<figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="constant">@Automation</span> <span class="built_in">opt</span>]<span class="preprocessor"># ls</span></span><br><span class="line">alfresco-community  artifact_project.jar  my_new_directory  rh</span><br><span class="line">[root<span class="constant">@Automation</span> <span class="built_in">opt</span>]<span class="preprocessor">#</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>用Command运行</p>
<figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="constant">@Automation</span> salt]<span class="preprocessor"># salt <span class="string">'*'</span> cmd.run <span class="string">'cd /opt; java -jar artifact_project.jar'</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>检查成功</p>
<figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="constant">@Automation</span> <span class="built_in">opt</span>]<span class="preprocessor"># curl http://192.168.220.131:8080/</span></span><br><span class="line">Hello World!</span><br><span class="line">[root<span class="constant">@Automation</span> <span class="built_in">opt</span>]<span class="preprocessor">#</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="With-Jenkins"><a href="#With-Jenkins" class="headerlink" title="With Jenkins"></a>With Jenkins</h1><p>用Shell：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sshpass -<span class="tag">p</span> yongfei<span class="class">.hu</span> ssh -o <span class="string">"StrictHostKeyChecking no"</span>  root@<span class="number">192.168</span>.<span class="number">220.130</span> <span class="string">"salt '*' state.highstate"</span></span><br><span class="line"></span><br><span class="line">sshpass -<span class="tag">p</span> yongfei<span class="class">.hu</span> ssh -o <span class="string">"StrictHostKeyChecking no"</span>  root@<span class="number">192.168</span>.<span class="number">220.130</span> <span class="string">"salt '*' cmd.run 'cd /opt; java -jar artifact_project.jar'"</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CI/CD - 环境搭建(5) - 集成Automation]]></title>
      <url>http://izheyi.com/2018/05/20/CI-CD-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-5-%E9%9B%86%E6%88%90Automation/</url>
      <content type="html"><![CDATA[<p>这里用一个简单spring boot例子，运行部署Job后自动触发Automaion job。</p>
<h1 id="Automation"><a href="#Automation" class="headerlink" title="Automation"></a>Automation</h1><p>简单的用Python + Requests + Tox做个验证。</p>
<ul>
<li><p>自动化脚本：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">r = requests.<span class="function"><span class="title">get</span><span class="params">(<span class="string">'http://localhost:8000'</span>)</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(r.status_code)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(r.text)</span></span></span><br><span class="line"></span><br><span class="line">assert r<span class="class">.status_code</span> == <span class="number">200</span></span><br><span class="line">assert <span class="string">'Hello World!'</span> <span class="keyword">in</span> r.text</span><br></pre></td></tr></table></figure>
</li>
<li><p>Job配置<br><img src="/images/CI/jenkins_automation.jpg" alt=""></p>
</li>
<li><p>结果验证<br><img src="/images/CI/jenkins_automation_result.jpg" alt=""></p>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python编程 - 从入门到实践]]></title>
      <url>http://izheyi.com/2018/05/20/Python%E7%BC%96%E7%A8%8B-%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5/</url>
      <content type="html"><![CDATA[<p>系统的把基础知识又过了一遍，算是个简单笔记吧。</p>
<h2 id="简单数据类型"><a href="#简单数据类型" class="headerlink" title="简单数据类型"></a>简单数据类型</h2><p>String - 大小写<br>title(), upper(), lower()</p>
<p>String - 连接<br>+</p>
<p>String - 空白<br>\n, \t, lstrip(), rstrip(), strip()<br>len(), split(), Str()</p>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>正向0，反向-1<br>append(), insert()<br>remove(), del(), pop(),<br>sort(), reverse(), sorted(),<br>遍历 - for in</p>
<p>数字列表<br>range(), min(), max(), sum()</p>
<p>列表解析<br>切片 - 切片表示法[:] 创建列表的副</p>
<h2 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h2><p>遍历字典，Key，Value<br>Set剔除重复项</p>
<h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>可变参数允许你传入0个或任意个参数，这些可变参数在函数调用时自动组装为一个tuple。而关键字参数允许你传入0个或任意个含参数名的参数，这些关键字参数在函数内部自动组装为一个dict。<br>一个星（<em>）：表示接收的参数作为元组来处理<br>两个星（*</em>）：表示接收的参数作为字典来处理</p>
<h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><p><strong>init</strong>()<br>将实例用作属性</p>
<h2 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h2><p>读取模式 （’r’ ）、写入模式 （’w’ ）、附加模式 （’a’ ）或让你能够读取和写入文件的模式（’r+’ ）。如果你省略了模式实参，Python将以默认的只读模式打开文件。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CI/CD - 环境搭建(4) - 自动更新Next Release Version]]></title>
      <url>http://izheyi.com/2018/05/13/CI-CD-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-4-%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0Next-Release-Version/</url>
      <content type="html"><![CDATA[<p>前面已经实现最基本的当有Code Commit，会自动运行Jenkins Job，并把Artifact Upload到Artifactory上去。这中间的Version是手动来更改的，最好也跟着一并做成全自动化的。</p>
<h1 id="Goal"><a href="#Goal" class="headerlink" title="Goal"></a>Goal</h1><p>Build成功后，自动更新Verion Number在Pom文件，并上传至Github。</p>
<h1 id="Implementation"><a href="#Implementation" class="headerlink" title="Implementation"></a>Implementation</h1><ol>
<li><p>通过Shell Script对Pipeline做了一些修改，增加获得Version，更改Version，上传Github</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">node &#123;</span><br><span class="line">   def mvnHome</span><br><span class="line">   </span><br><span class="line">   stage(<span class="string">'Checkout and Preparation'</span>) &#123; // <span class="keyword">for</span> display purposes</span><br><span class="line">      // Get some code from a GitHub repository</span><br><span class="line">      git credentialsId: <span class="string">'ee7a726b-e672-424d-9b78-e8015668d55a'</span>, url: <span class="string">'git@github.com:yongfeiuall/artifactory-maven-example.git'</span></span><br><span class="line">      // Get the Maven tool.</span><br><span class="line">      // ** NOTE: This <span class="string">'M3'</span> Maven tool must be configured</span><br><span class="line">      // **       <span class="keyword">in</span> the global configuration.           </span><br><span class="line">      mvnHome = tool <span class="string">'M3'</span></span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   stage(<span class="string">'Get current version'</span>) &#123;</span><br><span class="line">        sh <span class="string">"'<span class="variable">$&#123;mvnHome&#125;</span>/bin/mvn' help:evaluate -Dexpression=project.version | grep -e '^[^\\[]' &gt; version.out"</span></span><br><span class="line">        version = <span class="built_in">read</span>File(<span class="string">"version.out"</span>).trim()</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Version is <span class="variable">$&#123;version&#125;</span>"</span></span><br><span class="line">		sh <span class="string">'cat version.out |awk -F "-" \'</span>&#123;<span class="built_in">print</span> <span class="variable">$1</span>&#125;\<span class="string">' &gt; release.out'</span></span><br><span class="line">        release = <span class="built_in">read</span>File(<span class="string">"release.out"</span>).trim()</span><br><span class="line">		<span class="built_in">echo</span> <span class="string">"Release version is <span class="variable">$&#123;release&#125;</span>"</span></span><br><span class="line">        </span><br><span class="line">        sh <span class="string">'cat release.out|awk \'</span>&#123;n=split(<span class="variable">$1</span>,A,<span class="string">"."</span>);i=<span class="number">2</span>;major=A[<span class="number">1</span>];<span class="keyword">while</span>(i&lt;n) major = major <span class="string">"."</span> A[i++];<span class="built_in">print</span> major&#125;\<span class="string">' &gt; major.out'</span></span><br><span class="line">        sh <span class="string">'cat release.out|awk \'</span>&#123;n=split(<span class="variable">$1</span>,A,<span class="string">"."</span>);<span class="built_in">print</span> A[n]&#125;\<span class="string">' &gt; minor.out'</span></span><br><span class="line">        major = <span class="built_in">read</span>File(<span class="string">"major.out"</span>).trim()</span><br><span class="line">        minor = <span class="built_in">read</span>File(<span class="string">"minor.out"</span>).trim() as Integer</span><br><span class="line">    &#125;</span><br><span class="line">	</span><br><span class="line">   stage(<span class="string">'Build'</span>) &#123;</span><br><span class="line">      // Run the maven build</span><br><span class="line">      sh <span class="string">"'<span class="variable">$&#123;mvnHome&#125;</span>/bin/mvn' clean install -DskipTests"</span></span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   stage(<span class="string">'Results'</span>) &#123;</span><br><span class="line">      archive <span class="string">'target/*.jar'</span></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    stage(<span class="string">'Update pom with next development version'</span>) &#123;</span><br><span class="line">        sh <span class="string">"'<span class="variable">$&#123;mvnHome&#125;</span>/bin/mvn' versions:set -DnewVersion=<span class="variable">$&#123;major&#125;</span>.<span class="variable">$&#123;minor+1&#125;</span>-SNAPSHOT -DoldVersion=* -DgroupId=* -DartifactId=* -DgenerateBackupPoms=false"</span></span><br><span class="line">        sh script:<span class="string">'git status'</span></span><br><span class="line">        modifiedFiles = sh(<span class="built_in">return</span>Stdout: <span class="literal">true</span>, script: <span class="string">"git ls-files -m"</span>).trim()</span><br><span class="line">        <span class="built_in">echo</span> modifiedFiles</span><br><span class="line">        <span class="keyword">if</span>(modifiedFiles) &#123;</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"commit required"</span></span><br><span class="line">            fileAdded = sh(<span class="built_in">return</span>Stdout: <span class="literal">true</span>, script: <span class="string">"git add ."</span>)</span><br><span class="line">            sh(script: <span class="string">"git commit -m 'RELEASE_BUILD: changing to next development'"</span>)</span><br><span class="line">            sh(script: <span class="string">"git push --set-upstream origin master"</span>)</span><br><span class="line">          </span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"commit completed"</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"commit not required"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>运行Jenkins Job<br><img src="/images/CI/jenkins_next_version_maven.jpg" alt=""></p>
</li>
<li>Github验证<br><img src="/images/CI/jenkins_next_version_github.jpg" alt=""></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CI/CD - 环境搭建(3) - 集成Artifactory]]></title>
      <url>http://izheyi.com/2018/05/12/CI-CD-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-3-%E9%9B%86%E6%88%90Artifactory/</url>
      <content type="html"><![CDATA[<h1 id="Goal"><a href="#Goal" class="headerlink" title="Goal"></a>Goal</h1><p>When Github have commit，will trigger Jenkins job to upload artifact to artifactory.</p>
<h1 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h1><p>Artifactory installation and running，please refer: <a href="/2018/05/05/CI-CD-artifacroty/">Artifactory</a></p>
<h1 id="Config-Artifactory-with-Jenkins"><a href="#Config-Artifactory-with-Jenkins" class="headerlink" title="Config Artifactory with Jenkins"></a>Config Artifactory with Jenkins</h1><p>Jenkins &gt; Manage Jenkins &gt; Configure System<br><img src="/images/CI/jenkins_artifactory.jpg" alt=""></p>
<h1 id="Update-Pipeline-Script"><a href="#Update-Pipeline-Script" class="headerlink" title="Update Pipeline Script"></a>Update Pipeline Script</h1><p>Add script for uploading Artifact<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">node &#123;</span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">mvnHome</span></span><br><span class="line"></span>   <span class="function"><span class="keyword">def</span> <span class="title">baseArtifactoryUrl</span> =</span> <span class="symbol">'com</span>/izheyi/yongfeiuall'</span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">artifactoryServer</span> =</span> <span class="type">Artifactory</span>.server <span class="symbol">'artifact</span>-jenkins'</span><br><span class="line">   </span><br><span class="line">   stage(<span class="symbol">'Preparatio</span>n') &#123; <span class="comment">// for display purposes</span></span><br><span class="line">      <span class="comment">// Get some code from a GitHub repository</span></span><br><span class="line">      git credentialsId: <span class="symbol">'ee7a726b</span>-e672-<span class="number">424</span>d-<span class="number">9</span>b78-e8015668d55a', url: <span class="symbol">'https</span>:<span class="comment">//github.com/yongfeiuall/artifactory-maven-example.git'</span></span><br><span class="line">      <span class="comment">// Get the Maven tool.</span></span><br><span class="line">      <span class="comment">// ** <span class="doctag">NOTE:</span> This 'M3' Maven tool must be configured</span></span><br><span class="line">      <span class="comment">// **       in the global configuration.           </span></span><br><span class="line">      mvnHome = tool <span class="symbol">'M</span>3'</span><br><span class="line">   &#125;</span><br><span class="line">   stage(<span class="symbol">'Buil</span>d') &#123;</span><br><span class="line">      <span class="comment">// Run the maven build</span></span><br><span class="line">      <span class="keyword">if</span> (isUnix()) &#123;</span><br><span class="line">         sh <span class="string">"'$&#123;mvnHome&#125;/bin/mvn' -Dmaven.test.failure.ignore clean package"</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         bat(/<span class="string">"$&#123;mvnHome&#125;\bin\mvn"</span> -<span class="type">Dmaven</span>.test.failure.ignore clean <span class="keyword">package</span>/)</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">    stage(<span class="symbol">'publish</span> release build to artifactory') &#123;</span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">uploadSpec</span> =</span> <span class="string">"""</span><br><span class="line">            &#123;</span><br><span class="line">                "files": [&#123;</span><br><span class="line">                    "pattern": "target/*.jar",</span><br><span class="line">                    "target": "libs-release-local/$&#123;baseArtifactoryUrl&#125;/test/"</span><br><span class="line">                &#125;]</span><br><span class="line">            &#125;</span><br><span class="line">        """</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">buildInfo</span> =</span> artifactoryServer.upload(uploadSpec)</span><br><span class="line">        artifactoryServer.publishBuildInfo buildInfo</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="Verify-Uploadiing"><a href="#Verify-Uploadiing" class="headerlink" title="Verify Uploadiing"></a>Verify Uploadiing</h1><ol>
<li>Run jenkins job<br><img src="/images/CI/jenkins_artifactory_run.jpg" alt=""></li>
<li>Check on Artifactory<br><img src="/images/CI/jenkins_artifactory_verify.jpg" alt=""></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CI/CD - 环境搭建(2) - Webhook实现Jenkins Job自动运行]]></title>
      <url>http://izheyi.com/2018/05/09/CI-CD-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-2-Webhook%E5%AE%9E%E7%8E%B0Jenkins-Job%E8%87%AA%E5%8A%A8%E8%BF%90%E8%A1%8C/</url>
      <content type="html"><![CDATA[<h1 id="Goal"><a href="#Goal" class="headerlink" title="Goal"></a>Goal</h1><p>When Github have commit，will trigger Jenkins job run automatically。</p>
<h1 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h1><p><em>Note: GitHub would not know how to contact “localhost” or 127.0.0.1: what GitHub would consider “local” is not your local machine.</em></p>
<p>Use Ngrok to expose our local host to the Internet. </p>
<ol>
<li>Download <a href="https://ngrok.com/download" target="_blank" rel="external">ngrok</a></li>
<li>Config and run<figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="property">@Automation</span> src]<span class="comment"># ./ngrok authtoken 3rsqkJTsPKW432XeLzEZ2_2uVdSyDqgLsTuSSb7FhaH</span></span><br><span class="line">Authtoken saved <span class="keyword">to</span> configuration <span class="attribute">file</span>: <span class="pi">/root/</span>.ngrok2/ngrok.yml</span><br><span class="line">[root<span class="property">@Automation</span> src]<span class="comment"># ./ngrok http 8080</span></span><br><span class="line"></span><br><span class="line">ngrok <span class="keyword">by</span> <span class="property">@inconshreveable</span>                                                                                                                                                   (Ctrl+C <span class="keyword">to</span> quit)</span><br><span class="line">                                                                                                                                                                                            </span><br><span class="line">Session Status                online                                                                                                                                                        </span><br><span class="line">Account                       yongfeiuall (<span class="attribute">Plan</span>: Free)                                                                                                                                      </span><br><span class="line">Version                       <span class="number">2.2</span>.<span class="number">8</span>                                                                                                                                                         </span><br><span class="line">Region                        United States (us)                                                                                                                                            </span><br><span class="line">Web Interface                 <span class="attribute">http</span>:<span class="pi">//127.0.0.1:4040                                                                                                                                         </span><br><span class="line">Forwarding                    http://</span><span class="number">5a</span>6d5b8a.ngrok.io<span class="function"> -&gt;</span> <span class="attribute">localhost</span>:<span class="number">8080</span>                                                                                                                    </span><br><span class="line">Forwarding                    <span class="attribute">https</span>:<span class="pi">//v.ngrok.io -&gt; localhost:8080                                                                                                                   </span><br><span class="line">                                                                                                                                                                                            </span><br><span class="line">Connections                   ttl     opn     rt1     rt5     p50     p90                                                                                                                   </span><br><span class="line">                              35      0       0.00    0.00    5.37    14.10</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="Create-a-Personal-Access-Token-in-GitHub"><a href="#Create-a-Personal-Access-Token-in-GitHub" class="headerlink" title="Create a Personal Access Token in GitHub"></a>Create a Personal Access Token in GitHub</h1><p><img src="/images/CI/jenkins_git_addtoken.jpg" alt=""><br>Copy the token<br><img src="/images/CI/jenkins_git_token.jpg" alt=""></p>
<h1 id="Set-Up-Jenkins-Access-to-GitHub-with-Token"><a href="#Set-Up-Jenkins-Access-to-GitHub-with-Token" class="headerlink" title="Set Up Jenkins Access to GitHub with Token"></a>Set Up Jenkins Access to GitHub with Token</h1><h2 id="Add-Token-to-Jenkins"><a href="#Add-Token-to-Jenkins" class="headerlink" title="Add Token to Jenkins"></a>Add Token to Jenkins</h2><p>Jenkins &gt; Credentials<br><img src="/images/CI/jenkins_credential.jpg" alt=""></p>
<h2 id="Config-Access-to-Github"><a href="#Config-Access-to-Github" class="headerlink" title="Config Access to Github"></a>Config Access to Github</h2><p>Jenkins &gt; Manage Jenkins &gt; Configure System<br><img src="/images/CI/jenkins_githubserver.jpg" alt=""></p>
<h1 id="Config-the-Webhook"><a href="#Config-the-Webhook" class="headerlink" title="Config the Webhook"></a>Config the Webhook</h1><p>Jenkins does not automatically configure webhooks after config pipeline, need to run the job the first time.</p>
<p><em>In order to connect to Github, need to use the below format:<br><code>git credentialsId: &#39;xxxxxxxxxxxxx&#39;, url: &#39;https://github.com/yongfeiuall/artifactory-maven-example.git&#39;</code></em></p>
<p>Then config this job again and save it without any updating, go to Github to check webhook in Repository setting page.<br><img src="/images/CI/jenkins_git_webhook.jpg" alt=""></p>
<h1 id="Check-trigger-automatically"><a href="#Check-trigger-automatically" class="headerlink" title="Check trigger automatically"></a>Check trigger automatically</h1><p>Update script and commit to Github, Jenkins job run automatically<br><img src="/images/CI/jenkins_pipeline_trigger.jpg" alt=""></p>
<p>Download the <code>ArtifactoryJenkins-0.0.1-SNAPSHOT.jar</code> file, and extract source code, build successfully.<br><img src="/images/CI/jenkins_pipeline_trigger_check.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CI/CD - 环境搭建(1) - Jenkins Pipeline + Github ]]></title>
      <url>http://izheyi.com/2018/05/09/CI-CD-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-1-Jenkins-Pipeline-Github/</url>
      <content type="html"><![CDATA[<h1 id="实现环境"><a href="#实现环境" class="headerlink" title="实现环境"></a>实现环境</h1><p>通过Jenkins Job从Github获取代码并用Maven Build。</p>
<p><em>说明： 这里只用了一个Server, 用到的工具都安装在此</em></p>
<p>Jenkins安运行，请参考<a href="/2018/05/05/CI-CD-jenkins安装/">Jenkins安装</a></p>
<ol>
<li><p>在Github创建一个Repository<br><img src="/images/CI/jenkins_git_project.jpg" alt=""><br>代码：</p>
<figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">package artifactory;</span><br><span class="line"></span><br><span class="line">public class <span class="type">MavenSample</span> &#123;</span><br><span class="line"></span><br><span class="line">	public <span class="keyword">static</span> <span class="type">void</span> main(<span class="type">String</span>[] args) &#123;</span><br><span class="line">		// <span class="type">TODO</span> <span class="type">Auto</span>-generated <span class="keyword">method</span> stub</span><br><span class="line">		</span><br><span class="line">		<span class="type">System</span>.<span class="keyword">out</span>.println(<span class="string">"This for testing artifactory, github and jenkins"</span>);</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装/升级Maven，并做以下配置(Global Tool Configuration)<br><img src="/images/CI/jenkins_maven.jpg" alt=""></p>
</li>
<li>安装/升级Git，并做以下配置(Global Tool Configuration)<br><img src="/images/CI/jenkins_git.jpg" alt=""></li>
<li>配置JDK(Global Tool Configuration)<br><img src="/images/CI/jenkins_jdk.jpg" alt=""></li>
<li><p>创建一个Jenkins Pipeline Job<br><img src="/images/CI/jenkins_pipeline_script.jpg" alt=""></p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">node &#123;</span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">mvnHome</span></span><br><span class="line"></span>   stage(<span class="symbol">'Preparatio</span>n') &#123; <span class="comment">// for display purposes</span></span><br><span class="line">      <span class="comment">// Get some code from a GitHub repository</span></span><br><span class="line">      git <span class="symbol">'https</span>:<span class="comment">//www.github.com/yongfeiuall/artifactory-maven-example.git'</span></span><br><span class="line">      <span class="comment">// Get the Maven tool.</span></span><br><span class="line">      <span class="comment">// ** <span class="doctag">NOTE:</span> This 'M3' Maven tool must be configured</span></span><br><span class="line">      <span class="comment">// **       in the global configuration.           </span></span><br><span class="line">      mvnHome = tool <span class="symbol">'M</span>3'</span><br><span class="line">   &#125;</span><br><span class="line">   stage(<span class="symbol">'Buil</span>d') &#123;</span><br><span class="line">      <span class="comment">// Run the maven build</span></span><br><span class="line">      <span class="keyword">if</span> (isUnix()) &#123;</span><br><span class="line">         sh <span class="string">"'$&#123;mvnHome&#125;/bin/mvn' -Dmaven.test.failure.ignore clean package"</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         bat(/<span class="string">"$&#123;mvnHome&#125;\bin\mvn"</span> -<span class="type">Dmaven</span>.test.failure.ignore clean <span class="keyword">package</span>/)</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   stage(<span class="symbol">'Result</span>s') &#123;</span><br><span class="line">      archive <span class="symbol">'target</span><span class="comment">/*.jar'</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>运行Job<br><img src="/images/CI/jenkins_pipeline.jpg" alt=""></p>
</li>
</ol>
<p>最基本的配置好了，接下来会配置当Github有Commit时Job自动运行。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[放下手机，去感受生活的真实和生命的美好]]></title>
      <url>http://izheyi.com/2018/05/06/%E6%94%BE%E4%B8%8B%E6%89%8B%E6%9C%BA%EF%BC%8C%E5%8E%BB%E6%84%9F%E5%8F%97%E7%94%9F%E6%B4%BB%E7%9A%84%E7%9C%9F%E5%AE%9E%E5%92%8C%E7%94%9F%E5%91%BD%E7%9A%84%E7%BE%8E%E5%A5%BD/</url>
      <content type="html"><![CDATA[<p>有感于最近花太多时间在手机上，现在的人对于手机的依赖是不是跟之前的鸦片一样？</p>
<p>我们生在这个瞬息万变的时代，科技的创新和发展，作为载体，特别是手机，给我们的工作和生活带来了很多便利，也让我们的生活节奏越来越快。因为快，特别是在大城市，我们模糊了生活和工作的界线，我们会焦虑，就会不断的去学习新知识，了解新科技，生怕自己被这个时代落下。</p>
<p>见到过开车玩手机的，吃饭之前不让TA先拍个照都感觉对不起TA，甚至在地铁上的劝导口号都成了别看手机，下来再看。不管走到哪里，放眼望去，基本都是低头族，手机俨然成了生活的必需品。</p>
<p>不要拿手机和Pad去哄孩子，其实大家都知道手机的危害，更不要沉迷于手机让孩子觉得手机比她重要，有太多的案例由于家长玩手机而造成不可挽回的悲剧。请放下手机，全身心的去陪伴孩子，有时候真的感觉到孩子在某一瞬间就长大了，你现在不想陪她，等你想陪她的时候，晚了。</p>
<p>请放下手机，它不是你生活的唯一。去看看这个世界，去拥抱大自然，多一些与人的交流，感受一下生活的真实和生命的美好。</p>
<p>科技的发展对于我们，我们的下一代，带来了便利，但是对我们的上一代，有时候看起来是有点残酷的。</p>
<p>父母对新技术的拒绝和不知所措，不会用手机微信和网络支付，甚至不会连Wifi，我们应该理解，在他们那个年代技术和知识没有爆炸增长，他们过着甚至可以一眼看到头的生活。我们应该给予他们耐心，就像网上流传的手绘微信使用说明，家里电脑桌面上特制的图标和文字。在快速发展的技术面前我们是那么渺小，不能够带着所有人一起赶上这个时代，但不管技术发展多快多好，在家人和亲情面前它才是那渺小的一方。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CI/CD - jenkins安装]]></title>
      <url>http://izheyi.com/2018/05/05/CI-CD-jenkins%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<p>Jenkins 是一款流行的开源持续集成（Continuous Integration）工具，广泛用于项目开发，具有自动化构建、测试和部署等功能。</p>
<p>可以.war的方式来运行Jenkins</p>
<ol>
<li>从<a href="https://jenkins.io/download/" target="_blank" rel="external">Jenkins</a>下载jenkins.war.</li>
<li>在目录下运行：<code>java -jar jenkens.war</code></li>
</ol>
<p>启动后会有这个错：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Upgrading Jenkins. Failed to update the default Update Site <span class="string">'default'</span>. Plugin upgrades may fail.</span><br><span class="line">javax<span class="class">.net</span><span class="class">.ssl</span><span class="class">.SSLHandshakeException</span>: sun<span class="class">.security</span><span class="class">.validator</span><span class="class">.ValidatorException</span>: PKIX path building failed: sun<span class="class">.security</span><span class="class">.provider</span><span class="class">.certpath</span><span class="class">.SunCertPathBuilderException</span>: unable to find valid certification path to requested target</span><br><span class="line">	at sun<span class="class">.security</span><span class="class">.ssl</span><span class="class">.Alerts</span><span class="class">.getSSLException</span>(Alerts<span class="class">.java</span>:<span class="number">192</span>)</span><br><span class="line">	at sun<span class="class">.security</span><span class="class">.ssl</span><span class="class">.SSLSocketImpl</span><span class="class">.fatal</span>(SSLSocketImpl<span class="class">.java</span>:<span class="number">1917</span>)</span><br><span class="line">	at sun<span class="class">.security</span><span class="class">.ssl</span><span class="class">.Handshaker</span><span class="class">.fatalSE</span>(Handshaker<span class="class">.java</span>:<span class="number">301</span>)</span><br><span class="line">	at sun<span class="class">.security</span><span class="class">.ssl</span><span class="class">.Handshaker</span><span class="class">.fatalSE</span>(Handshaker<span class="class">.java</span>:<span class="number">295</span>)</span><br><span class="line">	at sun<span class="class">.security</span><span class="class">.ssl</span><span class="class">.ClientHandshaker</span><span class="class">.serverCertificate</span>(ClientHandshaker<span class="class">.java</span>:<span class="number">1369</span>)</span><br><span class="line">	at sun<span class="class">.security</span><span class="class">.ssl</span><span class="class">.ClientHandshaker</span><span class="class">.processMessage</span>(ClientHandshaker<span class="class">.java</span>:<span class="number">156</span>)</span><br><span class="line">	at sun<span class="class">.security</span><span class="class">.ssl</span><span class="class">.Handshaker</span><span class="class">.processLoop</span>(Handshaker<span class="class">.java</span>:<span class="number">925</span>)</span><br><span class="line">	at sun<span class="class">.security</span><span class="class">.ssl</span><span class="class">.Handshaker</span><span class="class">.process_record</span>(Handshaker<span class="class">.java</span>:<span class="number">860</span>)</span><br><span class="line">	at sun<span class="class">.security</span><span class="class">.ssl</span><span class="class">.SSLSocketImpl</span><span class="class">.readRecord</span>(SSLSocketImpl<span class="class">.java</span>:<span class="number">1043</span>)</span><br><span class="line">	at sun<span class="class">.security</span><span class="class">.ssl</span><span class="class">.SSLSocketImpl</span><span class="class">.performInitialHandshake</span>(SSLSocketImpl<span class="class">.java</span>:<span class="number">1343</span>)</span><br><span class="line">	at sun<span class="class">.security</span><span class="class">.ssl</span><span class="class">.SSLSocketImpl</span><span class="class">.startHandshake</span>(SSLSocketImpl<span class="class">.java</span>:<span class="number">1371</span>)</span><br><span class="line">	at sun<span class="class">.security</span><span class="class">.ssl</span><span class="class">.SSLSocketImpl</span><span class="class">.startHandshake</span>(SSLSocketImpl<span class="class">.java</span>:<span class="number">1355</span>)</span><br><span class="line">	at sun<span class="class">.net</span><span class="class">.www</span><span class="class">.protocol</span><span class="class">.https</span><span class="class">.HttpsClient</span><span class="class">.afterConnect</span>(HttpsClient<span class="class">.java</span>:<span class="number">563</span>)</span><br><span class="line">	at sun<span class="class">.net</span><span class="class">.www</span><span class="class">.protocol</span><span class="class">.https</span><span class="class">.AbstractDelegateHttpsURLConnection</span><span class="class">.connect</span>(AbstractDelegateHttpsURLConnection<span class="class">.java</span>:<span class="number">185</span>)</span><br><span class="line">	at sun<span class="class">.net</span><span class="class">.www</span><span class="class">.protocol</span><span class="class">.http</span><span class="class">.HttpURLConnection</span><span class="class">.getInputStream0</span>(HttpURLConnection<span class="class">.java</span>:<span class="number">1511</span>)</span><br><span class="line">	at sun<span class="class">.net</span><span class="class">.www</span><span class="class">.protocol</span><span class="class">.http</span><span class="class">.HttpURLConnection</span><span class="class">.getInputStream</span>(HttpURLConnection<span class="class">.java</span>:<span class="number">14</span></span><br></pre></td></tr></table></figure></p>
<p>不能够安装Plugin。</p>
<p>解决方法：<br>把HTTPS换成HTTP(/root/.jenkins/hudson.model.UpdateCenter.xml)<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version='1.0' encoding='UTF-8'?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">sites</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">site</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">id</span>&gt;</span>default<span class="tag">&lt;/<span class="title">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">url</span>&gt;</span>https://updates.jenkins.io/update-center.json<span class="tag">&lt;/<span class="title">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">site</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">sites</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CI/CD - artifactory]]></title>
      <url>http://izheyi.com/2018/05/05/CI-CD-artifacroty/</url>
      <content type="html"><![CDATA[<p>Jfrog的Artifactory是一款Maven仓库服务端软件，可以用来在内网搭建maven仓库，供公司内部公共库的上传和发布，以提高公共代码使用的便利性。</p>
<p>用Open Source进行学习，从这里下载<a href="https://jfrog.com/open-source/" target="_blank" rel="external">JFrog</a>。安装相对比较简单，Linux常规安装，默认安装到/opt/jfrog目录下。（需要先安装JDK1.8）</p>
<p>安装成功后，执行service artifactory start，默认会在8081端口开启服务。这时从浏览器里访问即可。<br><img src="/images/CI/artifact_install.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Terraform - Advanced Usage]]></title>
      <url>http://izheyi.com/2018/04/30/Terraform-Advanced-Usage/</url>
      <content type="html"><![CDATA[<h1 id="Loops"><a href="#Loops" class="headerlink" title="Loops"></a>Loops</h1><p>Use meta-parameter <code>count</code>. Here we use this example to create 3 s3 bucket with different name.</p>
<ol>
<li><p>Create config file</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># variable</span></span><br><span class="line"><span class="title">variable</span> <span class="string">"bucket_names"</span> &#123;</span><br><span class="line">	<span class="title">description</span> = <span class="string">"Create s3 bucket with these names"</span></span><br><span class="line">	type = <span class="string">"list"</span></span><br><span class="line">	default = [<span class="string">"hulu-1"</span>, <span class="string">"hulu-2"</span>, <span class="string">"hulu-3"</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">provider <span class="string">"aws"</span> &#123;</span><br><span class="line">	<span class="title">region</span> = <span class="string">"ap-northeast-1"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># S3</span></span><br><span class="line"><span class="comment"># you can use count.index to get the index of each “iteration” in the “loop”.</span></span><br><span class="line"><span class="comment"># you can accomplish the same thing by using count and two interpolation functions, element and length:</span></span><br><span class="line"><span class="comment"># "$&#123;element(LIST, INDEX)&#125;"</span></span><br><span class="line"><span class="comment"># "$&#123;length(LIST)&#125;"</span></span><br><span class="line">resource <span class="string">"aws_s3_bucket"</span> <span class="string">"terraform_loop"</span> &#123;</span><br><span class="line">	<span class="title">count</span> = <span class="string">"<span class="variable">$&#123;length(var.bucket_names)&#125;</span>"</span></span><br><span class="line">	bucket = <span class="string">"<span class="variable">$&#123;element(var.bucket_names, count.index)&#125;</span>"</span></span><br><span class="line"></span><br><span class="line">	versioning &#123;</span><br><span class="line">		<span class="title">enabled</span> = <span class="built_in">true</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line"><span class="comment"># which bucket name you want to return by specifying its index in the list: </span></span><br><span class="line"><span class="comment"># $&#123;TYPE.NAME.INDEX.ATTRIBUTE&#125;"</span></span><br><span class="line"><span class="comment"># when you use the '*' character, you get back a list, so you need to wrap the output variable with brackets</span></span><br><span class="line">output <span class="string">"1st_bucket_names"</span> &#123;</span><br><span class="line"><span class="title">value</span> = [<span class="string">"<span class="variable">$&#123;aws_s3_bucket.terraform_loop.0.bucket&#125;</span>"</span>]</span><br><span class="line">&#125;</span><br><span class="line">output <span class="string">"bucket_names"</span> &#123;</span><br><span class="line"><span class="title">value</span> = [<span class="string">"<span class="variable">$&#123;aws_s3_bucket.terraform_loop.*.bucket&#125;</span>"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Run <code>terraform init</code>, <code>terraform plan</code> and <code>terraform apply</code> commands<br><img src="/images/terraform/adv_loop.jpg" alt=""><br>Note that since the ‘*’ syntax returns a list, you can combine it with other<br>interpolation functions, such as <code>element</code>.</p>
</li>
</ol>
<h1 id="If-statements"><a href="#If-statements" class="headerlink" title="If-statements"></a>If-statements</h1><p>You accomplish the same thing by using the count parameter and taking advantage of two properties:</p>
<ol>
<li>In Terraform, if you set a variable to a boolean true (that is, the word true without any quotes around it), it will be coerced into a 1, and if you set it to a boolean false, it will be coerced into a 0.</li>
<li><p>If you set count to 1 on a resource, you get one copy of that resource; if you set count to 0, that resource is not created at all.</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># variable</span></span><br><span class="line"><span class="title">variable</span> <span class="string">"enable_s3"</span> &#123;</span><br><span class="line">	<span class="title">description</span> = <span class="string">"Create s3 bucket with these names"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># S3</span></span><br><span class="line">resource <span class="string">"aws_s3_bucket"</span> <span class="string">"terraform_loop"</span> &#123;</span><br><span class="line">	<span class="title">count</span> = <span class="string">"<span class="variable">$&#123;var.enable_s3)&#125;</span>"</span></span><br><span class="line">	bucket = <span class="string">"if condition"</span></span><br><span class="line"></span><br><span class="line">	versioning &#123;</span><br><span class="line">		<span class="title">enabled</span> = <span class="built_in">true</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>apply:</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">provider</span> <span class="string">"aws"</span> &#123;</span><br><span class="line">	<span class="title">region</span> = <span class="string">"ap-northeast-1"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">module <span class="string">"module-test"</span> &#123;</span><br><span class="line">	<span class="title">source</span> = <span class="string">"../../module/s3"</span></span><br><span class="line">	bucket_name = <span class="built_in">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>To handle more complicated cases, you can again use the count parameter, but this time, rather than setting it to a boolean variable, you set it to the value returned by a conditional. Conditionals in Terraform use the same ternary syntax available in many programming<br>languages:<br><code>&quot;${CONDITION ? TRUEVAL : FALSEVAL}&quot;</code><br>For example, a more verbose way to do the simple if-statement from the previous section is as follows:<br>count = “${var.enable_s3 ? 1 : 0}”</p>
<h1 id="If-else-statements"><a href="#If-else-statements" class="headerlink" title="If-else-statements"></a>If-else-statements</h1><p>You can also use count to implement this:<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">count</span> = <span class="string">"<span class="variable">$&#123;var.enable_s3)&#125;</span>"</span></span><br><span class="line"></span><br><span class="line">count = <span class="string">"<span class="variable">$&#123;1 - var.enable_s3)&#125;</span>"</span></span><br></pre></td></tr></table></figure></p>
<p>you can take advantage of the concat interpolation function to implement complicated If-Else-Statements:<br><code>&quot;${concat(LIST1, LIST2, ...)}&quot;</code></p>
<h1 id="Zero-downtime-deployment"><a href="#Zero-downtime-deployment" class="headerlink" title="Zero-downtime deployment"></a>Zero-downtime deployment</h1><p>This is exactly what the <code>create_before_destroy</code> lifecycle setting does!</p>
<p>As an added bonus, if something went wrong during the deployment, Terraform will automatically roll back!</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Terraform - Modules]]></title>
      <url>http://izheyi.com/2018/04/29/Terraform-Modules/</url>
      <content type="html"><![CDATA[<p>Modules in Terraform are self-contained packages of Terraform configurations that are managed as a group. Modules are used to create reusable components in Terraform as well as for basic code organization.</p>
<p>Can find Terraform Module here: <a href="https://registry.terraform.io/" target="_blank" rel="external">Terraform Module Registry</a></p>
<h1 id="Module-basics"><a href="#Module-basics" class="headerlink" title="Module basics"></a>Module basics</h1><p>Any set of Terraform configuration files in a folder is a module. E.g.,</p>
<ol>
<li><p>Create folder layout</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">├─module</span><br><span class="line">│  └─s3</span><br><span class="line">│          main<span class="class">.tf</span></span><br><span class="line">│          outputs<span class="class">.tf</span></span><br><span class="line">│          variables<span class="class">.tf</span></span><br><span class="line">│          user-data<span class="class">.sh</span></span><br><span class="line">│</span><br><span class="line">└─qa</span><br><span class="line">    └─service</span><br><span class="line">          main<span class="class">.tf</span></span><br><span class="line">          outputs<span class="class">.tf</span></span><br><span class="line">          variables.tf</span><br></pre></td></tr></table></figure>
</li>
<li><p>Create a module to set S3</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># S3</span></span><br><span class="line"><span class="title">resource</span> <span class="string">"aws_s3_bucket"</span> <span class="string">"terraform_module"</span> &#123;</span><br><span class="line">	<span class="title">bucket</span> = <span class="string">"yongfeiuall-terraform-module"</span></span><br><span class="line">	versioning &#123;</span><br><span class="line">		<span class="title">enabled</span> = <span class="built_in">true</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Using a module</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">provider</span> <span class="string">"aws"</span> &#123;</span><br><span class="line">	<span class="title">region</span> = <span class="string">"ap-northeast-1"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">module <span class="string">"module-test"</span> &#123;</span><br><span class="line">	<span class="title">source</span> = <span class="string">"../../module/s3"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Run <code>terraform init</code>, <code>terraform plan</code> and <code>terraform apply</code> commands  </p>
<figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">D:\terraform\ModuleStudy\qa\service&gt;terraform init</span><br><span class="line">Initializing modules...</span><br><span class="line">-<span class="ruby"> <span class="class"><span class="keyword">module</span>.<span class="title">module</span>-<span class="title">test</span></span></span><br><span class="line"></span>  Getting source "../../module/s3"</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="Module-inputs"><a href="#Module-inputs" class="headerlink" title="Module inputs"></a>Module inputs</h1><p>Modules can have input parameters, too. To define them, you use a<br>mechanism you’re already familiar with: input variables.</p>
<ol>
<li><p>Open ‘\module\s3\variables.tf’, and add</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">variable</span> <span class="string">"yongfeiuall_module_bucket"</span> &#123;</span><br><span class="line"><span class="title">description</span> = <span class="string">"The name of the S3 bucket"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Open ‘\module\s3\main.tf’, and update</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># S3</span></span><br><span class="line"><span class="title">resource</span> <span class="string">"aws_s3_bucket"</span> <span class="string">"terraform_module"</span> &#123;</span><br><span class="line">	<span class="title">bucket</span> = <span class="string">"&#123;var.yongfeiuall_module_bucket&#125;"</span></span><br><span class="line">	versioning &#123;</span><br><span class="line">		<span class="title">enabled</span> = <span class="built_in">true</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Open ‘\qa\servicemodule\s3\main.tf’, and update</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">provider</span> <span class="string">"aws"</span> &#123;</span><br><span class="line">	<span class="title">region</span> = <span class="string">"ap-northeast-1"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">module <span class="string">"module-test"</span> &#123;</span><br><span class="line">	<span class="title">source</span> = <span class="string">"../../module/s3"</span></span><br><span class="line">	</span><br><span class="line">	yongfeiuall_module_bucket = <span class="string">"yongfeiuall_variable"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Run <code>terraform init</code>, <code>terraform plan</code> and <code>terraform apply</code> commands </p>
</li>
</ol>
<h1 id="Module-outputs"><a href="#Module-outputs" class="headerlink" title="Module outputs"></a>Module outputs</h1><p>Outputs are a way to tell Terraform what data is important. </p>
<ol>
<li><p>Open ‘\module\s3\output.tf’, and add</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">output</span> <span class="string">"s3_bucket_name"</span> &#123;</span><br><span class="line"><span class="title">value</span> = <span class="string">"<span class="variable">$&#123;aws_s3_bucket.terraform_module.bucket&#125;</span>"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Open ‘\qa\servicemodule\s3\main.tf’, and update: add a security group, which name is use s3 bucket name.</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">provider</span> <span class="string">"aws"</span> &#123;</span><br><span class="line">	<span class="title">region</span> = <span class="string">"ap-northeast-1"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">module <span class="string">"module-test"</span> &#123;</span><br><span class="line">	<span class="title">source</span> = <span class="string">"../../module/s3"</span></span><br><span class="line">	</span><br><span class="line">	yongfeiuall_module_bucket = <span class="string">"yongfeiuall_variable"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resource <span class="string">"aws_security_group"</span> <span class="string">"http"</span> &#123;</span><br><span class="line">	<span class="title">name</span> = <span class="string">"<span class="variable">$&#123;module.module-test.s3_bucket_name&#125;</span>"</span></span><br><span class="line"></span><br><span class="line">	<span class="comment"># HTTP access from anywhere</span></span><br><span class="line">	ingress &#123;</span><br><span class="line">		<span class="title">from_port</span>   = <span class="string">"<span class="variable">$&#123;var.server_port&#125;</span>"</span></span><br><span class="line">		to_port     = <span class="string">"<span class="variable">$&#123;var.server_port&#125;</span>"</span></span><br><span class="line">		protocol    = <span class="string">"tcp"</span></span><br><span class="line">		cidr_blocks = [<span class="string">"0.0.0.0/0"</span>]</span><br><span class="line">	&#125;</span><br><span class="line">	  </span><br><span class="line">	<span class="comment"># Outbound internet access</span></span><br><span class="line">	egress &#123;</span><br><span class="line">		<span class="title">from_port</span>   = <span class="number">0</span></span><br><span class="line">		to_port     = <span class="number">0</span></span><br><span class="line">		protocol    = <span class="string">"-1"</span></span><br><span class="line">		cidr_blocks = [<span class="string">"0.0.0.0/0"</span>]</span><br><span class="line">	&#125;</span><br><span class="line">	lifecycle &#123;</span><br><span class="line">		<span class="title">create_before_destroy</span> = <span class="built_in">true</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Run <code>terraform init</code>, <code>terraform plan</code> and <code>terraform apply</code> commands<br><img src="/images/terraform/module_output.jpg" alt=""></p>
</li>
</ol>
<h1 id="Module-versioning"><a href="#Module-versioning" class="headerlink" title="Module versioning"></a>Module versioning</h1><p>We recommend explicitly constraining the acceptable version numbers for each external module to avoid unexpected or unwanted changes.</p>
<h2 id="Module-Repo"><a href="#Module-Repo" class="headerlink" title="Module Repo"></a>Module Repo</h2><p>instead of using a folder you can use a git repository to version your module.</p>
<ul>
<li><strong>Parameters</strong><br>The URLs for Git repositories support the following query parameters:<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ref - The ref to checkout. This can be a branch, tag, commit, etc.</span></span><br><span class="line"></span><br><span class="line"><span class="title">module</span> <span class="string">"consul"</span> &#123;</span><br><span class="line">  <span class="title">source</span> = <span class="string">"git::https://hashicorp.com/consul.git?ref=0.0.2"</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="Terraform-Registry"><a href="#Terraform-Registry" class="headerlink" title="Terraform Registry"></a>Terraform Registry</h2><p>You can use a specific version for a module if you are using a module registry like the Terraform Registry。<br><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> <span class="string">"consul"</span> &#123;</span><br><span class="line">  source = <span class="string">"git::https://hashicorp.com/consul.git"</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">version</span> = <span class="string">"0.0.2</span></span><br></pre></td></tr></table></figure></p>
<p>The Terraform Registry is a public registry. For private use you must use the Private Registry available ine the Enterprise version.</p>
<h2 id="Terrafile"><a href="#Terrafile" class="headerlink" title="Terrafile"></a>Terrafile</h2><p>Manages external Terraform modules, controlled by a Terrafile.<br>Refer here <a href="https://github.com/claranet/python-terrafile" target="_blank" rel="external">Terrafile</a> for detail infomation.</p>
<h1 id="Module-gotchas"><a href="#Module-gotchas" class="headerlink" title="Module gotchas"></a>Module gotchas</h1><h2 id="File-paths"><a href="#File-paths" class="headerlink" title="File paths"></a>File paths</h2><p>By default, Terraform interprets the path relative to the current working directory. That works if you’re using the file function in a Terraform configuration file that’s in the same directory as where you’re running <code>terraform apply</code>.</p>
<p>You can use <code>path.module</code> to convert to a path that is relative to the module folder.<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">data <span class="string">"template_file"</span> <span class="string">"user_data"</span> &#123;</span><br><span class="line">	template = <span class="string">"$&#123;file("</span>$&#123;path.module&#125;/user-data.sh<span class="string">")&#125;"</span></span><br><span class="line">	</span><br><span class="line">	vars &#123;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Terraform - State]]></title>
      <url>http://izheyi.com/2018/04/26/Terraform-State/</url>
      <content type="html"><![CDATA[<p>Terraform must store state about your managed infrastructure and configuration. This state is used by Terraform to map real world resources to your configuration, keep track of metadata, and to improve performance for large infrastructures.</p>
<p><code>terraform.tfstate</code>, using simple JSON format, when you run Terraform, it can fetch the latest status of services from AWS and compare that to what’s in your Terraform configurations to determine what changes need to be applied.</p>
<h1 id="Shared-Storage-for-State-Files"><a href="#Shared-Storage-for-State-Files" class="headerlink" title="Shared Storage for State Files"></a>Shared Storage for State Files</h1><p>By default, Terraform stores in local. Because this file must exist, it makes working with Terraform in a team complicated since it is a frequent source of merge conflicts. Remote state helps alleviate these issues.<br>After version 0.9, terraform introduce “backends” to replace “remote state”, <a href="https://www.terraform.io/docs/backends/index.html" target="_blank" rel="external">Click here for detail</a></p>
<ol>
<li><p>Create a S3 bucket</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">provider</span> <span class="string">"aws"</span> &#123;</span><br><span class="line">	<span class="title">region</span> = <span class="string">"ap-northeast-1"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># S3</span></span><br><span class="line">resource <span class="string">"aws_s3_bucket"</span> <span class="string">"terraform_state"</span> &#123;</span><br><span class="line">	<span class="title">bucket</span> = <span class="string">"yongfeiuall_terraform_state"</span></span><br><span class="line">	versioning &#123;</span><br><span class="line">		<span class="title">enabled</span> = <span class="built_in">true</span></span><br><span class="line">	&#125;</span><br><span class="line">	lifecycle &#123;</span><br><span class="line">		<span class="title">prevent_destroy</span> = <span class="built_in">true</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>configure store state to S3<br>a. add this in terraform file</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">terraform</span> &#123;</span><br><span class="line">  <span class="title">backend</span> <span class="string">"s3"</span> &#123;</span><br><span class="line">    <span class="title">bucket</span> = <span class="string">"yongfeiuall-terraform-state"</span> </span><br><span class="line">    key = <span class="string">"global/s3/terraform.tfstate"</span> </span><br><span class="line">	region = <span class="string">"ap-northeast-1"</span></span><br><span class="line">	encrypt = <span class="string">"true"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p> b. execute <code>terraform init</code></p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">D:\terraform\Example\stateS3&gt;terraform init</span><br><span class="line"></span><br><span class="line">Initializing <span class="operator">the</span> backend...</span><br><span class="line">Do you want <span class="built_in">to</span> copy existing state <span class="built_in">to</span> <span class="operator">the</span> <span class="built_in">new</span> backend?</span><br><span class="line">  Pre-existing state was found <span class="keyword">while</span> migrating <span class="operator">the</span> previous <span class="string">"local"</span> backend <span class="built_in">to</span> <span class="operator">the</span></span><br><span class="line">  newly configured <span class="string">"s3"</span> backend. No existing state was found <span class="operator">in</span> <span class="operator">the</span> newly</span><br><span class="line">  configured <span class="string">"s3"</span> backend. Do you want <span class="built_in">to</span> copy this state <span class="built_in">to</span> <span class="operator">the</span> <span class="built_in">new</span> <span class="string">"s3"</span></span><br><span class="line">  backend? Enter <span class="string">"yes"</span> <span class="built_in">to</span> copy <span class="operator">and</span> <span class="string">"no"</span> <span class="built_in">to</span> <span class="built_in">start</span> <span class="operator">with</span> <span class="operator">an</span> <span class="constant">empty</span> state.</span><br><span class="line"></span><br><span class="line">  Enter <span class="operator">a</span> <span class="built_in">value</span>: yes</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Successfully configured <span class="operator">the</span> backend <span class="string">"s3"</span>! Terraform will automatically</span><br><span class="line">use this backend unless <span class="operator">the</span> backend configuration changes.</span><br><span class="line"></span><br><span class="line">Initializing provider plugins...</span><br><span class="line"></span><br><span class="line">The following providers <span class="built_in">do</span> <span class="operator">not</span> have <span class="keyword">any</span> <span class="built_in">version</span> constraints <span class="operator">in</span> configuration,</span><br><span class="line">so <span class="operator">the</span> latest <span class="built_in">version</span> was installed.</span><br><span class="line"></span><br><span class="line">To prevent automatic upgrades <span class="built_in">to</span> <span class="built_in">new</span> major versions that may contain breaking</span><br><span class="line">changes, <span class="keyword">it</span> is recommended <span class="built_in">to</span> <span class="built_in">add</span> <span class="built_in">version</span> = <span class="string">"..."</span> constraints <span class="built_in">to</span> <span class="operator">the</span></span><br><span class="line">corresponding provider blocks <span class="operator">in</span> configuration, <span class="operator">with</span> <span class="operator">the</span> constraint strings</span><br><span class="line">suggested below.</span><br><span class="line"></span><br><span class="line">* provider.aws: <span class="built_in">version</span> = <span class="string">"~&gt; 1.15"</span></span><br><span class="line"></span><br><span class="line">Terraform has been successfully initialized!</span><br><span class="line"></span><br><span class="line">You may now begin working <span class="operator">with</span> Terraform. Try running <span class="string">"terraform plan"</span> <span class="built_in">to</span> see</span><br><span class="line"><span class="keyword">any</span> changes that are required <span class="keyword">for</span> your infrastructure. All Terraform commands</span><br><span class="line">should now work.</span><br><span class="line"></span><br><span class="line">If you ever <span class="built_in">set</span> <span class="operator">or</span> change modules <span class="operator">or</span> backend configuration <span class="keyword">for</span> Terraform,</span><br><span class="line">rerun this <span class="command"><span class="keyword">command</span> <span class="title">to</span> <span class="title">reinitialize</span> <span class="title">your</span> <span class="title">working</span> <span class="title">directory</span>. <span class="title">If</span> <span class="title">you</span> <span class="title">forget</span>, <span class="title">other</span></span></span><br><span class="line">commands will detect <span class="keyword">it</span> <span class="operator">and</span> remind you <span class="built_in">to</span> <span class="built_in">do</span> so <span class="keyword">if</span> necessary.</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>With remote state enabled, Terraform will automatically pull the latest state from<br>this S3 bucket before running a command, and automatically push the latest state<br>to the S3 bucket after running a command.<br>E.g., add the below info in terraform file, and run <code>terraform apply</code> again.<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">output</span> <span class="string">"s3_bucket_arn"</span> &#123;</span><br><span class="line"><span class="title">value</span> = <span class="string">"<span class="variable">$&#123;aws_s3_bucket.terraform_state.arn&#125;</span>"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="/images/terraform/state_share.jpg" alt=""></p>
<h1 id="Locking-state-files"><a href="#Locking-state-files" class="headerlink" title="Locking state files"></a>Locking state files</h1><p>If the state file is stored remotely so that many people can access it, then you risk multiple people attempting to make changes to the same file at the exact same time. So we need to provide a mechanism that will “lock” the state if its currently in-use by another user. We can accomplish this by creating a dynamoDB table for terraform to use.</p>
<ol>
<li>Create the dynamoDB table<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">provider</span> <span class="string">"aws"</span> &#123;</span><br><span class="line">	<span class="title">region</span> = <span class="string">"ap-northeast-1"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># create a dynamodb table for locking the state file</span></span><br><span class="line">resource <span class="string">"aws_dynamodb_table"</span> <span class="string">"dynamodb-terraform-state-lock"</span> &#123;</span><br><span class="line">  <span class="title">name</span> = <span class="string">"yongfeiualll-terraform-state-lock"</span></span><br><span class="line">  hash_key = <span class="string">"LockID"</span></span><br><span class="line">  read_capacity = <span class="number">20</span></span><br><span class="line">  write_capacity = <span class="number">20</span></span><br><span class="line"> </span><br><span class="line">  attribute &#123;</span><br><span class="line">    <span class="title">name</span> = <span class="string">"LockID"</span></span><br><span class="line">    type = <span class="string">"S"</span></span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  tags &#123;</span><br><span class="line">    <span class="title">Name</span> = <span class="string">"DynamoDB Terraform State Lock Table"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>Run <code>terraform apply</code></p>
<ol>
<li><p>Modify the Terraform S3 backend resource </p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">terraform</span> &#123;</span><br><span class="line">  <span class="title">backend</span> <span class="string">"s3"</span> &#123;</span><br><span class="line">    <span class="title">bucket</span> = <span class="string">"yongfeiuall-terraform-lock"</span> </span><br><span class="line">	dynamodb_table = <span class="string">"yongfeiualll-terraform-state-lock"</span></span><br><span class="line">    key = <span class="string">"global/s3/terraform.tfstate"</span> </span><br><span class="line">	region = <span class="string">"ap-northeast-1"</span></span><br><span class="line">	encrypt = <span class="string">"true"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">provider <span class="string">"aws"</span> &#123;</span><br><span class="line">	<span class="title">region</span> = <span class="string">"ap-northeast-1"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># S3</span></span><br><span class="line">resource <span class="string">"aws_s3_bucket"</span> <span class="string">"terraform_lock"</span> &#123;</span><br><span class="line">	<span class="title">bucket</span> = <span class="string">"yongfeiuall-terraform-lock"</span></span><br><span class="line">	versioning &#123;</span><br><span class="line">		<span class="title">enabled</span> = <span class="built_in">true</span></span><br><span class="line">	&#125;</span><br><span class="line">	lifecycle &#123;</span><br><span class="line">		<span class="title">prevent_destroy</span> = <span class="built_in">true</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Run <code>terraform init</code>, <code>terraform plan</code> and <code>terraform apply</code> commands </p>
</li>
</ol>
<h1 id="Isolating-state-files"><a href="#Isolating-state-files" class="headerlink" title="Isolating state files"></a>Isolating state files</h1><p>Recommend using separate Terraform folders (and therefore separate state files) for each environment, and within each environment, each “component.”<br>Here is the file layout for our typical Terraform project:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">stage</span><br><span class="line">  └ vpc</span><br><span class="line">  └ services</span><br><span class="line">      └ frontend-app</span><br><span class="line">      └ backend-app</span><br><span class="line">          └ variables<span class="class">.tf</span></span><br><span class="line">          └ outputs<span class="class">.tf</span></span><br><span class="line">          └ main<span class="class">.tf</span></span><br><span class="line">  └ data-storage</span><br><span class="line">      └ mysql</span><br><span class="line">      └ redis</span><br><span class="line">mgmt</span><br><span class="line">  └ vpc</span><br><span class="line">  └ services</span><br><span class="line">      └ bastion-host</span><br><span class="line">      └ jenkins</span><br><span class="line">global</span><br><span class="line">  └ iam</span><br><span class="line">  └ route53</span><br></pre></td></tr></table></figure></p>
<ul>
<li>stage: an environment for non-production workloads</li>
<li>mgmt: an environment for DevOps tooling (e.g. bastion host, Jenkins).</li>
<li>global: a place to put resources that are used across all environments, such as user management (IAM in AWS) and DNS management (Route53 in AWS).</li>
</ul>
<p>Within each environment, we have separate folders for each “component.” </p>
<p>Within each component, we have the actual Terraform templates, which we organize according to the following naming conventions:</p>
<ul>
<li>variables.tf: input variables.</li>
<li>outputs.tf: output variables.</li>
<li>main.tf: the actual resources.</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Terraform - Deploy Server - Multiple Servers]]></title>
      <url>http://izheyi.com/2018/04/24/Terraform-Deploy-Server-Multiple-Servers/</url>
      <content type="html"><![CDATA[<p>现实中不可能只有单一的Server，会弹性运行多个Server来保证有足够的Server可用。</p>
<h1 id="Auto-Scaling-Group"><a href="#Auto-Scaling-Group" class="headerlink" title="Auto Scaling Group"></a>Auto Scaling Group</h1><p>可以利用ASG来实现多个Web Servers。</p>
<ol>
<li>创建Config文件<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">variable</span> <span class="string">"server_port"</span> &#123;</span><br><span class="line">	<span class="title">description</span> = <span class="string">"The port the server will use for HTTP requests"</span></span><br><span class="line">	default = <span class="number">80</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">data <span class="string">"aws_availability_zones"</span> <span class="string">"all"</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="title">provider</span> <span class="string">"aws"</span> &#123;</span><br><span class="line">	<span class="title">region</span> = <span class="string">"ap-northeast-1"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resource <span class="string">"aws_autoscaling_group"</span> <span class="string">"yonfeiuall_scaling_group"</span> &#123;</span><br><span class="line">	<span class="title">launch_configuration</span> = <span class="string">"<span class="variable">$&#123;aws_launch_configuration.yongfeiuall_launch_config.id&#125;</span>"</span></span><br><span class="line">	availability_zones = [<span class="string">"<span class="variable">$&#123;data.aws_availability_zones.all.names&#125;</span>"</span>]</span><br><span class="line">	min_size = <span class="number">2</span></span><br><span class="line">	max_size = <span class="number">10</span></span><br><span class="line">	tag &#123;</span><br><span class="line">		<span class="title">key</span> = <span class="string">"Name"</span></span><br><span class="line">		value = <span class="string">"yongfeiuall-asg"</span></span><br><span class="line">		propagate_at_launch = <span class="built_in">true</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resource <span class="string">"aws_launch_configuration"</span> <span class="string">"yongfeiuall_launch_config"</span> &#123;</span><br><span class="line">	<span class="title">image_id</span> = <span class="string">"ami-28ddc154"</span></span><br><span class="line">	instance_type = <span class="string">"t2.micro"</span></span><br><span class="line">	</span><br><span class="line">	user_data = &lt;&lt;-EOF</span><br><span class="line">				<span class="comment">#!/bin/bash</span></span><br><span class="line">				yum update -y</span><br><span class="line">				yum install -y httpd</span><br><span class="line">				service httpd start</span><br><span class="line">				echo <span class="string">'&lt;html&gt;&lt;h1&gt; configurable web server from terraform &lt;/h1&gt;&lt;/html&gt;'</span> &gt; /var/www/html/index.html</span><br><span class="line">				EOF</span><br><span class="line">				</span><br><span class="line">	lifecycle &#123;</span><br><span class="line">		<span class="title">create_before_destroy</span> = <span class="built_in">true</span></span><br><span class="line">	&#125;</span><br><span class="line">	security_groups = [<span class="string">"<span class="variable">$&#123;aws_security_group.http.id&#125;</span>"</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resource <span class="string">"aws_security_group"</span> <span class="string">"http"</span> &#123;</span><br><span class="line">	<span class="title">name</span> = <span class="string">"yonfeiuall_single_web"</span></span><br><span class="line"></span><br><span class="line">	<span class="comment"># HTTP access from anywhere</span></span><br><span class="line">	ingress &#123;</span><br><span class="line">		<span class="title">from_port</span>   = <span class="string">"<span class="variable">$&#123;var.server_port&#125;</span>"</span></span><br><span class="line">		to_port     = <span class="string">"<span class="variable">$&#123;var.server_port&#125;</span>"</span></span><br><span class="line">		protocol    = <span class="string">"tcp"</span></span><br><span class="line">		cidr_blocks = [<span class="string">"0.0.0.0/0"</span>]</span><br><span class="line">	&#125;</span><br><span class="line">	  </span><br><span class="line">	<span class="comment"># Outbound internet access</span></span><br><span class="line">	egress &#123;</span><br><span class="line">		<span class="title">from_port</span>   = <span class="number">0</span></span><br><span class="line">		to_port     = <span class="number">0</span></span><br><span class="line">		protocol    = <span class="string">"-1"</span></span><br><span class="line">		cidr_blocks = [<span class="string">"0.0.0.0/0"</span>]</span><br><span class="line">	&#125;</span><br><span class="line">	lifecycle &#123;</span><br><span class="line">		<span class="title">create_before_destroy</span> = <span class="built_in">true</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<ul>
<li>lifecycle block to any resource to configure how that resource should be created, updated, or destroyed.</li>
<li>A data source represents a piece of read-only information that is fetched from the provider every time you run Terraform. To use the data source, you reference it using the following syntax: <code>&quot;${data.TYPE.NAME.ATTRIBUTE}&quot;</code>.</li>
</ul>
<ol>
<li>执行命令<code>terraform plan</code>，<code>terraform apply</code></li>
<li>验证成功<br><img src="/images/terraform/asgserver.jpg" alt=""></li>
</ol>
<h1 id="Elastic-Load-Balancer"><a href="#Elastic-Load-Balancer" class="headerlink" title="Elastic Load Balancer"></a>Elastic Load Balancer</h1><p>ASG能实现多个Servers，但是有多个IP啊，可能通过ELB来实现对外只有一个DNS。</p>
<ol>
<li><p>创建Config文件</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">variable</span> <span class="string">"server_port"</span> &#123;</span><br><span class="line">	<span class="title">description</span> = <span class="string">"The port the server will use for HTTP requests"</span></span><br><span class="line">	default = <span class="number">80</span></span><br><span class="line">&#125;</span><br><span class="line">output <span class="string">"elb_dns_name"</span> &#123;</span><br><span class="line"><span class="title">value</span> = <span class="string">"<span class="variable">$&#123;aws_elb.yongfeiuall_elb.dns_name&#125;</span>"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">data <span class="string">"aws_availability_zones"</span> <span class="string">"all"</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="title">provider</span> <span class="string">"aws"</span> &#123;</span><br><span class="line">	<span class="title">region</span> = <span class="string">"ap-northeast-1"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># elb</span></span><br><span class="line">resource <span class="string">"aws_elb"</span> <span class="string">"yongfeiuall_elb"</span> &#123;</span><br><span class="line">	<span class="title">name</span> = <span class="string">"yongfeiuall-asg-elb"</span></span><br><span class="line">	availability_zones = [<span class="string">"<span class="variable">$&#123;data.aws_availability_zones.all.names&#125;</span>"</span>]</span><br><span class="line">	security_groups = [<span class="string">"<span class="variable">$&#123;aws_security_group.http.id&#125;</span>"</span>]</span><br><span class="line">	</span><br><span class="line">	listener &#123;</span><br><span class="line">		<span class="title">lb_port</span> = <span class="string">"<span class="variable">$&#123;var.server_port&#125;</span>"</span></span><br><span class="line">		lb_protocol = <span class="string">"http"</span></span><br><span class="line">		instance_port = <span class="string">"<span class="variable">$&#123;var.server_port&#125;</span>"</span></span><br><span class="line">		instance_protocol = <span class="string">"http"</span></span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	health_check &#123;</span><br><span class="line">		<span class="title">healthy_threshold</span> = <span class="number">2</span></span><br><span class="line">		unhealthy_threshold = <span class="number">2</span></span><br><span class="line">		timeout = <span class="number">3</span></span><br><span class="line">		interval = <span class="number">30</span></span><br><span class="line">		target = <span class="string">"HTTP:<span class="variable">$&#123;var.server_port&#125;</span>/"</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># asg</span></span><br><span class="line">resource <span class="string">"aws_autoscaling_group"</span> <span class="string">"yonfeiuall_scaling_group"</span> &#123;</span><br><span class="line">	<span class="title">launch_configuration</span> = <span class="string">"<span class="variable">$&#123;aws_launch_configuration.yongfeiuall_launch_config.id&#125;</span>"</span></span><br><span class="line">	availability_zones = [<span class="string">"<span class="variable">$&#123;data.aws_availability_zones.all.names&#125;</span>"</span>]</span><br><span class="line">	load_balancers = [<span class="string">"<span class="variable">$&#123;aws_elb.yongfeiuall_elb.name&#125;</span>"</span>]</span><br><span class="line">	</span><br><span class="line">	min_size = <span class="number">2</span></span><br><span class="line">	max_size = <span class="number">10</span></span><br><span class="line">	tag &#123;</span><br><span class="line">		<span class="title">key</span> = <span class="string">"Name"</span></span><br><span class="line">		value = <span class="string">"yongfeiuall-asg"</span></span><br><span class="line">		propagate_at_launch = <span class="built_in">true</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># launch configuration</span></span><br><span class="line">resource <span class="string">"aws_launch_configuration"</span> <span class="string">"yongfeiuall_launch_config"</span> &#123;</span><br><span class="line">	<span class="title">image_id</span> = <span class="string">"ami-28ddc154"</span></span><br><span class="line">	instance_type = <span class="string">"t2.micro"</span></span><br><span class="line">	</span><br><span class="line">	user_data = &lt;&lt;-EOF</span><br><span class="line">				<span class="comment">#!/bin/bash</span></span><br><span class="line">				yum update -y</span><br><span class="line">				yum install -y httpd</span><br><span class="line">				service httpd start</span><br><span class="line">				echo <span class="string">'&lt;html&gt;&lt;h1&gt; configurable web server from terraform &lt;/h1&gt;&lt;/html&gt;'</span> &gt; /var/www/html/index.html</span><br><span class="line">				EOF</span><br><span class="line">				</span><br><span class="line">	lifecycle &#123;</span><br><span class="line">		<span class="title">create_before_destroy</span> = <span class="built_in">true</span></span><br><span class="line">	&#125;</span><br><span class="line">	security_groups = [<span class="string">"<span class="variable">$&#123;aws_security_group.http.id&#125;</span>"</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># security group</span></span><br><span class="line">resource <span class="string">"aws_security_group"</span> <span class="string">"http"</span> &#123;</span><br><span class="line">	<span class="title">name</span> = <span class="string">"yonfeiuall_single_web"</span></span><br><span class="line"></span><br><span class="line">	<span class="comment"># HTTP access from anywhere</span></span><br><span class="line">	ingress &#123;</span><br><span class="line">		<span class="title">from_port</span>   = <span class="string">"<span class="variable">$&#123;var.server_port&#125;</span>"</span></span><br><span class="line">		to_port     = <span class="string">"<span class="variable">$&#123;var.server_port&#125;</span>"</span></span><br><span class="line">		protocol    = <span class="string">"tcp"</span></span><br><span class="line">		cidr_blocks = [<span class="string">"0.0.0.0/0"</span>]</span><br><span class="line">	&#125;</span><br><span class="line">	  </span><br><span class="line">	<span class="comment"># Outbound internet access</span></span><br><span class="line">	egress &#123;</span><br><span class="line">		<span class="title">from_port</span>   = <span class="number">0</span></span><br><span class="line">		to_port     = <span class="number">0</span></span><br><span class="line">		protocol    = <span class="string">"-1"</span></span><br><span class="line">		cidr_blocks = [<span class="string">"0.0.0.0/0"</span>]</span><br><span class="line">	&#125;</span><br><span class="line">	lifecycle &#123;</span><br><span class="line">		<span class="title">create_before_destroy</span> = <span class="built_in">true</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>执行命令<code>terraform plan</code>，<code>terraform apply</code></p>
</li>
<li>验证成功<br><img src="/images/terraform/elbserver.jpg" alt=""></li>
</ol>
<h1 id="Clean-Up"><a href="#Clean-Up" class="headerlink" title="Clean Up"></a>Clean Up</h1><p>这个非常简单：<br><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">D:\terraform\Example&gt;terraform destroy</span><br><span class="line">aws_security_group.http: Refreshing <span class="keyword">state</span>... (ID: sg-<span class="number">3</span>a619542)</span><br><span class="line">data.aws_availability_zones.<span class="literal">all</span>: Refreshing <span class="keyword">state</span>...</span><br><span class="line">aws_elb.yongfeiuall_elb: Refreshing <span class="keyword">state</span>... (ID: yongfeiuall-asg-elb)</span><br><span class="line">aws_launch_configuration.yongfeiuall_launch_config: Refreshing <span class="keyword">state</span>... (ID: terraform-<span class="number">201804240854003</span></span><br><span class="line"><span class="number">23000000001</span>)</span><br><span class="line">aws_autoscaling_group.yonfeiuall_scaling_group: Refreshing <span class="keyword">state</span>... (ID: tf-asg-<span class="number">2018042408541147700000</span></span><br><span class="line"><span class="number">0002</span>)</span><br><span class="line"></span><br><span class="line">An execution plan has been generated and is shown below.</span><br><span class="line">Resource actions are indicated with the following symbols:</span><br><span class="line">  - destroy</span><br><span class="line"></span><br><span class="line">Terraform will perform the following actions:</span><br><span class="line"></span><br><span class="line">  - aws_autoscaling_group.yonfeiuall_scaling_group</span><br><span class="line"></span><br><span class="line">  - aws_elb.yongfeiuall_elb</span><br><span class="line"></span><br><span class="line">  - aws_launch_configuration.yongfeiuall_launch_config</span><br><span class="line"></span><br><span class="line">  - aws_security_group.http</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Plan: <span class="number">0</span> <span class="keyword">to</span> add, <span class="number">0</span> <span class="keyword">to</span> change, <span class="number">4</span> <span class="keyword">to</span> destroy.</span><br><span class="line"></span><br><span class="line">Do you really want <span class="keyword">to</span> destroy?</span><br><span class="line">  Terraform will destroy <span class="literal">all</span> your managed infrastructure, as shown above.</span><br><span class="line">  There is no undo. Only 'yes' will be accepted <span class="keyword">to</span> confirm.</span><br><span class="line"></span><br><span class="line">  Enter a value:</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Terraform - Deploy Server - Single Server]]></title>
      <url>http://izheyi.com/2018/04/23/Terraform-Deploy-Servers/</url>
      <content type="html"><![CDATA[<p>做一些简单的联系，Deploy一些不同的Server。</p>
<h1 id="Pre-condition"><a href="#Pre-condition" class="headerlink" title="Pre-condition"></a>Pre-condition</h1><p>为了让Terraform和AWS工作，必须把AWS User的AWS_ACCESS_KEY_ID和AWS_SECRET_ACCESS_KEY加到环境变量。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">set</span> AWS_ACCESS_KEY_ID=(your <span class="keyword">access</span> <span class="keyword">key</span> <span class="keyword">id</span>)</span><br><span class="line"><span class="keyword">set</span> AWS_SECRET_ACCESS_KEY=(your secret <span class="keyword">access</span> <span class="keyword">key</span>)</span></span><br></pre></td></tr></table></figure></p>
<h1 id="Single-Server"><a href="#Single-Server" class="headerlink" title="Single Server"></a>Single Server</h1><ol>
<li><p>创建Config文件</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">provider</span> <span class="string">"aws"</span> &#123;</span><br><span class="line">	<span class="title">region</span> = <span class="string">"us-east-1"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resource <span class="string">"aws_instance"</span> <span class="string">"yongfeiuall"</span> &#123;</span><br><span class="line">	<span class="title">ami</span> = <span class="string">"ami-1853ac65"</span></span><br><span class="line">	instance_type = <span class="string">"t2.micro"</span></span><br><span class="line">	tags&#123;</span><br><span class="line">	<span class="title">Name</span> = <span class="string">"simple single server"</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>执行命令<code>terraform plan</code>，<code>terraform apply</code></p>
</li>
<li>验证成功<br><img src="/images/terraform/singleserver.jpg" alt=""></li>
</ol>
<h1 id="Single-Web-Server"><a href="#Single-Web-Server" class="headerlink" title="Single Web Server"></a>Single Web Server</h1><ol>
<li>创建Config文件<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">provider</span> <span class="string">"aws"</span> &#123;</span><br><span class="line">	<span class="title">region</span> = <span class="string">"ap-northeast-1"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resource <span class="string">"aws_instance"</span> <span class="string">"yongfeiuall"</span> &#123;</span><br><span class="line">	<span class="title">ami</span> = <span class="string">"ami-28ddc154"</span></span><br><span class="line">	instance_type = <span class="string">"t2.micro"</span></span><br><span class="line">	</span><br><span class="line">	tags&#123;</span><br><span class="line">	<span class="title">Name</span> = <span class="string">"simple web server"</span></span><br><span class="line">	&#125;</span><br><span class="line">	user_data = &lt;&lt;-EOF</span><br><span class="line">				<span class="comment">#!/bin/bash</span></span><br><span class="line">				yum update -y</span><br><span class="line">				yum install -y httpd</span><br><span class="line">				service httpd start</span><br><span class="line">				echo <span class="string">'&lt;html&gt;&lt;h1&gt; single web server from terraform &lt;/h1&gt;&lt;/html&gt;'</span> &gt; /var/www/html/index.html</span><br><span class="line">				EOF</span><br><span class="line">	</span><br><span class="line">	vpc_security_group_ids = [<span class="string">"<span class="variable">$&#123;aws_security_group.http.id&#125;</span>"</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resource <span class="string">"aws_security_group"</span> <span class="string">"http"</span> &#123;</span><br><span class="line">	<span class="title">name</span> = <span class="string">"yonfeiuall_single_web"</span></span><br><span class="line"></span><br><span class="line">	<span class="comment"># HTTP access from anywhere</span></span><br><span class="line">	ingress &#123;</span><br><span class="line">		<span class="title">from_port</span>   = <span class="number">80</span></span><br><span class="line">		to_port     = <span class="number">80</span></span><br><span class="line">		protocol    = <span class="string">"tcp"</span></span><br><span class="line">		cidr_blocks = [<span class="string">"0.0.0.0/0"</span>]</span><br><span class="line">	&#125;</span><br><span class="line">	  </span><br><span class="line">	<span class="comment"># Outbound internet access</span></span><br><span class="line">	egress &#123;</span><br><span class="line">		<span class="title">from_port</span>   = <span class="number">0</span></span><br><span class="line">		to_port     = <span class="number">0</span></span><br><span class="line">		protocol    = <span class="string">"-1"</span></span><br><span class="line">		cidr_blocks = [<span class="string">"0.0.0.0/0"</span>]</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>说明：</p>
<ul>
<li>AWS默认不允许任何Incoming和Outcoming，我们要建一个Security Group（要同时有Inbound和Outbound）</li>
<li>把SG要添加到EC2上，用到SG的ID,Terraform里，用<code>&quot;${TYPE.NAME.ATTRIBUTE}&quot;</code>语法来引用其他Resources的Attribute</li>
<li>The &lt;&lt;-EOF and EOF are allows you to create multiline strings without having to insert newline characters all over the place.</li>
</ul>
<ol>
<li>执行命令<code>terraform plan</code>，<code>terraform apply</code></li>
<li>验证成功<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yongfeiuall<span class="comment">@automation:~$ curl http://13.113.195.209</span></span><br><span class="line"><span class="variable">&lt;html&gt;</span><span class="variable">&lt;h1&gt;</span> single web server from terraform <span class="variable">&lt;/h1&gt;</span><span class="variable">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>用Browser打开，可以看到。</p>
<h1 id="Configurable-Web-Server"><a href="#Configurable-Web-Server" class="headerlink" title="Configurable Web Server"></a>Configurable Web Server</h1><p>为了更好的管理，Terraform允许定义Input变量：<br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">variable</span> <span class="string">"NAME"</span> &#123;</span><br><span class="line"><span class="preprocessor">[</span>CONFIG <span class="attribute">...</span><span class="preprocessor">]</span><span class="markup"></span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>The body of the variable declaration can contain three parameters, all of them<br>optional:</p>
<ul>
<li><strong>description</strong><br>Use this parameter to document how a variable is used. </li>
<li><strong>default</strong><br>There are a number of ways to provide a value for the variable.</li>
<li><strong>type</strong><br>Must be one of “string”, “list”, or “map”.<br>E.g.,<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">variable <span class="string">"list_example"</span> &#123;</span><br><span class="line">description = <span class="string">"An example of a list in Terraform"</span></span><br><span class="line">type = <span class="string">"list"</span></span><br><span class="line"><span class="keyword">default</span> = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>用下面的方式来读取变量<code>&quot;${var.VARIABLE_NAME}&quot;</code>。</p>
<p>同时，Terraform还允许定义Output变量：<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">output</span> <span class="string">"NAME"</span> &#123;</span><br><span class="line"><span class="title">value</span> = VALUE</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>可以返回创建Instance后你想获得的一些属性，例如：<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">output</span> <span class="string">"public_ip"</span> &#123;</span><br><span class="line"><span class="title">value</span> = <span class="string">"<span class="variable">$&#123;aws_instance.example.public_ip&#125;</span>"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<ol>
<li><p>创建Config文件</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">variable</span> <span class="string">"server_port"</span> &#123;</span><br><span class="line">	<span class="title">description</span> = <span class="string">"The port the server will use for HTTP requests"</span></span><br><span class="line">	default = <span class="number">80</span></span><br><span class="line">&#125;</span><br><span class="line">output <span class="string">"public_ip"</span> &#123;</span><br><span class="line"><span class="title">value</span> = <span class="string">"<span class="variable">$&#123;aws_instance.yongfeiuall.public_ip&#125;</span>"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">provider <span class="string">"aws"</span> &#123;</span><br><span class="line">	<span class="title">region</span> = <span class="string">"ap-northeast-1"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resource <span class="string">"aws_instance"</span> <span class="string">"yongfeiuall"</span> &#123;</span><br><span class="line">	<span class="title">ami</span> = <span class="string">"ami-28ddc154"</span></span><br><span class="line">	instance_type = <span class="string">"t2.micro"</span></span><br><span class="line">	</span><br><span class="line">	tags&#123;</span><br><span class="line">	<span class="title">Name</span> = <span class="string">"configurable web server"</span></span><br><span class="line">	&#125;</span><br><span class="line">	user_data = &lt;&lt;-EOF</span><br><span class="line">				<span class="comment">#!/bin/bash</span></span><br><span class="line">				yum update -y</span><br><span class="line">				yum install -y httpd</span><br><span class="line">				service httpd start</span><br><span class="line">				echo <span class="string">'&lt;html&gt;&lt;h1&gt; configurable web server from terraform &lt;/h1&gt;&lt;/html&gt;'</span> &gt; /var/www/html/index.html</span><br><span class="line">				EOF</span><br><span class="line">	</span><br><span class="line">	vpc_security_group_ids = [<span class="string">"<span class="variable">$&#123;aws_security_group.http.id&#125;</span>"</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resource <span class="string">"aws_security_group"</span> <span class="string">"http"</span> &#123;</span><br><span class="line">	<span class="title">name</span> = <span class="string">"yonfeiuall_single_web"</span></span><br><span class="line"></span><br><span class="line">	<span class="comment"># HTTP access from anywhere</span></span><br><span class="line">	ingress &#123;</span><br><span class="line">		<span class="title">from_port</span>   = <span class="string">"<span class="variable">$&#123;var.server_port&#125;</span>"</span></span><br><span class="line">		to_port     = <span class="string">"<span class="variable">$&#123;var.server_port&#125;</span>"</span></span><br><span class="line">		protocol    = <span class="string">"tcp"</span></span><br><span class="line">		cidr_blocks = [<span class="string">"0.0.0.0/0"</span>]</span><br><span class="line">	&#125;</span><br><span class="line">	  </span><br><span class="line">	<span class="comment"># Outbound internet access</span></span><br><span class="line">	egress &#123;</span><br><span class="line">		<span class="title">from_port</span>   = <span class="number">0</span></span><br><span class="line">		to_port     = <span class="number">0</span></span><br><span class="line">		protocol    = <span class="string">"-1"</span></span><br><span class="line">		cidr_blocks = [<span class="string">"0.0.0.0/0"</span>]</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>执行命令<code>terraform plan</code>，<code>terraform apply</code></p>
</li>
<li>验证成功<br><img src="/images/terraform/configwebserver.jpg" alt=""></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Terraform - 基础]]></title>
      <url>http://izheyi.com/2018/04/23/Terraform-%E5%9F%BA%E7%A1%80/</url>
      <content type="html"><![CDATA[<p>这里我们基于前面学习的AWS进行学习。</p>
<p>Terraform 是一个 IT 基础架构自动化编排工具，IaaS, 基础架构即代码。具体的说就是可以用代码来管理维护IT资源。并且在真正运行之前可以看到执行计划。由于状态保存到文件中，因此能够离线方式查看资源情况。</p>
<p>可以去官网查看更多详细信息：<a href="https://www.terraform.io/" target="_blank" rel="external">Terraform</a></p>
<h1 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h1><p>下载安装包<a href="https://www.terraform.io/downloads.html" target="_blank" rel="external">Here</a>，解压压缩包，为了更好的应用，把它添加环境变量PATH。</p>
<p>打开命令行，验证能用：<br><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">C:<span class="command">\Users</span><span class="command">\yongfei</span>.hu&gt;terraform --version</span><br><span class="line">Terraform v0.11.7</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">C:<span class="command">\Users</span><span class="command">\yongfei</span>.hu&gt;</span><br></pre></td></tr></table></figure></p>
<h1 id="HashiCorp-Configuration-Language-HCL"><a href="#HashiCorp-Configuration-Language-HCL" class="headerlink" title="HashiCorp Configuration Language (HCL)"></a>HashiCorp Configuration Language (HCL)</h1><p>Terraform用HCL来编写，并保存在后缀有.tf的文件。</p>
<h2 id="provider"><a href="#provider" class="headerlink" title="provider"></a>provider</h2><p>在main.tf文件中<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">provider</span> <span class="string">"aws"</span> &#123;</span><br><span class="line"><span class="title">region</span> = <span class="string">"us-east-1"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<ul>
<li>用AWS做为Provider。</li>
<li>部署你的infrastructure到US-EAST-1 Region。</li>
</ul>
<h2 id="resources"><a href="#resources" class="headerlink" title="resources"></a>resources</h2><p>对每一种Provider，都有很多不同的Resources进行管理。<br><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">resource <span class="string">"PROVIDER_TYPE"</span> <span class="string">"NAME"</span> &#123;</span><br><span class="line"><span class="string">[CONFIG ...]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<ul>
<li><strong>PROVIDER</strong> is the name of a provider</li>
<li><strong>TYPE</strong> is the type of resources to create in that provider</li>
<li><strong>NAME</strong> is an identifier you can use throughout the Terraform code to refer to this resource</li>
<li><strong>CONFIG</strong> consists of one or more configuration parameters that are specific to that resource<br>E.g.,<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">resource</span> <span class="string">"aws_instance"</span> <span class="string">"example"</span> &#123;</span><br><span class="line"><span class="title">ami</span> = <span class="string">"ami-40d28157"</span></span><br><span class="line">instance_type = <span class="string">"t2.micro"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="Run"><a href="#Run" class="headerlink" title="Run"></a>Run</h1><p>命令行进入到main.tf的目录执行 Terraform Command。</p>
<h2 id="terrafrom-plan"><a href="#terrafrom-plan" class="headerlink" title="terrafrom plan"></a>terrafrom plan</h2><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; terraform plan</span><br><span class="line">Refreshing Terraform <span class="keyword">state</span> in-memory prior <span class="keyword">to</span> plan...</span><br><span class="line">(...)</span><br><span class="line">+ aws_instance.example</span><br><span class="line">ami: <span class="string">"ami-40dddded"</span></span><br><span class="line">(...)</span><br></pre></td></tr></table></figure>
<p>The plan command lets you see what Terraform will do before actually making<br>any changes。</p>
<ul>
<li>resources with a plus sign (+) are going to be created</li>
<li>resources with a minus sign (–) are going to be deleted</li>
<li>resources with a tilde sign (~) are going to be modified.<h2 id="terraform-apply"><a href="#terraform-apply" class="headerlink" title="terraform apply"></a>terraform apply</h2>这才是真正执行命令，去AWS上进行相应的操作。<h2 id="terraform-graph"><a href="#terraform-graph" class="headerlink" title="terraform graph"></a>terraform graph</h2>To show the dependency graph</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[AWS - VPC]]></title>
      <url>http://izheyi.com/2018/04/23/AWS-VPC/</url>
      <content type="html"><![CDATA[<p>Amazon Virtual Private Cloud (Amazon VPC) 允许您在 AWS 云中预配置出一个采用逻辑隔离的部分，在这个部分中，您可以在自己定义的虚拟网络中启动 AWS 资源。</p>
<p>VPC允许用户在一个隔离的虚拟网络中提供计算资源，设定局域网，用户可以简便的由自己选择对外开放什么服务，也可以为资料库或较高保安要求的档案设定网络隔离，以虚拟的方式设定私有云中的的网络和系统架构，模拟以单个用户为单位的数据中心。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[或许你要逃离的远方，并不是你想要的生活]]></title>
      <url>http://izheyi.com/2018/04/22/%E4%B8%80%E7%BA%BF%E5%9F%8E%E5%B8%82%EF%BC%9ALeave%20Or%20Not/</url>
      <content type="html"><![CDATA[<p>从过完年，莫名的就感到好累，每天都像一个陀螺一样不停的转，有点迷茫，再加上抢人大战，有个想法就时不时的在脑海里游出来，为了孩子，为了家庭，到底是留下还是离开会更好一些。那就索性把它放出来说道说道。</p>
<p>一心想在一线城市发展，因为大城市的机会多，你当初来这里或许也是逼不得已的。大城市有很好的包容性，你哭你笑，你成功还是失意，你可以在规则内做你想做的事情而不必在意别人的目光，你可以按照自己的意愿过你自己想要的生活。</p>
<p>但其实大城市也是无情的，高昂的房价，让人麻木的快节奏，它不会在乎你的死活，你走还是留，它一如既往。特别是奇葩的户籍制度将我们划分了“三六九等”，福利，养老，医疗，教育…所有的东西都跟户籍挂钩，你没有户籍，就算发展的再好，有房有车，你是所谓的中产，也会没有安全感，归属感。而在大城市你能获得户籍的机会也只能呵呵，尽管现在也开始有了积分落户。</p>
<p>一线城市容不下肉身，三四线放不下灵魂。老家是基本回不去了，尽管那是你的户籍所在地，尽管你的亲情和记忆在那里，但世俗的眼光，至上的关系，格格不入的思想，会让你感到无力和失落，甚至是孤独。</p>
<p>现在二线城市抢人的节奏真不敢想象，有段子说，你出西安车站跟警察问路，人直接问你什么学历，满足条件，先落个户吧。几个月就进了二十几万人，人是来了，后续的基础设施能跟上吗？人来了直接导致的就是房价上涨，你去了还能够买的起吗？还有就业，教育，医疗，等等等等。</p>
<p>社会变化再快，政策再诱惑，这个时候更应该静下心来思考和衡量，什么才是自己真正想要的生活，不要到头来只是从大城市的焦虑转变成非一线的焦虑。本质上讲没有选择是完美的，做出任何选择势必会放弃一些其他的东西。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[AWS - Route 53]]></title>
      <url>http://izheyi.com/2018/04/22/AWS-Route-53/</url>
      <content type="html"><![CDATA[<p>DNS全称为Domain Name System，即域名系统，其作用就是将我们经常使用的“网址”解析为IP地址。</p>
<p>Amazon Route 53 是一种可用性高、可扩展性强的云域名系统 (DNS) Web 服务。</p>
<p>域名与IP之间的对应关系，称为”记录”（record）。要创建记录，需要先选择一个路由策略，它决定了 Amazon Route 53 响应查询的方式：</p>
<ul>
<li><strong>Simple</strong><br>就是一般的，跟其他的DNS没差别。用于为您的域执行给定功能的单一资源。</li>
<li><strong>Weighted</strong><br>用于按照您指定的比例将流量路由到多个资源。比如：<br>有两个IP，第一个Weight=10，第二个Weight=5，那么第一个IP就获得10/(10+5)=2/3的流量。</li>
<li><strong>Latency</strong><br>就是把请求发到反应最快的那个服务中心。如果您的应用程序托管在多个 Amazon EC2 区域中，您可以通过从延迟最低的 Amazon EC2 区域处理用户的请求来帮助用户提高性能。</li>
<li><strong>Failover</strong><br>允许您将流量路由到某个资源 (如果该资源正常) 或路由到其他资源 (如果第一个资源不正常)。</li>
<li><strong>Geolocation</strong><br>根据用户的位置来路由流量。</li>
<li><strong>Multivalue answer</strong><br>让 Route 53 用随机选择的正常记录 (最多八条) 响应 DNS 查询。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[AWS - AMI]]></title>
      <url>http://izheyi.com/2018/04/21/AWS-AMI/</url>
      <content type="html"><![CDATA[<p>Amazon 系统映像 (AMI) 是一种包含软件配置 (例如，操作系统、应用程序服务器和应用程序) 的模板。通过 AMI，您可以启动实例，实例是作为云中虚拟服务器运行的 AMI 的副本。您可以启动多个 AMI 实例，如下图所示。<br><img src="/images/aws/ami.jpg" alt=""></p>
<p>AMI生命周期:<br><img src="/images/aws/ami_lifecycle.jpg" alt=""></p>
<p>AMI有两种类型：EBS &amp; Instance。</p>
<p>可以从Instance和EBS Snapshot创建。建议使用EBS。<br><img src="/images/aws/ami_list.jpg" alt=""></p>
<p>还可以对AMI进行共享，复制和取消注册等，有需要再细看吧。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[AWS - Elastic Load Balancing & Auto Scaling]]></title>
      <url>http://izheyi.com/2018/04/21/AWS-EC2-Elastic-Load-Balancing/</url>
      <content type="html"><![CDATA[<h1 id="ELB"><a href="#ELB" class="headerlink" title="ELB"></a>ELB</h1><p>Elastic Load Balancing 在多个可用区中的多个 EC2 实例之间分配应用程序的传入流量。这可以提高应用程序的容错能力。Elastic Load Balancing 会检测运行状况不佳的实例，并且仅将流量路由到运行状况良好的实例。<br><img src="/images/aws/aws_elb_classic.jpg" alt=""></p>
<p>面向 Internet 的负载均衡器有一个可公开解析的 DNS 名称，因此可以通过 Internet 将请求从客户端路由到已向负载均衡器注册的 EC2 实例。</p>
<p><img src="/images/aws/aws_elb_internet.jpg" alt=""></p>
<p>E.g., 创建ELB后，只有一个公共的DNS。<br><img src="/images/aws/aws_elb.jpg" alt=""></p>
<h1 id="Auto-Scaling"><a href="#Auto-Scaling" class="headerlink" title="Auto Scaling"></a>Auto Scaling</h1><p>You can use Auto Scaling to manage Amazon EC2 capacity automatically, maintain the right number of instances for your application, operate a healthy group of instances, and scale it according to your needs.</p>
<p>您可创建 EC2 实例的集合，称为 Auto Scaling 组 。您可以指定每个 Auto Scaling 组中最少的实例数量，Auto Scaling 会确保您的组中的实例永远不会低于这个数量。您可以指定每个 Auto Scaling 组中最大的实例数量，Auto Scaling 会确保您的组中的实例永远不会高于这个数量。如果您在创建组的时候或在创建组之后的任何时候指定了所需容量，Auto Scaling 会确保您的组一直具有此数量的实例。如果您指定了扩展策略，则 Auto Scaling 可以在您的应用程序的需求增加或降低时启动或终止实例。<br><img src="/images/aws/aws_scaling.jpg" alt=""></p>
<p>简单的一个小例子<br><img src="/images/aws/aws_scaling_group.jpg" alt=""></p>
<p>配置完成后，自动生成3个Instances，并加到配置的ELB中。通过EC2 public ip和ELB DNS都可以正常访问到静态页面。</p>
<p>我把两个Instances Terminated，因为设置了desired capacity is 3，它会自动再启动两个Instances，并自动加到ELB中。<br><img src="/images/aws/aws_scaling_check.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[AWS - EC2 - Bootstrap Script]]></title>
      <url>http://izheyi.com/2018/04/19/AWS-EC2-Bootstrap-Script/</url>
      <content type="html"><![CDATA[<p>当您在 Amazon EC2 中启动实例时，您可以选择将用户数据传递到可用于执行常见自动配置任务甚至在实例启动后运行脚本的实例。您可以将两类用户数据传递到 Amazon EC2：Shell 脚本和 cloud-init 指令。</p>
<p>我们就就前面的例子试验一下，安装Apache，并创建简单Web验证。</p>
<ol>
<li>在IAM新建一个Role，对该EC2授予AmazonS3FullAccess权限。</li>
<li>把’index.html’upload到S3上。</li>
<li>Launch Instance with IAM role and script。<br><img src="/images/aws/ec2_strapscript.jpg" alt=""></li>
<li>验证.<br><img src="/images/aws/ec2_strapscript_verify.jpg" alt=""></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[AWS - EC2 - IAM Role]]></title>
      <url>http://izheyi.com/2018/04/19/AWS-EC2-IAM-Role/</url>
      <content type="html"><![CDATA[<p>可以使用 Amazon EC2 和 AWS Identity and Access Management (IAM) 的功能，在不共享您的安全凭证情况下允许其他用户、服务和应用程序使用您的 Amazon EC2 资源。</p>
<p>我们拿EC2和S3来做个例子，SSH到新创建的Instance，<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[ec2-user@ip-<span class="number">172</span>-<span class="number">31</span>-<span class="number">43</span>-<span class="number">33</span> ~]$ aws s3 ls</span><br><span class="line">Unable to locate credentials. You can configure credentials by running <span class="string">"aws configure"</span>.</span><br></pre></td></tr></table></figure></p>
<p>必须要Configure，建立Credential之后才能执行该Command。</p>
<p>我们用IAM Role的方式来处理：</p>
<ol>
<li>在IAM新建一个Role，对该EC2授予AmazonS3FullAccess权限。</li>
<li>把这个Role Attach到EC2上。<br><img src="/images/aws/ec2_iam.jpg" alt=""></li>
<li>执行同一Command。<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[ec2-user@ip-<span class="number">172</span>-<span class="number">31</span>-<span class="number">43</span>-<span class="number">33</span> ~]$ aws s3 ls</span><br><span class="line">Unable to locate credentials. You can configure credentials by running <span class="string">"aws configure"</span>.</span><br><span class="line">[ec2-user@ip-<span class="number">172</span>-<span class="number">31</span>-<span class="number">43</span>-<span class="number">33</span> ~]$ aws s3 ls</span><br><span class="line"><span class="number">2018</span>-<span class="number">04</span>-<span class="number">13</span> <span class="number">05</span>:<span class="number">57</span>:<span class="number">09</span> yongfeiuall</span><br><span class="line"><span class="number">2018</span>-<span class="number">04</span>-<span class="number">14</span> <span class="number">02</span>:<span class="number">43</span>:<span class="number">42</span> yongfeiuall.cloudfront</span><br><span class="line"><span class="number">2018</span>-<span class="number">04</span>-<span class="number">13</span> <span class="number">23</span>:<span class="number">52</span>:<span class="number">51</span> yongfeiuall.lifecycle</span><br><span class="line"><span class="number">2018</span>-<span class="number">04</span>-<span class="number">14</span> <span class="number">00</span>:<span class="number">24</span>:<span class="number">46</span> yongfeiuall.staticwebsite</span><br><span class="line"><span class="number">2018</span>-<span class="number">04</span>-<span class="number">13</span> <span class="number">22</span>:<span class="number">17</span>:<span class="number">33</span> yongfeiuall.sydney</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[AWS - EC2 - Security Group]]></title>
      <url>http://izheyi.com/2018/04/18/AWS-EC2-Security-Group/</url>
      <content type="html"><![CDATA[<p>安全组 起着虚拟防火墙的作用，可控制一个或多个实例的流量。在您启动实例时，将一个或多个安全组与该实例相关联。为每个安全组添加规则，规定流入或流出其关联实例的流量。</p>
<p>说白了，就是入站规则与出站规则的集合。</p>
<p>在新建的Instance上安装Apache，并创建一个简单的HTML文件<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="variable">@ip</span>-<span class="number">172</span>-<span class="number">31</span>-<span class="number">37</span>-<span class="number">102</span> html]<span class="comment"># vi index.html </span></span><br><span class="line">[root<span class="variable">@ip</span>-<span class="number">172</span>-<span class="number">31</span>-<span class="number">37</span>-<span class="number">102</span> html]<span class="comment"># ls</span></span><br><span class="line">index.html</span><br><span class="line">[root<span class="variable">@ip</span>-<span class="number">172</span>-<span class="number">31</span>-<span class="number">37</span>-<span class="number">102</span> html]<span class="comment"># cat index.html </span></span><br><span class="line">&lt;html&gt;&lt;h1&gt;<span class="constant">Welcome</span> <span class="constant">Yongfeiuall</span>&lt;<span class="regexp">/h1&gt;&lt;/html</span>&gt;</span><br></pre></td></tr></table></figure></p>
<p>在Security Group Inbound只加SSH，在Browser里输入Public IP：<br><img src="/images/aws/sg_default.jpg" alt=""><br>在Inbound中增加HTTP， 刷新页面：<br><img src="/images/aws/sg_http.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[AWS - EC2]]></title>
      <url>http://izheyi.com/2018/04/17/AWS-EC2/</url>
      <content type="html"><![CDATA[<p>Amazon Elastic Compute Cloud (Amazon EC2) 是一种 Web 服务，可以在云中提供安全并且可以调整大小的计算容量。<br>使用 Amazon EC2 可避免前期的硬件投入，因此您能够快速开发和部署应用程序。通过使用 Amazon EC2，您可以根据自身需要启动任意数量的虚拟服务器、配置安全和网络以及管理存储。Amazon EC2 允许您根据需要进行缩放以应对需求变化或流行高峰，降低流量预测需求。</p>
<h1 id="Regions-and-Availability-Zones"><a href="#Regions-and-Availability-Zones" class="headerlink" title="Regions and Availability Zones"></a>Regions and Availability Zones</h1><p>每个区域 都是一个独立的地理区域。每个区域都有多个相互隔离的位置，称为可用区。<br>每一个区域都是完全独立的。每个可用区都是独立的，但区域内的可用区通过低延迟链接相连。<br><img src="/images/aws/ec2_region.jpg" alt=""></p>
<h1 id="Launch-Instance"><a href="#Launch-Instance" class="headerlink" title="Launch Instance"></a>Launch Instance</h1><p>在<code>EC2 -&gt; Dashboard</code>中进行操作。 创建时所有的配置都用Default。</p>
<h1 id="Key-Pairs"><a href="#Key-Pairs" class="headerlink" title="Key Pairs"></a>Key Pairs</h1><p>Amazon EC2 使用公有密钥密码术加密和解密登录信息。公有密钥密码术使用公有密钥加密某个数据 (如一个密码)，然后收件人可以使用私有密钥解密数据。公有和私有密钥被称为密钥对。<br>要登录您的实例，您必须创建一个密钥对，并在启动实例时指定密钥对的名称，然后使用私有密钥连接实例。</p>
<p>你可以在‘Key Paris’创建，也可以在创建Instance的时候创建。</p>
<h1 id="Verify"><a href="#Verify" class="headerlink" title="Verify"></a>Verify</h1><p>用Xshell，创建是生成的Key Pairs文件和Public IP登录：<br><em>User Name: ec2-user</em><br><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Connecting <span class="keyword">to</span> <span class="number">52.197</span>.<span class="number">124.231</span>:<span class="number">22</span>...</span><br><span class="line">Connection established.</span><br><span class="line"><span class="keyword">To</span> escape <span class="keyword">to</span> local shell, press <span class="attribute">'Ctrl</span>+Alt+]'.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       __|  __|_  )</span><br><span class="line">       _|  (     /   Amazon Linux AMI</span><br><span class="line">      ___|\___|___|</span><br><span class="line"></span><br><span class="line">https://aws.amazon.com/amazon-linux-ami/<span class="number">2017.09</span>-<span class="keyword">release</span>-notes/</span><br><span class="line"><span class="number">8</span> <span class="keyword">package</span>(s) needed <span class="keyword">for</span> security, <span class="keyword">out</span> <span class="keyword">of</span> <span class="number">13</span> available</span><br><span class="line">Run <span class="string">"sudo yum update"</span> <span class="keyword">to</span> apply <span class="keyword">all</span> updates.</span><br><span class="line">[ec2-user@ip-<span class="number">172</span>-<span class="number">31</span>-<span class="number">37</span>-<span class="number">102</span> ~]$</span><br></pre></td></tr></table></figure></p>
<h1 id="Credentials-in-EC2"><a href="#Credentials-in-EC2" class="headerlink" title="Credentials in EC2"></a>Credentials in EC2</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-<span class="number">172</span>-<span class="number">31</span>-<span class="number">43</span>-<span class="number">33</span> ~]<span class="preprocessor"># cd .aws</span></span><br><span class="line">[root@ip-<span class="number">172</span>-<span class="number">31</span>-<span class="number">43</span>-<span class="number">33</span> .aws]<span class="preprocessor"># ls</span></span><br><span class="line">config  credentials</span><br><span class="line">[root@ip-<span class="number">172</span>-<span class="number">31</span>-<span class="number">43</span>-<span class="number">33</span> .aws]<span class="preprocessor"># cat credentials </span></span><br><span class="line">[<span class="keyword">default</span>]</span><br><span class="line">aws_access_key_id = AKIAJ2ZSIKQE5VQKADCA</span><br><span class="line">aws_secret_access_key = <span class="number">6</span>XcK5zvSVPKE4eSJHbmOOspElNyytyLsuCbUQ5GW</span><br></pre></td></tr></table></figure>
<h1 id="Meta-Data"><a href="#Meta-Data" class="headerlink" title="Meta Data"></a>Meta Data</h1><p>实例元数据 是有关您的实例的数据，可以用来配置或管理正在运行的实例。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-<span class="number">172</span>-<span class="number">31</span>-<span class="number">43</span>-<span class="number">33</span> ~]<span class="preprocessor"># curl http:<span class="comment">//169.254.169.254/</span></span></span><br><span class="line"><span class="number">1.0</span></span><br><span class="line"><span class="number">2007</span>-<span class="number">01</span>-<span class="number">19</span></span><br><span class="line"><span class="number">2007</span>-<span class="number">03</span>-<span class="number">01</span></span><br><span class="line"><span class="number">2007</span>-<span class="number">08</span>-<span class="number">29</span></span><br><span class="line"><span class="number">2007</span>-<span class="number">10</span>-<span class="number">10</span></span><br><span class="line"><span class="number">2007</span>-<span class="number">12</span>-<span class="number">15</span></span><br><span class="line"><span class="number">2008</span>-<span class="number">02</span>-<span class="number">01</span></span><br><span class="line"><span class="number">2008</span>-<span class="number">09</span>-<span class="number">01</span></span><br><span class="line"><span class="number">2009</span>-<span class="number">04</span>-<span class="number">04</span></span><br><span class="line"><span class="number">2011</span>-<span class="number">01</span>-<span class="number">01</span></span><br><span class="line"><span class="number">2011</span>-<span class="number">05</span>-<span class="number">01</span></span><br><span class="line"><span class="number">2012</span>-<span class="number">01</span>-<span class="number">12</span></span><br><span class="line"><span class="number">2014</span>-<span class="number">02</span>-<span class="number">25</span></span><br><span class="line"><span class="number">2014</span>-<span class="number">11</span>-<span class="number">05</span></span><br><span class="line"><span class="number">2015</span>-<span class="number">10</span>-<span class="number">20</span></span><br><span class="line"><span class="number">2016</span>-<span class="number">04</span>-<span class="number">19</span></span><br><span class="line"><span class="number">2016</span>-<span class="number">06</span>-<span class="number">30</span></span><br><span class="line"><span class="number">2016</span>-<span class="number">09</span>-<span class="number">02</span></span><br><span class="line">latest[root@ip-<span class="number">172</span>-<span class="number">31</span>-<span class="number">43</span>-<span class="number">33</span> ~]<span class="preprocessor"># curl http:<span class="comment">//169.254.169.254/latest/meta-data/</span></span></span><br><span class="line">ami-id</span><br><span class="line">ami-launch-index</span><br><span class="line">ami-manifest-path</span><br><span class="line">block-device-mapping/</span><br><span class="line">hostname</span><br><span class="line">instance-action</span><br><span class="line">instance-id</span><br><span class="line">instance-type</span><br><span class="line">local-hostname</span><br><span class="line">local-ipv4</span><br><span class="line">mac</span><br><span class="line">metrics/</span><br><span class="line">network/</span><br><span class="line">placement/</span><br><span class="line">profile</span><br><span class="line"><span class="keyword">public</span>-hostname</span><br><span class="line"><span class="keyword">public</span>-ipv4</span><br><span class="line"><span class="keyword">public</span>-keys/</span><br><span class="line">reservation-id</span><br><span class="line">security-groups</span><br><span class="line">services/[root@ip-<span class="number">172</span>-<span class="number">31</span>-<span class="number">43</span>-<span class="number">33</span> ~]<span class="preprocessor"># curl http:<span class="comment">//169.254.169.254/latest/meta-data/public-ipv4</span></span></span><br><span class="line"><span class="number">54.64</span><span class="number">.167</span><span class="number">.73</span>[root@ip-<span class="number">172</span>-<span class="number">31</span>-<span class="number">43</span>-<span class="number">33</span> ~]<span class="preprocessor"># curl http:<span class="comment">//169.254.169.254/latest/meta-data/hostname</span></span></span><br><span class="line">ip-<span class="number">172</span>-<span class="number">31</span>-<span class="number">43</span>-<span class="number">33.</span>ap-northeast-<span class="number">1.</span>compute.internal[root@ip-<span class="number">172</span>-<span class="number">31</span>-<span class="number">43</span>-<span class="number">33</span> ~]<span class="preprocessor">#</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[爷爷，你一直都在]]></title>
      <url>http://izheyi.com/2018/04/16/%E7%88%B7%E7%88%B7%EF%BC%8C%E4%BD%A0%E4%B8%80%E7%9B%B4%E9%83%BD%E5%9C%A8/</url>
      <content type="html"><![CDATA[<p>最近脑袋里时不时的会蹦出来和爷爷的点点滴滴，也会在梦里见到他，尽管已走了好几年了，但在梦里还能够跟他说上几句话，很真实，很温暖，仿佛就在昨天。</p>
<p>他是经历过饥荒年代的人，在奶奶眼里是个很伟大的人，为了家做了很多牺牲。在那个年代出生的人难免都有些重男轻女的思想，而我是整个大家的长子，再加上隔辈亲，爷爷和奶奶都对我格外的好，我小时候多病，奶奶常说，也不知道你爷爷怎么这么有钱，每次看病要钱都是现成的。从记事起到他走，也就短短20年，但从他身上学到了很多，正直，努力，做一个对家对自己负责的人。</p>
<p>本应该是你享福的时候，你却走了，而你走的时候是我最难的时候，也没能见上你最后一面，尽管自责了很多，但是个永远的遗憾。如果你还在的话，看着儿孙满堂，各自有家有事业，我都能想象的到你开心的样子；如果你还在的话，我也能实现小时候给你吹过的牛，等我长大了孝顺你，带你去看天安门；如果你还在的话，我还能坐在那里和你聊天，从你那里得到安慰和想法，哪怕只是静静的坐在那里看着你，现在想想，是多么奢侈的事情啊。</p>
<p>曾经看过一段话，人死了分三个阶段，第一次是断气的时候，从生物学上他死了；第二次是出殡的时候，亲戚朋友都来缅怀他，从社会上他没了；第三次是最后一个还记得他的人把他忘记的时候，他才真正的死了。</p>
<p>死亡不是尽头，遗忘才是。我想我永远也不会忘记你，也希望你一样能记得我。在这时间的长河里，在几生几世之后，如果我们有缘再相见，我想我们会比在这一世更亲。</p>
<p>在写下这些话的时候，我已控制不住自己湿了眼眶，收笔，爷爷你还好吗？想你！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[AWS - CloudFront]]></title>
      <url>http://izheyi.com/2018/04/15/AWS-CloudFront/</url>
      <content type="html"><![CDATA[<p>就是提供CDN服务的。</p>
<p>Amazon CloudFront 是一种将静态和动态 Web 内容（例如 .html、.css、.php、图像及媒体文件）加速分配给最终用户的 Web 服务。CloudFront 通过全球节点网络传送内容。</p>
<p>在`Contect Delivery -&gt; CloudFront’中进行设置。</p>
<ul>
<li>Web分配 - 通过 HTTP 或 HTTPS 提供。</li>
<li>RTMP分配 - 使用 Adobe Media Server 和 Adobe 实时消息协议 (RTMP) 流式处理媒体文件。RTMP 分配必须使用 Amazon S3 存储桶作为源。</li>
</ul>
<p>简单使用：</p>
<ol>
<li>创建Bucket<br><img src="/images/aws/cloudfront_bucket.jpg" alt=""><br>可直接<code>https://s3.amazonaws.com/yongfeiuall.cloudfront/%E8%87%AA%E5%8A%A8.png</code>访问该Object。</li>
<li>创建CloudFront<br><img src="/images/aws/cloudfront_web.jpg" alt=""><br>详细配置信息参考<a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html" target="_blank" rel="external">配置</a></li>
<li>验证<br>用分配的域名访问<code>http://d25774ade37.cloudfront.net/%E8%87%AA%E5%8A%A8.png</code>,成功</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[AWS - Hosting a Static Website]]></title>
      <url>http://izheyi.com/2018/04/15/AWS-Hosting-a-Static-Website/</url>
      <content type="html"><![CDATA[<p>在静态网站上，单独的网页包含静态内容。它们也可能包含客户端脚本。</p>
<h1 id="设置静态网站"><a href="#设置静态网站" class="headerlink" title="设置静态网站"></a>设置静态网站</h1><ol>
<li>创建Bucket<br>新建Bucket，并配置网站<br><img src="/images/aws/s3_storage_staticwebsite.jpg" alt=""></li>
<li>上传网站内容<br><img src="/images/aws/s3_storage_staticfile.jpg" alt=""></li>
<li>测试网站<br>两个文件都为Private：<br><img src="/images/aws/s3_storage_staticwebsite_private.jpg" alt=""><br>把两个文件Make Public：<br><img src="/images/aws/s3_storage_staticwebsite_index.jpg" alt=""><br>把index.html设为Private：<br><img src="/images/aws/s3_storage_staticwebsite_error.jpg" alt=""></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[AWS - CLI]]></title>
      <url>http://izheyi.com/2018/04/14/AWS-CLI/</url>
      <content type="html"><![CDATA[<p>AWS 命令行界面 (CLI) 是用于管理 AWS 服务的统一工具。只通过一个工具进行下载和配置，您可以使用命令行控制多个 AWS 服务并利用脚本来自动执行这些服务。</p>
<p>去这里下载<a href="https://aws.amazon.com/cli/?nc1=h_ls" target="_blank" rel="external">AWS Command Line Interface</a><br>Windows下运行： 在 PowerShell 或 Windows 命令处理程序中运行命令。</p>
<p>我们要通过User的AWS Access Key ID和AWS Secret Access Key来登录AWS,在User创建：<br><img src="/images/aws/cli.jpg" alt=""><br><img src="/images/aws/cli_key.jpg" alt=""></p>
<p>登录：<br><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\yongfei.hu&gt;aws configure</span><br><span class="line">AWS <span class="keyword">Access</span> Key ID [<span class="type">None</span>]: AKIAJ2ZSIKQE5VQKADCA</span><br><span class="line">AWS Secret <span class="keyword">Access</span> Key [<span class="type">None</span>]: XcK5zvSVPKE4eSJHbmOOspElNyytyLsuCbUQ5GW</span><br><span class="line"><span class="keyword">Default</span> region <span class="keyword">name</span> [<span class="type">None</span>]: ap-northeast-<span class="number">1</span></span><br><span class="line"><span class="keyword">Default</span> output <span class="keyword">format</span> [<span class="type">None</span>]:</span><br><span class="line"></span><br><span class="line">C:\Users\yongfei.hu&gt;</span><br></pre></td></tr></table></figure></p>
<p>接下来就可以用命令行对AWS进行操作了。 E.g.,<br><img src="/images/aws/cli_ls.jpg" alt=""></p>
<p>只做个简单说明，以后用到了再研究。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[AWS - S3]]></title>
      <url>http://izheyi.com/2018/04/13/AWS-S3/</url>
      <content type="html"><![CDATA[<p>Amazon S3 提供了一个简单 Web 服务接口，可用于随时在 Web 上的任何位置存储和检索任何数量的数据。<br>Amazon S3 将数据存储为存储桶中的对象。对象由文件和描述该文件的任何可选元数据组成。</p>
<p>可以在<code>AWS -&gt; S3</code>通过Console进行管理。</p>
<h1 id="Bucket"><a href="#Bucket" class="headerlink" title="Bucket"></a>Bucket</h1><p>可以简单理解为Folder好了。</p>
<h2 id="Transfer-Acceleration"><a href="#Transfer-Acceleration" class="headerlink" title="Transfer Acceleration"></a>Transfer Acceleration</h2><p>Amazon S3 Transfer Acceleration 可在客户与 S3 存储桶之间实现快速、轻松、安全的远距离文件传输。Transfer Acceleration 利用 Amazon CloudFront 的全球分布式边缘站点。当数据到达某个边缘站点时，会被经过优化的网络路径路由至 Amazon S3。</p>
<h1 id="Object"><a href="#Object" class="headerlink" title="Object"></a>Object</h1><p>Amazon S3 是一种简单的键值存储，专门用于存储任意多的对象。</p>
<h2 id="Storage-Class"><a href="#Storage-Class" class="headerlink" title="Storage Class"></a>Storage Class</h2><p><img src="/images/aws/s3_storage_class.jpg" alt=""><br>GLACIER 存储类适用于在不常访问数据的位置对数据存档。存档对象不可用于实时访问。您必须先还原对象，然后才可以访问它们。</p>
<ul>
<li>您无法在创建对象时指定 GLACIER 作为存储类别。您在创建 GLACIER 对象时，先将对象作为存储类进行上传，然后使用生命周期管理将这些对象转换为 GLACIER 存储类别。</li>
<li>您必须先将 GLACIER 对象还原才能访问它们 (STANDARD、RRS、STANDARD_IA 和 ONEZONE_IA 对象可随时访问)。</li>
</ul>
<h2 id="Versioning"><a href="#Versioning" class="headerlink" title="Versioning"></a>Versioning</h2><p>使用版本控制可在一个存储桶中保留多个版本的对象。必须在您的存储桶上显式启用版本控制。默认情况下，版本控制处于禁用状态。无论是否已启用版本控制，存储桶中的每个对象都具有版本 ID。如果未启用版本控制，Amazon S3 将版本 ID 值设置为空。<br><img src="/images/aws/s3_storage_version.jpg" alt=""></p>
<h1 id="Cross-Region-Replication-CRR"><a href="#Cross-Region-Replication-CRR" class="headerlink" title="Cross-Region Replication (CRR)"></a>Cross-Region Replication (CRR)</h1><p>跨区域复制是一项存储桶级别配置，该功能支持跨不同 AWS 区域中的存储桶自动异步复制对象。我们将这些存储桶分别称为源 存储桶和目标 存储桶。<br><img src="/images/aws/s3_storage_crr.jpg" alt=""></p>
<p>设置成功后，在源Bucket里Upload后，在目标Bucket里会自动Rep。<br>但是对之前源Bucket里有的Objects不会Rep。我们可以通过命令行的方式把之前的Objects同步过去。<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">C:</span>\Users\yongfei.hu&gt;aws s3 cp --recursive <span class="string">s3:</span><span class="comment">//yongfeiuall s3://yongfeiuall.sydney</span></span><br><span class="line"><span class="string">copy:</span> <span class="string">s3:</span><span class="comment">//yongfeiuall/aws.txt to s3://yongfeiuall.sydney/aws.txt</span></span><br><span class="line"><span class="string">copy:</span> <span class="string">s3:</span><span class="comment">//yongfeiuall/replication.txt to s3://yongfeiuall.sydney/replication.txt</span></span><br><span class="line"><span class="string">copy:</span> <span class="string">s3:</span><span class="comment">//yongfeiuall/koala.jpg to s3://yongfeiuall.sydney/koala.jpg</span></span><br></pre></td></tr></table></figure></p>
<h1 id="Life-Cycle-Management"><a href="#Life-Cycle-Management" class="headerlink" title="Life Cycle Management"></a>Life Cycle Management</h1><p>生命周期配置 是一组规则，用于定义 Amazon S3 对一组对象应用的操作。有两种类型的操作：</p>
<ul>
<li>转换操作 – 定义对象转换为另一个存储类的时间。例如，您可以选择在对象创建 30 天后将其转换为 STANDARD_IA 存储类，或在对象创建 1 年后将其存档到 GLACIER 存储类。</li>
<li>过期操作 – 定义对象的过期时间。Amazon S3 将代表您删除过期的对象。</li>
</ul>
<p><img src="/images/aws/s3_storage_lifecycle.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[AWS - IAM]]></title>
      <url>http://izheyi.com/2018/04/11/AWS-IAM/</url>
      <content type="html"><![CDATA[<p>AWS Identity and Access Management (IAM) 是一种 Web 服务，可以帮助您安全地控制对 AWS 资源的访问。您可以使用 IAM 控制对哪个用户进行身份验证 (登录) 和授权 (具有权限) 以使用资源。</p>
<h2 id="多重验证-MFA"><a href="#多重验证-MFA" class="headerlink" title="多重验证(MFA)"></a>多重验证(MFA)</h2><p>您可以向您的账户和各个用户添加双重身份验证以实现更高安全性。借助 MFA，您或您的用户不仅必须提供使用账户所需的密码或访问密钥，还必须提供来自经过特殊配置的设备的代码。</p>
<p>在<code>IAM -&gt; Dashboard</code>来实现这个功能：<br><img src="/images/aws/iam_mfa.jpg" alt=""><br>这里我用了Authy，重新登录后会提示：<br><img src="/images/aws/iam_login.jpg" alt=""></p>
<h2 id="User"><a href="#User" class="headerlink" title="User"></a>User</h2><p>创建 AWS 账户时，会创建一个 AWS 账户<strong>根用户</strong>身份。使用 根用户，您可以对 AWS 账户中的所有资源进行完全、无限制的访问，包括访问您的账单信息，您还能更改自己的密码。</p>
<h3 id="User管理"><a href="#User管理" class="headerlink" title="User管理"></a>User管理</h3><p>在<code>IAM -&gt; Users</code>来实现对用户管理(CRUD，Add Permission, Add Group)。<br><img src="/images/aws/iam_user.jpg" alt=""><br>创建成功后，可以用这个<code>https://account_id.signin.aws.amazon.com/console</code>来登录。</p>
<h3 id="设置密码策略"><a href="#设置密码策略" class="headerlink" title="设置密码策略"></a>设置密码策略</h3><p>在<code>IAM -&gt; Account Settings</code>来实现对密码策略的管理。</p>
<h3 id="MFA"><a href="#MFA" class="headerlink" title="MFA"></a>MFA</h3><p>在<code>IAM -&gt; Users -&gt; Summary -&gt;  Security Credentials</code>来实现对User启用MFA。</p>
<h2 id="Group"><a href="#Group" class="headerlink" title="Group"></a>Group</h2><p>没什么好说的，在<code>IAM -&gt; Groups</code>来实现对组的管理(CRUD，Add Permission, Add/Remove User)。</p>
<h2 id="Role"><a href="#Role" class="headerlink" title="Role"></a>Role</h2><p>也没啥说的，在<code>IAM -&gt; Roles</code>来实现对角色的管理(CRUD，Add Permission)。</p>
<h2 id="Policy"><a href="#Policy" class="headerlink" title="Policy"></a>Policy</h2><p>策略是 AWS 中的一个实体；在附加到身份或资源时，策略定义了它们的权限。在<code>IAM -&gt; Policies</code>来实现对策略的管理。</p>
<p>做了一些基本的操作，Security Status：<br><img src="/images/aws/iam.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[AWS - 介绍]]></title>
      <url>http://izheyi.com/2018/04/08/AWS-%E4%BB%8B%E7%BB%8D/</url>
      <content type="html"><![CDATA[<p>想了解一下云计算相关的知识，正好公司在用AWS，做一个基本的学习和了解。</p>
<p>云计算是通过 Internet 云服务平台按需提供计算能力、数据库存储、应用程序和其他 IT 资源，采用按需支付定价模式。<br>云计算包含三个主要类型，通常被称作：基础设施即服务 (IaaS)、平台即服务 (PaaS) 和软件即服务 (SaaS)。</p>
<p>Amazon Web Services (AWS) 是一个安全的云服务平台，提供计算能力、数据库存储、内容交付以及其他功能来帮助实现业务扩展和增长。</p>
<p>AWS所有的Service：<br><img src="/images/aws/product.jpg" alt=""></p>
<h2 id="申请12月免费账户"><a href="#申请12月免费账户" class="headerlink" title="申请12月免费账户"></a>申请12月免费账户</h2><p>这没什么好说的，申请入口：<a href="https://aws.amazon.com/free/" target="_blank" rel="external">AWS Free Tier</a>，填写正确的信息就好了，要写正确的信用卡号和手机号以做验证，要不然不能申请成功。</p>
<p>申请成功后，登录就可以进入到Console。</p>
<h2 id="创建Billing-Alarm"><a href="#创建Billing-Alarm" class="headerlink" title="创建Billing Alarm"></a>创建Billing Alarm</h2><p>尽管是免费的账户，还是设置一个Alarm好一些，万一花了钱就不好了，而且还是美元。</p>
<ol>
<li>在账户下的‘My Billing Dashboard’中设置，</li>
<li>在‘Alert&amp; Notifications’中Enable你的Monitor your estimated charges，</li>
<li>选择‘Receive Billing Alerts’，保存，并点击‘Manage Billing Alerts’，</li>
<li>到‘CloudWatch -&gt; Alarms - Billing’，</li>
<li>Create Alarm，设置Exceed钱数和接受邮件地址，</li>
<li>去设置的邮箱Verify，Alarm States is OK, 到此创建成功。</li>
</ol>
<p>接下来，会把各个常用模块做个简单学习。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[如何看待工资？]]></title>
      <url>http://izheyi.com/2018/04/07/%E5%A6%82%E4%BD%95%E7%9C%8B%E5%BE%85%E5%B7%A5%E8%B5%84%EF%BC%9F/</url>
      <content type="html"><![CDATA[<p>在上一家公司的时候就想过这个问题，但是一直没有深思考，说一下自己的一些见解，仅代表个人看法，如有不妥，还请指正。</p>
<h2 id="工作价值：工资"><a href="#工作价值：工资" class="headerlink" title="工作价值：工资"></a>工作价值：工资</h2><p>我一直觉得工资不是评判一个人价值的唯一指标，就像考试第一名并不能代表你就是最优秀的学生。金钱/成绩确实很重要，但不是唯一。</p>
<p>但是从另一个角度想想，工资是不是公司衡量你工作价值的一个标准？工资是不是能反应出你的能力和努力后的成长？如果你的工资不高或者涨的不多，你有没有思考过，是不是因为自身的能力在标准之下？</p>
<h2 id="为什么追求高工资"><a href="#为什么追求高工资" class="headerlink" title="为什么追求高工资"></a>为什么追求高工资</h2><p>如今的我们跟上一辈的不同之处，还在于我们以近乎全裸的方式来到大城市，一无所有，没有亲戚邻居的帮衬，一切都得靠自己去努力，而大城市里的一切又是那么的昂贵，怎么才能活下去？怎么才能在这里扎根？这是要直面的且最基本的需求，所以追求高工资就也无可厚非。其实大家都是普通人，绝大多数人都只能通过努力工作来改变自己的命运，过上所谓的体面生活，而工资对普通人可以说是唯一的收入来源，有的人甚至以牺牲健康的代价去拼命加班，去挣更多的工资，不就是希望自己能在这个所谓的大都市里站住脚，让自己能有安全感。</p>
<p>活过而立之年，再想想，人追求越来越高的工资，真的就是单纯的为了追求金钱，追求物质？从人的需求层次来看，人最终追求的应该就是自由选择的权利，去做自己想做的事。从古至今来看，金钱好像是能够获得这种权利最容易的方式。</p>
<h2 id="保持工资持续增长"><a href="#保持工资持续增长" class="headerlink" title="保持工资持续增长"></a>保持工资持续增长</h2><p>从个人自身来看，你要舍得投资自己(ROI最高)，不断输入，去努力，去提升自己的价值，相信不断成长的你，工资也会呈上升曲线。</p>
<p>如今是一个‘大众创业，万众创新’的时代，是一个在别人嘴里站在风口猪都会飞的时代，也就是大家一直都在说的做事要顺势而为，其实工资也一样，在一个夕阳产业里，你再努力，工作价值再大，工资的增长未必能达到你的预期。所以要选对行业，站对队。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[北京海洋馆]]></title>
      <url>http://izheyi.com/2018/04/06/%E5%8C%97%E4%BA%AC%E6%B5%B7%E6%B4%8B%E9%A6%86/</url>
      <content type="html"><![CDATA[<p>今年的清明节很不简单，竟然下起了雪，风不小，但是也没有那么的冷。</p>
<p>本来打算是去天文馆的，去的晚，票都售罄了，就去了它隔壁。</p>
<p><img src="/images/izheyi/2018/04/haiyangguan_01.JPG" alt=""><br><img src="/images/izheyi/2018/04/haiyangguan_02.JPG" alt=""><br><img src="/images/izheyi/2018/04/haiyangguan_03.JPG" alt=""><br><img src="/images/izheyi/2018/04/haiyangguan_04.JPG" alt=""><br><img src="/images/izheyi/2018/04/haiyangguan_05.JPG" alt=""><br><img src="/images/izheyi/2018/04/haiyangguan_06.JPG" alt=""><br><img src="/images/izheyi/2018/04/haiyangguan_07.JPG" alt=""><br><img src="/images/izheyi/2018/04/haiyangguan_08.JPG" alt=""><br><img src="/images/izheyi/2018/04/haiyangguan_09.JPG" alt=""><br><img src="/images/izheyi/2018/04/haiyangguan_10.JPG" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CI/CD - 当前公司产品部署流程]]></title>
      <url>http://izheyi.com/2018/04/03/%E5%85%AC%E5%8F%B8%E4%BA%A7%E5%93%81%E9%83%A8%E7%BD%B2%E6%B5%81%E7%A8%8B/</url>
      <content type="html"><![CDATA[<p>花了点时间把项目目前整个部署的流程从头到尾详细的梳理了一遍，了解了部署中的一些细节。目前这个过程算是半自动化的吧，在部署的过程中用到以下工具：</p>
<ul>
<li>Jenkins</li>
<li>Git</li>
<li>Artifactory</li>
<li>Rundeck</li>
<li>Salt</li>
</ul>
<p>大概的示意图：<br><img src="/images/CI/deploy.jpg" alt=""></p>
<ol>
<li>pipeline job</li>
<li>push to artifactory(jar, deb, zip)</li>
<li>salt configuration and work with Git</li>
<li>check deploy build version</li>
</ol>
<p>再慢慢深入一些，能从AWS-Terraform-Salt-Automation，做到真正的全自动化。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CI/CD - 理解]]></title>
      <url>http://izheyi.com/2018/04/01/CI-CD%E7%90%86%E8%A7%A3/</url>
      <content type="html"><![CDATA[<p><strong>持续集成</strong>(Continuous integration)是一种软件开发实践，即团队开发成员经常集成它们的工作，通过每个成员每天至少集成一次，也就意味着每天可能会发生多次集成。每次集成都通过自动化的构建（包括编译，发布，自动化测试）来验证，从而尽早地发现集成错误。<br><img src="/images/CI/ci.jpg" alt=""></p>
<p><strong>持续交付</strong>(Continuous deliver)是一种软件工程手法，利用技术和工具快速地交付生产阶段的代码。<br>持续交付可以看作持续集成的下一步。它强调的是，不管怎么更新，软件是随时随地可以交付的。<br><img src="/images/CI/ci_1.jpg" alt=""></p>
<p><strong>持续部署</strong>(continuous deployment)是持续交付的下一步，指的是代码通过评审以后，自动部署到生产环境。<br>持续部署的前提是能自动化完成测试、构建、部署等步骤。它与持续交付的区别，可以参考下图。<br><img src="/images/CI/cd.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[丁丁画画（一年级下学期）]]></title>
      <url>http://izheyi.com/2018/03/25/%E4%B8%81%E4%B8%81%E7%94%BB%E7%94%BB%EF%BC%88%E4%B8%80%E5%B9%B4%E7%BA%A7%E4%B8%8B%E5%AD%A6%E6%9C%9F%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><img src="/images/izheyi/pic/2018/1_2_1.JPG" alt=""><br><img src="/images/izheyi/pic/2018/1_2_2.JPG" alt=""><br><img src="/images/izheyi/pic/2018/1_2_3.JPG" alt=""><br><img src="/images/izheyi/pic/2018/1_2_4.JPG" alt=""><br><img src="/images/izheyi/pic/2018/1_2_5.JPG" alt=""><br><img src="/images/izheyi/pic/2018/1_2_6.JPG" alt=""><br><img src="/images/izheyi/pic/2018/1_2_7.JPG" alt=""><br><img src="/images/izheyi/pic/2018/1_2_8.JPG" alt=""><br><img src="/images/izheyi/pic/2018/1_2_9.JPG" alt=""><br><img src="/images/izheyi/pic/2018/1_2_10.JPG" alt=""><br><img src="/images/izheyi/pic/2018/1_2_11.JPG" alt=""><br><img src="/images/izheyi/pic/2018/1_2_12.JPG" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[丁丁画画（一年级上学期）]]></title>
      <url>http://izheyi.com/2018/03/18/%E4%B8%81%E4%B8%81%E7%94%BB%E7%94%BB%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>整理东西，发现在学校的美术课，课余时间，还画不不少的画，Mark一下。以后每个学期整理一次。<br><img src="/images/izheyi/pic/2017/1_1_1.JPG" alt=""><br><img src="/images/izheyi/pic/2017/1_1_2.JPG" alt=""><br><img src="/images/izheyi/pic/2017/1_1_3.JPG" alt=""><br><img src="/images/izheyi/pic/2017/1_1_4.JPG" alt=""><br><img src="/images/izheyi/pic/2017/1_1_5.JPG" alt=""><br><img src="/images/izheyi/pic/2017/1_1_6.JPG" alt=""><br><img src="/images/izheyi/pic/2017/1_1_7.JPG" alt=""><br><img src="/images/izheyi/pic/2017/1_1_8.JPG" alt=""><br><img src="/images/izheyi/pic/2017/1_1_9.JPG" alt=""><br><img src="/images/izheyi/pic/2017/1_1_10.JPG" alt=""><br><img src="/images/izheyi/pic/2017/1_1_11.JPG" alt=""><br><img src="/images/izheyi/pic/2017/1_1_12.JPG" alt=""><br><img src="/images/izheyi/pic/2017/1_1_13.JPG" alt=""><br><img src="/images/izheyi/pic/2017/1_1_14.JPG" alt=""><br><img src="/images/izheyi/pic/2017/1_1_15.JPG" alt=""><br><img src="/images/izheyi/pic/2017/1_1_16.JPG" alt=""><br><img src="/images/izheyi/pic/2017/1_1_17.JPG" alt=""><br><img src="/images/izheyi/pic/2017/1_1_18.JPG" alt=""><br><img src="/images/izheyi/pic/2017/1_1_19.JPG" alt=""><br><img src="/images/izheyi/pic/2017/1_1_20.JPG" alt=""><br><img src="/images/izheyi/pic/2017/1_1_21.JPG" alt=""><br><img src="/images/izheyi/pic/2017/1_1_22.JPG" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Salt - State]]></title>
      <url>http://izheyi.com/2018/03/11/Salt-State/</url>
      <content type="html"><![CDATA[<p>States是SaltStack中的配置语言，在日常进行配置管理时需要编写大量的States文件。如安装软件啊，更改配置啊等，就需要编写states sls文件（描述状态配置的文件）去描述和实现这些功能。编写states sls文件一般是是YAML语法格式，也支持使用Python语言来编写。<br>定义例子：<br><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">apache: #state名称：apache</span><br><span class="line">  pkg: #管理对象类型：pkg，进行软件安装（yum、apt）</span><br><span class="line">    -<span class="ruby"> installed <span class="comment">#pkg要执行的方法：install，如未安装就进行安装</span></span><br><span class="line"></span>  service: #管理对象类型：service，管理系统守护进程</span><br><span class="line">    -<span class="ruby"> running <span class="comment">#service要执行的方法：running，如未运行就进行启动</span></span><br><span class="line"></span>    -<span class="ruby"> <span class="symbol">require:</span> <span class="comment">#关键字require，确保apache服务只有在成功安装软件包后才会启动</span></span><br><span class="line"></span>      -<span class="ruby"> <span class="symbol">pkg:</span> apache</span></span><br></pre></td></tr></table></figure></p>
<h1 id="State-Tree"><a href="#State-Tree" class="headerlink" title="State Tree"></a>State Tree</h1><p>Top file:配置管理入口文件，和pillar类似，指定minions需要完成那些配置管理，默认为top.sls<br><em>注：在定义top.sls时,会先找apache/init.sls,如果没有的话，会找<br>apache.sls</em><br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">　　<span class="keyword">base</span>:</span><br><span class="line">　　　　<span class="string">'*'</span>:</span><br><span class="line">　　　　  - apache</span><br></pre></td></tr></table></figure></p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>跟系统文件树一样，salt state文件也有自己的树系统，这通过配置文件中的file_roots配置<br><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#在/etc/salt/master 中配置下面选项，指定salt state的根目录在/srv/salt</span></span><br><span class="line"><span class="label">file_roots:</span></span><br><span class="line">  base:</span><br><span class="line">    - /srv/salt</span><br></pre></td></tr></table></figure></p>
<p>修改master配置文件后需要重启。</p>
<h2 id="创建Top文件"><a href="#创建Top文件" class="headerlink" title="创建Top文件"></a>创建Top文件</h2><p>在/srv/salt目录下创建一个top.sls文件，这个文件提供了其它文件的映射。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr_selector">[root@Automation salt]</span># <span class="tag">vi</span> <span class="tag">top</span><span class="class">.sls</span></span><br><span class="line"><span class="attr_selector">[root@Automation salt]</span># <span class="tag">cat</span> <span class="tag">top</span><span class="class">.sls</span> </span><br><span class="line"><span class="rule"><span class="attribute">base</span>:<span class="value"></span><br><span class="line">  <span class="string">'*'</span>:</span><br><span class="line">    - webserver</span></span></span><br></pre></td></tr></table></figure></p>
<h2 id="创建State文件"><a href="#创建State文件" class="headerlink" title="创建State文件"></a>创建State文件</h2><p>在top.sls相同的目录下，创建一个名为webserver.sls的空文件，也可以在同目录下创建一个文件夹webserver，在里边创建init.sls。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr_selector">[root@Automation salt]</span># <span class="tag">vi</span> <span class="tag">webserver</span><span class="class">.sls</span></span><br><span class="line"><span class="attr_selector">[root@Automation salt]</span># <span class="tag">cat</span> <span class="tag">webserver</span><span class="class">.sls</span> </span><br><span class="line"><span class="rule"><span class="attribute">httpd</span>:<span class="value">                  </span><br><span class="line">  pkg:                  </span><br><span class="line">    - installed</span></span></span><br></pre></td></tr></table></figure></p>
<h2 id="执行Salt-State"><a href="#执行Salt-State" class="headerlink" title="执行Salt State"></a>执行Salt State</h2><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation salt]# salt <span class="emphasis">'*'</span> state.highstate</span><br><span class="line"><span class="header">192.168.244.130:</span><br><span class="line">----------</span></span><br><span class="line"><span class="code">          ID: httpd</span></span><br><span class="line"><span class="code">    Function: pkg.installed</span></span><br><span class="line"><span class="code">      Result: True</span></span><br><span class="line"><span class="code">     Comment: Package httpd is already installed.</span></span><br><span class="line"><span class="code">     Started: 20:54:04.497245</span></span><br><span class="line"><span class="code">    Duration: 2334.569 ms</span></span><br><span class="line"><span class="code">     Changes:   </span></span><br><span class="line"></span><br><span class="line"><span class="header">Summary</span><br><span class="line">------------</span></span><br><span class="line">Succeeded: 1</span><br><span class="line"><span class="header">Failed:    0</span><br><span class="line">------------</span></span><br><span class="line">Total states run:     1</span><br></pre></td></tr></table></figure>
<p>master将会指导所有的目标minions运行state.highstate。<br>当minion执行highstate，它将会下载top文件中匹配的内容，minion将表达式中匹配的内容下载、编译、执行。一旦完成，minion将返回所有的动作执行结果和所有更改。</p>
<a id="more"></a>
<h1 id="状态间关系"><a href="#状态间关系" class="headerlink" title="状态间关系"></a>状态间关系</h1><ul>
<li>Ordering<br><img src="/images/salt/order.jpg" alt=""></li>
<li>require<br><img src="/images/salt/requisites.jpg" alt=""></li>
<li><p>include<br>包含某个文件 比如新建一个test.sls文件内，就可以继承nginx和php相关模块配置，而不必重新编写</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr_selector">[root@Automation salt]</span># <span class="tag">cat</span> <span class="tag">test</span><span class="class">.sls</span> </span><br><span class="line"><span class="rule"><span class="attribute">include</span>:<span class="value"></span><br><span class="line">  - nginx</span><br><span class="line">  - php</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>watch<br>监测依赖的state的状态，如果状态发生变化，做出反应（例如监控文件变化，发生变化后立即重启服务）</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ntpd</span>:  </span><br><span class="line">  service.<span class="attribute">running</span>:  </span><br><span class="line">    - <span class="attribute">watch</span>:  #这里它是监听ID为<span class="attribute">file</span>: /etc/ntp.conf，如果下方的状态没有发生改变，那么我这个重启规则就不会执行，那么就不会执行服务重启操作。</span><br><span class="line">      - <span class="attribute">file</span>: /etc/ntp.conf  #也就相当于如果minion端的ntp.conf或者master端的<span class="attribute">salt</span>:<span class="comment">//files/ntp.conf的文件没有发生改变，也就不会发生文件下发操作，也就可以理解为如果没有发生文件更改。</span></span><br><span class="line"></span><br><span class="line">/etc/ntp.<span class="attribute">conf</span>:</span><br><span class="line">  file.<span class="attribute">managed</span>:</span><br><span class="line">    - <span class="attribute">source</span>: <span class="attribute">salt</span>:<span class="comment">//files/ntp.conf</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="主要模块"><a href="#主要模块" class="headerlink" title="主要模块"></a>主要模块</h1><ul>
<li><p>软件包状态管理模块 - pkg</p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pkg.installed  <span class="comment"># 安装</span></span><br><span class="line">pkg.latest  <span class="comment"># 确保最新版本</span></span><br><span class="line">pkg.<span class="keyword">remove</span>  <span class="comment"># 卸载</span></span><br><span class="line">pkg.purge  <span class="comment"># 卸载并删除配置文件</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>文件状态管理模块 - file</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">file</span>.managed：   　　<span class="comment">#保证文件存在并且为对应的状态</span></span><br><span class="line"><span class="type">file</span>.recurse:   　　 <span class="comment">#保证目录存在并且为对应的状态</span></span><br><span class="line"><span class="type">file</span>.absent:   　　  <span class="comment">#确保文件不存在，如果存在则进行删除操作</span></span><br></pre></td></tr></table></figure>
<p>例子：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation salt]# vi file.sls</span><br><span class="line">[root@Automation salt]# cat file.sls </span><br><span class="line"><span class="operator"><span class="keyword">create</span> test_create_directory:</span><br><span class="line"> <span class="keyword">file</span>.<span class="keyword">directory</span>:</span><br><span class="line">   - <span class="keyword">name</span>: /opt/my_new_directory</span><br><span class="line">   - <span class="keyword">user</span>: root</span><br><span class="line">   - <span class="keyword">group</span>: root</span><br><span class="line">   - <span class="keyword">mode</span>: <span class="number">755</span></span><br><span class="line">[root@Automation <span class="keyword">salt</span>]# <span class="keyword">salt</span> <span class="string">'*'</span> state.<span class="keyword">apply</span> <span class="keyword">file</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.244</span><span class="number">.130</span>:</span><br><span class="line">    <span class="comment">----------</span></span><br><span class="line">    file_|-<span class="keyword">create</span> test_create_directory_|-/opt/my_new_directory_|-<span class="keyword">directory</span>:</span><br><span class="line">        <span class="comment">----------</span></span><br><span class="line">        __run_num__:</span><br><span class="line">            <span class="number">0</span></span><br><span class="line">        changes:</span><br><span class="line">            <span class="comment">----------</span></span><br><span class="line">            /opt/my_new_directory:</span><br><span class="line">                <span class="keyword">New</span> Dir</span><br><span class="line">        <span class="keyword">comment</span>:</span><br><span class="line">            <span class="keyword">Directory</span> /opt/my_new_directory <span class="keyword">updated</span></span><br><span class="line">        <span class="keyword">duration</span>:</span><br><span class="line">            <span class="number">52.238</span></span><br><span class="line">        <span class="keyword">name</span>:</span><br><span class="line">            /opt/my_new_directory</span><br><span class="line">        <span class="keyword">result</span>:</span><br><span class="line">            <span class="literal">True</span></span><br><span class="line">        start_time:</span><br><span class="line">            <span class="number">21</span>:<span class="number">07</span>:<span class="number">18.721680</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>服务状态管理模块 - service</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">service<span class="class">.running</span>        #确保服务处于运行状态</span><br><span class="line">service<span class="class">.enabled</span>        #确保服务会开机自动启动</span><br><span class="line">service<span class="class">.disabled</span>    #确保服务不会开机自启动</span><br><span class="line">service<span class="class">.dead</span>        #确保服务当前没有运行</span><br></pre></td></tr></table></figure>
<p>例子：</p>
<ol>
<li>on minion，<code>service mysqld stop</code></li>
<li><p>execute state</p>
<figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@<span class="type">Automation</span> salt]<span class="comment"># cat mysql.sls </span></span><br><span class="line">mysql running:</span><br><span class="line">  service.running:</span><br><span class="line">    - name: mysqld</span><br><span class="line">[root@<span class="type">Automation</span> salt]<span class="comment"># salt '*' state.apply mysql</span></span><br><span class="line"><span class="number">192</span>.<span class="number">168</span>.<span class="number">244</span>.<span class="number">130</span>:</span><br><span class="line">    ----------</span><br><span class="line">    service_|-mysql running_|-mysqld_|-running:</span><br><span class="line">        ----------</span><br><span class="line">        __run_num__:</span><br><span class="line">            <span class="number">0</span></span><br><span class="line">        changes:</span><br><span class="line">            ----------</span><br><span class="line">            mysqld:</span><br><span class="line">                <span class="type">True</span></span><br><span class="line">        comment:</span><br><span class="line">            <span class="type">Started</span> <span class="type">Service</span> mysqld</span><br><span class="line">        duration:</span><br><span class="line">            <span class="number">1189</span>.<span class="number">538</span></span><br><span class="line">        name:</span><br><span class="line">            mysqld</span><br><span class="line">        <span class="literal">result</span>:</span><br><span class="line">            <span class="type">True</span></span><br><span class="line">        start_time:</span><br><span class="line">            <span class="number">21</span>:<span class="number">20</span>:<span class="number">29</span>.<span class="number">182736</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>mysql start</p>
</li>
</ol>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Salt - Grains和Pillar]]></title>
      <url>http://izheyi.com/2018/03/07/Salt-Grains%E5%92%8CPillar/</url>
      <content type="html"><![CDATA[<h1 id="Grains-VS-Pillar"><a href="#Grains-VS-Pillar" class="headerlink" title="Grains VS Pillar"></a>Grains VS Pillar</h1><p><img src="/images/salt/grain.jpg" alt=""></p>
<h1 id="Grains"><a href="#Grains" class="headerlink" title="Grains"></a>Grains</h1><p>静态数据，当Minion启动的时候收集的MInion本地的相关信息。不重启minion，这些信息数据是不会改变的。</p>
<h2 id="数据查询"><a href="#数据查询" class="headerlink" title="数据查询"></a>数据查询</h2><ul>
<li><p>列出主机的详细信息:</p>
<figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation ~]# salt 192.168.* grains.items</span><br><span class="line">192.168.244.130:</span><br><span class="line">    -<span class="ruby">---------</span><br><span class="line"></span>    SSDs:</span><br><span class="line">    biosreleasedate:</span><br><span class="line">        07/02/2015</span><br><span class="line">    biosversion:</span><br><span class="line">        6.00</span><br><span class="line">    cpu_flags:</span><br><span class="line">        -<span class="ruby"> fpu</span><br><span class="line"></span>        -<span class="ruby"> vme</span><br><span class="line"></span>        -<span class="ruby"> de</span><br><span class="line"></span>        -<span class="ruby"> pse</span><br><span class="line"></span>        -<span class="ruby"> tsc</span><br><span class="line"></span>        -<span class="ruby"> msr</span><br><span class="line"></span>        -<span class="ruby"> pae</span><br><span class="line"></span>        -<span class="ruby"> mce</span><br><span class="line"></span>......</span><br></pre></td></tr></table></figure>
</li>
<li><p>列出所有主机的系统版本:</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation salt]<span class="preprocessor"># salt <span class="string">'*'</span> grains.item os</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.244</span><span class="number">.130</span>:</span><br><span class="line">    ----------</span><br><span class="line">    os:</span><br><span class="line">        CentOS</span><br></pre></td></tr></table></figure>
</li>
<li><p>直接获得内容</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation salt]<span class="preprocessor"># salt <span class="string">'*'</span> grains.get os</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.244</span><span class="number">.130</span>:</span><br><span class="line">    CentOS</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="目标选择"><a href="#目标选择" class="headerlink" title="目标选择"></a>目标选择</h2><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="constant">@Automation</span> salt]<span class="preprocessor"># salt -G <span class="string">'os:Centos'</span> test.ping </span></span><br><span class="line"><span class="number">192.168</span><span class="number">.244</span><span class="number">.130</span>:</span><br><span class="line">    <span class="literal">True</span></span><br></pre></td></tr></table></figure>
<h2 id="配置管理"><a href="#配置管理" class="headerlink" title="配置管理"></a>配置管理</h2><ol>
<li><p>修改minion - /etc/salt/minion</p>
<figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># Custom <span class="literal">static</span> grains <span class="keyword">for</span> <span class="keyword">this</span> minion can be specified here and used <span class="keyword">in</span> SLS</span><br><span class="line"># files just like all other grains. This example sets <span class="number">4</span> custom grains, <span class="keyword">with</span></span><br><span class="line"># the <span class="string">'roles'</span> grain having two values that can be matched against.</span><br><span class="line">grains:</span><br><span class="line">  roles:</span><br><span class="line">    - webserver</span><br><span class="line">    - memcache</span><br><span class="line">  deployment: datacenter4</span><br><span class="line">  cabinet: <span class="number">13</span></span><br><span class="line">  cab_u: <span class="number">14</span>-<span class="number">15</span></span><br></pre></td></tr></table></figure>
<p>重启服务验证：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation salt]<span class="preprocessor"># salt <span class="string">'*'</span> grains.item deployment</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.244</span><span class="number">.130</span>:</span><br><span class="line">    ----------</span><br><span class="line">    deployment:</span><br><span class="line">        datacenter4</span><br></pre></td></tr></table></figure>
</li>
<li><p>基于文件 - /etc/salt/grains</p>
<figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="constant">@Automation</span> salt]<span class="preprocessor"># cat grains </span></span><br><span class="line">centos: minion</span><br></pre></td></tr></table></figure>
<p>重启服务验证：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation salt]<span class="preprocessor"># salt <span class="string">'*'</span> grains.item centos</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.244</span><span class="number">.130</span>:</span><br><span class="line">    ----------</span><br><span class="line">    centos:</span><br><span class="line">        minion</span><br></pre></td></tr></table></figure>
</li>
<li><p>_grains目录自定义grain<br>grains脚本目录，必须是base下创建_grains目录（如：/srv/salt/_grains）<br>创建一个python脚本在/srv/salt/_grains目录下</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation _grains]<span class="comment"># cat my_grains </span></span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#-*- coding: utf-8 -*-</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_grains</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 初始化grains字典</span></span><br><span class="line">    grains = &#123;&#125;</span><br><span class="line">    <span class="comment"># 设置字典中的key-value</span></span><br><span class="line">    grains[<span class="string">'eb'</span>] = <span class="string">'eb'</span></span><br><span class="line">    grains[<span class="string">'add'</span>] = <span class="string">'beijing'</span></span><br><span class="line">    <span class="comment"># 返回字典</span></span><br><span class="line">    <span class="keyword">return</span> grains</span><br></pre></td></tr></table></figure>
<p>通过master同步脚本文件至每台minion</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">salt</span> <span class="string">'*'</span> saltutil.sync_grains</span><br></pre></td></tr></table></figure>
<p>文件放在minion主机的/var/cache/salt/minion/extmods/grains目录下</p>
<figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@<span class="type">Automation</span> salt]<span class="comment"># tree minion</span></span><br><span class="line">minion</span><br><span class="line">├── extmods</span><br><span class="line">│   └── grains</span><br><span class="line">│       ├── my_grains.py</span><br><span class="line">│       └── my_grains.pyc</span><br><span class="line">├── files</span><br><span class="line">│   └── base</span><br><span class="line">│       └── _grains</span><br><span class="line">│           └── my_grains.py</span><br><span class="line">├── module_refresh</span><br><span class="line">└── <span class="keyword">proc</span></span><br><span class="line"></span><br><span class="line"><span class="number">6</span> directories, <span class="number">4</span> files</span><br></pre></td></tr></table></figure>
<p>在Master上验证：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation salt]<span class="preprocessor"># salt <span class="string">'*'</span> grains.item add</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.244</span><span class="number">.130</span>:</span><br><span class="line">    ----------</span><br><span class="line">    add:</span><br><span class="line">        beijing</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>grains优先级（item名称相同的情况下）： 系统自带 &gt; grains文件写到 &gt; minion配置文件写的 &gt; 自己写的脚本</p>
<a id="more"></a>
<h1 id="Pillar"><a href="#Pillar" class="headerlink" title="Pillar"></a>Pillar</h1><p>Pillar在salt中是非常重要的组成部分，利用它可以完成很强大的功能，它可以指定一些信息到指定的minion上，不像grains一样是分发到所有Minion上的，它保存的数据可以是动态的,Pillar以sls来写的，格式是键值。</p>
<h2 id="文件路径设置"><a href="#文件路径设置" class="headerlink" title="文件路径设置"></a>文件路径设置</h2><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Salt Pillars allow <span class="keyword">for</span> the building <span class="keyword">of</span> <span class="keyword">global</span> data that can be made selectively</span><br><span class="line"># available <span class="keyword">to</span> different minions based <span class="keyword">on</span> minion grain filtering. The Salt</span><br><span class="line"># Pillar <span class="keyword">is</span> laid <span class="keyword">out</span> <span class="keyword">in</span> the same fashion <span class="keyword">as</span> the file server, <span class="keyword">with</span> environments,</span><br><span class="line"># a top file <span class="keyword">and</span> sls files. However, pillar data does <span class="keyword">not</span> need <span class="keyword">to</span> be <span class="keyword">in</span> the</span><br><span class="line"># highstate format, <span class="keyword">and</span> <span class="keyword">is</span> generally just key/value pairs.</span><br><span class="line">pillar_roots:</span><br><span class="line">  base:</span><br><span class="line">    - /srv/pillar</span><br></pre></td></tr></table></figure>
<p>并创建<br><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /srv/pillar</span><br></pre></td></tr></table></figure></p>
<h2 id="创建Pillar"><a href="#创建Pillar" class="headerlink" title="创建Pillar"></a>创建Pillar</h2><ol>
<li><p>创建一个pillar文件</p>
<figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="constant">@Automation</span> pillar]<span class="preprocessor"># mkdir qa</span></span><br><span class="line">[root<span class="constant">@Automation</span> pillar]<span class="preprocessor"># cd qa</span></span><br><span class="line">[root<span class="constant">@Automation</span> qa]<span class="preprocessor"># ls</span></span><br><span class="line">[root<span class="constant">@Automation</span> qa]<span class="preprocessor"># vi init.sls</span></span><br><span class="line">[root<span class="constant">@Automation</span> qa]<span class="preprocessor"># cat init.sls </span></span><br><span class="line">&#123;% <span class="keyword">if</span> grains[<span class="string">'os'</span>] == <span class="string">'CentOS'</span> %&#125;</span><br><span class="line">vm: vm1</span><br><span class="line">&#123;% elif grains[<span class="string">'os'</span>] == <span class="string">'Debian'</span> %&#125;</span><br><span class="line">vm: vm2</span><br><span class="line">&#123;% <span class="keyword">endif</span> %&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建TOP FILE文件</p>
<figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="constant">@Automation</span> qa]<span class="preprocessor"># cd ..</span></span><br><span class="line">[root<span class="constant">@Automation</span> pillar]<span class="preprocessor"># vi top.sls</span></span><br><span class="line">[root<span class="constant">@Automation</span> pillar]<span class="preprocessor"># cat top.sls </span></span><br><span class="line">base:</span><br><span class="line">  <span class="string">'192.168.244.130'</span>:</span><br><span class="line">    - qa.init</span><br></pre></td></tr></table></figure>
</li>
<li><p>验证</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation pillar]<span class="preprocessor"># salt <span class="string">'*'</span> saltutil.refresh_pillar</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.244</span><span class="number">.130</span>:</span><br><span class="line">    True</span><br><span class="line">[root@Automation pillar]<span class="preprocessor"># salt <span class="string">'*'</span> pillar.items vm</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.244</span><span class="number">.130</span>:</span><br><span class="line">    ----------</span><br><span class="line">    vm:</span><br><span class="line">        vm1</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="目标选择-1"><a href="#目标选择-1" class="headerlink" title="目标选择"></a>目标选择</h2><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation pillar]# salt -I <span class="string">'vm:vm1'</span> grains.item <span class="built_in">os</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.244</span><span class="number">.130</span>:</span><br><span class="line">    <span class="comment">----------</span></span><br><span class="line">    <span class="built_in">os</span>:</span><br><span class="line">        CentOS</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Salt - Execute Commands]]></title>
      <url>http://izheyi.com/2018/03/04/Salt-Execute-Commands%E2%80%98/</url>
      <content type="html"><![CDATA[<p>SaltStak用下面的方式来远程执行命令（run shell commands, update packages, and distribute files to all managed systems simultaneously. ）：<br><img src="/images/salt/command.jpg" alt=""></p>
<ul>
<li><p>cmd 模块是常用的执行远程命令模块，具有强大的功能</p>
<figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[root@Automation ~]</span># salt <span class="number">192.168.244.130</span> cmd.run 'ls  /etc/salt'</span><br><span class="line"><span class="number">192.168.244.130</span>:</span><br><span class="line">    minion</span><br><span class="line">    minion.d</span><br><span class="line">    pki</span><br></pre></td></tr></table></figure>
</li>
<li><p>sys.doc: 类似linux的man命令，可以显示minion支持的模块的详细操作说明</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation ~]<span class="comment"># salt 192.168.244.130 sys.doc pkg.version</span></span><br><span class="line">'pkg.<span class="property">version</span>:'</span><br><span class="line"></span><br><span class="line">    Returns a <span class="type">string</span> representing <span class="keyword">the</span> package <span class="property">version</span> <span class="keyword">or</span> an empty <span class="type">string</span> <span class="keyword">if</span> <span class="keyword">not</span></span><br><span class="line">    installed. If more than one package <span class="property">name</span> <span class="keyword">is</span> specified, a dict <span class="keyword">of</span></span><br><span class="line">    <span class="property">name</span>/<span class="property">version</span> pairs <span class="keyword">is</span> returned.</span><br><span class="line"></span><br><span class="line">    CLI Example:</span><br><span class="line"></span><br><span class="line">        salt '*' pkg.<span class="property">version</span> &lt;package <span class="property">name</span>&gt;</span><br><span class="line">        salt '*' pkg.<span class="property">version</span> &lt;package1&gt; &lt;package2&gt; &lt;package3&gt; ...</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装package</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation ~]<span class="preprocessor"># salt <span class="number">192.168</span><span class="number">.244</span><span class="number">.130</span> pkg.install cowsay</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.244</span><span class="number">.130</span>:</span><br><span class="line">    ----------</span><br><span class="line">    cowsay:</span><br><span class="line">        ----------</span><br><span class="line">        <span class="keyword">new</span>:</span><br><span class="line">            <span class="number">3.03</span>-<span class="number">8.</span>el6</span><br><span class="line">        old:</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>只是简单介绍一下命令执行，saltstack有非常多的模块来进行服务器管理，有需要再深入。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Salt - Targeting]]></title>
      <url>http://izheyi.com/2018/03/04/Salt-Targeting/</url>
      <content type="html"><![CDATA[<p>是指那些minion会作为运行命令或是执行状态的目标。这些目标可以是一个主机名，系统信息，定义的分组，甚至是自定义的绑定的对象。</p>
<p>Targeting的匹配方式：</p>
<ul>
<li><p>Minion Id 匹配</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr_selector">[root@Automation ~]</span># <span class="tag">salt</span> 192<span class="class">.168</span><span class="class">.244</span><span class="class">.130</span> <span class="tag">test</span><span class="class">.ping</span></span><br><span class="line">192<span class="class">.168</span><span class="class">.244</span><span class="class">.130</span>:</span><br><span class="line">    <span class="tag">True</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>通配符匹配</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr_selector">[root@Automation ~]</span># <span class="tag">salt</span> 192<span class="class">.168</span>.* <span class="tag">test</span><span class="class">.ping</span></span><br><span class="line">192<span class="class">.168</span><span class="class">.244</span><span class="class">.130</span>:</span><br><span class="line">    <span class="tag">True</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>正则表达式匹配</p>
</li>
<li>列表匹配</li>
<li>Grains匹配</li>
<li>Node groups匹配</li>
<li>Pillar匹配<br><img src="/images/salt/target.jpg" alt=""></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Salt - 环境安装的问题：Vagrant Up起不来]]></title>
      <url>http://izheyi.com/2018/02/28/Salt-%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E7%9A%84%E9%97%AE%E9%A2%98%EF%BC%9AVagrant-Up%E8%B5%B7%E4%B8%8D%E6%9D%A5/</url>
      <content type="html"><![CDATA[<p>按照官网的步骤，执行<code>Vagrant Up</code>，没有反应，只是鼠标闪动，Google了很多，都说是Vagrant和Virtualbox版本不兼容，Windows真不行。就下载了老版本，Vbox: 4.3.40, Vagrant: 1.9.5。</p>
<h1 id="版本不兼容"><a href="#版本不兼容" class="headerlink" title="版本不兼容"></a>版本不兼容</h1><p><code>Vagrant Up</code>可以运行了，但是有以下错误：<br><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">D</span>:<span class="string">\salt</span> learn<span class="string">\salt-vagrant-demo&gt;vagrant</span> up</span><br><span class="line">Bringing machine <span class="string">'master'</span> up <span class="keyword">with</span> <span class="string">'virtualbox'</span> provider...</span><br><span class="line">Bringing machine <span class="string">'minion1'</span> up <span class="keyword">with</span> <span class="string">'virtualbox'</span> provider...</span><br><span class="line">Bringing machine <span class="string">'minion2'</span> up <span class="keyword">with</span> <span class="string">'virtualbox'</span> provider...</span><br><span class="line">==&gt; <span class="attribute">master</span>: Box <span class="string">'bento/ubuntu-16.04'</span> could <span class="keyword">not</span> be found. Attempting <span class="keyword">to</span> find <span class="keyword">and</span> install...</span><br><span class="line">    <span class="attribute">master</span>: Box <span class="attribute">Provider</span>: virtualbox</span><br><span class="line">    <span class="attribute">master</span>: Box <span class="attribute">Version</span>: &gt;= <span class="number">0</span></span><br><span class="line">The box <span class="string">'bento/ubuntu-16.04'</span> could <span class="keyword">not</span> be found <span class="keyword">or</span></span><br><span class="line">could <span class="keyword">not</span> be accessed <span class="keyword">in</span> the remote catalog. If <span class="keyword">this</span> <span class="keyword">is</span> a private</span><br><span class="line">box <span class="literal">on</span> HashiCorp<span class="string">'s Atlas, please verify you'</span>re logged <span class="keyword">in</span> via</span><br><span class="line">`vagrant login`. Also, please double-check the name. The expanded</span><br><span class="line">URL <span class="keyword">and</span> error message are shown <span class="attribute">below</span>:</span><br><span class="line"></span><br><span class="line"><span class="attribute">URL</span>: [<span class="string">"https://atlas.hashicorp.com/bento/ubuntu-16.04"</span>]</span><br><span class="line"><span class="attribute">Error</span>: The requested URL returned <span class="attribute">error</span>: <span class="number">404</span> Not Found</span><br></pre></td></tr></table></figure></p>
<p>这是因为：所有的Vagrant boxes都Move到了app.vagrantup.com。</p>
<p>在Vagrantfile里加入以下命令：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Vagrant::DEFAULT_SERVER_URL.<span class="function"><span class="title">replace</span><span class="params">(<span class="string">'https://vagrantcloud.com'</span>)</span></span></span><br></pre></td></tr></table></figure></p>
<p>重新<code>Vagrant Up</code>，运行成功。</p>
<h1 id="配置问题"><a href="#配置问题" class="headerlink" title="配置问题"></a>配置问题</h1><p>下载VM完成后，失败：<br><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">D</span>:<span class="string">\salt</span> learn<span class="string">\salt-vagrant-demo&gt;vagrant</span> up</span><br><span class="line">Bringing machine <span class="string">'master'</span> up <span class="keyword">with</span> <span class="string">'virtualbox'</span> provider...</span><br><span class="line">Bringing machine <span class="string">'minion1'</span> up <span class="keyword">with</span> <span class="string">'virtualbox'</span> provider...</span><br><span class="line">Bringing machine <span class="string">'minion2'</span> up <span class="keyword">with</span> <span class="string">'virtualbox'</span> provider...</span><br><span class="line">==&gt; <span class="attribute">master</span>: Checking <span class="keyword">if</span> box <span class="string">'bento/ubuntu-16.04'</span> <span class="keyword">is</span> up <span class="keyword">to</span> date...</span><br><span class="line">There was an error <span class="keyword">while</span> executing `VBoxManage`, a CLI used <span class="keyword">by</span> Vagrant</span><br><span class="line"><span class="keyword">for</span> controlling VirtualBox. The command <span class="keyword">and</span> stderr <span class="keyword">is</span> shown below.</span><br><span class="line"></span><br><span class="line"><span class="attribute">Command</span>: [<span class="string">"hostonlyif"</span>, <span class="string">"create"</span>]</span><br><span class="line"></span><br><span class="line"><span class="attribute">Stderr</span>: <span class="number">0</span>%...</span><br><span class="line">Progress <span class="attribute">state</span>: E_FAIL</span><br><span class="line">VBoxManage.<span class="attribute">exe</span>: <span class="attribute">error</span>: Failed <span class="keyword">to</span> create the host-only adapter</span><br><span class="line">VBoxManage.<span class="attribute">exe</span>: <span class="attribute">error</span>: Code E_FAIL (<span class="number">0x80004005</span>) - Unspecified error (extended info <span class="keyword">not</span> available)</span><br><span class="line">VBoxManage.<span class="attribute">exe</span>: <span class="attribute">error</span>: <span class="attribute">Context</span>: <span class="string">"int __cdecl handleCreate(struct HandlerArg *,int,int *)"</span> at line <span class="number">66</span> <span class="keyword">of</span> file VBoxManageHostonly.cpp</span><br></pre></td></tr></table></figure></p>
<p>解决方法：<br>在安装目录下（c:\Program Files (x86)\Vagrant\embedded\gems\gems\vagrant-1.7.4\plugins\providers\virtualbox\action.rb），注释以下代码：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">b</span><span class="class">.use</span> PrepareNFSSettings</span><br><span class="line"><span class="id">#b</span><span class="class">.use</span> ClearNetworkInterfaces</span><br><span class="line"><span class="id">#b</span><span class="class">.use</span> Network</span><br><span class="line"><span class="tag">b</span><span class="class">.use</span> ForwardPorts</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Salt - 安装SaltStack]]></title>
      <url>http://izheyi.com/2018/02/27/Salt-%E7%AE%80%E5%8D%95Demo/</url>
      <content type="html"><![CDATA[<h1 id="官方Demo环境安装"><a href="#官方Demo环境安装" class="headerlink" title="官方Demo环境安装"></a>官方Demo环境安装</h1><p>A Salt Demo using Vagrant，(Git, VirtualBox and Vagrant must already be installed.)请参考：<a href="https://github.com/UtahDave/salt-vagrant-demo" target="_blank" rel="external">Salt Vagrant Demo</a></p>
<p>过程中遇到的问题，搞了好久，Windows系统就是麻烦：<a href="/2018/02/28/Salt-环境安装的问题：Vagrant-Up起不来/">Vagrant Up起不来</a></p>
<p>I HATE WINDOWS！！！ 到处是坑，I GIVE UP，还是自己搭建环境吧，不用官方教程了。 以下自己捣鼓：</p>
<h1 id="Salt安装"><a href="#Salt安装" class="headerlink" title="Salt安装"></a>Salt安装</h1><p>在SaltMaster主机上安装salt-master：<code>yum -y install salt-master</code><br>在Minion主机上安装salt-minion：<code>yum -y install salt-minion</code></p>
<h1 id="Salt配置"><a href="#Salt配置" class="headerlink" title="Salt配置"></a>Salt配置</h1><ul>
<li><p>配置salt-master : /etc/salt/master</p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># salt运行的用户，影响到salt的执行权限</span></span><br><span class="line">user: root</span><br><span class="line"> </span><br><span class="line"><span class="preprocessor">#s alt的运行线程，开的线程越多一般处理的速度越快，但一般不要超过CPU的个数</span></span><br><span class="line">worker_threads: <span class="number">10</span></span><br><span class="line"> </span><br><span class="line"><span class="preprocessor"># master的管理端口</span></span><br><span class="line">publish_port : <span class="number">4505</span></span><br><span class="line"> </span><br><span class="line"><span class="preprocessor"># master跟minion的通讯端口，用于文件服务，认证，接受返回结果等</span></span><br><span class="line">ret_port : <span class="number">4506</span></span><br><span class="line"> </span><br><span class="line"><span class="preprocessor"># 如果这个master运行的salt-syndic连接到了一个更高层级的master,那么这个参数需要配置成连接到的这个高层级master的监听端口</span></span><br><span class="line">syndic_master_port : <span class="number">4506</span></span><br><span class="line"> </span><br><span class="line"><span class="preprocessor"># 指定pid文件位置</span></span><br><span class="line">pidfile: /<span class="keyword">var</span>/run/salt-master.pid</span><br><span class="line"> </span><br><span class="line"><span class="preprocessor"># saltstack 可以控制的文件系统的开始位置</span></span><br><span class="line">root_dir: /</span><br><span class="line"> </span><br><span class="line"><span class="preprocessor"># 日志文件地址</span></span><br><span class="line">log_file: /<span class="keyword">var</span>/log/salt_master.log</span><br><span class="line"> </span><br><span class="line"><span class="preprocessor"># 分组设置</span></span><br><span class="line">nodegroups:</span><br><span class="line">  group_all: <span class="string">'*'</span></span><br><span class="line"> </span><br><span class="line"><span class="preprocessor"># salt state执行时候的根目录</span></span><br><span class="line">file_roots:</span><br><span class="line">  base:</span><br><span class="line">    - /etc/salt/file</span><br><span class="line"> </span><br><span class="line"><span class="preprocessor"># 设置pillar 的根目录</span></span><br><span class="line">pillar_roots:</span><br><span class="line">  base:</span><br><span class="line">    - /etc/salt/pillar</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置salt-minion : /etc/salt/minion</p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># minion的识别ID，可以是IP，域名，或是可以通过DNS解析的字符串</span></span><br><span class="line">id: <span class="number">192.168</span><span class="number">.0</span><span class="number">.100</span></span><br><span class="line"> </span><br><span class="line"><span class="preprocessor"># salt运行的用户权限</span></span><br><span class="line">user: root</span><br><span class="line"> </span><br><span class="line"><span class="preprocessor"># master的识别ID，可以是IP，域名，或是可以通过DNS解析的字符串</span></span><br><span class="line">master : <span class="number">192.168</span><span class="number">.0</span><span class="number">.100</span></span><br><span class="line"> </span><br><span class="line"><span class="preprocessor"># master通讯端口</span></span><br><span class="line">master_port: <span class="number">4506</span></span><br><span class="line"> </span><br><span class="line"><span class="preprocessor"># 备份模式，minion是本地备份，当进行文件管理时的文件备份模式</span></span><br><span class="line">backup_mode: minion</span><br><span class="line"> </span><br><span class="line"><span class="preprocessor"># 执行salt-call时候的输出方式</span></span><br><span class="line">output: nested</span><br><span class="line"> </span><br><span class="line"><span class="preprocessor"># minion等待master接受认证的时间</span></span><br><span class="line">acceptance_wait_time: <span class="number">10</span></span><br><span class="line"> </span><br><span class="line"><span class="preprocessor"># 失败重连次数，0表示无限次，非零会不断尝试到设置值后停止尝试</span></span><br><span class="line">acceptance_wait_time_max: <span class="number">0</span></span><br><span class="line"> </span><br><span class="line"><span class="preprocessor"># 重新认证延迟时间，可以避免因为master的key改变导致minion需要重新认证的syn风暴</span></span><br><span class="line">random_reauth_delay: <span class="number">60</span></span><br><span class="line"> </span><br><span class="line"><span class="preprocessor"># 日志文件位置</span></span><br><span class="line">log_file: /<span class="keyword">var</span>/logs/salt_minion.log</span><br><span class="line"> </span><br><span class="line"><span class="preprocessor"># 文件路径基本位置</span></span><br><span class="line">file_roots:</span><br><span class="line">  base:</span><br><span class="line">    - /etc/salt/minion/file</span><br><span class="line">    </span><br><span class="line"> </span><br><span class="line"><span class="preprocessor"># pillar基本位置</span></span><br><span class="line">pillar_roots:</span><br><span class="line">  base:</span><br><span class="line">    - /data/salt/minion/pillar</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="Salt启动"><a href="#Salt启动" class="headerlink" title="Salt启动"></a>Salt启动</h2><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># master</span></span><br><span class="line">service salt-master restart</span><br><span class="line"> </span><br><span class="line"><span class="preprocessor"># minion</span></span><br><span class="line">service salt-minion restart</span><br></pre></td></tr></table></figure>
<h1 id="ACCEPT-CONNECTIONS"><a href="#ACCEPT-CONNECTIONS" class="headerlink" title="ACCEPT CONNECTIONS"></a>ACCEPT CONNECTIONS</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation salt]<span class="preprocessor"># salt-key</span></span><br><span class="line">Accepted Keys:</span><br><span class="line">Denied Keys:</span><br><span class="line">Unaccepted Keys:</span><br><span class="line"><span class="number">192.168</span><span class="number">.244</span><span class="number">.130</span></span><br><span class="line">Rejected Keys:</span><br><span class="line">[root@Automation salt]<span class="preprocessor"># salt-key -y -a <span class="number">192.168</span><span class="number">.244</span><span class="number">.130</span></span></span><br><span class="line">The following keys are going to be accepted:</span><br><span class="line">Unaccepted Keys:</span><br><span class="line"><span class="number">192.168</span><span class="number">.244</span><span class="number">.130</span></span><br><span class="line">Key <span class="keyword">for</span> minion <span class="number">192.168</span><span class="number">.244</span><span class="number">.130</span> accepted.</span><br><span class="line">[root@Automation salt]<span class="preprocessor"># salt-key --list-all</span></span><br><span class="line">Accepted Keys:</span><br><span class="line"><span class="number">192.168</span><span class="number">.244</span><span class="number">.130</span></span><br><span class="line">Denied Keys:</span><br><span class="line">Unaccepted Keys:</span><br><span class="line">Rejected Keys:</span><br></pre></td></tr></table></figure>
<h1 id="验证安装成功"><a href="#验证安装成功" class="headerlink" title="验证安装成功"></a>验证安装成功</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation salt]<span class="preprocessor"># salt <span class="string">'*'</span> test.ping</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.244</span><span class="number">.130</span>:</span><br><span class="line">    True</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[跟任何人都聊的来]]></title>
      <url>http://izheyi.com/2018/02/19/%E8%B7%9F%E4%BB%BB%E4%BD%95%E4%BA%BA%E9%83%BD%E8%81%8A%E7%9A%84%E6%9D%A5/</url>
      <content type="html"><![CDATA[<p>所有交谈技巧都离不开交谈之道：真正在意对方，把对方放在心上。</p>
<h1 id="坚持自己的个性"><a href="#坚持自己的个性" class="headerlink" title="坚持自己的个性"></a>坚持自己的个性</h1><p>不管我们是偏向于安静还是表达，都不是错误。我们越是煞费苦心地改变自己，就越会感觉沮丧。</p>
<p>每个人都是独一无二的。沟通的技能不要模仿他人，而且自我学习和成长。</p>
<h2 id="内向-VS-外向"><a href="#内向-VS-外向" class="headerlink" title="内向 VS 外向"></a>内向 VS 外向</h2><ul>
<li>内向型是指通过独处就可以获得能量的人。</li>
<li>外向型是指通过群体交流获得获得能量的人。</li>
<li>内向让交谈更有深度，外向让交谈更具行动力。</li>
</ul>
<p>要想人际沟通有成效，就要具备两个基本的事实：</p>
<ol>
<li>了解并接受自己</li>
<li>了解并接受对方</li>
</ol>
<p>交谈的目的不是向对方炫耀你有多么聪明，而是在两之间建立联系。</p>
<h1 id="准备越充分，越自信"><a href="#准备越充分，越自信" class="headerlink" title="准备越充分，越自信"></a>准备越充分，越自信</h1><p>一定要自信，至少看上去如此。除了心态，充分的准备，也能让我们自信。<br>不管你处在什么水平，都有进步的空间。坚持下去，时间长了，你就会养成事前思考和准备的习惯。</p>
<h1 id="保持一颗好奇心，让自己变得有趣"><a href="#保持一颗好奇心，让自己变得有趣" class="headerlink" title="保持一颗好奇心，让自己变得有趣"></a>保持一颗好奇心，让自己变得有趣</h1><p>大家同属人类，这就说明彼此之间会有一些类似的经历或者感受，这些相似点就可以拉进彼此之间的距离。</p>
<p>我们没有必要成为各个领域的专家，但每个领域略知一二，就可以成为一个有趣的人。</p>
<p>简单来说，好奇心就是从不同的角度观察常见事物。</p>
<h1 id="学会从他人思维角度出发，把对方放在心上"><a href="#学会从他人思维角度出发，把对方放在心上" class="headerlink" title="学会从他人思维角度出发，把对方放在心上"></a>学会从他人思维角度出发，把对方放在心上</h1><p>重点在于我们自身的责任，而不是他人的行为。我们无法控制他人，最多就是给他人带来影响。</p>
<h2 id="学会倾听，别人才能聊的开"><a href="#学会倾听，别人才能聊的开" class="headerlink" title="学会倾听，别人才能聊的开"></a>学会倾听，别人才能聊的开</h2><p>拉里金说：“每天早晨我都会想到，今天我所说的任何内容都不会让我增长知识，因此，要想吸取很多知识，就要去倾听。”</p>
<h2 id="学会提问，别人才能聊的透"><a href="#学会提问，别人才能聊的透" class="headerlink" title="学会提问，别人才能聊的透"></a>学会提问，别人才能聊的透</h2><p>有效的提问需要注意以下几点：</p>
<ul>
<li>提一个封闭式问题</li>
<li>然后选择开放式问题。5W1H</li>
<li>仔细倾听对方的回答</li>
<li>重复</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[过年-还有没有年味]]></title>
      <url>http://izheyi.com/2018/02/12/%E8%BF%87%E5%B9%B4-%E8%BF%98%E6%9C%89%E6%B2%A1%E6%9C%89%E5%B9%B4%E5%91%B3/</url>
      <content type="html"><![CDATA[<p>一过小年，春节的气氛也越来越浓，一去超市发现东西跟不要钱似的，已开始狂买和吃喝的节奏。在北京切身的感受是人少了好多，其他无感，已经感受不到那种心中过年的味道。</p>
<p>小时候家里穷，盼新年是因为可以有新衣服穿，有好吃的，有压岁钱…所以小孩子都会期待春节的到来，对于那个年代的大人也是一样，忙碌了一年，春节就像是对自己过去一年的奖励，好好犒劳一下自己，期望来年可以过的更好。</p>
<p>随着物质生活的提高，过年就显得没有什么特别之处了，想吃想穿，随时都可以；年龄的成长，欲望的增大，各种压力和琐碎的事情，已经完全没有了小时候那种过年的味道，那种急切的期盼。</p>
<p>抢到回家的票了，尽管很晚，尽管回来的票还没着落，但可以回家了。现在的过年不是为了庆祝，而是为了回家，为了陪伴亲人。我们这些在外漂泊的人，当初离开家也是没有其他选择，在外拼搏，成长，想让自己变得更好，而父母也在不经意间变老，想想你一年能回家几次，能跟父母见上几面。树欲静而风不止，子欲养而亲不待，真正值得我们珍惜的不是功名，不是出人头地，而是我们最爱的人。</p>
<p>记住，你一直在路上，有人一直在等你。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Salt - 基础]]></title>
      <url>http://izheyi.com/2018/02/04/Salt-%E5%9F%BA%E7%A1%80/</url>
      <content type="html"><![CDATA[<p>Salt,一种全新的基础设施管理方式，部署轻松，在几分钟内可运行起来，扩展性好，很容易管理上万台服务器，速度够快，服务器之间秒级通讯。salt底层采用动态的连接总线, 使其可以用于编配, 远程执行, 配置管理等等.</p>
<h1 id="SaltStack-Communication"><a href="#SaltStack-Communication" class="headerlink" title="SaltStack Communication"></a>SaltStack Communication</h1><p>请参见：<a href="https://docs.saltstack.com/en/getstarted/system/communication.html" target="_blank" rel="external">Salt Communication</a></p>
<h1 id="SaltStack-Component"><a href="#SaltStack-Component" class="headerlink" title="SaltStack Component"></a>SaltStack Component</h1><p>介绍一些主要的Salt概念：</p>
<ul>
<li><strong>salt master</strong>: sends commands and configurations to minions</li>
<li><p><strong>salt minions</strong>: receives commands from master</p>
</li>
<li><p><strong>execution modules</strong>: Execution modules are sets of related functions that perform work on minions.</p>
</li>
<li><p><strong>formulas(states)</strong>: representation of a system configuration, a grouping of one or more state files, possibly with pillar data and configuration files or anything else which defines a neat package for a particular application.</p>
</li>
<li><p><strong>grains</strong>: static information about minions: include operating system, memory, and many other system properties. </p>
</li>
<li><strong>pillar</strong>: secure user-defined variables stored on master and assigned to minions</li>
<li><p><strong>mine</strong>: an area on the master server where the results from regularly executed commands on minions can be stored. </p>
</li>
<li><p><strong>top file</strong>: matches formulas and pillar data to minions</p>
</li>
<li><p><strong>runners</strong>: modules that execute on the master server instead of minions. </p>
</li>
<li><strong>returners</strong>: Send data returned by Salt minions to another system, such as a database. Salt returners can run on the Salt minion or on the Salt master.</li>
<li><strong>reactor</strong>: provides a mechanism for triggering actions in response to generated events. </li>
<li><strong>salt SSH</strong>: command to run commands on systems without minions</li>
</ul>
<h1 id="Salt-Commands"><a href="#Salt-Commands" class="headerlink" title="Salt Commands"></a>Salt Commands</h1><ul>
<li><strong>salt-master</strong>: This is the master daemon process. You can start the master service with this command directly, or more typically, through an init script or service file.</li>
<li><strong>salt-minion</strong>: Likewise, this is minion daemon process, used to communicate with the master and execute commands. Most users will also start this from init scripts or service files.</li>
<li><strong>salt-key</strong>: This tool is used to manage minion public keys. This tool is used to view current keys and to make decisions about public keys sent by prospective minions. It can also generate keys to place on minions out-of-band.</li>
<li><strong>salt</strong>: This command is used to target minions in order to run ad-hoc execution modules. This is the main tool used for remote execution.</li>
<li><strong>salt-ssh</strong>: This command allows you to use SSH as an alternative to ZeroMQ for the transport mechanism.</li>
<li><strong>salt-run</strong>: This command is used to run runner modules on the master server.</li>
<li><strong>salt-call</strong>: This command is used to run execution modules directly on a minion you are logged into. This is often used to debug problematic commands by bypassing the master.</li>
<li><strong>salt-cloud</strong>: This command is used to control and provision cloud resources from many different providers. New minions can easily be spun up and bootstrapped.</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[聊一聊加班这回事]]></title>
      <url>http://izheyi.com/2018/01/27/%E8%81%8A%E4%B8%80%E8%81%8A%E5%8A%A0%E7%8F%AD%E8%BF%99%E5%9B%9E%E4%BA%8B/</url>
      <content type="html"><![CDATA[<h2 id="加班的认知"><a href="#加班的认知" class="headerlink" title="加班的认知"></a>加班的认知</h2><p>天下武功唯快不破，特别是现在的互联网时代追求快，干不完的项目，做不完的事，这也是造成加班是家常便饭的原因之一，而且形成了一种‘风气’。还有一些所谓的专家鼓吹比你优秀的人都加班，你有啥不加班的理由，我很怀疑你们是不是‘托’。是，优秀的人在努力，年轻人也不应该荒废自己本该努力拼搏的年纪，但是加班不是唯一的方式，尤其是机械的硬性加班。</p>
<p>浮躁的社会，焦虑的社会，各方面的原因造成有些年轻人，拿自己能加班来作为自己的一个优势，更有甚者拿加班来评判自己工作努力与否，有些悲哀，有些无奈。甚至有些领导跟下属直言，不能加班的团队是没有前途的，为了加班而加班，是非常愚蠢的行为。当然了，也不能说一定就不加班，有一些紧急突发的情况，有一些你值得去做的事情，为了你心中的梦想。</p>
<p>加班不是敬业，对于脑力劳动者，也可以说是知识工作者，不能以工作时长和加班与否来判断其价值，而要看成果。加班跟这个人是不是好员工没有半毛钱关系，当一个人规定自己按时上下班时，才会充分利用好时间，才会有效率，加班是拉长了时间，其实效率可能是低的。</p>
<h2 id="加班思考"><a href="#加班思考" class="headerlink" title="加班思考"></a>加班思考</h2><p>注重工作和生活平衡的人，应该不会喜欢无目的的加班，而生活和工作分不开的人，好像对他来说加不加班也没啥两样。不管你追求的是哪种生活方式，首先得和公司是一致的，毕竟个人和公司相互认同才能更好的合作发展；还有要知道自己想要的是什么，不要刻意的让自己跟别人看齐，无谓的加班和状态，只会让自己感到深深的自我否定。</p>
<p>你是因为时间管理差，工作效率低而加班？还是因为确实是组织分配给了你干不完的活？还是像有些软件园里做的一样，工作吃住都在园区，回去也是无聊，那就通过加班来打发下班后无聊的时间？还是因为回家要带孩子辅导作业，面对家庭的琐事，为了逃避这些而选择加班？还是为了你的梦想？</p>
<p>单纯的从加班来看，加班其实是件很容易的事情，也不见得是坏事情，不提倡加班，也不反对加班，但是最重要的是要弄明白为什么加班，目的和意义是啥。加班不能让你成长，思考才能。愿大家都能按照自己的意愿找到属于自己的生活方式，能够一直做自己，我觉得这是这个时代最奢侈的一件事。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[闺女七岁了]]></title>
      <url>http://izheyi.com/2018/01/21/%E9%97%BA%E5%A5%B3%E4%B8%83%E5%B2%81%E4%BA%86/</url>
      <content type="html"><![CDATA[<p>时间过的真快，转眼你就七岁了，七是个很神奇的数字，比如人生每隔七年都是一个自我选择和改变的时间点，比如七年之痒……希望你的第一个七年是快乐的，幸福的，尽管对你也有严格，有批评，有发火，有时候甚至是不公平。<br><img src="/images/izheyi/2018/01/01.JPG" alt=""><br>这七年你成长了很多，从一个呱呱坠地的婴儿到一个小学生，从只会哇哇大哭到有自己的思想，爸爸妈妈看到现在的你，真的很欣慰，祝贺你的成长。</p>
<p><img src="/images/izheyi/2018/01/03.JPG" alt=""><br>说实话有时候你的缠人真的很‘烦’^_^对你认死理，你所谓的‘听话’也很无奈……但比起这些，我最害怕的是我知道有一天你会离爸爸妈妈而去，去寻找自己的人生。虽然很害怕，但还是会祝福你，希望你能找到属于自己的幸福和人生，请记住你的身后永远都会站着爸爸妈妈。</p>
<p><img src="/images/izheyi/2018/01/02.JPG" alt=""><br>其实养一个孩子最大的成本是时间成本，从你来到这个世界时的手足无措，到慢慢的可以抱起你，可以把你放在肩头，再到现在想办法在学习上“对付”你(o^^o)只有认真自己去带了，才知道其他的成本跟时间比起来都不算啥。所以我也希望你长大后回想自己的童年时，想到的不光有快乐，还有爸爸、妈妈、以及所有家人对你的爱。</p>
<p><img src="/images/izheyi/2018/01/04.JPG" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[新任经理人管理必修课]]></title>
      <url>http://izheyi.com/2018/01/20/%E6%96%B0%E4%BB%BB%E7%BB%8F%E7%90%86%E4%BA%BA%E7%AE%A1%E7%90%86%E5%BF%85%E4%BF%AE%E8%AF%BE/</url>
      <content type="html"><![CDATA[<p>回顾这近两年从业务到主管的晋升，有不少困难和迷茫，尽管级别高了，但是如何管好人，带好团队，怎么顺利的完成角色的转变，依然有很大的挑战，还有很多东西需要学习，很长的路要走。</p>
<h1 id="做领导后有何不同"><a href="#做领导后有何不同" class="headerlink" title="做领导后有何不同"></a>做领导后有何不同</h1><p>不知道该怎么给团队安排任务<br>往下对团队负责，往上对领导，要双面负责</p>
<ol>
<li>做经理后，是不是做我之前最擅长的事情<br>以前只管理自己，个人目标<br>现在管理他人，团队目标<br>跟之前完全不一样，需要培养领导力，建立流程，解决问题，决策能力</li>
<li>权力<br>我是领导我有权，为什么不听我的？<br>增加的是你的职权，同时也带给你责任<br>权利的来源：职权、专家权利、影响力<br>影响力来自于创造双赢的结果<br>观察在行使职权的过程中是不是获得了信任，是不是建立了双赢的关系</li>
<li>自由<br>更多事情占用很多时间，开会，沟通<br>经理人花大量时间在‘人’身上， 由事到人</li>
<li>一切都在掌控之中<br>你会面对各方面带来的限制，你需要能够来处理<br>管理者都会有纠结和痛苦</li>
<li>有人教我<br>而现实是你要：<br>自我反思<br>总结觉察</li>
</ol>
<h2 id="领导力两难"><a href="#领导力两难" class="headerlink" title="领导力两难"></a>领导力两难</h2><ol>
<li>领导责任<br>为了下属而做， 指导和管理下属</li>
<li>业务责任<br>为了老板而做， 上级交办自己要完成的</li>
</ol>
<p>对下属，抢下属的工作，或表示不信任，或表示不懂管理<br>对自己，停滞不前，也会让自己丧失进一步提升的机会</p>
<p>领导力缺口</p>
<h1 id="是下属没追求，还是领导没要求"><a href="#是下属没追求，还是领导没要求" class="headerlink" title="是下属没追求，还是领导没要求"></a>是下属没追求，还是领导没要求</h1><p>目标设定法</p>
<ol>
<li>了解自己的现在的位置</li>
<li>明确目的地</li>
<li>我如何到达</li>
</ol>
<p>目标设定原则</p>
<ol>
<li>SMART原则</li>
</ol>
<a id="more"></a>
<h1 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h1><h2 id="自己忙成狗，下属还早走"><a href="#自己忙成狗，下属还早走" class="headerlink" title="自己忙成狗，下属还早走"></a>自己忙成狗，下属还早走</h2><ol>
<li>你不喜欢的授权-授权误区<ol>
<li>授权不清</li>
<li>过度授权 - 甩手掌柜式的</li>
<li>授权不足</li>
</ol>
</li>
<li><p>授权原则</p>
<ol>
<li>时间<ul>
<li>预留充分的时间</li>
<li>下属是否有空</li>
</ul>
</li>
<li>如何<ul>
<li>具体，明确期望</li>
<li>授中有控</li>
<li>授权不授责</li>
<li>授果不授方</li>
</ul>
</li>
</ol>
</li>
<li><p>还是得我来，怎么治？<br>原因：担心下属办错事；担心下属不够好，达不到要求；担心下属不听我的的建议<br>意识到自己一个人干不完所有的活的<br>下属做的比你好的事情，勇敢的放手，领导者要去做更有难度更需要自己的事情，他们不行，公司希望你实现的事情<br>投资人才是投资回报率最高的</p>
</li>
</ol>
<p>4.不同员工，怎么授权？<br>   员工授权准备度</p>
<ol>
<li>高意愿，高能力<ul>
<li>给他相对的自由</li>
<li>WDYT： What Do You Think</li>
</ul>
</li>
<li>高意愿，低能力<ul>
<li>目标要具体</li>
<li>频繁跟进 - 大目标拆成小目标 </li>
<li>WDYT：站在培养员工的角度</li>
</ul>
</li>
<li>高能力，低意愿<ul>
<li>找到意愿为什么低，以此给予激励</li>
<li>激励方法：WDYT；让他指导高意愿低能力</li>
<li>跟进 - 是否在往前走</li>
</ul>
</li>
<li>低能力，低意愿<ul>
<li>跟进 - 方向和进度</li>
</ul>
</li>
</ol>
<h2 id="授权后才是管理的开始"><a href="#授权后才是管理的开始" class="headerlink" title="授权后才是管理的开始"></a>授权后才是管理的开始</h2><ol>
<li><p>跟进 授权是5%，跟进是95%<br>检查，跟进都是比较负面的<br>当会被表扬和认可的时候，人会期待被考核检查<br>经理人要把负面心态改成正向心态 - 表现好的员工以表扬</p>
<ol>
<li>加强寻找下属值得被认可的地方</li>
<li>用WDTY让员工自己思考 - 表现不好的地方怎么改进</li>
</ol>
</li>
<li><p>复盘六问</p>
<ol>
<li>当时的目标是什么</li>
<li>现阶段的结果是什么（事实）</li>
<li>过程当中哪些是好的</li>
<li>过程当中哪些是要改善</li>
<li>要感谢哪些人</li>
<li>下次如何能够做的更好 - 怎么改善</li>
</ol>
</li>
</ol>
<p>复盘是为了下次更好，不是为了追究责任</p>
<h1 id="带人要带心（表扬）"><a href="#带人要带心（表扬）" class="headerlink" title="带人要带心（表扬）"></a>带人要带心（表扬）</h1><ol>
<li>表扬的基本原则<ol>
<li>真诚</li>
<li>具体 - 行为动作</li>
<li>及时</li>
<li>无条件</li>
</ol>
</li>
<li>表扬的目的<br>鼓励良好行为重复出现</li>
<li>表扬什么<ol>
<li>结果</li>
<li>过程，及付出的努力（经理人要多观察）</li>
<li>表扬行为，而不是特质</li>
</ol>
</li>
<li>如何进行深刻的表扬<ol>
<li>正向开场</li>
<li>针对具体的行为</li>
<li>对团队的重要性</li>
<li>强而有力的结尾</li>
</ol>
</li>
</ol>
<h1 id="建设性批评"><a href="#建设性批评" class="headerlink" title="建设性批评"></a>建设性批评</h1><ol>
<li>批评的目的是为了正向（行为）改善</li>
<li>对事不对人</li>
<li>以事实为依据</li>
<li>不做人身攻击 - 破坏性批评，会让士气低落</li>
<li>一对一的场合进行</li>
</ol>
<h2 id="批评的四个阶段"><a href="#批评的四个阶段" class="headerlink" title="批评的四个阶段"></a>批评的四个阶段</h2><p>不同问题对应不对严重程度的批评<br>要及时，高频的进行提醒是批评是最关键的一点</p>
<ol>
<li>提醒<ul>
<li>询问</li>
<li>指出事实</li>
<li>做出提醒</li>
</ul>
</li>
<li>WDYT<ul>
<li>回顾之前提醒</li>
<li>再次指出事实</li>
<li>你怎么想？</li>
<li>帮助具体化</li>
<li>如何跟进</li>
</ul>
</li>
<li>我期望…<ul>
<li>再次指出事实</li>
<li>行为是不能接受的</li>
<li>提出期望</li>
<li>确认理解期望，重复且达成一致</li>
<li>对方做出承诺</li>
<li>继续跟进</li>
<li>要告诉对方为什么我们会有这个对话</li>
</ul>
</li>
<li>警告<ul>
<li>依旧是指出事实</li>
<li>指出原则性</li>
<li>再提出改善</li>
<li>可能的后果会是什么</li>
<li>再跟进</li>
</ul>
</li>
</ol>
<h1 id="如何管理好你的老板"><a href="#如何管理好你的老板" class="headerlink" title="如何管理好你的老板"></a>如何管理好你的老板</h1><ol>
<li><p>向上管理容易吗</p>
<ul>
<li>教练和裁判 - 上司的双重角色</li>
</ul>
</li>
<li><p>你是否达到上司的要求？</p>
<ul>
<li>目标<ul>
<li>目标是否达到？</li>
<li>有没有副作用？</li>
</ul>
</li>
<li>信息<ul>
<li>沟通频率</li>
<li>以什么形式</li>
<li>细节或大纲</li>
<li>什么对上司才是重要的？</li>
</ul>
</li>
</ul>
</li>
<li>你了解你的上司吗？<ul>
<li>了解缺点，形成互补</li>
</ul>
</li>
<li>你了解上司的优势吗？<ul>
<li>一定有，可能我们没发现</li>
<li>他的优势，是你工作中最重要的资源</li>
<li>不要聚焦在上司的缺点</li>
</ul>
</li>
<li><p>你清楚自己对老板的需求和期望吗？</p>
<ul>
<li>给你什么资源</li>
<li>怎么支持你</li>
<li>别让老板猜，直接提出</li>
<li>如果不能支持，该怎么办</li>
</ul>
</li>
<li><p>如何向老板提出反对意见？<br>一只鱼沟通法</p>
<ul>
<li>A：Ask for permission - 请求允许沟通</li>
<li>F：Fact - 说明事实及我对事实的理解</li>
<li>I：I care… - 我关注你的目的和顾虑，也让你理解我的</li>
<li>S：Suggestion - 我的建议是什么？可以以问题方式引导</li>
<li>H：Hear - 聆听对方想法</li>
</ul>
</li>
<li>如何接受老板建设性批评？<br>SAD模式 - 本能导向，被认定为不成熟的下属<ul>
<li>Shock：惊讶</li>
<li>Angry：愤怒</li>
<li>Defense：辩解<br>LEAD模式 - 发展导向，被认定为可依赖的下属</li>
<li>Listen：强迫自己倾听</li>
<li>Engage：深入思考</li>
<li>Ask：追问根源</li>
<li>Difference：如何改变</li>
</ul>
</li>
<li>如何面对老板破坏性批评？<br>BLASTS法<ul>
<li>Balance：内心平合</li>
<li>Listen：放下自己，仔细聆听</li>
<li>Agree：找出你同意的部分</li>
<li>State：说出你对老板观点的理解</li>
<li>Task：对任务提出建议、方案</li>
<li>Stroke：过程中安抚</li>
</ul>
</li>
</ol>
<h1 id="倾听"><a href="#倾听" class="headerlink" title="倾听"></a>倾听</h1><p>好的倾听者，往往让人容易信任他们。<br>倾听比滔滔不绝更有说服力。</p>
<ol>
<li><p>RASA倾听法</p>
<ul>
<li><p>Receive： 我在听</p>
<ol>
<li>如何深刻倾听？<ol>
<li>将自己的想法先放一边</li>
<li>以同理心了解对方的想法</li>
<li>让对方知道你在倾听、在试着了解他的想法</li>
</ol>
</li>
<li>如果打断别人，收到的信号：<ol>
<li>我比你更重要</li>
<li>我要说的比你现在说的更重要</li>
<li>我不在乎你怎么想</li>
<li>我得说服你   </li>
</ol>
</li>
<li>打断的补救方法：<ol>
<li>很抱歉，打断你了，你先说</li>
<li>我说完了，抱歉，刚刚打断你</li>
<li>（作为第三方）对了，刚刚你好像说到一半</li>
</ol>
</li>
</ol>
</li>
<li><p>Appreciate：我让你知道我在听</p>
<ul>
<li>视线眼神</li>
<li>表情</li>
<li>姿势</li>
<li>点头</li>
<li>口头</li>
</ul>
</li>
<li>Summarize：我看看理解的对不对<ul>
<li>让对方意识到‘我真的想理解你’</li>
<li>距离接近、建议信任</li>
<li>避免理解错误的误会</li>
</ul>
</li>
<li>Ask Questions：我想了解更多<ul>
<li>问我想知道的 VS 问对方想说的</li>
<li>发问是为了更加了解对方，不单是满足自己好奇心</li>
<li>封闭式问题 VS 开放式问题</li>
</ul>
</li>
</ul>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[小强升职记 - 时间管理故事书]]></title>
      <url>http://izheyi.com/2018/01/15/%E5%B0%8F%E5%BC%BA%E5%8D%87%E8%81%8C%E8%AE%B0-%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86%E6%95%85%E4%BA%8B%E4%B9%A6/</url>
      <content type="html"><![CDATA[<p>双十一打包买的书，以为是职场的书，没啥可看的，结果发现是写时间管理的书，非常值的读。</p>
<p>一直都会有思考，职业价值观是什么？通俗的讲可能应当是活着是为了啥？每天忙来忙去的工作到底是为了什么？为什么每天弄的都这么忙？从这本书里感受到了共鸣，找到了一些答案，很有启发。</p>
<p><em>新窗口打开查看大图</em><br><img src="/images/reading/time.jpg" alt=""></p>
<p>衣柜整理法流程图：<br><img src="/images/reading/yigui.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[2018 - 学习计划]]></title>
      <url>http://izheyi.com/2018/01/11/2018-%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/</url>
      <content type="html"><![CDATA[<p><img src="/images/shenghuo/18planing.jpg" alt=""><br><img src="/images/shenghuo/18planing_1.jpg" alt=""></p>
<p>给自己一个动力，一点压力，希望从各个方面都有一个提升。</p>
<h2 id="读书"><a href="#读书" class="headerlink" title="读书"></a>读书</h2><p>今年阅读10本书，不追多，不限书的种类，但是要做到把学到的知识转化为自己的能力，转化为自己的思想。</p>
<ol>
<li>每个人都在强调读书的重要性，自己也有所感悟，坚持一年看看到底会有怎样的事情发生。</li>
<li>家里也有很多一时兴起买的书，消灭掉它们。</li>
</ol>
<h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><ol>
<li>提升工作效率 - 学习方法。</li>
<li>英语 - Friends continue。</li>
</ol>
<h2 id="技术"><a href="#技术" class="headerlink" title="技术"></a>技术</h2><ol>
<li>公司用到的所有环节和相关知识都能掌握。</li>
<li>从更高的角度去看待技术。</li>
</ol>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ol>
<li>每周更新一篇Blog，不限内容。</li>
<li>和闺女好好的 - 脾气。</li>
</ol>
<h2 id="奖励"><a href="#奖励" class="headerlink" title="奖励"></a>奖励</h2><ol>
<li>读3本书： 给自己鼓掌点赞。</li>
<li>读5本书： 家用打印机。</li>
<li>读10本书： 给自己放假一天。</li>
<li>所用技术全掌握： 看场话剧或音乐剧。</li>
<li>都完成： 看一看大海。</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Consul - 集群]]></title>
      <url>http://izheyi.com/2018/01/01/Consul-%E9%9B%86%E7%BE%A4/</url>
      <content type="html"><![CDATA[<h1 id="搭建集群"><a href="#搭建集群" class="headerlink" title="搭建集群"></a>搭建集群</h1><p>Consul推荐在每个数据中心运行3或5个Servers以避免Server失败导致的数据丢失。</p>
<p>基于此，我们先用4个虚拟机来做试验：<br>|:—IP Address–:|:—–Role—-:|<br>| 192.168.244.130 | Consul Server |<br>| 192.168.244.131 | Consul Server |<br>| 192.168.244.132 | Consul Server |<br>| 192.168.244.133 | Consul Client |</p>
<h2 id="Server-Configuration"><a href="#Server-Configuration" class="headerlink" title="Server Configuration"></a>Server Configuration</h2><h3 id="1-生成Key，创建必要配置目录和文件"><a href="#1-生成Key，创建必要配置目录和文件" class="headerlink" title="1. 生成Key，创建必要配置目录和文件"></a>1. 生成Key，创建必要配置目录和文件</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="constant">@Automation</span> ~]<span class="preprocessor"># mkdir /etc/consul.d/server</span></span><br><span class="line">[root<span class="constant">@Automation</span> ~]<span class="preprocessor"># mkdir /etc/consul.d/consul-server-data</span></span><br><span class="line">[root<span class="constant">@Automation</span> consul.d]<span class="preprocessor"># ls</span></span><br><span class="line">consul-server-data  <span class="built_in">ping</span>.json  server  web.json</span><br><span class="line">[root<span class="constant">@Automation</span> consul.d]<span class="preprocessor"># consul keygen</span></span><br><span class="line">Vz3jcuLn6a6Ekq5PbrJO2w==</span><br></pre></td></tr></table></figure>
<p><em>Key: It should be the same for all the servers and clients in a datacenter. If it’s different the consul members will refuse to join.</em></p>
<h3 id="2-创建Configration"><a href="#2-创建Configration" class="headerlink" title="2. 创建Configration"></a>2. 创建Configration</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">"<span class="attribute">bind_addr</span>": <span class="value"><span class="string">"192.168.244.130"</span></span>, </span><br><span class="line">"<span class="attribute">datacenter</span>": <span class="value"><span class="string">"dc1"</span></span>,</span><br><span class="line">"<span class="attribute">data_dir</span>": <span class="value"><span class="string">"/etc/consul.d/consul-server-data"</span></span>,</span><br><span class="line">"<span class="attribute">encrypt</span>": <span class="value"><span class="string">"Vz3jcuLn6a6Ekq5PbrJO2w=="</span></span>,</span><br><span class="line">"<span class="attribute">log_level</span>": <span class="value"><span class="string">"INFO"</span></span>,</span><br><span class="line">"<span class="attribute">enable_syslog</span>": <span class="value"><span class="literal">true</span></span>,</span><br><span class="line">"<span class="attribute">enable_debug</span>": <span class="value"><span class="literal">true</span></span>,</span><br><span class="line">"<span class="attribute">node_name</span>": <span class="value"><span class="string">"ConsulServer1"</span></span>,</span><br><span class="line">"<span class="attribute">server</span>": <span class="value"><span class="literal">true</span></span>,</span><br><span class="line">"<span class="attribute">bootstrap_expect</span>": <span class="value"><span class="number">3</span></span>,</span><br><span class="line">"<span class="attribute">rejoin_after_leave</span>": <span class="value"><span class="literal">true</span></span>,</span><br><span class="line">"<span class="attribute">retry_join</span>": <span class="value">[ </span><br><span class="line">  <span class="string">"192.168.244.130"</span>,</span><br><span class="line">  <span class="string">"192.168.244.131"</span>,</span><br><span class="line">  <span class="string">"192.168.244.132"</span></span><br><span class="line">  ]</span><br><span class="line"> </span>&#125;</span><br></pre></td></tr></table></figure>
<p><em>在每一个Server都要以下相同操作, 唯一要修改的就是IP地址和node_name。</em></p>
<a id="more"></a>
<h3 id="3-运行Server集群"><a href="#3-运行Server集群" class="headerlink" title="3. 运行Server集群"></a>3. 运行Server集群</h3><p>Server 1:<br><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="list">[<span class="keyword">root@Automation</span> server]# consul agent -ui -config-dir /etc/consul.d/server/</span><br><span class="line">WARNING: LAN keyring exists but -encrypt given, using keyring</span><br><span class="line">WARNING: WAN keyring exists but -encrypt given, using keyring</span><br><span class="line">bootstrap_expect &gt; <span class="number">0</span>: expecting <span class="number">3</span> servers</span><br><span class="line">==&gt; Starting Consul agent...</span><br><span class="line">==&gt; Consul agent running!</span><br><span class="line">           Version: <span class="variable">'v1.0.2</span>'</span><br><span class="line">           Node ID: <span class="variable">'96c8e751-0019-e213-ac42-4635fe1d89e5</span>'</span><br><span class="line">         Node name: <span class="variable">'ConsulServer1</span>'</span><br><span class="line">        Datacenter: <span class="variable">'dc1</span>' <span class="list">(<span class="keyword">Segment:</span> <span class="variable">'&lt;all&gt;</span>')</span></span><br><span class="line">            Server: true <span class="list">(<span class="keyword">Bootstrap:</span> false)</span></span><br><span class="line">       Client Addr: <span class="list">[<span class="keyword">127.0.0.1</span>] <span class="list">(<span class="keyword">HTTP:</span> <span class="number">8500</span>, HTTPS: <span class="number">-1</span>, DNS: <span class="number">8600</span>)</span></span><br><span class="line">      Cluster Addr: <span class="number">192.168</span>.244.130 <span class="list">(<span class="keyword">LAN:</span> <span class="number">8301</span>, WAN: <span class="number">8302</span>)</span></span><br><span class="line">           Encrypt: Gossip: true, TLS-Outgoing: false, TLS-Incoming: false</span><br><span class="line"></span><br><span class="line">==&gt; Log data will now stream in as it occurs:</span><br><span class="line"></span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:35 <span class="list">[<span class="keyword">INFO</span>] raft: Initial configuration <span class="list">(<span class="keyword">index=0</span>)</span>: <span class="list">[]</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:35 <span class="list">[<span class="keyword">INFO</span>] serf: EventMemberJoin: ConsulServer1.dc1 <span class="number">192.168</span>.244.130</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:35 <span class="list">[<span class="keyword">INFO</span>] serf: EventMemberJoin: ConsulServer1 <span class="number">192.168</span>.244.130</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:35 <span class="list">[<span class="keyword">INFO</span>] agent: Started DNS server <span class="number">127.0</span>.0.1:8600 <span class="list">(<span class="keyword">udp</span>)</span></span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:35 <span class="list">[<span class="keyword">INFO</span>] raft: Node at <span class="number">192.168</span>.244.130:8300 <span class="list">[<span class="keyword">Follower</span>] entering Follower state <span class="list">(<span class="keyword">Leader:</span> <span class="string">""</span>)</span></span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:35 <span class="list">[<span class="keyword">WARN</span>] serf: Failed to re-join any previously known node</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:35 <span class="list">[<span class="keyword">WARN</span>] serf: Failed to re-join any previously known node</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:35 <span class="list">[<span class="keyword">INFO</span>] consul: Adding LAN server ConsulServer1 <span class="list">(<span class="keyword">Addr:</span> tcp/192.168.244.130:8300)</span> <span class="list">(<span class="keyword">DC:</span> dc1)</span></span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:35 <span class="list">[<span class="keyword">INFO</span>] consul: Handled member-join event for server <span class="string">"ConsulServer1.dc1"</span> in area <span class="string">"wan"</span></span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:35 <span class="list">[<span class="keyword">INFO</span>] agent: Started DNS server <span class="number">127.0</span>.0.1:8600 <span class="list">(<span class="keyword">tcp</span>)</span></span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:35 <span class="list">[<span class="keyword">INFO</span>] agent: Started HTTP server on <span class="number">127.0</span>.0.1:8500 <span class="list">(<span class="keyword">tcp</span>)</span></span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:35 <span class="list">[<span class="keyword">INFO</span>] agent: started state syncer</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:35 <span class="list">[<span class="keyword">INFO</span>] agent: Retry join LAN is supported for: aliyun aws azure digitalocean gce os scaleway softlayer</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:35 <span class="list">[<span class="keyword">INFO</span>] agent: Joining LAN cluster...</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:35 <span class="list">[<span class="keyword">INFO</span>] agent: <span class="list">(<span class="keyword">LAN</span>)</span> joining: <span class="list">[<span class="keyword">192.168.244.130</span> <span class="number">192.168</span>.244.131 <span class="number">192.168</span>.244.132]</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:35 <span class="list">[<span class="keyword">INFO</span>] agent: <span class="list">(<span class="keyword">LAN</span>)</span> joined: <span class="number">1</span> Err: &lt;nil&gt;</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:35 <span class="list">[<span class="keyword">INFO</span>] agent: Join LAN completed. Synced with <span class="number">1</span> initial agents</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br></pre></td></tr></table></figure></p>
<p>Server 2:<br><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="list">[<span class="keyword">root@Automation</span> server]# consul agent -ui -config-dir /etc/consul.d/server/</span><br><span class="line">WARNING: LAN keyring exists but -encrypt given, using keyring</span><br><span class="line">WARNING: WAN keyring exists but -encrypt given, using keyring</span><br><span class="line">bootstrap_expect &gt; <span class="number">0</span>: expecting <span class="number">3</span> servers</span><br><span class="line">==&gt; Starting Consul agent...</span><br><span class="line">==&gt; Consul agent running!</span><br><span class="line">           Version: <span class="variable">'v1.0.2</span>'</span><br><span class="line">           Node ID: <span class="variable">'c3a7562f-3ca5-2447-fa43-1e7ae3a3a6df</span>'</span><br><span class="line">         Node name: <span class="variable">'ConsulServer2</span>'</span><br><span class="line">        Datacenter: <span class="variable">'dc1</span>' <span class="list">(<span class="keyword">Segment:</span> <span class="variable">'&lt;all&gt;</span>')</span></span><br><span class="line">            Server: true <span class="list">(<span class="keyword">Bootstrap:</span> false)</span></span><br><span class="line">       Client Addr: <span class="list">[<span class="keyword">127.0.0.1</span>] <span class="list">(<span class="keyword">HTTP:</span> <span class="number">8500</span>, HTTPS: <span class="number">-1</span>, DNS: <span class="number">8600</span>)</span></span><br><span class="line">      Cluster Addr: <span class="number">192.168</span>.244.131 <span class="list">(<span class="keyword">LAN:</span> <span class="number">8301</span>, WAN: <span class="number">8302</span>)</span></span><br><span class="line">           Encrypt: Gossip: true, TLS-Outgoing: false, TLS-Incoming: false</span><br><span class="line"></span><br><span class="line">==&gt; Log data will now stream in as it occurs:</span><br><span class="line"></span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:58 <span class="list">[<span class="keyword">INFO</span>] raft: Initial configuration <span class="list">(<span class="keyword">index=0</span>)</span>: <span class="list">[]</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:58 <span class="list">[<span class="keyword">INFO</span>] serf: EventMemberJoin: ConsulServer2.dc1 <span class="number">192.168</span>.244.131</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:58 <span class="list">[<span class="keyword">INFO</span>] serf: EventMemberJoin: ConsulServer2 <span class="number">192.168</span>.244.131</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:58 <span class="list">[<span class="keyword">INFO</span>] agent: Started DNS server <span class="number">127.0</span>.0.1:8600 <span class="list">(<span class="keyword">udp</span>)</span></span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:58 <span class="list">[<span class="keyword">INFO</span>] raft: Node at <span class="number">192.168</span>.244.131:8300 <span class="list">[<span class="keyword">Follower</span>] entering Follower state <span class="list">(<span class="keyword">Leader:</span> <span class="string">""</span>)</span></span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:58 <span class="list">[<span class="keyword">INFO</span>] serf: Attempting re-join to previously known node: ConsulServer1.dc1: <span class="number">192.168</span>.244.131:8302</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:58 <span class="list">[<span class="keyword">INFO</span>] serf: Attempting re-join to previously known node: ConsulServer1: <span class="number">192.168</span>.244.131:8301</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:58 <span class="list">[<span class="keyword">INFO</span>] consul: Adding LAN server ConsulServer2 <span class="list">(<span class="keyword">Addr:</span> tcp/192.168.244.131:8300)</span> <span class="list">(<span class="keyword">DC:</span> dc1)</span></span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:58 <span class="list">[<span class="keyword">INFO</span>] consul: Handled member-join event for server <span class="string">"ConsulServer2.dc1"</span> in area <span class="string">"wan"</span></span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:58 <span class="list">[<span class="keyword">INFO</span>] agent: Started DNS server <span class="number">127.0</span>.0.1:8600 <span class="list">(<span class="keyword">tcp</span>)</span></span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:58 <span class="list">[<span class="keyword">INFO</span>] agent: Started HTTP server on <span class="number">127.0</span>.0.1:8500 <span class="list">(<span class="keyword">tcp</span>)</span></span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:58 <span class="list">[<span class="keyword">INFO</span>] agent: started state syncer</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:58 <span class="list">[<span class="keyword">INFO</span>] agent: Retry join LAN is supported for: aliyun aws azure digitalocean gce os scaleway softlayer</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:58 <span class="list">[<span class="keyword">INFO</span>] agent: Joining LAN cluster...</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:58 <span class="list">[<span class="keyword">INFO</span>] agent: <span class="list">(<span class="keyword">LAN</span>)</span> joining: <span class="list">[<span class="keyword">192.168.244.130</span> <span class="number">192.168</span>.244.131 <span class="number">192.168</span>.244.132]</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:58 <span class="list">[<span class="keyword">INFO</span>] serf: Re-joined to previously known node: ConsulServer1: <span class="number">192.168</span>.244.131:8301</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:58 <span class="list">[<span class="keyword">INFO</span>] serf: Re-joined to previously known node: ConsulServer1.dc1: <span class="number">192.168</span>.244.131:8302</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:58 <span class="list">[<span class="keyword">INFO</span>] serf: EventMemberJoin: ConsulServer1 <span class="number">192.168</span>.244.130</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:58 <span class="list">[<span class="keyword">INFO</span>] consul: Adding LAN server ConsulServer1 <span class="list">(<span class="keyword">Addr:</span> tcp/192.168.244.130:8300)</span> <span class="list">(<span class="keyword">DC:</span> dc1)</span></span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:58 <span class="list">[<span class="keyword">INFO</span>] serf: EventMemberJoin: ConsulServer1.dc1 <span class="number">192.168</span>.244.130</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:58 <span class="list">[<span class="keyword">INFO</span>] consul: Handled member-join event for server <span class="string">"ConsulServer1.dc1"</span> in area <span class="string">"wan"</span></span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:58 <span class="list">[<span class="keyword">INFO</span>] agent: <span class="list">(<span class="keyword">LAN</span>)</span> joined: <span class="number">2</span> Err: &lt;nil&gt;</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:17:58 <span class="list">[<span class="keyword">INFO</span>] agent: Join LAN completed. Synced with <span class="number">2</span> initial agents</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:18:04 <span class="list">[<span class="keyword">WARN</span>] raft: no known peers, aborting election</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:18:05 <span class="list">[<span class="keyword">ERR</span>] agent: failed to sync remote state: No cluster leader</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br></pre></td></tr></table></figure></p>
<p>Server 3:<br><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="list">[<span class="keyword">root@Automation</span> server]# consul agent -ui -config-dir /etc/consul.d/server/</span><br><span class="line">WARNING: LAN keyring exists but -encrypt given, using keyring</span><br><span class="line">WARNING: WAN keyring exists but -encrypt given, using keyring</span><br><span class="line">bootstrap_expect &gt; <span class="number">0</span>: expecting <span class="number">3</span> servers</span><br><span class="line">==&gt; Starting Consul agent...</span><br><span class="line">==&gt; Consul agent running!</span><br><span class="line">           Version: <span class="variable">'v1.0.2</span>'</span><br><span class="line">           Node ID: <span class="variable">'ee9443b2-4aa1-f2cc-7b76-4b6530a99fe1</span>'</span><br><span class="line">         Node name: <span class="variable">'ConsulServer3</span>'</span><br><span class="line">        Datacenter: <span class="variable">'dc1</span>' <span class="list">(<span class="keyword">Segment:</span> <span class="variable">'&lt;all&gt;</span>')</span></span><br><span class="line">            Server: true <span class="list">(<span class="keyword">Bootstrap:</span> false)</span></span><br><span class="line">       Client Addr: <span class="list">[<span class="keyword">127.0.0.1</span>] <span class="list">(<span class="keyword">HTTP:</span> <span class="number">8500</span>, HTTPS: <span class="number">-1</span>, DNS: <span class="number">8600</span>)</span></span><br><span class="line">      Cluster Addr: <span class="number">192.168</span>.244.132 <span class="list">(<span class="keyword">LAN:</span> <span class="number">8301</span>, WAN: <span class="number">8302</span>)</span></span><br><span class="line">           Encrypt: Gossip: true, TLS-Outgoing: false, TLS-Incoming: false</span><br><span class="line"></span><br><span class="line">==&gt; Log data will now stream in as it occurs:</span><br><span class="line"></span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:18:13 <span class="list">[<span class="keyword">INFO</span>] raft: Initial configuration <span class="list">(<span class="keyword">index=0</span>)</span>: <span class="list">[]</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:18:13 <span class="list">[<span class="keyword">INFO</span>] serf: EventMemberJoin: ConsulServer3.dc1 <span class="number">192.168</span>.244.132</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:18:13 <span class="list">[<span class="keyword">INFO</span>] serf: EventMemberJoin: ConsulServer3 <span class="number">192.168</span>.244.132</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:18:13 <span class="list">[<span class="keyword">INFO</span>] agent: Started DNS server <span class="number">127.0</span>.0.1:8600 <span class="list">(<span class="keyword">udp</span>)</span></span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:18:13 <span class="list">[<span class="keyword">INFO</span>] raft: Node at <span class="number">192.168</span>.244.132:8300 <span class="list">[<span class="keyword">Follower</span>] entering Follower state <span class="list">(<span class="keyword">Leader:</span> <span class="string">""</span>)</span></span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:18:13 <span class="list">[<span class="keyword">INFO</span>] serf: Attempting re-join to previously known node: ConsulServer1.dc1: <span class="number">192.168</span>.244.132:8302</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:18:13 <span class="list">[<span class="keyword">INFO</span>] serf: Attempting re-join to previously known node: ConsulServer1: <span class="number">192.168</span>.244.132:8301</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:18:13 <span class="list">[<span class="keyword">INFO</span>] consul: Adding LAN server ConsulServer3 <span class="list">(<span class="keyword">Addr:</span> tcp/192.168.244.132:8300)</span> <span class="list">(<span class="keyword">DC:</span> dc1)</span></span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:18:13 <span class="list">[<span class="keyword">INFO</span>] consul: Handled member-join event for server <span class="string">"ConsulServer3.dc1"</span> in area <span class="string">"wan"</span></span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:18:13 <span class="list">[<span class="keyword">INFO</span>] agent: Started DNS server <span class="number">127.0</span>.0.1:8600 <span class="list">(<span class="keyword">tcp</span>)</span></span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:18:13 <span class="list">[<span class="keyword">INFO</span>] agent: Started HTTP server on <span class="number">127.0</span>.0.1:8500 <span class="list">(<span class="keyword">tcp</span>)</span></span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:18:13 <span class="list">[<span class="keyword">INFO</span>] agent: started state syncer</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:18:13 <span class="list">[<span class="keyword">INFO</span>] agent: Retry join LAN is supported for: aliyun aws azure digitalocean gce os scaleway softlayer</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:18:13 <span class="list">[<span class="keyword">INFO</span>] agent: Joining LAN cluster...</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:18:13 <span class="list">[<span class="keyword">INFO</span>] agent: <span class="list">(<span class="keyword">LAN</span>)</span> joining: <span class="list">[<span class="keyword">192.168.244.130</span> <span class="number">192.168</span>.244.131 <span class="number">192.168</span>.244.132]</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:18:13 <span class="list">[<span class="keyword">INFO</span>] serf: EventMemberJoin: ConsulServer2 <span class="number">192.168</span>.244.131</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:18:13 <span class="list">[<span class="keyword">INFO</span>] serf: EventMemberJoin: ConsulServer1 <span class="number">192.168</span>.244.130</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:18:13 <span class="list">[<span class="keyword">INFO</span>] serf: Re-joined to previously known node: ConsulServer1: <span class="number">192.168</span>.244.132:8301</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:18:13 <span class="list">[<span class="keyword">INFO</span>] consul: Adding LAN server ConsulServer2 <span class="list">(<span class="keyword">Addr:</span> tcp/192.168.244.131:8300)</span> <span class="list">(<span class="keyword">DC:</span> dc1)</span></span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:18:13 <span class="list">[<span class="keyword">INFO</span>] serf: Re-joined to previously known node: ConsulServer1.dc1: <span class="number">192.168</span>.244.132:8302</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:18:13 <span class="list">[<span class="keyword">INFO</span>] agent: <span class="list">(<span class="keyword">LAN</span>)</span> joined: <span class="number">3</span> Err: &lt;nil&gt;</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:18:13 <span class="list">[<span class="keyword">INFO</span>] agent: Join LAN completed. Synced with <span class="number">3</span> initial agents</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:18:13 <span class="list">[<span class="keyword">INFO</span>] serf: EventMemberJoin: ConsulServer1.dc1 <span class="number">192.168</span>.244.130</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:18:13 <span class="list">[<span class="keyword">INFO</span>] serf: EventMemberJoin: ConsulServer2.dc1 <span class="number">192.168</span>.244.131</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:18:13 <span class="list">[<span class="keyword">INFO</span>] consul: Handled member-join event for server <span class="string">"ConsulServer1.dc1"</span> in area <span class="string">"wan"</span></span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:18:13 <span class="list">[<span class="keyword">INFO</span>] consul: Handled member-join event for server <span class="string">"ConsulServer2.dc1"</span> in area <span class="string">"wan"</span></span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:18:13 <span class="list">[<span class="keyword">INFO</span>] consul: Existing Raft peers reported by ConsulServer1, disabling bootstrap mode</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:18:13 <span class="list">[<span class="keyword">INFO</span>] consul: Adding LAN server ConsulServer1 <span class="list">(<span class="keyword">Addr:</span> tcp/192.168.244.130:8300)</span> <span class="list">(<span class="keyword">DC:</span> dc1)</span></span><br><span class="line"><span class="number">2018/01</span>/02 <span class="number">13</span>:18:18 <span class="list">[<span class="keyword">DEBUG</span>] raft-net: <span class="number">192.168</span>.244.132:8300 accepted connection from: <span class="number">192.168</span>.244.130:38206</span><br><span class="line"><span class="number">2018/01</span>/02 <span class="number">13</span>:18:18 <span class="list">[<span class="keyword">DEBUG</span>] raft-net: <span class="number">192.168</span>.244.132:8300 accepted connection from: <span class="number">192.168</span>.244.130:45520</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:18:18 <span class="list">[<span class="keyword">WARN</span>] raft: Failed to get previous log: <span class="number">1</span> log not found <span class="list">(<span class="keyword">last:</span> <span class="number">0</span>)</span></span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:18:19 <span class="list">[<span class="keyword">INFO</span>] consul: New leader elected: ConsulServer1</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">13</span>:18:19 <span class="list">[<span class="keyword">INFO</span>] agent: Synced node info</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br></pre></td></tr></table></figure></p>
<h3 id="4-验证集群运行成功"><a href="#4-验证集群运行成功" class="headerlink" title="4. 验证集群运行成功"></a>4. 验证集群运行成功</h3><p>在任一节点都可以验证：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation ~]<span class="preprocessor"># consul members</span></span><br><span class="line">Node           Address               Status  Type    Build  Protocol  DC   Segment</span><br><span class="line">ConsulServer1  <span class="number">192.168</span><span class="number">.244</span><span class="number">.130</span>:<span class="number">8301</span>  alive   server  <span class="number">1.0</span><span class="number">.2</span>  <span class="number">2</span>         dc1  &lt;all&gt;</span><br><span class="line">ConsulServer2  <span class="number">192.168</span><span class="number">.244</span><span class="number">.131</span>:<span class="number">8301</span>  alive   server  <span class="number">1.0</span><span class="number">.2</span>  <span class="number">2</span>         dc1  &lt;all&gt;</span><br><span class="line">ConsulServer3  <span class="number">192.168</span><span class="number">.244</span><span class="number">.132</span>:<span class="number">8301</span>  alive   server  <span class="number">1.0</span><span class="number">.2</span>  <span class="number">2</span>         dc1  &lt;all&gt;</span><br></pre></td></tr></table></figure></p>
<p><img src="/images/consul/cluster-server.jpg" alt=""></p>
<h2 id="Client-Configuration"><a href="#Client-Configuration" class="headerlink" title="Client Configuration"></a>Client Configuration</h2><h3 id="1-创建必要配置目录和文件"><a href="#1-创建必要配置目录和文件" class="headerlink" title="1. 创建必要配置目录和文件"></a>1. 创建必要配置目录和文件</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="constant">@Automation</span> ~]<span class="preprocessor"># mkdir /etc/consul.d/client</span></span><br><span class="line">[root<span class="constant">@Automation</span> ~]<span class="preprocessor"># mkdir /etc/consul.d/client-data</span></span><br><span class="line">[root<span class="constant">@Automation</span> ~]<span class="preprocessor"># cd /etc/consul.d/</span></span><br><span class="line">[root<span class="constant">@Automation</span> consul.d]<span class="preprocessor"># ls</span></span><br><span class="line">client  client-data  <span class="built_in">ping</span>.json  web.json</span><br></pre></td></tr></table></figure>
<h3 id="2-创建Configration-1"><a href="#2-创建Configration-1" class="headerlink" title="2. 创建Configration"></a>2. 创建Configration</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">"<span class="attribute">bind_addr</span>": <span class="value"><span class="string">"192.168.244.134"</span></span>,</span><br><span class="line">"<span class="attribute">datacenter</span>": <span class="value"><span class="string">"dc1"</span></span>,</span><br><span class="line">"<span class="attribute">data_dir</span>": <span class="value"><span class="string">"/etc/consul.d/client-data"</span></span>,</span><br><span class="line">"<span class="attribute">encrypt</span>": <span class="value"><span class="string">"Vz3jcuLn6a6Ekq5PbrJO2w=="</span></span>,</span><br><span class="line">"<span class="attribute">log_level</span>": <span class="value"><span class="string">"INFO"</span></span>,</span><br><span class="line">"<span class="attribute">enable_syslog</span>": <span class="value"><span class="literal">true</span></span>,</span><br><span class="line">"<span class="attribute">enable_debug</span>": <span class="value"><span class="literal">true</span></span>,</span><br><span class="line">"<span class="attribute">enable_script_checks</span>": <span class="value"><span class="literal">true</span></span>,</span><br><span class="line">"<span class="attribute">server</span>": <span class="value"><span class="literal">false</span></span>,</span><br><span class="line">   "<span class="attribute">service</span>": <span class="value">&#123;"<span class="attribute">name</span>": <span class="value"><span class="string">"consul-test"</span></span>, "<span class="attribute">tags</span>": <span class="value">[<span class="string">"HTTP"</span>]</span>, "<span class="attribute">port</span>": <span class="value"><span class="number">80</span></span>,</span><br><span class="line">   "<span class="attribute">check</span>": <span class="value">&#123;"<span class="attribute">script</span>": <span class="value"><span class="string">"curl localhost &gt;/dev/null 2&gt;&amp;1"</span></span>, "<span class="attribute">interval</span>": <span class="value"><span class="string">"10s"</span></span>&#125;</span>&#125;</span>,</span><br><span class="line">"<span class="attribute">node_name</span>": <span class="value"><span class="string">"ConsulClient1"</span></span>,</span><br><span class="line">"<span class="attribute">server</span>": <span class="value"><span class="literal">false</span></span>,</span><br><span class="line">"<span class="attribute">rejoin_after_leave</span>": <span class="value"><span class="literal">true</span></span>,</span><br><span class="line">"<span class="attribute">retry_join</span>": <span class="value">[</span><br><span class="line">  <span class="string">"192.168.244.130"</span>,</span><br><span class="line">  <span class="string">"192.168.244.131"</span>,</span><br><span class="line">  <span class="string">"192.168.244.132"</span></span><br><span class="line">  ]</span><br><span class="line"> </span>&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3-运行Server集群-1"><a href="#3-运行Server集群-1" class="headerlink" title="3. 运行Server集群"></a>3. 运行Server集群</h3><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="list">[<span class="keyword">root@Automation</span> client]# consul agent -config-dir /etc/consul.d/client</span><br><span class="line">==&gt; Starting Consul agent...</span><br><span class="line">==&gt; Consul agent running!</span><br><span class="line">           Version: <span class="variable">'v1.0.2</span>'</span><br><span class="line">           Node ID: <span class="variable">'c8167e25-7e41-0994-c5b9-8f5f739ecc2a</span>'</span><br><span class="line">         Node name: <span class="variable">'ConsulClient1</span>'</span><br><span class="line">        Datacenter: <span class="variable">'dc1</span>' <span class="list">(<span class="keyword">Segment:</span> '')</span></span><br><span class="line">            Server: false <span class="list">(<span class="keyword">Bootstrap:</span> false)</span></span><br><span class="line">       Client Addr: <span class="list">[<span class="keyword">127.0.0.1</span>] <span class="list">(<span class="keyword">HTTP:</span> <span class="number">8500</span>, HTTPS: <span class="number">-1</span>, DNS: <span class="number">8600</span>)</span></span><br><span class="line">      Cluster Addr: <span class="number">192.168</span>.244.134 <span class="list">(<span class="keyword">LAN:</span> <span class="number">8301</span>, WAN: <span class="number">8302</span>)</span></span><br><span class="line">           Encrypt: Gossip: true, TLS-Outgoing: false, TLS-Incoming: false</span><br><span class="line"></span><br><span class="line">==&gt; Log data will now stream in as it occurs:</span><br><span class="line"></span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">14</span>:09:02 <span class="list">[<span class="keyword">INFO</span>] serf: EventMemberJoin: ConsulClient1 <span class="number">192.168</span>.244.134</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">14</span>:09:02 <span class="list">[<span class="keyword">INFO</span>] agent: Started DNS server <span class="number">127.0</span>.0.1:8600 <span class="list">(<span class="keyword">udp</span>)</span></span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">14</span>:09:02 <span class="list">[<span class="keyword">INFO</span>] agent: Started DNS server <span class="number">127.0</span>.0.1:8600 <span class="list">(<span class="keyword">tcp</span>)</span></span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">14</span>:09:02 <span class="list">[<span class="keyword">INFO</span>] agent: Started HTTP server on <span class="number">127.0</span>.0.1:8500 <span class="list">(<span class="keyword">tcp</span>)</span></span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">14</span>:09:02 <span class="list">[<span class="keyword">INFO</span>] agent: started state syncer</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">14</span>:09:02 <span class="list">[<span class="keyword">INFO</span>] agent: Retry join LAN is supported for: aliyun aws azure digitalocean gce os scaleway softlayer</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">14</span>:09:02 <span class="list">[<span class="keyword">INFO</span>] agent: Joining LAN cluster...</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">14</span>:09:02 <span class="list">[<span class="keyword">INFO</span>] agent: <span class="list">(<span class="keyword">LAN</span>)</span> joining: <span class="list">[<span class="keyword">192.168.244.130</span> <span class="number">192.168</span>.244.131 <span class="number">192.168</span>.244.132]</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">14</span>:09:02 <span class="list">[<span class="keyword">WARN</span>] manager: No servers available</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">14</span>:09:02 <span class="list">[<span class="keyword">ERR</span>] agent: failed to sync remote state: No known Consul servers</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">14</span>:09:02 <span class="list">[<span class="keyword">INFO</span>] serf: EventMemberJoin: ConsulServer3 <span class="number">192.168</span>.244.132</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">14</span>:09:02 <span class="list">[<span class="keyword">INFO</span>] serf: EventMemberJoin: ConsulServer1 <span class="number">192.168</span>.244.130</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">14</span>:09:02 <span class="list">[<span class="keyword">INFO</span>] serf: EventMemberJoin: ConsulServer2 <span class="number">192.168</span>.244.131</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">14</span>:09:02 <span class="list">[<span class="keyword">INFO</span>] consul: adding server ConsulServer3 <span class="list">(<span class="keyword">Addr:</span> tcp/192.168.244.132:8300)</span> <span class="list">(<span class="keyword">DC:</span> dc1)</span></span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">14</span>:09:02 <span class="list">[<span class="keyword">INFO</span>] consul: adding server ConsulServer1 <span class="list">(<span class="keyword">Addr:</span> tcp/192.168.244.130:8300)</span> <span class="list">(<span class="keyword">DC:</span> dc1)</span></span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">14</span>:09:02 <span class="list">[<span class="keyword">INFO</span>] consul: adding server ConsulServer2 <span class="list">(<span class="keyword">Addr:</span> tcp/192.168.244.131:8300)</span> <span class="list">(<span class="keyword">DC:</span> dc1)</span></span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">14</span>:09:02 <span class="list">[<span class="keyword">INFO</span>] agent: <span class="list">(<span class="keyword">LAN</span>)</span> joined: <span class="number">3</span> Err: &lt;nil&gt;</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">14</span>:09:02 <span class="list">[<span class="keyword">INFO</span>] agent: Join LAN completed. Synced with <span class="number">3</span> initial agents</span><br><span class="line">    <span class="number">2018/01</span>/02 <span class="number">14</span>:09:02 <span class="list">[<span class="keyword">INFO</span>] agent: Synced node info</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br></pre></td></tr></table></figure>
<h3 id="4-验证集群运行成功-1"><a href="#4-验证集群运行成功-1" class="headerlink" title="4. 验证集群运行成功"></a>4. 验证集群运行成功</h3><p>在任一节点都可以验证：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation ~]<span class="preprocessor"># consul members</span></span><br><span class="line">Node           Address               Status  Type    Build  Protocol  DC   Segment</span><br><span class="line">ConsulServer1  <span class="number">192.168</span><span class="number">.244</span><span class="number">.130</span>:<span class="number">8301</span>  alive   server  <span class="number">1.0</span><span class="number">.2</span>  <span class="number">2</span>         dc1  &lt;all&gt;</span><br><span class="line">ConsulServer2  <span class="number">192.168</span><span class="number">.244</span><span class="number">.131</span>:<span class="number">8301</span>  alive   server  <span class="number">1.0</span><span class="number">.2</span>  <span class="number">2</span>         dc1  &lt;all&gt;</span><br><span class="line">ConsulServer3  <span class="number">192.168</span><span class="number">.244</span><span class="number">.132</span>:<span class="number">8301</span>  alive   server  <span class="number">1.0</span><span class="number">.2</span>  <span class="number">2</span>         dc1  &lt;all&gt;</span><br><span class="line">ConsulClient1  <span class="number">192.168</span><span class="number">.244</span><span class="number">.134</span>:<span class="number">8301</span>  alive   client  <span class="number">1.0</span><span class="number">.2</span>  <span class="number">2</span>         dc1  &lt;<span class="keyword">default</span>&gt;</span><br></pre></td></tr></table></figure></p>
<p><img src="/images/consul/cluster-client.jpg" alt=""></p>
<h2 id="Adding-Servers"><a href="#Adding-Servers" class="headerlink" title="Adding Servers"></a>Adding Servers</h2><p>跟上边一样的步骤创建、配置、运行。<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">"<span class="attribute">bind_addr</span>": <span class="value"><span class="string">"192.168.244.135"</span></span>, </span><br><span class="line">"<span class="attribute">datacenter</span>": <span class="value"><span class="string">"dc1"</span></span>,</span><br><span class="line">"<span class="attribute">data_dir</span>": <span class="value"><span class="string">"/etc/consul.d/consul-server-data"</span></span>,</span><br><span class="line">"<span class="attribute">encrypt</span>": <span class="value"><span class="string">"Vz3jcuLn6a6Ekq5PbrJO2w=="</span></span>,</span><br><span class="line">"<span class="attribute">log_level</span>": <span class="value"><span class="string">"INFO"</span></span>,</span><br><span class="line">"<span class="attribute">enable_syslog</span>": <span class="value"><span class="literal">true</span></span>,</span><br><span class="line">"<span class="attribute">enable_debug</span>": <span class="value"><span class="literal">true</span></span>,</span><br><span class="line">"<span class="attribute">node_name</span>": <span class="value"><span class="string">"ConsulServer4"</span></span>,</span><br><span class="line">"<span class="attribute">server</span>": <span class="value"><span class="literal">true</span></span>,</span><br><span class="line">"<span class="attribute">rejoin_after_leave</span>": <span class="value"><span class="literal">true</span></span>,</span><br><span class="line">"<span class="attribute">retry_join</span>": <span class="value">[ </span><br><span class="line">  <span class="string">"192.168.244.130"</span>,</span><br><span class="line">  <span class="string">"192.168.244.131"</span>,</span><br><span class="line">  <span class="string">"192.168.244.132"</span>,</span><br><span class="line">  <span class="string">"192.168.244.135"</span></span><br><span class="line">  ]</span><br><span class="line"> </span>&#125;</span><br></pre></td></tr></table></figure></p>
<p>验证<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation ~]<span class="preprocessor"># consul members</span></span><br><span class="line">Node           Address               Status  Type    Build  Protocol  DC   Segment</span><br><span class="line">ConsulServer1  <span class="number">192.168</span><span class="number">.244</span><span class="number">.130</span>:<span class="number">8301</span>  alive   server  <span class="number">1.0</span><span class="number">.2</span>  <span class="number">2</span>         dc1  &lt;all&gt;</span><br><span class="line">ConsulServer2  <span class="number">192.168</span><span class="number">.244</span><span class="number">.131</span>:<span class="number">8301</span>  alive   server  <span class="number">1.0</span><span class="number">.2</span>  <span class="number">2</span>         dc1  &lt;all&gt;</span><br><span class="line">ConsulServer3  <span class="number">192.168</span><span class="number">.244</span><span class="number">.132</span>:<span class="number">8301</span>  alive   server  <span class="number">1.0</span><span class="number">.2</span>  <span class="number">2</span>         dc1  &lt;all&gt;</span><br><span class="line">ConsulServer4  <span class="number">192.168</span><span class="number">.244</span><span class="number">.135</span>:<span class="number">8301</span>  alive   server  <span class="number">1.0</span><span class="number">.2</span>  <span class="number">2</span>         dc1  &lt;all&gt;</span><br><span class="line">ConsulClient1  <span class="number">192.168</span><span class="number">.244</span><span class="number">.134</span>:<span class="number">8301</span>  alive   client  <span class="number">1.0</span><span class="number">.2</span>  <span class="number">2</span>         dc1  &lt;<span class="keyword">default</span>&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="Removing-Servers"><a href="#Removing-Servers" class="headerlink" title="Removing Servers"></a>Removing Servers</h2><p>我们把Leader节点Remove<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="constant">@Automation</span> ~]<span class="preprocessor"># consul leave</span></span><br><span class="line">Graceful leave complete</span><br></pre></td></tr></table></figure></p>
<p>验证<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation ~]<span class="preprocessor"># consul members</span></span><br><span class="line">Node           Address               Status  Type    Build  Protocol  DC   Segment</span><br><span class="line">ConsulServer1  <span class="number">192.168</span><span class="number">.244</span><span class="number">.130</span>:<span class="number">8301</span>  alive   server  <span class="number">1.0</span><span class="number">.2</span>  <span class="number">2</span>         dc1  &lt;all&gt;</span><br><span class="line">ConsulServer2  <span class="number">192.168</span><span class="number">.244</span><span class="number">.131</span>:<span class="number">8301</span>  left    server  <span class="number">1.0</span><span class="number">.2</span>  <span class="number">2</span>         dc1  &lt;all&gt;</span><br><span class="line">ConsulServer3  <span class="number">192.168</span><span class="number">.244</span><span class="number">.132</span>:<span class="number">8301</span>  alive   server  <span class="number">1.0</span><span class="number">.2</span>  <span class="number">2</span>         dc1  &lt;all&gt;</span><br><span class="line">ConsulServer4  <span class="number">192.168</span><span class="number">.244</span><span class="number">.136</span>:<span class="number">8301</span>  alive   server  <span class="number">1.0</span><span class="number">.2</span>  <span class="number">2</span>         dc1  &lt;all&gt;</span><br><span class="line">ConsulClient1  <span class="number">192.168</span><span class="number">.244</span><span class="number">.134</span>:<span class="number">8301</span>  alive   client  <span class="number">1.0</span><span class="number">.2</span>  <span class="number">2</span>         dc1  &lt;<span class="keyword">default</span>&gt;</span><br></pre></td></tr></table></figure></p>
<p>当Leader Server出问题后，会自动选择新的Leader：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">    <span class="number">2018</span><span class="regexp">/01/</span><span class="number">02</span> <span class="number">15</span>:<span class="number">14</span>:<span class="number">53</span> [INFO] <span class="string">serf:</span> <span class="string">EventMemberLeave:</span> ConsulServer2 <span class="number">192.168</span><span class="number">.244</span><span class="number">.131</span></span><br><span class="line">    <span class="number">2018</span><span class="regexp">/01/</span><span class="number">02</span> <span class="number">15</span>:<span class="number">14</span>:<span class="number">53</span> [INFO] <span class="string">consul:</span> Removing LAN server ConsulServer2 (<span class="string">Addr:</span> tcp/<span class="number">192.168</span><span class="number">.244</span><span class="number">.131</span>:<span class="number">8300</span>) (<span class="string">DC:</span> dc1)</span><br><span class="line">    <span class="number">2018</span><span class="regexp">/01/</span><span class="number">02</span> <span class="number">15</span>:<span class="number">14</span>:<span class="number">57</span> [WARN] <span class="string">raft:</span> Heartbeat timeout from <span class="string">"192.168.244.131:8300"</span> reached, starting election</span><br><span class="line">    <span class="number">2018</span><span class="regexp">/01/</span><span class="number">02</span> <span class="number">15</span>:<span class="number">14</span>:<span class="number">57</span> [INFO] <span class="string">raft:</span> Node at <span class="number">192.168</span><span class="number">.244</span><span class="number">.136</span>:<span class="number">8300</span> [Candidate] entering Candidate state <span class="keyword">in</span> term <span class="number">52</span></span><br><span class="line">    <span class="number">2018</span><span class="regexp">/01/</span><span class="number">02</span> <span class="number">15</span>:<span class="number">14</span>:<span class="number">59</span> [INFO] <span class="string">raft:</span> Duplicate RequestVote <span class="keyword">for</span> same <span class="string">term:</span> <span class="number">52</span></span><br><span class="line"><span class="number">2018</span><span class="regexp">/01/</span><span class="number">02</span> <span class="number">15</span>:<span class="number">15</span>:<span class="number">00</span> [DEBUG] raft-<span class="string">net:</span> <span class="number">192.168</span><span class="number">.244</span><span class="number">.136</span>:<span class="number">8300</span> accepted connection <span class="string">from:</span> <span class="number">192.168</span><span class="number">.244</span><span class="number">.130</span>:<span class="number">34750</span></span><br><span class="line">    <span class="number">2018</span><span class="regexp">/01/</span><span class="number">02</span> <span class="number">15</span>:<span class="number">15</span>:<span class="number">00</span> [INFO] <span class="string">raft:</span> Duplicate RequestVote <span class="keyword">for</span> same <span class="string">term:</span> <span class="number">52</span></span><br><span class="line">    <span class="number">2018</span><span class="regexp">/01/</span><span class="number">02</span> <span class="number">15</span>:<span class="number">15</span>:<span class="number">04</span> [WARN] <span class="string">raft:</span> Election timeout reached, restarting election</span><br><span class="line">    <span class="number">2018</span><span class="regexp">/01/</span><span class="number">02</span> <span class="number">15</span>:<span class="number">15</span>:<span class="number">04</span> [INFO] <span class="string">raft:</span> Node at <span class="number">192.168</span><span class="number">.244</span><span class="number">.136</span>:<span class="number">8300</span> [Candidate] entering Candidate state <span class="keyword">in</span> term <span class="number">53</span></span><br><span class="line">    <span class="number">2018</span><span class="regexp">/01/</span><span class="number">02</span> <span class="number">15</span>:<span class="number">15</span>:<span class="number">04</span> [INFO] <span class="string">raft:</span> Election won. <span class="string">Tally:</span> <span class="number">2</span></span><br><span class="line">    <span class="number">2018</span><span class="regexp">/01/</span><span class="number">02</span> <span class="number">15</span>:<span class="number">15</span>:<span class="number">04</span> [INFO] <span class="string">raft:</span> Node at <span class="number">192.168</span><span class="number">.244</span><span class="number">.136</span>:<span class="number">8300</span> [Leader] entering Leader state</span><br><span class="line">    <span class="number">2018</span><span class="regexp">/01/</span><span class="number">02</span> <span class="number">15</span>:<span class="number">15</span>:<span class="number">04</span> [INFO] <span class="string">raft:</span> Added peer <span class="number">96</span>c8e751-<span class="number">0019</span>-e213-ac42-<span class="number">4635</span>fe1d89e5, starting replication</span><br><span class="line">    <span class="number">2018</span><span class="regexp">/01/</span><span class="number">02</span> <span class="number">15</span>:<span class="number">15</span>:<span class="number">04</span> [INFO] <span class="string">raft:</span> Added peer ee9443b2-<span class="number">4</span>aa1-f2cc-<span class="number">7</span>b76-<span class="number">4</span>b6530a99fe1, starting replication</span><br><span class="line">    <span class="number">2018</span><span class="regexp">/01/</span><span class="number">02</span> <span class="number">15</span>:<span class="number">15</span>:<span class="number">04</span> [INFO] <span class="string">consul:</span> cluster leadership acquired</span><br><span class="line">    <span class="number">2018</span><span class="regexp">/01/</span><span class="number">02</span> <span class="number">15</span>:<span class="number">15</span>:<span class="number">04</span> [INFO] <span class="string">consul:</span> New leader <span class="string">elected:</span> ConsulServer4</span><br><span class="line">    <span class="number">2018</span><span class="regexp">/01/</span><span class="number">02</span> <span class="number">15</span>:<span class="number">15</span>:<span class="number">04</span> [INFO] <span class="string">raft:</span> pipelining replication to peer &#123;Voter <span class="number">96</span>c8e751-<span class="number">0019</span>-e213-ac42-<span class="number">4635</span>fe1d89e5 <span class="number">192.168</span><span class="number">.244</span><span class="number">.130</span>:<span class="number">8300</span>&#125;</span><br><span class="line">    <span class="number">2018</span><span class="regexp">/01/</span><span class="number">02</span> <span class="number">15</span>:<span class="number">15</span>:<span class="number">04</span> [INFO] <span class="string">raft:</span> pipelining replication to peer &#123;Voter ee9443b2-<span class="number">4</span>aa1-f2cc-<span class="number">7</span>b76-<span class="number">4</span>b6530a99fe1 <span class="number">192.168</span><span class="number">.244</span><span class="number">.132</span>:<span class="number">8300</span>&#125;</span><br><span class="line">    <span class="number">2018</span><span class="regexp">/01/</span><span class="number">02</span> <span class="number">15</span>:<span class="number">15</span>:<span class="number">04</span> [INFO] <span class="string">consul:</span> member <span class="string">'ConsulServer2'</span> left, deregistering</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Consul - Key/Value和Web UI]]></title>
      <url>http://izheyi.com/2017/12/26/Consul-Key-Value%E5%92%8CWeb-UI/</url>
      <content type="html"><![CDATA[<h1 id="Key-Value"><a href="#Key-Value" class="headerlink" title="Key/Value"></a>Key/Value</h1><p>为了提供服务发现以及健康检测，Consul提供了非常容易使用的键／值对存储。<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation ~]# <span class="keyword">mkdir</span> <span class="keyword">test</span></span><br><span class="line">[root@Automation ~]# consul kv get <span class="keyword">test</span>/</span><br><span class="line"><span class="keyword">Error</span>! <span class="keyword">No</span> key exists at: <span class="keyword">test</span>/</span><br></pre></td></tr></table></figure></p>
<p>consul支持http api和consul client进行K/V操作<br>1.添加: consul kv put [-flags=xx] key value<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="constant">@Automation</span> ~]<span class="preprocessor"># consul kv put test/kv 1</span></span><br><span class="line">Success! Data written <span class="keyword">to</span>: test/kv</span><br><span class="line">[root<span class="constant">@Automation</span> ~]<span class="preprocessor"># consul kv put test/kv1 11</span></span><br><span class="line">Success! Data written <span class="keyword">to</span>: test/kv1</span><br><span class="line">[root<span class="constant">@Automation</span> ~]<span class="preprocessor"># consul kv put -flags=21 test/kv2 admin</span></span><br><span class="line">Success! Data written <span class="keyword">to</span>: test/kv2</span><br></pre></td></tr></table></figure></p>
<p>consul支持64位整数的flags表示kv的metadata<br>2.查询: consul kv get [-deatiled] key<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation ~]<span class="preprocessor"># consul kv get test/kv</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">[root@Automation ~]<span class="preprocessor"># consul kv get -detailed test/kv</span></span><br><span class="line">CreateIndex      <span class="number">215</span></span><br><span class="line">Flags            <span class="number">0</span></span><br><span class="line">Key              test/kv</span><br><span class="line">LockIndex        <span class="number">0</span></span><br><span class="line">ModifyIndex      <span class="number">695</span></span><br><span class="line">Session          -</span><br><span class="line">Value            <span class="number">1</span></span><br></pre></td></tr></table></figure></p>
<p>3.查询所有的key: consul kv get -recurse<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation ~]<span class="comment"># consul kv get -recurse</span></span><br><span class="line"><span class="built_in">test</span>:<span class="number">15</span></span><br><span class="line"><span class="built_in">test</span>/kv:<span class="number">1</span></span><br><span class="line"><span class="built_in">test</span>/kv1:<span class="number">11</span></span><br><span class="line"><span class="built_in">test</span>/kv2:admin</span><br></pre></td></tr></table></figure></p>
<p>4.删除key: consul kv delete key<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation ~]# consul kv <span class="operator"><span class="keyword">delete</span> <span class="keyword">test</span>/kv</span><br><span class="line"><span class="keyword">Success</span>! Deleted <span class="keyword">key</span>: <span class="keyword">test</span>/kv</span><br><span class="line">[root@Automation ~]# consul kv <span class="keyword">get</span> -recurse</span><br><span class="line"><span class="keyword">test</span>:<span class="number">15</span></span><br><span class="line"><span class="keyword">test</span>/kv1:<span class="number">11</span></span><br><span class="line"><span class="keyword">test</span>/kv2:<span class="keyword">admin</span></span></span><br></pre></td></tr></table></figure></p>
<p>5.前缀匹配删除: consul kv delete -recurse key-prefix<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="constant">@Automation</span> ~]<span class="preprocessor"># consul kv delete -recurse test</span></span><br><span class="line">Success! Deleted keys <span class="keyword">with</span> prefix: test</span><br><span class="line">[root<span class="constant">@Automation</span> ~]<span class="preprocessor"># consul kv get -recurse</span></span><br><span class="line">[root<span class="constant">@Automation</span> ~]<span class="preprocessor">#</span></span><br></pre></td></tr></table></figure></p>
<p>6.修改kv<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="constant">@Automation</span> ~]<span class="preprocessor"># consul kv put test new</span></span><br><span class="line">Success! Data written <span class="keyword">to</span>: test</span><br><span class="line">[root<span class="constant">@Automation</span> ~]<span class="preprocessor"># consul kv get test</span></span><br><span class="line">new</span><br><span class="line">[root<span class="constant">@Automation</span> ~]<span class="preprocessor"># consul kv put test update</span></span><br><span class="line">Success! Data written <span class="keyword">to</span>: test</span><br><span class="line">[root<span class="constant">@Automation</span> ~]<span class="preprocessor"># consul kv get test</span></span><br><span class="line">update</span><br></pre></td></tr></table></figure></p>
<h1 id="Web-UI"><a href="#Web-UI" class="headerlink" title="Web UI"></a>Web UI</h1><p>启动Consul代理并设置 -ui 参数来启动自有主机的界面：<br><code>[root@Automation ~]# consul agent -dev -enable-script-checks -ui -config-dir /etc/consul.d</code><br><img src="/images/consul/ui.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Consul - 服务注册和健康检查]]></title>
      <url>http://izheyi.com/2017/12/25/Consul-%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E5%92%8C%E5%81%A5%E5%BA%B7%E6%A3%80%E6%9F%A5/</url>
      <content type="html"><![CDATA[<h1 id="服务注册"><a href="#服务注册" class="headerlink" title="服务注册"></a>服务注册</h1><h2 id="定义一个服务"><a href="#定义一个服务" class="headerlink" title="定义一个服务"></a>定义一个服务</h2><ol>
<li>为Consul配置创建一个目录/etc/consul.d。Consul装载配置目录中所有的配置文件。<code>[root@Automation bin]# sudo mkdir /etc/consul.d</code></li>
<li>我们将创建一个服务定义配置文件。<code>echo &#39;{&quot;service&quot;: {&quot;name&quot;: &quot;web&quot;, &quot;tags&quot;: [&quot;rails&quot;], &quot;port&quot;: 80}}&#39;&gt;/etc/consul.d/web.json</code></li>
<li>用配置目录对数重启代理：<figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="list">[<span class="keyword">root@Automation</span> bin]# curl http://10.24.33.75:8500/v1/catalog/service/web</span><br><span class="line">curl: <span class="list">(<span class="keyword">7</span>)</span> couldn<span class="variable">'t</span> connect to host</span><br><span class="line"><span class="list">[<span class="keyword">root@Automation</span> bin]# consul agent -dev -config-dir /etc/consul.d</span><br><span class="line">==&gt; Starting Consul agent...</span><br><span class="line">==&gt; Consul agent running!</span><br><span class="line">           Version: <span class="variable">'v1.0.2</span>'</span><br><span class="line">           Node ID: <span class="variable">'8f55dc0e-5765-5941-e566-5a4f1166645f</span>'</span><br><span class="line">         Node name: <span class="variable">'Automation</span>'</span><br><span class="line">        Datacenter: <span class="variable">'dc1</span>' <span class="list">(<span class="keyword">Segment:</span> <span class="variable">'&lt;all&gt;</span>')</span></span><br><span class="line">            Server: true <span class="list">(<span class="keyword">Bootstrap:</span> false)</span></span><br><span class="line">       Client Addr: <span class="list">[<span class="keyword">127.0.0.1</span>] <span class="list">(<span class="keyword">HTTP:</span> <span class="number">8500</span>, HTTPS: <span class="number">-1</span>, DNS: <span class="number">8600</span>)</span></span><br><span class="line">      Cluster Addr: <span class="number">127.0</span>.0.1 <span class="list">(<span class="keyword">LAN:</span> <span class="number">8301</span>, WAN: <span class="number">8302</span>)</span></span><br><span class="line">           Encrypt: Gossip: false, TLS-Outgoing: false, TLS-Incoming: false</span><br><span class="line"></span><br><span class="line">==&gt; Log data will now stream in as it occurs:</span><br><span class="line"></span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">15</span>:46:02 <span class="list">[<span class="keyword">DEBUG</span>] Using random ID <span class="string">"8f55dc0e-5765-5941-e566-5a4f1166645f"</span> as node ID</span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">15</span>:46:02 <span class="list">[<span class="keyword">INFO</span>] raft: Initial configuration <span class="list">(<span class="keyword">index=1</span>)</span>: <span class="list">[&#123;Suffrage:Voter ID:8f55dc0e-5765-5941-e566-5a4f1166645f Address:127.0.0.1:8300&#125;]</span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">15</span>:46:02 <span class="list">[<span class="keyword">INFO</span>] raft: Node at <span class="number">127.0</span>.0.1:8300 <span class="list">[<span class="keyword">Follower</span>] entering Follower state <span class="list">(<span class="keyword">Leader:</span> <span class="string">""</span>)</span></span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">15</span>:46:02 <span class="list">[<span class="keyword">INFO</span>] serf: EventMemberJoin: Automation.dc1 <span class="number">127.0</span>.0.1</span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">15</span>:46:02 <span class="list">[<span class="keyword">INFO</span>] serf: EventMemberJoin: Automation <span class="number">127.0</span>.0.1</span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">15</span>:46:02 <span class="list">[<span class="keyword">INFO</span>] consul: Adding LAN server Automation <span class="list">(<span class="keyword">Addr:</span> tcp/127.0.0.1:8300)</span> <span class="list">(<span class="keyword">DC:</span> dc1)</span></span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">15</span>:46:02 <span class="list">[<span class="keyword">INFO</span>] agent: Started DNS server <span class="number">127.0</span>.0.1:8600 <span class="list">(<span class="keyword">tcp</span>)</span></span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">15</span>:46:02 <span class="list">[<span class="keyword">INFO</span>] consul: Handled member-join event for server <span class="string">"Automation.dc1"</span> in area <span class="string">"wan"</span></span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">15</span>:46:02 <span class="list">[<span class="keyword">INFO</span>] agent: Started DNS server <span class="number">127.0</span>.0.1:8600 <span class="list">(<span class="keyword">udp</span>)</span></span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">15</span>:46:02 <span class="list">[<span class="keyword">INFO</span>] agent: Started HTTP server on <span class="number">127.0</span>.0.1:8500 <span class="list">(<span class="keyword">tcp</span>)</span></span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">15</span>:46:02 <span class="list">[<span class="keyword">INFO</span>] agent: started state syncer</span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">15</span>:46:02 <span class="list">[<span class="keyword">WARN</span>] raft: Heartbeat timeout from <span class="string">""</span> reached, starting election</span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">15</span>:46:02 <span class="list">[<span class="keyword">INFO</span>] raft: Node at <span class="number">127.0</span>.0.1:8300 <span class="list">[<span class="keyword">Candidate</span>] entering Candidate state in term <span class="number">2</span></span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">15</span>:46:02 <span class="list">[<span class="keyword">DEBUG</span>] raft: Votes needed: <span class="number">1</span></span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">15</span>:46:02 <span class="list">[<span class="keyword">DEBUG</span>] raft: Vote granted from <span class="number">8</span>f55dc0e-5765-5941-e566-5a4f1166645f in term <span class="number">2</span>. Tally: <span class="number">1</span></span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">15</span>:46:02 <span class="list">[<span class="keyword">INFO</span>] raft: Election won. Tally: <span class="number">1</span></span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">15</span>:46:02 <span class="list">[<span class="keyword">INFO</span>] raft: Node at <span class="number">127.0</span>.0.1:8300 <span class="list">[<span class="keyword">Leader</span>] entering Leader state</span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">15</span>:46:02 <span class="list">[<span class="keyword">INFO</span>] consul: cluster leadership acquired</span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">15</span>:46:02 <span class="list">[<span class="keyword">DEBUG</span>] consul: Skipping self join check for <span class="string">"Automation"</span> since the cluster is too small</span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">15</span>:46:02 <span class="list">[<span class="keyword">INFO</span>] consul: member <span class="variable">'Automation</span>' joined, marking health alive</span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">15</span>:46:02 <span class="list">[<span class="keyword">INFO</span>] consul: New leader elected: Automation</span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">15</span>:46:02 <span class="list">[<span class="keyword">DEBUG</span>] Skipping remote check <span class="string">"serfHealth"</span> since it is managed automatically</span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">15</span>:46:02 <span class="list">[<span class="keyword">INFO</span>] agent: Synced service <span class="string">"web"</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>你会注意到在输出中”synced service ‘web’”。这意味着代理已经从配置文件中装载了该服务定义，并且已经成功注册该服务到服务目录中。</p>
<p>如果你想注册多个服务，你可以在Consul配置目录中创建多个服务定义文件。</p>
<h2 id="查询服务"><a href="#查询服务" class="headerlink" title="查询服务"></a>查询服务</h2><p>这里只试了HTTP API：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation ~]<span class="preprocessor"># curl http:<span class="comment">//localhost:8500/v1/catalog/service/web</span></span></span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">"ID"</span>: <span class="string">"8f55dc0e-5765-5941-e566-5a4f1166645f"</span>,</span><br><span class="line">        <span class="string">"Node"</span>: <span class="string">"Automation"</span>,</span><br><span class="line">        <span class="string">"Address"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">        <span class="string">"Datacenter"</span>: <span class="string">"dc1"</span>,</span><br><span class="line">        <span class="string">"TaggedAddresses"</span>: &#123;</span><br><span class="line">            <span class="string">"lan"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">            <span class="string">"wan"</span>: <span class="string">"127.0.0.1"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"NodeMeta"</span>: &#123;</span><br><span class="line">            <span class="string">"consul-network-segment"</span>: <span class="string">""</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"ServiceID"</span>: <span class="string">"web"</span>,</span><br><span class="line">        <span class="string">"ServiceName"</span>: <span class="string">"web"</span>,</span><br><span class="line">        <span class="string">"ServiceTags"</span>: [</span><br><span class="line">            <span class="string">"rails"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">"ServiceAddress"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="string">"ServicePort"</span>: <span class="number">80</span>,</span><br><span class="line">        <span class="string">"ServiceEnableTagOverride"</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="string">"CreateIndex"</span>: <span class="number">6</span>,</span><br><span class="line">        <span class="string">"ModifyIndex"</span>: <span class="number">6</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<h1 id="健康检查"><a href="#健康检查" class="headerlink" title="健康检查"></a>健康检查</h1><h2 id="定义检查"><a href="#定义检查" class="headerlink" title="定义检查"></a>定义检查</h2><p>定义check的位置为/etc/consul.d/，格式跟定义服务一样，也是JSON。<br>下边我们定义两个check，分别为ping.json和web.json。内容如下：<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    "<span class="attribute">check</span>": <span class="value">&#123;</span><br><span class="line">        "<span class="attribute">name</span>": <span class="value"><span class="string">"ping"</span></span>,</span><br><span class="line">        "<span class="attribute">script</span>": <span class="value"><span class="string">"ping -c1 google.com &gt;/dev/null"</span></span>,</span><br><span class="line">        "<span class="attribute">interval</span>": <span class="value"><span class="string">"30s"</span></span><br><span class="line">    </span>&#125;</span><br><span class="line"></span>&#125;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    "<span class="attribute">service</span>": <span class="value">&#123;</span><br><span class="line">        "<span class="attribute">name</span>": <span class="value"><span class="string">"web"</span></span>,</span><br><span class="line">        "<span class="attribute">tags</span>": <span class="value">[</span><br><span class="line">            <span class="string">"springCloud"</span></span><br><span class="line">        ]</span>,</span><br><span class="line">        "<span class="attribute">port</span>": <span class="value"><span class="number">80</span></span>,</span><br><span class="line">        "<span class="attribute">check</span>": <span class="value">&#123;</span><br><span class="line">            "<span class="attribute">script</span>": <span class="value"><span class="string">"curl localhost &gt;/dev/null 2&gt;&amp;1"</span></span>,</span><br><span class="line">            "<span class="attribute">interval</span>": <span class="value"><span class="string">"10s"</span></span><br><span class="line">        </span>&#125;</span><br><span class="line">    </span>&#125;</span><br><span class="line"></span>&#125;</span><br></pre></td></tr></table></figure>
<p>第一个定义增加了一个主机级别的检测，名为”ping”。每隔30秒检查一次。在一个基于脚本的健康检测中，该检测使用启动Consul进程的用户来启动该检测。如果检测命令返回一个非0的返回码，那么该节点将被标记为不健康。<br>第二个命令修改名为web的服务，增加了一个检测，每隔10秒执行一次。</p>
<h2 id="检查健康状态"><a href="#检查健康状态" class="headerlink" title="检查健康状态"></a>检查健康状态</h2><p>修改后，需要重启一下代理<br><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="list">[<span class="keyword">root@Automation</span> consul.d]# consul agent -dev -config-dir /etc/consul.d</span><br><span class="line">==&gt; Starting Consul agent...</span><br><span class="line">==&gt; Error starting agent: Failed to register service <span class="string">"web"</span>: Scripts are disabled on this agent<span class="comment">; to enable, configure 'enable_script_checks' to true</span></span><br><span class="line"><span class="list">[<span class="keyword">root@Automation</span> consul.d]# consul agent -dev -enable-script-checks -config-dir /etc/consul.d</span><br><span class="line">==&gt; Starting Consul agent...</span><br><span class="line">==&gt; Consul agent running!</span><br><span class="line">           Version: <span class="variable">'v1.0.2</span>'</span><br><span class="line">           Node ID: <span class="variable">'33b66ccd-d48f-283d-c9ec-94f2f677c1af</span>'</span><br><span class="line">         Node name: <span class="variable">'Automation</span>'</span><br><span class="line">        Datacenter: <span class="variable">'dc1</span>' <span class="list">(<span class="keyword">Segment:</span> <span class="variable">'&lt;all&gt;</span>')</span></span><br><span class="line">            Server: true <span class="list">(<span class="keyword">Bootstrap:</span> false)</span></span><br><span class="line">       Client Addr: <span class="list">[<span class="keyword">127.0.0.1</span>] <span class="list">(<span class="keyword">HTTP:</span> <span class="number">8500</span>, HTTPS: <span class="number">-1</span>, DNS: <span class="number">8600</span>)</span></span><br><span class="line">      Cluster Addr: <span class="number">127.0</span>.0.1 <span class="list">(<span class="keyword">LAN:</span> <span class="number">8301</span>, WAN: <span class="number">8302</span>)</span></span><br><span class="line">           Encrypt: Gossip: false, TLS-Outgoing: false, TLS-Incoming: false</span><br><span class="line"></span><br><span class="line">==&gt; Log data will now stream in as it occurs:</span><br><span class="line"></span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">16</span>:16:34 <span class="list">[<span class="keyword">DEBUG</span>] Using random ID <span class="string">"33b66ccd-d48f-283d-c9ec-94f2f677c1af"</span> as node ID</span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">16</span>:16:34 <span class="list">[<span class="keyword">INFO</span>] raft: Initial configuration <span class="list">(<span class="keyword">index=1</span>)</span>: <span class="list">[&#123;Suffrage:Voter ID:33b66ccd-d48f-283d-c9ec-94f2f677c1af Address:127.0.0.1:8300&#125;]</span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">16</span>:16:34 <span class="list">[<span class="keyword">INFO</span>] raft: Node at <span class="number">127.0</span>.0.1:8300 <span class="list">[<span class="keyword">Follower</span>] entering Follower state <span class="list">(<span class="keyword">Leader:</span> <span class="string">""</span>)</span></span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">16</span>:16:34 <span class="list">[<span class="keyword">INFO</span>] serf: EventMemberJoin: Automation.dc1 <span class="number">127.0</span>.0.1</span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">16</span>:16:34 <span class="list">[<span class="keyword">INFO</span>] serf: EventMemberJoin: Automation <span class="number">127.0</span>.0.1</span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">16</span>:16:34 <span class="list">[<span class="keyword">WARN</span>] agent: check <span class="string">"service:web"</span> has the <span class="variable">'script</span>' field, which has been deprecated and replaced with the <span class="variable">'args</span>' field. See https://www.consul.io/docs/agent/checks.html</span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">16</span>:16:34 <span class="list">[<span class="keyword">WARN</span>] agent: check <span class="string">"ping"</span> has the <span class="variable">'script</span>' field, which has been deprecated and replaced with the <span class="variable">'args</span>' field. See https://www.consul.io/docs/agent/checks.html</span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">16</span>:16:34 <span class="list">[<span class="keyword">INFO</span>] agent: Started DNS server <span class="number">127.0</span>.0.1:8600 <span class="list">(<span class="keyword">udp</span>)</span></span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">16</span>:16:34 <span class="list">[<span class="keyword">INFO</span>] agent: Started DNS server <span class="number">127.0</span>.0.1:8600 <span class="list">(<span class="keyword">tcp</span>)</span></span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">16</span>:16:34 <span class="list">[<span class="keyword">INFO</span>] consul: Adding LAN server Automation <span class="list">(<span class="keyword">Addr:</span> tcp/127.0.0.1:8300)</span> <span class="list">(<span class="keyword">DC:</span> dc1)</span></span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">16</span>:16:34 <span class="list">[<span class="keyword">INFO</span>] consul: Handled member-join event for server <span class="string">"Automation.dc1"</span> in area <span class="string">"wan"</span></span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">16</span>:16:34 <span class="list">[<span class="keyword">INFO</span>] agent: Started HTTP server on <span class="number">127.0</span>.0.1:8500 <span class="list">(<span class="keyword">tcp</span>)</span></span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">16</span>:16:34 <span class="list">[<span class="keyword">INFO</span>] agent: started state syncer</span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">16</span>:16:34 <span class="list">[<span class="keyword">WARN</span>] raft: Heartbeat timeout from <span class="string">""</span> reached, starting election</span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">16</span>:16:34 <span class="list">[<span class="keyword">INFO</span>] raft: Node at <span class="number">127.0</span>.0.1:8300 <span class="list">[<span class="keyword">Candidate</span>] entering Candidate state in term <span class="number">2</span></span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">16</span>:16:34 <span class="list">[<span class="keyword">DEBUG</span>] raft: Votes needed: <span class="number">1</span></span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">16</span>:16:34 <span class="list">[<span class="keyword">DEBUG</span>] raft: Vote granted from <span class="number">33</span>b66ccd-d48f-283d-c9ec-94f2f677c1af in term <span class="number">2</span>. Tally: <span class="number">1</span></span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">16</span>:16:34 <span class="list">[<span class="keyword">INFO</span>] raft: Election won. Tally: <span class="number">1</span></span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">16</span>:16:34 <span class="list">[<span class="keyword">INFO</span>] raft: Node at <span class="number">127.0</span>.0.1:8300 <span class="list">[<span class="keyword">Leader</span>] entering Leader state</span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">16</span>:16:34 <span class="list">[<span class="keyword">INFO</span>] consul: cluster leadership acquired</span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">16</span>:16:34 <span class="list">[<span class="keyword">INFO</span>] consul: New leader elected: Automation</span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">16</span>:16:34 <span class="list">[<span class="keyword">DEBUG</span>] consul: Skipping self join check for <span class="string">"Automation"</span> since the cluster is too small</span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">16</span>:16:34 <span class="list">[<span class="keyword">INFO</span>] consul: member <span class="variable">'Automation</span>' joined, marking health alive</span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">16</span>:16:34 <span class="list">[<span class="keyword">DEBUG</span>] Skipping remote check <span class="string">"serfHealth"</span> since it is managed automatically</span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">16</span>:16:34 <span class="list">[<span class="keyword">INFO</span>] agent: Synced service <span class="string">"web"</span></span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">16</span>:16:34 <span class="list">[<span class="keyword">DEBUG</span>] agent: Check <span class="string">"service:web"</span> in sync</span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">16</span>:16:34 <span class="list">[<span class="keyword">INFO</span>] agent: Synced check <span class="string">"ping"</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br></pre></td></tr></table></figure></p>
<p>检查：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation ~]<span class="preprocessor"># curl http:<span class="comment">//localhost:8500/v1/health/state/critical</span></span></span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">"Node"</span>: <span class="string">"Automation"</span>,</span><br><span class="line">        <span class="string">"CheckID"</span>: <span class="string">"ping"</span>,</span><br><span class="line">        <span class="string">"Name"</span>: <span class="string">"ping"</span>,</span><br><span class="line">        <span class="string">"Status"</span>: <span class="string">"critical"</span>,</span><br><span class="line">        <span class="string">"Notes"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="string">"Output"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="string">"ServiceID"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="string">"ServiceName"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="string">"ServiceTags"</span>: [],</span><br><span class="line">        <span class="string">"Definition"</span>: &#123;&#125;,</span><br><span class="line">        <span class="string">"CreateIndex"</span>: <span class="number">7</span>,</span><br><span class="line">        <span class="string">"ModifyIndex"</span>: <span class="number">7</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line">You have <span class="keyword">new</span> mail in /var/spool/mail/root</span><br><span class="line">[root@Automation ~]<span class="preprocessor"># curl http:<span class="comment">//localhost:8500/v1/health/state/critical</span></span></span><br><span class="line">[]</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Consul - 安装运行]]></title>
      <url>http://izheyi.com/2017/12/25/Consul-%E5%85%A5%E9%97%A8/</url>
      <content type="html"><![CDATA[<p>工作中用到Consul，把基本的概念和使用研究一下。</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="constant">@Automation</span> ~]<span class="preprocessor"># cd /usr/local/bin</span></span><br><span class="line">[root<span class="constant">@Automation</span> bin]<span class="preprocessor"># sudo wget https://releases.hashicorp.com/consul/1.0.2/consul_1.0.2_linux_386.zip</span></span><br><span class="line">[root<span class="constant">@Automation</span> bin]<span class="preprocessor"># sudo unzip consul_1.0.2_linux_386.zip</span></span><br></pre></td></tr></table></figure>
<p>验证：<br><figure class="highlight fsharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation bin]# consul</span><br><span class="line">Usage: consul [--version] [--help] &lt;command&gt; <span class="annotation">[&lt;args&gt;]</span></span><br><span class="line"></span><br><span class="line">Available commands are:</span><br><span class="line">    agent          Runs a Consul agent</span><br><span class="line">    catalog        Interact <span class="keyword">with</span> the catalog</span><br><span class="line">    event          Fire a <span class="keyword">new</span> event</span><br><span class="line">    exec           Executes a command on Consul nodes</span><br><span class="line">    force-leave    Forces a <span class="keyword">member</span> <span class="keyword">of</span> the cluster <span class="keyword">to</span> enter the <span class="string">"left"</span> state</span><br><span class="line">    info           Provides debugging information <span class="keyword">for</span> operators.</span><br><span class="line">    join           Tell Consul agent <span class="keyword">to</span> join cluster</span><br><span class="line">    keygen         Generates a <span class="keyword">new</span> encryption key</span><br><span class="line">    keyring        Manages gossip layer encryption keys</span><br><span class="line">    kv             Interact <span class="keyword">with</span> the key-value store</span><br><span class="line">    leave          Gracefully leaves the Consul cluster <span class="keyword">and</span> shuts down</span><br><span class="line">    lock           Execute a command holding a lock</span><br><span class="line">    maint          Controls node <span class="keyword">or</span> service maintenance mode</span><br><span class="line">    members        Lists the members <span class="keyword">of</span> a Consul cluster</span><br><span class="line">    monitor        Stream logs from a Consul agent</span><br><span class="line">    operator       Provides cluster-level tools <span class="keyword">for</span> Consul operators</span><br><span class="line">    reload         Triggers the agent <span class="keyword">to</span> reload configuration files</span><br><span class="line">    rtt            Estimates network round trip time between nodes</span><br><span class="line">    snapshot       Saves, restores <span class="keyword">and</span> inspects snapshots <span class="keyword">of</span> Consul server state</span><br><span class="line">    validate       Validate config files/directories</span><br><span class="line">    version        Prints the Consul version</span><br><span class="line">    watch          Watch <span class="keyword">for</span> changes <span class="keyword">in</span> Consul</span><br></pre></td></tr></table></figure></p>
<h1 id="运行代理"><a href="#运行代理" class="headerlink" title="运行代理"></a>运行代理</h1><p>在Consul安装完成后，要先运行代理。该代理可以以服务器或者客户端模式运行。每个数据中心必须有至少一个服务器，不过一个集群推荐3或5个服务器。</p>
<h2 id="启动代理"><a href="#启动代理" class="headerlink" title="启动代理"></a>启动代理</h2><p>通过Docke启动Consul容器<br><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="list">[<span class="keyword">root@Automation</span> bin]# consul agent -dev</span><br><span class="line">==&gt; Starting Consul agent...</span><br><span class="line">==&gt; Consul agent running!</span><br><span class="line">           Version: <span class="variable">'v1.0.2</span>'</span><br><span class="line">           Node ID: <span class="variable">'a1ed3e1e-d9b2-579b-bdcc-d6fb13a2b3e3</span>'</span><br><span class="line">         Node name: <span class="variable">'Automation</span>'</span><br><span class="line">        Datacenter: <span class="variable">'dc1</span>' <span class="list">(<span class="keyword">Segment:</span> <span class="variable">'&lt;all&gt;</span>')</span></span><br><span class="line">            Server: true <span class="list">(<span class="keyword">Bootstrap:</span> false)</span></span><br><span class="line">       Client Addr: <span class="list">[<span class="keyword">127.0.0.1</span>] <span class="list">(<span class="keyword">HTTP:</span> <span class="number">8500</span>, HTTPS: <span class="number">-1</span>, DNS: <span class="number">8600</span>)</span></span><br><span class="line">      Cluster Addr: <span class="number">127.0</span>.0.1 <span class="list">(<span class="keyword">LAN:</span> <span class="number">8301</span>, WAN: <span class="number">8302</span>)</span></span><br><span class="line">           Encrypt: Gossip: false, TLS-Outgoing: false, TLS-Incoming: false</span><br><span class="line"></span><br><span class="line">==&gt; Log data will now stream in as it occurs:</span><br><span class="line"></span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">15</span>:25:25 <span class="list">[<span class="keyword">DEBUG</span>] Using random ID <span class="string">"a1ed3e1e-d9b2-579b-bdcc-d6fb13a2b3e3"</span> as node ID</span><br><span class="line">    <span class="number">2017/12</span>/25 <span class="number">15</span>:25:25 <span class="list">[<span class="keyword">INFO</span>] raft: Initial configuration <span class="list">(<span class="keyword">index=1</span>)</span>: <span class="list">[&#123;Suffrage:Voter ID:a1ed3e1e-d9b2-579b-bdcc-d6fb13a2b3e3 Address:127.0.0.1:8300&#125;]</span></span></span></span></span></span><br></pre></td></tr></table></figure></p>
<h2 id="集群成员"><a href="#集群成员" class="headerlink" title="集群成员"></a>集群成员</h2><p>在另一个终端中运行 consul members ,你能看到Consul集群所有的节点。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/ <span class="preprocessor"># consul members</span></span><br><span class="line">Node          Address         Status  Type    Build  Protocol  DC   Segment</span><br><span class="line">fd383e11f665  <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8301</span>  alive   server  <span class="number">1.0</span><span class="number">.2</span>  <span class="number">2</span>         dc1  &lt;all&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="停止代理"><a href="#停止代理" class="headerlink" title="停止代理"></a>停止代理</h2><p>这个比较容易，Ctrl+C就搞定了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[工作十年感想]]></title>
      <url>http://izheyi.com/2017/12/24/%E5%B7%A5%E4%BD%9C%E5%8D%81%E5%B9%B4%E6%84%9F%E6%83%B3/</url>
      <content type="html"><![CDATA[<p><img src="/images/shenghuo/10.jpg" alt=""><br>来北京十年了，也没能混出别人眼中所谓的人模狗样，但话说回来为什么要活给别人看呢。经历了找工作时的彷徨，闺女出生生病的无助，买房和孩子上学的纠结……但这一路走来更多的是幸运，感恩刚来北京管我吃住行的好兄弟，感恩实习就进了知名外企，感恩父母和小丁妈一直的支持、付出和理解…….感恩这一路走来所有帮助我的家人和朋友，很享受现在的工作和生活，很知足。</p>
<p>想当初大四上学期期末，就傻了吧唧的带了200块钱一个人就来了，现在给我两万估计也不定有敢来的胆量，吃住行基本都是朋友的，本天真的以为你有需求我会，工作应该好找，找了两周不太行，可能也是因为还没毕业的缘故，妈蛋国内的公司不要我，那我就找个外企的实习生好了，我清楚的记得光面试就4轮，还傻乎乎的问你们实习是给钱的吧@_@我清楚的记得给人要2000人家说我们4000起⊙﹏⊙我记得很清楚2007.12.24圣诞节前夕第一天上班，真正踏入了职场。</p>
<p>朋友和同学都说我运气好，实习都能进外企，相比他们国内正式员工还要高的工资，更让我感到幸运的是，遇见了对的公司和人，教会了我很多东西，什么是专业的做事，什么是做人要低调但做事要适当高调，让自己对职场有了全面的认识，对从事行业有了更系统的学习和认知，感谢相遇，感恩所教！</p>
<p>也许是第一份工作的缘故，虽然中间也换了工作，自己还出去‘瞎搞’了一年，但十年的工作基本都待在了外企，喜欢老外的简单思维，喜欢外企的工作和生活平衡，喜欢外企的更人性化一些。</p>
<p>中间公司因为我通读了一本书而面试通过(看吧，读书的重要性^_^人生本来就是一个厚积薄发的过程)，又阴差阳错的接管了自动化，朋友也在技术和思路上给了我很大的帮助，有幸遇见价值观相同的美国boss，还吵吵着说我是典型的美国人。这段时间让我学会了总结，形成自己在测试上的知识体系，同时也试着扩大自己的影响力。</p>
<p>现在的工作也是无心插柳(本来已有Offer)，猎头朋友找我，碍于情面，给了简历，这事就成了，更有意思的是我呆了几个月，公司上市，模式变革，在新的岗位上有很多新东西要学(这也是当初选择这儿的原因之一，能让自己在未知的领域有新的成长)，时间虽不长却也快两年，也学到了很多，希望自己能在各方面再有一个提升，成就未来更好的自己。</p>
<p>30多岁的我回顾这十年，职场上自己的起点太过幸运，每段经历都能遇见认可自己，给自己很大帮助的领导，中间也迷茫过，也妒忌过，也动摇过，也曾天真的以为优秀的人只比我大几岁，过两年我也可以变成那样。最终还是意识到要一直坚持做自己，不从众，不跟风，去做自己喜欢且对的事，现在回首来时路，这十年来似乎每一步都走对了，但当时的选择只是追随自己内心最真实的想法。虽然不优秀，但一直不甘现状并为之努力。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[2017圣诞节小画展]]></title>
      <url>http://izheyi.com/2017/12/23/2017%E5%9C%A3%E8%AF%9E%E8%8A%82%E5%B0%8F%E7%94%BB%E5%B1%95/</url>
      <content type="html"><![CDATA[<p>刚学了几节课，做出来的东西还是不错的。</p>
<iframe height="498" width="510" src="http://player.youku.com/embed/XMzI3NzM5Nzk2OA==" frameborder="0" 'allowfullscreen'=""></iframe>

<h1 id="小朋友画作展示"><a href="#小朋友画作展示" class="headerlink" title="小朋友画作展示"></a>小朋友画作展示</h1><p><img src="/images/izheyi/2017/12/5.JPG" alt=""><br><img src="/images/izheyi/2017/12/6.JPG" alt=""><br><img src="/images/izheyi/2017/12/7.JPG" alt=""><br><img src="/images/izheyi/2017/12/8.JPG" alt=""><br><img src="/images/izheyi/2017/12/9.JPG" alt=""><br><img src="/images/izheyi/2017/12/10.JPG" alt=""><br><img src="/images/izheyi/2017/12/11.JPG" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Consul - 简介]]></title>
      <url>http://izheyi.com/2017/12/23/Consul-%E5%9F%BA%E7%A1%80/</url>
      <content type="html"><![CDATA[<h1 id="什么是Consul"><a href="#什么是Consul" class="headerlink" title="什么是Consul"></a>什么是Consul</h1><p>Consul是一个服务管理软件，具体请参考<a href="https://www.consul.io/intro/index.html" target="_blank" rel="external">Consul</a><br>Consul是强一致性的数据存储，使用gossip形成动态集群。它提供分级键/值存储方式，不仅可以存储数据，而且可以用于注册器件事各种任务，从发送数据改变通知到运行健康检查和自定义命令，具体如何取决于它们的输出。</p>
<h2 id="注册服务"><a href="#注册服务" class="headerlink" title="注册服务"></a>注册服务</h2><p>一个服务将其位置信息在“中心注册节点”注册的过程。该服务一般会将它的主机IP地址以及端口号进行注册，有时也会有服务访问的认证信息，使用协议，版本号，以及关于环境的一些细节信息。</p>
<h2 id="服务发现"><a href="#服务发现" class="headerlink" title="服务发现"></a>服务发现</h2><p>服务发现可以让一个应用或者组件发现其运行环境以及其它应用或组件的信息。用户配置一个服务发现工具就可以将实际容器跟运行配置分离开。常见配置信息包括：ip、端口号、名称等</p>
<h2 id="检查健康"><a href="#检查健康" class="headerlink" title="检查健康"></a>检查健康</h2><p>Consul客户端可以提供与给定服务相关的健康检查（Web服务器返回200 ok）或者本地节点（“内存利用率低于90%”）。这些信息可以监控集群的运行情况，并且使访问远离不健康的主机组件。</p>
<h1 id="术语"><a href="#术语" class="headerlink" title="术语"></a>术语</h1><ul>
<li><strong>Agent：</strong>Agent是长期运行在每个consul集群成员节点上守护进程。通过命令consul agent启动。Agent有client和server两种模式。由于每个节点都必须运行agent，所有节点要么是client要么是server。所有的Agent都可以可以调用DNS或HTTP API，并负责检查和维护服务同步。</li>
<li><strong>Client：</strong> 客户端可以将所有RPC请求转发到服务器的代理。客户端是相对无状态的。客户端执行的唯一后台活动是LANgossip池。它消耗最小的资源开销和少量的网络带宽。</li>
<li><strong>Server：</strong> 服务器端是具有扩展的功能的代理，它主要参与维护集群状态，响应RPC查询，与其他数据中心交换WAN gossip ，以及向上级或远程数据中心转发查询。</li>
<li><strong>Datacenter：</strong>  数据中心的定义似乎是显而易见的，有一些细节是必须考虑的。例如，在EC2，多个可用性区域是否被认为组成了单一的数据中心？我们定义数据中心是在同一个网络环境中——私有的，低延迟，高带宽。这不包括基于公共互联网环境，但是对于我们而言，在同一个EC2的多个可用性区域会被认为是一个的数据中心。</li>
<li><strong>Consensus：</strong> 意味着leader election协议，以及事务的顺序。由于这些事务是基于一个有限状态机，consensus的定义意味着复制状态机的一致性。</li>
<li><strong>Gossip： </strong>consul是建立在Serf之上，提供了完成的Gossip协议，用于成员维护故障检测、事件广播。详细细节参见gossip documentation。这足以知道gossip是基于UDP协议实现随机的节点到节点的通信，主要是在UDP。</li>
<li><strong>LAN Gossip：</strong>指的是LAN gossip pool，包含位于同一个局域网或者数据中心的节点。</li>
<li><strong>WAN Gossip：</strong> 指的是WAN gossip pool，只包含server节点，这些server主要分布在不同的数据中心或者通信是基于互联网或广域网的。</li>
<li><strong>RPC：</strong> 远程过程调用。是允许client请求服务器的请求/响应机制。</li>
</ul>
<h1 id="架构图"><a href="#架构图" class="headerlink" title="架构图"></a>架构图</h1><p><img src="/images/consul/arch.jpg" alt=""></p>
<ol>
<li>Client和Client之间的LAN Gossip</li>
<li>Client将RPC请求发至Server, Follower Server将请求转发至Leader节点</li>
<li>Server之间的选举行为</li>
<li>Datacenter之间的WAN Gossip</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Docker-Machine]]></title>
      <url>http://izheyi.com/2017/12/22/Docker-Machine/</url>
      <content type="html"><![CDATA[<p>做为Docker容器集群管理三剑客之一的Docker Machine大大简化了Docker主机部署的复杂度，极大的方便了开发者管理分布式Docker环境。</p>
<h2 id="创建本地主机实例"><a href="#创建本地主机实例" class="headerlink" title="创建本地主机实例"></a>创建本地主机实例</h2><p>使用virtualbox类型的驱动，创建一台Docker主机，命名为qa。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ docker-machine.exe <span class="operator"><span class="keyword">create</span> -<span class="keyword">d</span> virtualbox qa</span><br><span class="line">Running pre-<span class="keyword">create</span> checks...</span><br><span class="line">Creating machine...</span><br><span class="line">(qa) Copying <span class="keyword">C</span>:\<span class="keyword">Users</span>\youfei.hu\.docker\machine\<span class="keyword">cache</span>\boot2docker.iso <span class="keyword">to</span> <span class="keyword">C</span>:\<span class="keyword">Users</span>\youfei.hu\.docker\mach                                                                                                                                                   ine\machines\qa\boot2docker.iso...</span><br><span class="line">(qa) Creating VirtualBox VM...</span><br><span class="line">(qa) Creating SSH <span class="keyword">key</span>...</span><br><span class="line">(qa) <span class="keyword">Starting</span> the VM...</span><br><span class="line">(qa) <span class="keyword">Check</span> network <span class="keyword">to</span> re-<span class="keyword">create</span> <span class="keyword">if</span> needed...</span><br><span class="line">(qa) Windows might ask <span class="keyword">for</span> the permission <span class="keyword">to</span> configure a dhcp <span class="keyword">server</span>. Sometimes, such confirmation windo                                                                                                                                                                       w <span class="keyword">is</span> minimized <span class="keyword">in</span> the taskbar.</span><br><span class="line">(qa) Waiting <span class="keyword">for</span> an IP...</span><br><span class="line">Waiting <span class="keyword">for</span> machine <span class="keyword">to</span> be running, this may take a few minutes...</span><br><span class="line">Detecting operating <span class="keyword">system</span> <span class="keyword">of</span> created <span class="keyword">instance</span>...</span><br><span class="line">Waiting <span class="keyword">for</span> SSH <span class="keyword">to</span> be available...</span><br><span class="line">Detecting the provisioner...</span><br><span class="line">Provisioning <span class="keyword">with</span> boot2docker...</span><br><span class="line">Copying certs <span class="keyword">to</span> the <span class="keyword">local</span> machine <span class="keyword">directory</span>...</span><br><span class="line">Copying certs <span class="keyword">to</span> the remote machine...</span><br><span class="line">Setting Docker configuration <span class="keyword">on</span> the remote daemon...</span><br><span class="line">Checking <span class="keyword">connection</span> <span class="keyword">to</span> Docker...</span><br><span class="line">Docker <span class="keyword">is</span> up <span class="keyword">and</span> running!</span><br><span class="line"><span class="keyword">To</span> see how <span class="keyword">to</span> <span class="keyword">connect</span> your Docker <span class="keyword">Client</span> <span class="keyword">to</span> the Docker <span class="keyword">Engine</span> running <span class="keyword">on</span> this <span class="keyword">virtual</span> machine, run: <span class="keyword">C</span>:\Program Files\Docker Toolbox\docker-machine.exe env qa</span></span><br></pre></td></tr></table></figure></p>
<p>验证创建成功<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ docker-machine.exe ls</span><br><span class="line">NAME      ACTIVE   DRIVER       STATE     URL                         SWARM   DOCKER        ERRORS</span><br><span class="line"><span class="keyword">default</span>   -        virtualbox   Running   <span class="string">tcp:</span><span class="comment">//192.168.99.100:2376           v17.09.1-ce</span></span><br><span class="line">qa        -        virtualbox   Running   <span class="string">tcp:</span><span class="comment">//192.168.99.102:2376           v17.09.1-ce</span></span><br><span class="line">test      -        virtualbox   Running   <span class="string">tcp:</span><span class="comment">//192.168.99.101:2376           v17.09.1-ce</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Docker - Repository]]></title>
      <url>http://izheyi.com/2017/12/09/Docker-Repository/</url>
      <content type="html"><![CDATA[<p>Docker 仓库用来保存镜像，可以理解为代码控制中的代码仓库。</p>
<h1 id="公有仓库"><a href="#公有仓库" class="headerlink" title="公有仓库"></a>公有仓库</h1><p>Docker官方的一个公共仓库<a href="https://hub.docker.com/" target="_blank" rel="external">Docker Hub</a></p>
<p>可以注册登录，去进行仓库的管理。也可以通过命令行的交互方式进行登录管理。</p>
<h1 id="私有仓库"><a href="#私有仓库" class="headerlink" title="私有仓库"></a>私有仓库</h1><p>Dockers不仅提供了一个中央仓库，同时也允许我们使用registry搭建本地私有仓库。<br>‘docker-registry’是官方提供的工具，可以用于构建私有的镜像仓库。</p>
<h2 id="安装运行docker-registry"><a href="#安装运行docker-registry" class="headerlink" title="安装运行docker-registry"></a>安装运行docker-registry</h2><ol>
<li><p>下载resistry镜像</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker<span class="annotation">@default</span>:~$ docker image pull registry</span><br><span class="line">Using <span class="keyword">default</span> <span class="string">tag:</span> latest</span><br><span class="line"><span class="string">latest:</span> Pulling from library/registry</span><br><span class="line"><span class="string">ab7e51e37a18:</span> Pull complete</span><br><span class="line"><span class="string">c8ad8919ce25:</span> Pull complete</span><br><span class="line"><span class="number">5808405</span><span class="string">bc62f:</span> Pull complete</span><br><span class="line"><span class="string">f6000d7b276c:</span> Pull complete</span><br><span class="line"><span class="string">f792fdcd8ff6:</span> Pull complete</span><br><span class="line"><span class="string">Digest:</span> <span class="string">sha256:</span><span class="number">9</span>d295999d330eba2552f9c78c9f59828af5c9a9c15a3fbd1351df03eaad04c6a</span><br><span class="line"><span class="string">Status:</span> Downloaded newer image <span class="keyword">for</span> <span class="string">registry:</span>latest</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动容器</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker@<span class="keyword">default</span>:~$ docker container run -d -p <span class="number">5000</span>:<span class="number">5000</span> registry</span><br><span class="line"><span class="number">36</span>eddf7acb88e4cc3972c7070ef00d444930ff099dce6e150e504849a429e595</span><br><span class="line">docker@<span class="keyword">default</span>:~$ docker container ls -a</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                        PORTS                    NAMES</span><br><span class="line"><span class="number">36</span>eddf7acb88        registry            <span class="string">"/entrypoint.sh /e..."</span>   <span class="number">15</span> seconds ago      Up <span class="number">14</span> seconds                 <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">5000</span>-&gt;<span class="number">5000</span>/tcp   nifty_jackson</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>默认情况下，会将仓库存放于容器内的/tmp/registry目录下，这样如果容器被删除，则存放于容器中的镜像也会丢失，所以我们一般情况下会指定本地一个目录挂载到容器内的/tmp/registry下，如下：<br><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker container run -d -p <span class="number">5000</span>:<span class="number">5000</span> -v /opt/data/<span class="keyword">registry</span>:/tmp/<span class="keyword">registry</span> <span class="keyword">registry</span></span><br></pre></td></tr></table></figure></p>
<h2 id="私有仓库管理"><a href="#私有仓库管理" class="headerlink" title="私有仓库管理"></a>私有仓库管理</h2><ol>
<li><p>上传<br>a. 这里用’hello-world’做例子（已经下载了在本地）。<br>b. 接着修改一下此镜像的Tag(格式：<code>docker tag IMAGE[:TAG] [REGISTRY_HOST[:REGISTRY_PORT]/]REPOSITORY[:TAG]</code>):<br><em>在一个Server上做的测试，所以Host是本机</em></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker@<span class="keyword">default</span>:~$ docker image tag hello-world <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">5000</span>/hello-world:v5</span><br><span class="line">docker@<span class="keyword">default</span>:~$ docker image ls -a</span><br><span class="line">REPOSITORY                   TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">5000</span>/hello-world   v5                  f2a91732366c        <span class="number">2</span> weeks ago         <span class="number">1.85</span>kB</span><br><span class="line">hello-world                  latest              f2a91732366c        <span class="number">2</span> weeks ago         <span class="number">1.85</span>kB</span><br></pre></td></tr></table></figure>
<p>c. 接下来把打了tag的镜像上传到私有仓库。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker@<span class="keyword">default</span>:~$ docker image push <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">5000</span>/hello-world</span><br><span class="line">The push refers to a repository [<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">5000</span>/hello-world]</span><br><span class="line">f999ae22f308: Pushed</span><br><span class="line">v5: digest: sha256:<span class="number">8072</span>a54ebb3bc136150e2f2860f00a7bf45f13eeb917cca2430fcd0054c8e51b size: <span class="number">524</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>搜索<br>在Private Registry2中查看或检索Repository或images，将不能用docker search，会报下边的错误</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker@<span class="keyword">default</span>:~$ docker search <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">5000</span>/hello-world</span><br><span class="line">Error response from daemon: Unexpected status code <span class="number">404</span></span><br></pre></td></tr></table></figure>
<p>但通过v2版本的API，我们可以实现相同目的，必须按照<code>IP:port/v2/_catalog</code>格式：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker@<span class="keyword">default</span>:~$ curl <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">5000</span>/v2/_catalog</span><br><span class="line">&#123;<span class="string">"repositories"</span>:[<span class="string">"hello-world"</span>]&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>下载<br>a. 先删除已有镜像</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker@<span class="keyword">default</span>:~$ docker image rm <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">5000</span>/hello-world:v5</span><br><span class="line">Untagged: <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">5000</span>/hello-world:v5</span><br><span class="line">Untagged: <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">5000</span>/hello-world@sha256:<span class="number">8072</span>a54ebb3bc136150e2f2860f00a7bf45f13eeb917cca2430fcd0054c8e51b</span><br><span class="line">docker@<span class="keyword">default</span>:~$ docker image ls -a</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">hello-world         latest              f2a91732366c        <span class="number">2</span> weeks ago         <span class="number">1.85</span>kB</span><br></pre></td></tr></table></figure>
<p>b. 再pull验证</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ocker@<span class="keyword">default</span>:~$ docker image pull <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">5000</span>/hello-world:v5</span><br><span class="line">v5: Pulling from hello-world</span><br><span class="line">Digest: sha256:<span class="number">8072</span>a54ebb3bc136150e2f2860f00a7bf45f13eeb917cca2430fcd0054c8e51b</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">5000</span>/hello-world:v5</span><br><span class="line">docker@<span class="keyword">default</span>:~$ docker image ls -a</span><br><span class="line">REPOSITORY                   TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">5000</span>/hello-world   v5                  f2a91732366c        <span class="number">2</span> weeks ago         <span class="number">1.85</span>kB</span><br><span class="line">hello-world                  latest              f2a91732366c        <span class="number">2</span> weeks ago         <span class="number">1.85</span>kB</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python read remote file from linux server ]]></title>
      <url>http://izheyi.com/2017/12/07/Python-read-remote-file-from-linux-server/</url>
      <content type="html"><![CDATA[<p>自动化要读取Server上的文件来判断Json的正确与否，还是通过Paramiko实现，这里一个简单例子：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    hostname = <span class="string">'xxx'</span></span><br><span class="line">    port = <span class="number">22</span></span><br><span class="line">    username = <span class="string">'xxx'</span></span><br><span class="line">    password = <span class="string">'xxx'</span></span><br><span class="line"></span><br><span class="line">    s = paramiko.<span class="function"><span class="title">SSHClient</span><span class="params">()</span></span></span><br><span class="line">    s.<span class="function"><span class="title">set_missing_host_key_policy</span><span class="params">(paramiko.AutoAddPolicy()</span></span>)</span><br><span class="line">    s.<span class="function"><span class="title">connect</span><span class="params">(hostname, port, username, password)</span></span></span><br><span class="line"></span><br><span class="line">    sftp_client = s.<span class="function"><span class="title">open_sftp</span><span class="params">()</span></span></span><br><span class="line">    remote_file = sftp_client.<span class="function"><span class="title">open</span><span class="params">(<span class="string">'/tmp/file'</span>)</span></span></span><br><span class="line">    try:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> remote_file:</span><br><span class="line">            print line</span><br><span class="line">    finally:</span><br><span class="line">        remote_file.<span class="function"><span class="title">close</span><span class="params">()</span></span></span><br><span class="line">    	s.<span class="function"><span class="title">close</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Docker - Dockerfile Customize Image]]></title>
      <url>http://izheyi.com/2017/12/02/Docker-Dockerfile-Customize-Image/</url>
      <content type="html"><![CDATA[<p>镜像的定制实际上就是定制每一层所添加的配置、文件。<code>Dockerfile</code>是一个文本文件，其内包含了一条条的指令，每一条指令构建一层，因此每一条指令的内容，就是描述该层应当如何构建。</p>
<h1 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h1><p>例子：<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">FROM</span> nginx</span><br><span class="line"><span class="built_in">RUN</span> <span class="bash"><span class="built_in">echo</span> <span class="string">'&lt;h1&gt;Hello, Docker!&lt;/h1&gt;'</span> &gt; /usr/share/nginx/html/index.html</span></span><br></pre></td></tr></table></figure></p>
<p>这里只介绍两个最基本的，还有很多，用到的时候再学习。</p>
<h2 id="From"><a href="#From" class="headerlink" title="From"></a>From</h2><p>指定基础image，在其上进行定制，必须要有且是第一条指令。</p>
<h2 id="Run"><a href="#Run" class="headerlink" title="Run"></a>Run</h2><p>是用来执行命令行命令的。主要有两种格式：</p>
<ul>
<li>Shell<br><code>RUN &lt;命令&gt;</code>，就像直接在命令行中输入的命令一样。</li>
<li>Exec<br><code>RUN [&quot;可执行文件&quot;, &quot;参数1&quot;, &quot;参数2&quot;]</code>，这更像是函数调用中的格式。</li>
</ul>
<p><em>Union FS 是有最大层数限制的，所以别用太多Run命令建很多层，如果有多条命令要执行，使用 &amp;&amp; 将各个所需命令串联起来。</em><br><em>Dockerfile 支持 Shell 类的行尾添加 \ 的命令换行方式，以及行首 # 进行注释的格式。</em></p>
<p>到此，要定制的内容就完成了，下面就是构建了。</p>
<h1 id="构建"><a href="#构建" class="headerlink" title="构建"></a>构建</h1><p>用 docker build 命令来构建镜像。</p>
<p>例子：<br><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker@<span class="keyword">default</span>:~/myngix$ docker build -t nginx:v5 .</span><br><span class="line">Sending build context <span class="keyword">to</span> Docker daemon  <span class="number">2.048</span>kB</span><br><span class="line"><span class="keyword">Step</span> <span class="number">1</span>/<span class="number">2</span> : <span class="keyword">FROM</span> nginx</span><br><span class="line"> ---&gt; <span class="number">9e7424</span>e5dbae</span><br><span class="line"><span class="keyword">Step</span> <span class="number">2</span>/<span class="number">2</span> : RUN echo <span class="comment">'<span class="xmlDocTag">&lt;h1&gt;</span>Hello, Docker!<span class="xmlDocTag">&lt;/h1&gt;</span>' &gt; /usr/share/nginx/html/index.html</span></span><br><span class="line"> ---&gt; Running <span class="keyword">in</span> <span class="number">0</span>f77e86fba64</span><br><span class="line"> ---&gt; d725428dfdad</span><br><span class="line">Removing intermediate container <span class="number">0</span>f77e86fba64</span><br><span class="line">Successfully built d725428dfdad</span><br><span class="line">Successfully tagged nginx:v5</span><br></pre></td></tr></table></figure></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker@<span class="keyword">default</span>:~/myngix$ docker image ls -a</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">nginx               v5                  d725428dfdad        <span class="number">16</span> seconds ago      <span class="number">108</span>MB</span><br><span class="line">nginx               latest              <span class="number">9e7424</span>e5dbae        <span class="number">2</span> weeks ago         <span class="number">108</span>MB</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Docker-Container]]></title>
      <url>http://izheyi.com/2017/11/28/Docker-Container/</url>
      <content type="html"><![CDATA[<p>Docker运行容器前需要本地存在对应的镜像，如果镜像不存在本地，Docker会从镜像仓库下载（默认是Docker Hub）。<br>当利用<code>docker run</code>来创建容器时，Docker在后台运行的标准操作包括：</p>
<ul>
<li>检查本地是否存在指定的镜像，不存在就从公有仓库下载</li>
<li>利用镜像创建并启动一个容器</li>
<li>分配一个文件系统，并在只读的镜像层外面挂载一层可读写层</li>
<li>从宿主主机配置的网桥接口中桥接一个虚拟接口到容器中去</li>
<li>从地址池配置一个 ip 地址给容器</li>
<li>执行用户指定的应用程序</li>
<li>执行完毕后容器被终止</li>
</ul>
<h1 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h1><p>启动容器有两种方式，一种是基于镜像新建一个容器并启动，另外一个是将在终止状态（stopped）的容器重新启动。</p>
<h2 id="新建启动"><a href="#新建启动" class="headerlink" title="新建启动"></a>新建启动</h2><p>所用的命令 <code>docker run</code>。<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker<span class="variable">@default</span><span class="symbol">:~</span><span class="variable">$ </span>docker container run centos /bin/echo <span class="string">'hello world'</span></span><br><span class="line">hello world</span><br></pre></td></tr></table></figure></p>
<p>经常用的Options：-it –rm<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker<span class="variable">@default</span><span class="symbol">:~</span><span class="variable">$ </span>docker run -it centos /bin/bash</span><br><span class="line">[root<span class="variable">@6d1e9498e298</span> /]<span class="comment"># pwd</span></span><br><span class="line">/</span><br></pre></td></tr></table></figure></p>
<p>需要让Docker在后台运行而不是直接把执行命令的结果输出在当前宿主机下，可以通过添加<code>-d</code>参数来实现。</p>
<h2 id="终止的容器启动"><a href="#终止的容器启动" class="headerlink" title="终止的容器启动"></a>终止的容器启动</h2><p>直接将一个已经终止的容器启动运行, 命令<code>docker container start</code>。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">docker@default:~$ docker container ls -a</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                       PORTS               NAMES</span><br><span class="line">6d1e9498e298        centos              "/bin/bash"              2 minutes ago       Exited (130) 5 seconds ago                       hardcore_mclean</span><br><span class="line">docker@default:~$ docker container <span class="operator"><span class="keyword">start</span> <span class="comment">--help</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Usage</span>:  docker <span class="keyword">container</span> <span class="keyword">start</span> [OPTIONS] <span class="keyword">CONTAINER</span> [<span class="keyword">CONTAINER</span>...]</span><br><span class="line"></span><br><span class="line"><span class="keyword">Start</span> one <span class="keyword">or</span> more stopped containers</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -a, <span class="comment">--attach               Attach STDOUT/STDERR and forward signals</span></span><br><span class="line">      <span class="comment">--detach-keys string   Override the key sequence for detaching a container</span></span><br><span class="line">      <span class="comment">--help                 Print usage</span></span><br><span class="line">  -<span class="keyword">i</span>, <span class="comment">--interactive          Attach container's STDIN</span></span><br><span class="line">docker@<span class="keyword">default</span>:~$ docker <span class="keyword">start</span> <span class="number">6</span>d1e9498e298</span><br><span class="line"><span class="number">6</span>d1e9498e298</span><br><span class="line">docker@<span class="keyword">default</span>:~$ docker <span class="keyword">container</span> ls -a</span><br><span class="line"><span class="keyword">CONTAINER</span> <span class="keyword">ID</span>        IMAGE               COMMAND                  CREATED             <span class="keyword">STATUS</span>                     PORTS               <span class="keyword">NAMES</span></span><br><span class="line"><span class="number">6</span>d1e9498e298        centos              <span class="string">"/bin/bash"</span>              <span class="number">5</span> minutes ago       Up <span class="number">11</span> seconds                                  hardcore_mclean</span></span><br></pre></td></tr></table></figure></p>
<p>此外，<code>docker restart</code>命令会将一个运行态的容器终止，然后再重新启动它。</p>
<a id="more"></a>
<h1 id="终止容器"><a href="#终止容器" class="headerlink" title="终止容器"></a>终止容器</h1><p>终止一个运行中的容器, 命令<code>docker container stop</code>。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker@<span class="keyword">default</span>:~$ docker container ls -a</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                          PORTS               NAMES</span><br><span class="line"><span class="number">6</span>d1e9498e298        centos              <span class="string">"/bin/bash"</span>              <span class="number">14</span> minutes ago      Up <span class="number">35</span> seconds                                       hardcore_mclean</span><br><span class="line">docker@<span class="keyword">default</span>:~$ docker container stop <span class="number">6</span>d1e9498e298</span><br><span class="line"><span class="number">6</span>d1e9498e298</span><br><span class="line">docker@<span class="keyword">default</span>:~$ docker container ls -a</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                       PORTS               NAMES</span><br><span class="line"><span class="number">6</span>d1e9498e298        centos              <span class="string">"/bin/bash"</span>              <span class="number">15</span> <span class="function">minutes ago      <span class="title">Exited</span> <span class="params">(<span class="number">137</span>)</span> 2 seconds ago                       hardcore_mclean</span></span><br></pre></td></tr></table></figure></p>
<h1 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h1><p><code>docker container attach</code>命令或<code>docker container exec</code>命令，推荐大家使用 docker exec 命令，因为<code>docker container attach</code>命令exit，会导致容器的停止， 以<code>docker container exec</code>命令进入就不会导致容器的停止。<br><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">docker@default:~$ docker container exec --help</span><br><span class="line"></span><br><span class="line">Usage:  docker container exec [OPTIONS] CONTAINER COMMAND [ARG...]</span><br><span class="line"></span><br><span class="line">Run a command in a running container</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -<span class="ruby">d, --detach               <span class="constant">Detached</span> <span class="symbol">mode:</span> run command <span class="keyword">in</span> the background</span><br><span class="line"></span>      -<span class="ruby">-detach-keys string   <span class="constant">Override</span> the key sequence <span class="keyword">for</span> detaching a container</span><br><span class="line"></span>  -<span class="ruby">e, --env list             <span class="constant">Set</span> environment variables</span><br><span class="line"></span>      -<span class="ruby">-help                 <span class="constant">Print</span> usage</span><br><span class="line"></span>  -<span class="ruby">i, --interactive          <span class="constant">Keep</span> <span class="constant">STDIN</span> open even <span class="keyword">if</span> <span class="keyword">not</span> attached</span><br><span class="line"></span>      -<span class="ruby">-privileged           <span class="constant">Give</span> extended privileges to the command</span><br><span class="line"></span>  -<span class="ruby">t, --tty                  <span class="constant">Allocate</span> a pseudo-<span class="constant">TTY</span></span><br><span class="line"></span>  -<span class="ruby">u, --user string          <span class="constant">Username</span> <span class="keyword">or</span> <span class="constant">UID</span> (<span class="symbol">format:</span> &lt;name|uid&gt;[<span class="symbol">:&lt;group|gid&gt;</span>])</span></span><br></pre></td></tr></table></figure></p>
<h1 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h1><p>可以使用<code>docker container rm</code>来删除一个处于终止状态的容器。<br><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">docker</span>@<span class="default"><span class="keyword">default</span>:~$ docker container rm <span class="comment">--help</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">Usage</span>:  docker container rm [<span class="type">OPTIONS</span>] <span class="type">CONTAINER</span> [<span class="type">CONTAINER</span>...]</span><br><span class="line"></span><br><span class="line"><span class="type">Remove</span> one or more containers</span><br><span class="line"></span><br><span class="line"><span class="type">Options</span>:</span><br><span class="line">  -f, <span class="comment">--force     Force the removal of a running container (uses SIGKILL)</span></span><br><span class="line">      <span class="comment">--help      Print usage</span></span><br><span class="line">  -l, <span class="comment">--link      Remove the specified link</span></span><br><span class="line">  -v, <span class="comment">--volumes   Remove the volumes associated with the container</span></span><br></pre></td></tr></table></figure></p>
<ul>
<li>清理所有处于终止的容器<code>docker container prune</code><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">docker<span class="variable">@default</span>:~$ docker container ls -a</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS                          PORTS               NAMES</span><br><span class="line"><span class="number">2</span>db2042590a4        hello-world         <span class="string">"/hello"</span>                 About a minute ago   Exited (<span class="number">0</span>) About a minute ago                       admiring_volhard</span><br><span class="line"><span class="number">6</span>d1e9498e298        centos              <span class="string">"/bin/bash"</span>              <span class="number">20</span> hours ago         Up <span class="number">9</span> minutes                                        hardcore_mclean</span><br><span class="line">f14e316a8af9        centos              <span class="string">"/bin/echo 'hello ..."</span>   <span class="number">20</span> hours ago         Exited (<span class="number">0</span>) <span class="number">20</span> hours ago                             blissful_swartz</span><br><span class="line">docker<span class="variable">@default</span>:~$ docker container prune</span><br><span class="line">WARNING! This will remove all stopped containers.</span><br><span class="line">Are you sure you want to <span class="keyword">continue</span>? [<span class="regexp">y/N] y</span><br><span class="line">Deleted Containers:</span><br><span class="line">2db2042590a4486e9a5a9c095d2bc06303f662fdd2fe077f3974d5032cf8a34c</span><br><span class="line">f14e316a8af9643b350c233c54270d72c05abaf2ff654735234f26dc5fc5fdf8</span><br><span class="line"></span><br><span class="line">Total reclaimed space: 0B</span><br><span class="line">docker@default:~$ docker container ls -a</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES</span><br><span class="line">6d1e9498e298        centos              "/bin/bash</span><span class="string">"         20 hours ago        Up 10 minutes                           hardcore_mclean</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Docker - Image]]></title>
      <url>http://izheyi.com/2017/11/19/Docker-Image/</url>
      <content type="html"><![CDATA[<p>镜像是多层存储结构，并且可以继承、复用，因此不同镜像可能会因为使用相同的基础镜像，从而拥有共同的层。Docker使用Union FS，相同的层只需要保存一份即可。</p>
<p>镜像层数量可能会很多，所有镜像层会联合在一起组成一个统一的文件系统。</p>
<p>新镜像是从base镜像一层一层叠加生成的。每安装一个软件，就在现有镜像的基础上增加一层。</p>
<h1 id="获取镜像"><a href="#获取镜像" class="headerlink" title="获取镜像"></a>获取镜像</h1><p>可以到<a href="https://hub.docker.com/explore/" target="_blank" rel="external">Docker Hub</a>去查找镜像。</p>
<p>从Docker Registry获取镜像的命令是<code>docker image pull</code>。其命令格式为：<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker@default:~$ docker image pull <span class="comment">--help</span></span><br><span class="line"></span><br><span class="line">Usage:  docker image pull [OPTIONS] NAME[:TAG|@DIGEST]</span><br><span class="line"></span><br><span class="line">Pull <span class="operator">an</span> image <span class="operator">or</span> <span class="operator">a</span> repository <span class="built_in">from</span> <span class="operator">a</span> registry</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -<span class="operator">a</span>, <span class="comment">--all-tags                Download all tagged images in the repository</span></span><br><span class="line">      <span class="comment">--disable-content-trust   Skip image verification (default true)</span></span><br><span class="line">      <span class="comment">--help                    Print usage</span></span><br></pre></td></tr></table></figure></p>
<p>默认地址是 Docker Hub。如果不用默认，地址的格式一般是 &lt;域名/IP&gt;[:端口号]。</p>
<p>例子：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">docker<span class="annotation">@default</span>:~$ git image pull mongo</span><br><span class="line">Using <span class="keyword">default</span> <span class="string">tag:</span> latest</span><br><span class="line"><span class="string">latest:</span> Pulling from library/mongo</span><br><span class="line"><span class="string">d13d02fa248d:</span> Pull complete</span><br><span class="line"><span class="string">bc8e2652ce92:</span> Pull complete</span><br><span class="line"><span class="number">3</span><span class="string">cc856886986:</span> Pull complete</span><br><span class="line"><span class="string">c319e9ec4517:</span> Pull complete</span><br><span class="line"><span class="string">b4cbf8808f94:</span> Pull complete</span><br><span class="line"><span class="string">cb98a53e6676:</span> Pull complete</span><br><span class="line"><span class="string">f0485050cd8a:</span> Pull complete</span><br><span class="line"><span class="string">ac36cdc414b3:</span> Pull complete</span><br><span class="line"><span class="number">61814e3</span><span class="string">c487b:</span> Pull complete</span><br><span class="line"><span class="number">523</span><span class="string">a9f1da6b9:</span> Pull complete</span><br><span class="line"><span class="number">3</span><span class="string">b4beaef77a2:</span> Pull complete</span><br><span class="line"><span class="string">Digest:</span> <span class="string">sha256:</span>d13c897516e497e898c229e2467f4953314b63e48d4990d3215d876ef9d1fc7c</span><br><span class="line"><span class="string">Status:</span> Downloaded newer image <span class="keyword">for</span> <span class="string">mongo:</span>latest</span><br></pre></td></tr></table></figure></p>
<h1 id="查看本地镜像"><a href="#查看本地镜像" class="headerlink" title="查看本地镜像"></a>查看本地镜像</h1><p>想查看已经下载的镜像， 格式：<br><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">docker@default:~$ docker image ls --help</span><br><span class="line"></span><br><span class="line">Usage:  docker image ls [OPTIONS] [REPOSITORY[:TAG]]</span><br><span class="line"></span><br><span class="line">List images</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -<span class="ruby">a, --all             <span class="constant">Show</span> all images (default hides intermediate images)</span><br><span class="line"></span>      -<span class="ruby">-digests         <span class="constant">Show</span> digests</span><br><span class="line"></span>  -<span class="ruby">f, --filter filter   <span class="constant">Filter</span> output based on conditions provided</span><br><span class="line"></span>      -<span class="ruby">-format string   <span class="constant">Pretty</span>-print images using a <span class="constant">Go</span> template</span><br><span class="line"></span>      -<span class="ruby">-help            <span class="constant">Print</span> usage</span><br><span class="line"></span>      -<span class="ruby">-no-trunc        <span class="constant">Don</span><span class="string">'t truncate output</span><br><span class="line"></span></span>  -<span class="ruby"><span class="string">q, --quiet           Only show numeric IDs</span></span></span><br></pre></td></tr></table></figure></p>
<p>不只可以列出所有的镜像，还可以列出特定的某个镜像。</p>
<p>例子：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker@<span class="keyword">default</span>:~$ docker image ls</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">mongo               latest              d22888af0ce0        <span class="number">3</span> weeks ago         <span class="number">361</span>MB</span><br><span class="line">hello-world         latest              <span class="number">725</span>dcfab7d63        <span class="number">3</span> weeks ago         <span class="number">1.84</span>kB</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<h1 id="查看镜像占用空间"><a href="#查看镜像占用空间" class="headerlink" title="查看镜像占用空间"></a>查看镜像占用空间</h1><p>想查看已经下载的镜像的占用空间， 格式： <code>docker system df</code><br>例子：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker@<span class="keyword">default</span>:~$ docker system df</span><br><span class="line">TYPE                TOTAL               ACTIVE              SIZE                RECLAIMABLE</span><br><span class="line">Images              <span class="number">2</span>                   <span class="number">1</span>                   <span class="number">360.9</span>MB             <span class="number">360.9</span>MB (<span class="number">99</span>%)</span><br><span class="line">Containers          <span class="number">2</span>                   <span class="number">0</span>                   <span class="number">0</span>B                  <span class="number">0</span>B</span><br><span class="line">Local Volumes       <span class="number">0</span>                   <span class="number">0</span>                   <span class="number">0</span>B                  <span class="number">0</span>B</span><br><span class="line">Build Cache                                                 <span class="number">0</span>B                  <span class="number">0</span>B</span><br></pre></td></tr></table></figure></p>
<h1 id="删除本地镜像"><a href="#删除本地镜像" class="headerlink" title="删除本地镜像"></a>删除本地镜像</h1><p>想删除已经下载的镜像， 格式：<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">docker@default:~$ docker image <span class="keyword">rm</span> --<span class="keyword">help</span></span><br><span class="line"></span><br><span class="line">Usage:  docker image <span class="keyword">rm</span> [OPTIONS] IMAGE [IMAGE...]</span><br><span class="line"></span><br><span class="line">Remove <span class="keyword">one</span> or <span class="keyword">more</span> images</span><br><span class="line"></span><br><span class="line">Aliases:</span><br><span class="line">  <span class="keyword">rm</span>, rmi, remove</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -f, --force      Force removal of the image</span><br><span class="line">      --<span class="keyword">help</span>       <span class="keyword">Print</span> usage</span><br><span class="line">      --<span class="keyword">no</span>-prune   <span class="keyword">Do</span> not delete untagged parents</span><br></pre></td></tr></table></figure></p>
<p>如果这个镜像被容器使用着，是不能够删除的。</p>
<p>例子：<br><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker@default:~$ docker image rm hello-world</span><br><span class="line">Untagged: hello-world:latest</span><br><span class="line">Untagged: hello-world@sha<span class="number">256:0e06</span>ef<span class="number">5e1945a71</span><span class="number">8b02a8c31</span>9e15bae<span class="number">44f47039005</span>530bc<span class="number">617a5d07</span>1190ed3fc</span><br><span class="line">Deleted: sha<span class="number">256:725</span>dcfab7d63ec87fa6fc5162ca0a36f67ad89cdfd<span class="number">7f9a156957</span>b<span class="number">79d8b85536</span>8</span><br><span class="line">Deleted: sha<span class="number">256:51d9</span>ee0d3e49cf<span class="number">0d51e2149</span>c<span class="number">89b0c428</span>ed1151a7daecdcfaba8a3fc71ef3e8d0</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Docker - 基础和安装]]></title>
      <url>http://izheyi.com/2017/11/18/Docker-%E5%9F%BA%E7%A1%80%E5%92%8C%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<p>Docker现在火的不得了，也一直很好奇，利用一些时间简单的学习一下，知道一下到底是个什么东西，基本的原理和应用。</p>
<p><em>初学，只是简单的入门和学习的一个记录，如有不对，欢迎指正。</em></p>
<h1 id="Docker介绍"><a href="#Docker介绍" class="headerlink" title="Docker介绍"></a>Docker介绍</h1><p>Docker 是一个开源的应用容器引擎，可以轻松的为任何应用创建一个轻量级的、可移植的、自给自足的容器。容器是完全使用沙箱机制，相互之间不会有任何接口,更重要的是容器性能开销极低。<br>通俗讲docker就是集装箱原理，从图标就可以看出来^_^<br><img src="/images/docker/overview.jpg" alt=""></p>
<ul>
<li><strong>Docker Client:</strong> Docker Client提供给用户一个终端，用户输入Docker提供的命令来管理本地或者远程的服务器。</li>
<li><strong>Docker Host:</strong> 一个物理或者虚拟的机器用于执行Docker守护进程和容器。</li>
<li><strong>Docker Daemon:</strong> 每台服务器上只要安装了Docker的环境，基本上就跑了一个后台程序Docker Daemon，Docker Daemon会接收Docker Client发过来的指令,并对服务器的进行具体操作。</li>
<li><strong>Docker Images:</strong> 用于创建Docker容器的模板。是只读的。</li>
<li><strong>Docker Container:</strong> 是真正跑项目程序、消耗机器资源、提供服务的地方，Docker Container通过Docker Images启动，在Docker Images的基础上运行你需要的代码。</li>
<li><strong>Docker Registry:</strong> 是管理仓库的具体服务器，每个服务器上可以有多个仓库，而每个仓库下面有多个镜像。</li>
<li><strong>Docker Machine:</strong> 是一个简化Docker安装的命令行工具，通过一个简单的命令行即可在相应的平台上安装Docker并管理Host。</li>
</ul>
<h1 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h1><p><em>试验环境是Win7</em></p>
<p>从Docker官网下载：<a href="https://www.docker.com/docker-windows" target="_blank" rel="external">Docker-Windows</a>，安装方式，Windows下就是双击，下一步，下一步了。。。</p>
<h1 id="Docker运行"><a href="#Docker运行" class="headerlink" title="Docker运行"></a>Docker运行</h1><p>安装完毕后，在应用程序里点击‘Docker Quickstart Terminal’打开Docker，但是有下边这个错误提示： “Looks like something went wrong in step ‘Finalize’…”<br><strong>Solution：</strong><br>在‘docker toolbox’的安装目录下，打开‘start.sh’，做如下修改(注释掉clear行)：<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">STEP</span>=<span class="string">"Finalize"</span></span><br><span class="line"><span class="preprocessor">#clear</span></span><br><span class="line">cat &lt;&lt; EOF</span><br></pre></td></tr></table></figure></p>
<p><strong>运行结果：</strong><br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">                        ##         .</span><br><span class="line">                  ## ## ##        ==</span><br><span class="line">               ## ## ## ## ##    ===</span><br><span class="line">           /<span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span>"\___/ ===</span><br><span class="line">      ~~~ &#123;~~ ~~~~ ~~~ ~~~~ ~~~ ~ /  ===- ~~~</span><br><span class="line">           \______ o           __/</span><br><span class="line">             \    \         __/</span><br><span class="line">              \____\_______/</span><br><span class="line"></span><br><span class="line">docker is configured to <span class="keyword">use</span> the default machine with IP 192.168.99.100</span><br><span class="line"><span class="keyword">For</span> <span class="keyword">help</span> getting started, check <span class="keyword">out</span> the docs at https:<span class="comment">//docs.docker.com</span></span><br><span class="line"></span><br><span class="line">Start interactive <span class="keyword">shell</span></span><br><span class="line"></span><br><span class="line">yongfei.hu@yongfei-hu MINGW64 ~</span><br><span class="line">$ docker <span class="keyword">version</span></span><br><span class="line">Client:</span><br><span class="line"> <span class="keyword">Version</span>:      17.10.0-ce</span><br><span class="line"> API <span class="keyword">version</span>:  1.33</span><br><span class="line"> Go <span class="keyword">version</span>:   go1.8.3</span><br><span class="line"> Git commit:   f4ffd25</span><br><span class="line"> Built:        Tue Oct 17 19:00:02 2017</span><br><span class="line"> OS/<span class="keyword">Arch</span>:      windows/amd64</span><br><span class="line"></span><br><span class="line">Server:</span><br><span class="line"> <span class="keyword">Version</span>:      17.10.0-ce</span><br><span class="line"> API <span class="keyword">version</span>:  1.33 (minimum <span class="keyword">version</span> 1.12)</span><br><span class="line"> Go <span class="keyword">version</span>:   go1.8.3</span><br><span class="line"> Git commit:   f4ffd25</span><br><span class="line"> Built:        Tue Oct 17 19:05:23 2017</span><br><span class="line"> OS/<span class="keyword">Arch</span>:      linux/amd64</span><br><span class="line"> Experimental: false</span><br></pre></td></tr></table></figure></p>
<p><strong>Docker Machine：</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ docker-machine ssh default</span><br><span class="line">                        <span class="comment">##         .</span></span><br><span class="line">                  <span class="comment">## ## ##        ==</span></span><br><span class="line">               <span class="comment">## ## ## ## ##    ===</span></span><br><span class="line">           /<span class="string">""""""</span><span class="string">""""""</span><span class="string">"""""\___/ ===</span><br><span class="line">      ~~~ &#123;~~ ~~~~ ~~~ ~~~~ ~~~ ~ /  ===- ~~~</span><br><span class="line">           \______ o           __/</span><br><span class="line">             \    \         __/</span><br><span class="line">              \____\_______/</span><br><span class="line"> _                 _   ____     _            _</span><br><span class="line">| |__   ___   ___ | |_|___ \ __| | ___   ___| | _____ _ __</span><br><span class="line">| '_ \ / _ \ / _ \| __| __) / _` |/ _ \ / __| |/ / _ \ '__|</span><br><span class="line">| |_) | (_) | (_) | |_ / __/ (_| | (_) | (__|   &lt;  __/ |</span><br><span class="line">|_.__/ \___/ \___/ \__|_____\__,_|\___/ \___|_|\_\___|_|</span><br><span class="line">Boot2Docker version 17.10.0-ce, build HEAD : 34fe485 - Wed Oct 18 17:16:34 UTC 2017</span><br><span class="line">Docker version 17.10.0-ce, build f4ffd25</span><br><span class="line">docker@default:~$</span></span><br></pre></td></tr></table></figure></p>
<h1 id="Docker生命周期"><a href="#Docker生命周期" class="headerlink" title="Docker生命周期"></a>Docker生命周期</h1><p>Docker三个基本概念</p>
<ul>
<li>镜像（Image）</li>
<li>容器（Container）</li>
<li>仓库（Repository）</li>
</ul>
<p>理解了这三个概念，就理解了整个生命周期。我们可以把镜像，容器想像成java的类和对象，即容器是由镜像实例化而来的。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[奇点绘画画随记（2018）]]></title>
      <url>http://izheyi.com/2017/11/14/%E5%B0%8F%E4%B8%81%E7%94%BB%E4%BD%9C/</url>
      <content type="html"><![CDATA[<p>天天吵着要报个课外班学习，如愿。看来姑娘是真的喜欢画画，每次都很期待上课。</p>
<h2 id="2017"><a href="#2017" class="headerlink" title="2017"></a>2017</h2><p><img src="/images/izheyi/pic/qidianhui/1.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/2.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/3.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/4.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/7.JPG" alt=""></p>
<h2 id="2018"><a href="#2018" class="headerlink" title="2018"></a>2018</h2><p><img src="/images/izheyi/pic/qidianhui/5.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/6.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/8.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/9.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/10.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/11.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/12.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/13.JPG" alt=""><br><img src="/images/izheyi/pic/qidianhui/14.JPG" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Pytest run failed after renaming project folder]]></title>
      <url>http://izheyi.com/2017/11/10/Pytest-run-failed-after-renaming-projet-folder/</url>
      <content type="html"><![CDATA[<p>Pytest running failed after renaming a project folder, prompt could find file error.</p>
<h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution:"></a>Solution:</h3><p>Delete the python cache (<strong>pycache</strong>) and all “compiled” files.</p>
<p>Make sure that your <strong>init.py</strong> files are not referring to any folder or path.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[pytest - rerun failed script]]></title>
      <url>http://izheyi.com/2017/11/06/pytest-rerun-failed-script/</url>
      <content type="html"><![CDATA[<p>都知道有很多的因素会造成自动化脚本Failed，最好的方式是能在Failed后再自动的跑一下，以达到更好的自动化的效用。</p>
<p>Google发现有现成的，就直接用：<a href="https://github.com/pytest-dev/pytest-rerunfailures" target="_blank" rel="external">pytest-rerunfailures</a></p>
<p>并用做了验证，没毛病：</p>
<ol>
<li><p>准备用例</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestClass</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_one</span><span class="params">(self)</span>:</span></span><br><span class="line">        x = <span class="string">"this"</span></span><br><span class="line">        <span class="keyword">assert</span> <span class="string">"h0"</span> <span class="keyword">in</span> x</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_two</span><span class="params">(self)</span>:</span></span><br><span class="line">        x = <span class="string">"hello"</span></span><br><span class="line">        <span class="keyword">assert</span> x == <span class="string">"hello"</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>验证Rerun</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">C:</span>\Python27\Scripts&gt;py.test -r aR --rerun <span class="number">2</span> <span class="number">1</span>\<span class="number">1.</span>py</span><br><span class="line">============================= test session starts =============================</span><br><span class="line">platform win32 -- Python <span class="number">2.7</span><span class="number">.13</span>, pytest-<span class="number">3.2</span><span class="number">.3</span>, py-<span class="number">1.4</span><span class="number">.34</span>, pluggy-<span class="number">0.4</span><span class="number">.0</span></span><br><span class="line"><span class="string">rootdir:</span> <span class="string">C:</span>\Python27\Scripts, <span class="string">inifile:</span></span><br><span class="line"><span class="string">plugins:</span> rerunfailures-<span class="number">3.1</span></span><br><span class="line">collected <span class="number">2</span> items</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>\<span class="number">1.</span>py RRF.</span><br><span class="line">=========================== rerun test summary info ===========================</span><br><span class="line">RERUN <span class="number">1</span>/<span class="number">1.</span><span class="string">py:</span>:<span class="string">TestClass:</span>:()::test_one</span><br><span class="line">RERUN <span class="number">1</span>/<span class="number">1.</span><span class="string">py:</span>:<span class="string">TestClass:</span>:()::test_one</span><br><span class="line">=========================== <span class="typename">short</span> test summary info ===========================</span><br><span class="line">FAIL <span class="number">1</span>/<span class="number">1.</span><span class="string">py:</span>:<span class="string">TestClass:</span>:()::test_one</span><br><span class="line"></span><br><span class="line">================================== FAILURES ===================================</span><br><span class="line">_____________________________ TestClass.test_one ______________________________</span><br><span class="line"></span><br><span class="line">self = &lt;<span class="number">1.</span>TestClass instance at <span class="number">0x03EA3C10</span>&gt;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> test_one(self):</span><br><span class="line">        x = <span class="string">"this"</span></span><br><span class="line">&gt;       <span class="keyword">assert</span> <span class="string">"h0"</span> <span class="keyword">in</span> x</span><br><span class="line">E       <span class="string">AssertionError:</span> <span class="keyword">assert</span> <span class="string">'h0'</span> <span class="keyword">in</span> <span class="string">'this'</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span>\<span class="number">1.</span><span class="string">py:</span><span class="number">7</span>: AssertionError</span><br><span class="line">================= <span class="number">1</span> failed, <span class="number">1</span> passed, <span class="number">2</span> rerun <span class="keyword">in</span> <span class="number">0.11</span> seconds =================</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Win7 安装curl]]></title>
      <url>http://izheyi.com/2017/10/26/Win7-%E5%AE%89%E8%A3%85curl/</url>
      <content type="html"><![CDATA[<p>Curl命令可以通过命令行的方式，执行Http请求。</p>
<p>介绍一下在Window 64位下的安装。</p>
<h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><p>从<a href="https://curl.haxx.se/download.html" target="_blank" rel="external">Curl</a>,下载工具包，找到相应的版本。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ol>
<li><p>在解压目录下使用<br>解压后目录’C:\curl-7.57.0\I386’</p>
</li>
<li><p>把exe放到System32<br>拷贝I386/curl.exe文件到C:\Windows\System32， 就可以在DOS窗口中任意位置，使用curl命令了。</p>
</li>
<li><p>增加环境变量<br>给path加环境变量，效果和第2种一次。</p>
</li>
</ol>
<h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\youfei.hu&gt;curl</span><br><span class="line">curl: try 'curl --help' or 'curl --manual' for more information</span><br><span class="line"></span><br><span class="line">C:\Users\youfei.hu&gt;curl www.google.com</span><br><span class="line"><span class="tag">&lt;<span class="title">HTML</span>&gt;</span><span class="tag">&lt;<span class="title">HEAD</span>&gt;</span><span class="tag">&lt;<span class="title">meta</span> <span class="attribute">http-equiv</span>=<span class="value">"content-type"</span> <span class="attribute">content</span>=<span class="value">"text/html;charset=utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">TITLE</span>&gt;</span>302 Moved<span class="tag">&lt;/<span class="title">TITLE</span>&gt;</span><span class="tag">&lt;/<span class="title">HEAD</span>&gt;</span><span class="tag">&lt;<span class="title">BODY</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">H1</span>&gt;</span>302 Moved<span class="tag">&lt;/<span class="title">H1</span>&gt;</span></span><br><span class="line">The document has moved</span><br><span class="line"><span class="tag">&lt;<span class="title">A</span> <span class="attribute">HREF</span>=<span class="value">"http://www.google.com.hk/?gfe_rd=cr&amp;amp;dcr=0&amp;amp;ei=xoAnWqngJ6P48AeVl5SIAw"</span>&gt;</span>here<span class="tag">&lt;/<span class="title">A</span>&gt;</span>.</span><br><span class="line"><span class="tag">&lt;/<span class="title">BODY</span>&gt;</span><span class="tag">&lt;/<span class="title">HTML</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python run command on romote linux]]></title>
      <url>http://izheyi.com/2017/10/17/Python-run-command-on-romote-linux/</url>
      <content type="html"><![CDATA[<p>自动化需要，要远程执行Linux命令，使用了<a href="http://www.paramiko.org/" target="_blank" rel="external">Paramiko</a></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>非常简单<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip <span class="keyword">install</span> paramiko</span><br></pre></td></tr></table></figure></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> paramiko</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ssh_exec</span><span class="params">(hostname, port, username, password, execmd)</span>:</span></span><br><span class="line"></span><br><span class="line">    s = paramiko.SSHClient()</span><br><span class="line">    s.set_missing_host_key_policy(paramiko.AutoAddPolicy())</span><br><span class="line"></span><br><span class="line">    s.connect(hostname=hostname, port=port, username=username, password=password)</span><br><span class="line">    stdin, stdout, stderr = s.exec_command(execmd)</span><br><span class="line">    stdin.write(<span class="string">"Y"</span>)  <span class="comment"># Generally speaking, the first connection, need a simple interaction.</span></span><br><span class="line"></span><br><span class="line">    s.close()</span><br></pre></td></tr></table></figure>
<p>调用<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    hostname = <span class="string">'xxx.com'</span></span><br><span class="line">    port = <span class="number">22</span></span><br><span class="line">    username = <span class="string">'xxx'</span></span><br><span class="line">    password = <span class="string">'xxx'</span></span><br><span class="line">    execmd = <span class="string">"cd /home/qa/"</span> <span class="comment"># 执行多条命令用分号分隔</span></span><br><span class="line"></span><br><span class="line">    ssh_<span class="built_in">exec</span>(hostname, port, username, password, execmd)</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Business Trip to Boston]]></title>
      <url>http://izheyi.com/2017/09/20/Business-Trip-to-Boston/</url>
      <content type="html"><![CDATA[<p>一些留念。</p>
<p><img src="/images/shenghuo/boston_000.JPG" alt=""><br><img src="/images/shenghuo/boston_00.JPG" alt=""><br><img src="/images/shenghuo/boston_0.JPG" alt=""></p>
<a id="more"></a>
<p><img src="/images/shenghuo/boston_01.JPG" alt=""><br><img src="/images/shenghuo/boston_02.JPG" alt=""><br><img src="/images/shenghuo/boston_03.JPG" alt=""><br><img src="/images/shenghuo/boston_04.JPG" alt=""><br><img src="/images/shenghuo/boston_05.JPG" alt=""><br><img src="/images/shenghuo/boston_06.JPG" alt=""><br><img src="/images/shenghuo/boston_07.JPG" alt=""><br><img src="/images/shenghuo/boston_08.JPG" alt=""><br><img src="/images/shenghuo/boston_09.JPG" alt=""><br><img src="/images/shenghuo/boston_10.JPG" alt=""><br><img src="/images/shenghuo/boston_11.JPG" alt=""><br><img src="/images/shenghuo/boston_12.JPG" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[日日新幼儿园成长记录]]></title>
      <url>http://izheyi.com/2017/07/26/%E6%97%A5%E6%97%A5%E6%96%B0%E6%88%90%E9%95%BF%E8%AE%B0%E5%BD%95/</url>
      <content type="html"><![CDATA[<p>就像老师说的一样，在这短暂的三年中，你进步了，也成长了，从不敢去学校，到转学校，再到表现的足够好（在大人的眼里）。希望你一直都能够做最好的自己。<br><img src="/images/izheyi/2017/07/0.JPG" alt=""><br><img src="/images/izheyi/2017/07/1.JPG" alt=""><br><img src="/images/izheyi/2017/07/2.JPG" alt=""><br><img src="/images/izheyi/2017/07/3.JPG" alt=""><br><img src="/images/izheyi/2017/07/4.JPG" alt=""><br><img src="/images/izheyi/2017/07/5.JPG" alt=""><br><img src="/images/izheyi/2017/07/6.JPG" alt=""><br><img src="/images/izheyi/2017/07/7.JPG" alt=""><br><img src="/images/izheyi/2017/07/8.JPG" alt=""><br><img src="/images/izheyi/2017/07/9.JPG" alt=""><br><img src="/images/izheyi/2017/07/10.JPG" alt=""><br><img src="/images/izheyi/2017/07/11.JPG" alt=""><br><img src="/images/izheyi/2017/07/12.JPG" alt=""><br><img src="/images/izheyi/2017/07/13.JPG" alt=""><br><img src="/images/izheyi/2017/07/14.JPG" alt=""><br><img src="/images/izheyi/2017/07/15.JPG" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[丁丁学前班春节汇演]]></title>
      <url>http://izheyi.com/2017/07/09/%E4%B8%81%E4%B8%81%E5%AD%A6%E5%89%8D%E7%8F%AD%E6%98%A5%E8%8A%82%E6%B1%87%E6%BC%94/</url>
      <content type="html"><![CDATA[<p>本来是年前迎新春的活动，一直没有拿到底片，再加上最近也是忙的脚不连地，补上。</p>
<p>一直都很有节奏感，每次都领舞，棒棒的！</p>
<h1 id="开场-盛世欢歌"><a href="#开场-盛世欢歌" class="headerlink" title="开场 - 盛世欢歌"></a>开场 - 盛世欢歌</h1><iframe frameborder="0" width="640" height="498" src="https://v.qq.com/iframe/player.html?vid=e05237jwkbl&tiny=0&auto=0" allowfullscreen></iframe>

<h1 id="舞蹈-5678Going"><a href="#舞蹈-5678Going" class="headerlink" title="舞蹈 - 5678Going"></a>舞蹈 - 5678Going</h1><iframe frameborder="0" width="640" height="498" src="https://v.qq.com/iframe/player.html?vid=e0523wnqb1x&tiny=0&auto=0" allowfullscreen></iframe>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Gatling - Simulation]]></title>
      <url>http://izheyi.com/2017/06/21/Gatling-Simulation/</url>
      <content type="html"><![CDATA[<p>A simulation is a description of the load test. It describes how, possibly several, user populations will run: which scenario they will execute and how new virtual users will be injected.</p>
<p>A Simulation is a real Scala class containing 4 different parts:</p>
<ul>
<li>The HTTP protocol configuration</li>
<li>The headers definition</li>
<li>The scenario definition</li>
<li>The simulation definition</li>
</ul>
<p>Can see the demo there:  <a href="/2017/05/09/Gatling-install-start/" title="Recorder">Recoder Demo</a></p>
<h3 id="Hooks"><a href="#Hooks" class="headerlink" title="Hooks"></a>Hooks</h3><p>Gatling provides two hooks:</p>
<ul>
<li>before<br>for executing some code before the simulation actually runs</li>
<li>after<br>for executing some code after the simulation actually runs</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Spring Boot - 更换banner]]></title>
      <url>http://izheyi.com/2017/06/07/Spring-Boot-%E6%9B%B4%E6%8D%A2banner/</url>
      <content type="html"><![CDATA[<p>Spring boot 有自己的banner, 但是也可以设置使用自定制的， 只要在自己的项目中新加：/springboot/src/main/resources/banner.txt。</p>
<p>利用这个网站生成字符<a href="http://patorjk.com/software/taag/" target="_blank" rel="external">Patorjk</a>，我们可以利用生成的字符串放入这个banner.txt文件。</p>
<p>重启spring boot就可以看到了<br><img src="/images/springboot/banner.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Spring Boot - 介绍和环境搭建]]></title>
      <url>http://izheyi.com/2017/06/06/Spring-Boot-%E4%BB%8B%E7%BB%8D%E5%92%8C%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>Spring Boot简化了基于Spring的应用开发，你只需要”run”就能创建一个独立的，产品级别的Spring应用。话不多说，直接参见官网<a href="https://http://projects.spring.io/spring-boot/" target="_blank" rel="external">Spring Boot</a></p>
<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ol>
<li><p>安装JDK<br><code>java -version</code> - 检查Java安装<br>安装后添加环境变量。</p>
</li>
<li><p>安装Maven<br>我的是Windows，方法如下：<br>Adding to PATH: Add the unpacked distribution’s bin directory to your user PATH environment variable by opening up the system properties (WinKey + Pause), selecting the “Advanced” tab, and the “Environment Variables” button, then adding or selecting the PATH variable in the user variables with the value C:\Program Files\apache-maven-3.5.0\bin. The same dialog can be used to set JAVA_HOME to the location of your JDK, e.g. C:\Program Files\Java\jdk1.7.0_51<br>Open a new command prompt (Winkey + R then type cmd) and run mvn -v to verify the installation.</p>
</li>
<li><p>新建文件夹作为Project根目录，创建POM</p>
 <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="title">project</span> <span class="attribute">xmlns</span>=<span class="value">"http://maven.apache.org/POM/4.0.0"</span> <span class="attribute">xmlns:xsi</span>=<span class="value">"http://www.w3.org/2001/XMLSchema-instance"</span>  </span><br><span class="line">    <span class="attribute">xsi:schemaLocation</span>=<span class="value">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="title">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="title">modelVersion</span>&gt;</span>  </span><br><span class="line">  </span><br><span class="line">    <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>myFirstproject<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="title">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="title">version</span>&gt;</span>  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">&lt;!-- Inherit defaults from Spring Boot --&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="title">parent</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="title">version</span>&gt;</span>1.4.0.BUILD-SNAPSHOT<span class="tag">&lt;/<span class="title">version</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="title">parent</span>&gt;</span>  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">&lt;!-- Add typical dependencies for a web application --&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="title">dependencies</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="title">dependency</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="title">dependency</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="title">dependencies</span>&gt;</span>  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">&lt;!-- Package as an executable jar --&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="title">build</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="title">plugins</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="title">plugin</span>&gt;</span>  </span><br><span class="line">                <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span>  </span><br><span class="line">                <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;/<span class="title">plugin</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="title">plugins</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="title">build</span>&gt;</span>  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">&lt;!-- Add Spring repositories --&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!-- (you don't need this if you are using a .RELEASE version) --&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="title">repositories</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="title">repository</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="title">id</span>&gt;</span>spring-snapshots<span class="tag">&lt;/<span class="title">id</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="title">url</span>&gt;</span>http://repo.spring.io/snapshot<span class="tag">&lt;/<span class="title">url</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="title">snapshots</span>&gt;</span><span class="tag">&lt;<span class="title">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="title">enabled</span>&gt;</span><span class="tag">&lt;/<span class="title">snapshots</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="title">repository</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="title">repository</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="title">id</span>&gt;</span>spring-milestones<span class="tag">&lt;/<span class="title">id</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="title">url</span>&gt;</span>http://repo.spring.io/milestone<span class="tag">&lt;/<span class="title">url</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="title">repository</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="title">repositories</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="title">pluginRepositories</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="title">pluginRepository</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="title">id</span>&gt;</span>spring-snapshots<span class="tag">&lt;/<span class="title">id</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="title">url</span>&gt;</span>http://repo.spring.io/snapshot<span class="tag">&lt;/<span class="title">url</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="title">pluginRepository</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="title">pluginRepository</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="title">id</span>&gt;</span>spring-milestones<span class="tag">&lt;/<span class="title">id</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="title">url</span>&gt;</span>http://repo.spring.io/milestone<span class="tag">&lt;/<span class="title">url</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="title">pluginRepository</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="title">pluginRepositories</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="title">project</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<a id="more"></a>
<ol>
<li><p>编写代码<br>为了完成应用程序，我们需要创建一个单独的Java文件。Maven默认会编译 src/main/java 下的源码，所以你需要创建那样的文件结构，并添加一个名为 src/main/java/FirstExample.java 的文件：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> firstexample;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="annotation">@RestController</span></span><br><span class="line"><span class="annotation">@EnableAutoConfiguration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FirstExample</span> </span>&#123;</span><br><span class="line">	<span class="annotation">@RequestMapping</span>(<span class="string">"/"</span>)</span><br><span class="line">	<span class="function">String <span class="title">home</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="string">"Hello World!"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">	SpringApplication.run(FirstExample.class, args);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>运行<br>导入工程到Eclipse，运行Maven Install，成功后，运行项目，<br>启动之后就可以访问了，默认地址： <a href="http://localhost:8080/" target="_blank" rel="external">http://localhost:8080/</a><br><img src="/images/springboot/example.jpg" alt=""></p>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Gatling - install & start]]></title>
      <url>http://izheyi.com/2017/05/09/Gatling-install-start/</url>
      <content type="html"><![CDATA[<p>基于Scala 开发的开源免费性能压测工具。主要用于测量基于HTTP的服务器，比如Web应用程序，RESTful服务等。<br>方方面面的原因，准备用Gatling做性能测试，对这个工具做一个简单的研究。</p>
<h1 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h1><p>去官网下载： <a href="http://gatling.io/download/" title="gatling download" target="_blank" rel="external">http://gatling.io/download/</a><br>下载之后，解压到相应的目录中去。</p>
<ul>
<li>bin 目录下有2个脚本，gatling和recorder， gatling用来运行测试， recorder用来启动录制脚本的UI的。</li>
<li>conf 目录是关于Gatling自身的一些配置。</li>
<li>lib 目录是Gatling自身依赖的库文件。</li>
<li>results 目录用来存放测试报告的。</li>
<li>target</li>
<li>user-files<ul>
<li>bodies</li>
<li>data 数据目录，csv参数文件存放在这里</li>
<li>simulations 测试脚本（所有的脚本都在这里）</li>
</ul>
</li>
</ul>
<h1 id="Recorder"><a href="#Recorder" class="headerlink" title="Recorder"></a>Recorder</h1><p>运行bin目录下的’recorder.bat’，打开Recorder Window。<br><img src="/images/gatling/recorder.jpg" alt=""><br>录制之前要先设置浏览器用Gatling Recorder’s proxy，录制之后，保存脚本。录制一个搜索：<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> <span class="keyword">default</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> scala.concurrent.duration._</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.gatling.core.<span class="type">Predef</span>._</span><br><span class="line"><span class="keyword">import</span> io.gatling.http.<span class="type">Predef</span>._</span><br><span class="line"><span class="keyword">import</span> io.gatling.jdbc.<span class="type">Predef</span>._</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RecordedSimulation</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">Simulation</span> &#123;</span></span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">val</span> <span class="title">httpProtocol</span> =</span> http</span><br><span class="line">		.baseURL(<span class="string">"https://www.baidu.com"</span>)</span><br><span class="line">		.inferHtmlResources()</span><br><span class="line">		.acceptHeader(<span class="string">"image/png,image/*;q=0.8,*/*;q=0.5"</span>)</span><br><span class="line">		.acceptEncodingHeader(<span class="string">"gzip, deflate"</span>)</span><br><span class="line">		.acceptLanguageHeader(<span class="string">"zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3"</span>)</span><br><span class="line">		.userAgentHeader(<span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0"</span>)</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">val</span> <span class="title">headers_0</span> =</span> <span class="type">Map</span>(<span class="string">"Accept"</span> -&gt; <span class="string">"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">val</span> <span class="title">uri1</span> =</span> <span class="string">"https://ss1.bdstatic.com/5eN1bjq8AAUYm2zgoY3K/r/www/cache/static/protocol/https/jquery/jquery-1.10.2.min_65682a2.js"</span></span><br><span class="line">    <span class="function"><span class="keyword">val</span> <span class="title">uri2</span> =</span> <span class="string">"www.baidu.com"</span></span><br><span class="line">    <span class="function"><span class="keyword">val</span> <span class="title">uri3</span> =</span> <span class="string">"http://baidu.com"</span></span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">val</span> <span class="title">scn</span> =</span> scenario(<span class="string">"RecordedSimulation"</span>)</span><br><span class="line">		.exec(http(<span class="string">"request_0"</span>)</span><br><span class="line">			.get(uri3 + <span class="string">"/"</span>)</span><br><span class="line">			.headers(headers_0)</span><br><span class="line">			.resources(http(<span class="string">"request_1"</span>)</span><br><span class="line">			.get(<span class="string">"/img/baidu_jgylogo3.gif"</span>),</span><br><span class="line">            http(<span class="string">"request_2"</span>)</span><br><span class="line">			.get(<span class="string">"/img/bd_logo1.png"</span>)))</span><br><span class="line">		.pause(<span class="number">4</span>)</span><br><span class="line">		.exec(http(<span class="string">"request_3"</span>)</span><br><span class="line">			.get(<span class="string">"/s?ie=utf-8&amp;f=8&amp;rsv_bp=1&amp;rsv_idx=1&amp;ch=&amp;tn=baidu&amp;bar=&amp;wd=gatling&amp;rn=&amp;oq=&amp;rsv_pq=e632af2400018ab7&amp;rsv_t=21efo2auHiH8VwtAPnYwISgfAskcOJ5NLsAxSJh2B%2BZEb6LFvXLa%2BPVXxwc&amp;rqlang=cn"</span>)</span><br><span class="line">			.headers(headers_0)</span><br><span class="line">			.resources(http(<span class="string">"request_4"</span>)</span><br><span class="line">			.get(<span class="string">"/aladdin/tpl/dict3/repeat_small.c6d62112.png"</span>),</span><br><span class="line">            http(<span class="string">"request_5"</span>)</span><br><span class="line">			.get(<span class="string">"/aladdin/img/dic3/iconall.gif"</span>)))</span><br><span class="line"></span><br><span class="line">	setUp(scn.inject(atOnceUsers(<span class="number">1</span>))).protocols(httpProtocol)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>录制功能应该一般都不太会用到。</p>
<a id="more"></a>
<h1 id="Run"><a href="#Run" class="headerlink" title="Run"></a>Run</h1><p>运行bin目录下的’gatling.bat’<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line">GATLING_HOME is set to "D:\gatling-charts-highcharts-bundle-2.2.5"</span><br><span class="line">JAVA = ""C:\Program Files\Java\jdk1.8.0_77\bin\java.exe""</span><br><span class="line">Choose a simulation number:</span><br><span class="line"><span class="code">     [0] computerdatabase.BasicSimulation</span></span><br><span class="line"><span class="code">     [1] computerdatabase.advanced.AdvancedSimulationStep01</span></span><br><span class="line"><span class="code">     [2] computerdatabase.advanced.AdvancedSimulationStep02</span></span><br><span class="line"><span class="code">     [3] computerdatabase.advanced.AdvancedSimulationStep03</span></span><br><span class="line"><span class="code">     [4] computerdatabase.advanced.AdvancedSimulationStep04</span></span><br><span class="line"><span class="code">     [5] computerdatabase.advanced.AdvancedSimulationStep05</span></span><br><span class="line"><span class="code">     [6] default.RecordedSimulation</span></span><br><span class="line">6</span><br><span class="line">Select simulation id (default is 'recordedsimulation'). Accepted characters are a-z, A-Z, 0-9, - and _</span><br><span class="line">searching</span><br><span class="line">Select run description (optional)</span><br><span class="line"></span><br><span class="line">Simulation default.RecordedSimulation started...</span><br><span class="line"></span><br><span class="line">================================================================================</span><br><span class="line">2017-05-09 15:45:00                                           5s elapsed</span><br><span class="line"><span class="horizontal_rule">---- Requests ------------------------------------------------------------------</span></span><br><span class="line"><span class="blockquote">&gt; Global                                                   (OK=6      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; request_0                                                (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; request_0 Redirect 1                                     (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; favicon.ico Redirect 1                                   (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; baidu_jgylogo3.gif Redirect 1                            (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; request_1 Redirect 1                                     (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; baidu.svg Redirect 1                                     (OK=1      KO=0     )</span></span><br><span class="line"></span><br><span class="line"><span class="horizontal_rule">---- RecordedSimulation --------------------------------------------------------</span></span><br><span class="line">[--------------------------------------------------------------------------]  0%</span><br><span class="line"><span class="header">          waiting: 0      / active: 1      / done:0</span><br><span class="line">================================================================================</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">================================================================================</span><br><span class="line">2017-05-09 15:45:07                                          11s elapsed</span><br><span class="line"><span class="horizontal_rule">---- Requests ------------------------------------------------------------------</span></span><br><span class="line"><span class="blockquote">&gt; Global                                                   (OK=16     KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; request_0                                                (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; request_0 Redirect 1                                     (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; favicon.ico Redirect 1                                   (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; baidu_jgylogo3.gif Redirect 1                            (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; request_1 Redirect 1                                     (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; baidu.svg Redirect 1                                     (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; request_2 Redirect 1                                     (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; bd_logo1.png Redirect 1                                  (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; jquery-1.10.2.min_65682a2.js Redirect 1                  (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; request_3                                                (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; request_4                                                (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; baidu_jgylogo3.gif                                       (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; request_5                                                (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; favicon.ico                                              (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; bd_logo1.png                                             (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; baidu.svg                                                (OK=1      KO=0     )</span></span><br><span class="line"></span><br><span class="line"><span class="horizontal_rule">---- RecordedSimulation --------------------------------------------------------</span></span><br><span class="line">[--------------------------------------------------------------------------]  0%</span><br><span class="line"><span class="header">          waiting: 0      / active: 1      / done:0</span><br><span class="line">================================================================================</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">================================================================================</span><br><span class="line">2017-05-09 15:45:07                                          11s elapsed</span><br><span class="line"><span class="horizontal_rule">---- Requests ------------------------------------------------------------------</span></span><br><span class="line"><span class="blockquote">&gt; Global                                                   (OK=19     KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; request_0                                                (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; request_0 Redirect 1                                     (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; favicon.ico Redirect 1                                   (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; baidu_jgylogo3.gif Redirect 1                            (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; request_1 Redirect 1                                     (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; baidu.svg Redirect 1                                     (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; request_2 Redirect 1                                     (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; bd_logo1.png Redirect 1                                  (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; jquery-1.10.2.min_65682a2.js Redirect 1                  (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; request_3                                                (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; request_4                                                (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; baidu_jgylogo3.gif                                       (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; request_5                                                (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; favicon.ico                                              (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; bd_logo1.png                                             (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; baidu.svg                                                (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; u=4004482432,3155140380&amp;fm=85&amp;s=BDB6E7161778482054FC7... (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; u=3971883911,3367482058&amp;fm=85&amp;s=B1B6E5365F2F7B094AFC0... (OK=1      KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; u=3374980953,196157295&amp;fm=85&amp;s=0940C30203BDB2690CD90E... (OK=1      KO=0     )</span></span><br><span class="line"></span><br><span class="line"><span class="horizontal_rule">---- RecordedSimulation --------------------------------------------------------</span></span><br><span class="line">[##########################################################################]100%</span><br><span class="line"><span class="header">          waiting: 0      / active: 0      / done:1</span><br><span class="line">================================================================================</span></span><br><span class="line"></span><br><span class="line">Simulation default.RecordedSimulation completed in 9 seconds</span><br><span class="line">Parsing log file(s)...</span><br><span class="line">Parsing log file(s) done</span><br><span class="line">Generating reports...</span><br><span class="line"></span><br><span class="line">================================================================================</span><br><span class="line"><span class="horizontal_rule">---- Global Information --------------------------------------------------------</span></span><br><span class="line"><span class="blockquote">&gt; request count                                         19 (OK=19     KO=0     )</span></span><br><span class="line"><span class="blockquote">&gt; min response time                                     52 (OK=52     KO=-     )</span></span><br><span class="line"><span class="blockquote">&gt; max response time                                   1570 (OK=1570   KO=-     )</span></span><br><span class="line"><span class="blockquote">&gt; mean response time                                   337 (OK=337    KO=-     )</span></span><br><span class="line"><span class="blockquote">&gt; std deviation                                        367 (OK=367    KO=-     )</span></span><br><span class="line"><span class="blockquote">&gt; response time 50th percentile                        223 (OK=223    KO=-     )</span></span><br><span class="line"><span class="blockquote">&gt; response time 75th percentile                        380 (OK=380    KO=-     )</span></span><br><span class="line"><span class="blockquote">&gt; response time 95th percentile                        893 (OK=893    KO=-     )</span></span><br><span class="line"><span class="blockquote">&gt; response time 99th percentile                       1435 (OK=1435   KO=-     )</span></span><br><span class="line"><span class="blockquote">&gt; mean requests/sec                                  2.111 (OK=2.111  KO=-     )</span></span><br><span class="line"><span class="horizontal_rule">---- Response Time Distribution ------------------------------------------------</span></span><br><span class="line"><span class="blockquote">&gt; t &lt; 800 ms                                            17 ( 89%)</span></span><br><span class="line"><span class="blockquote">&gt; 800 ms &lt; t &lt; 1200 ms                                   1 (  5%)</span></span><br><span class="line"><span class="blockquote">&gt; t &gt; 1200 ms                                            1 (  5%)</span></span><br><span class="line"><span class="header">&gt; failed                                                 0 (  0%)</span><br><span class="line">================================================================================</span></span><br><span class="line"></span><br><span class="line">Reports generated in 0s.</span><br><span class="line">Please open the following file: D:\gatling-charts-highcharts-bundle-2.2.5\results\searching-1494315895552\index.html</span><br></pre></td></tr></table></figure></p>
<h1 id="Report"><a href="#Report" class="headerlink" title="Report"></a>Report</h1><p><img src="/images/gatling/report_global.jpg" alt=""><br><img src="/images/gatling/report_detail.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Uploading a file using python requests]]></title>
      <url>http://izheyi.com/2017/03/17/Uploading-a-file-using-python-requests/</url>
      <content type="html"><![CDATA[<p>List here just for a reminder:</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">url = <span class="string">"http://34.207.223.236"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">files</span> = &#123;<span class="string">"file"</span>: <span class="built_in">open</span>(<span class="string">"c:\\a.csv"</span>, <span class="string">'rb'</span>)&#125;</span><br><span class="line"></span><br><span class="line">response = requests.<span class="built_in">post</span>(url, <span class="built_in">files</span>=<span class="built_in">files</span>)</span><br><span class="line"></span><br><span class="line">print(response.<span class="keyword">text</span>)</span><br></pre></td></tr></table></figure>
<p>requests will send a multi-part form POST body with the upload_file field set to the contents of the a.csv file.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[python json dump/load/dumps/loads]]></title>
      <url>http://izheyi.com/2017/02/16/python-json-dump-load-dumps-loads/</url>
      <content type="html"><![CDATA[<h1 id="load"><a href="#load" class="headerlink" title="load"></a>load</h1><p>从外部JSON文件变成dict字典(外部文件一定要是json格式)<br><code>json.load(open(&#39;a.json&#39;,&quot;r&quot;))</code></p>
<h1 id="dump"><a href="#dump" class="headerlink" title="dump"></a>dump</h1><p>把dict字典变成json格式，生成到外部文件里面<br><code>json.dump(dict,open(&#39;a.json&#39;,&quot;w&quot;))</code></p>
<h1 id="dumps"><a href="#dumps" class="headerlink" title="dumps"></a>dumps</h1><p>Convert Python Object (Dict) to JSON<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import json</span><br><span class="line"> </span><br><span class="line"><span class="keyword">d</span> = &#123;&#125;</span><br><span class="line"><span class="keyword">d</span>[<span class="string">"Name"</span>] = <span class="string">"Luke"</span></span><br><span class="line"><span class="keyword">d</span>[<span class="string">"Country"</span>] = <span class="string">"Canada"</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">print</span> json.dumps(<span class="keyword">d</span>, ensure_ascii=False)</span><br><span class="line"># result &#123;<span class="string">"Country"</span>: <span class="string">"Canada"</span>, <span class="string">"Name"</span>: <span class="string">"Luke"</span>&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="loads"><a href="#loads" class="headerlink" title="loads"></a>loads</h1><p>To convert JSON to a Python dict use this:<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"> </span><br><span class="line">json_data = '&#123;<span class="string">"name"</span>: <span class="string">"Brian"</span>, <span class="string">"city"</span>: <span class="string">"BJ"</span>&#125;'</span><br><span class="line">python_obj = json.loads(json_data)</span><br><span class="line"><span class="built_in">print</span> python_obj[<span class="string">"name"</span>]</span><br><span class="line"><span class="built_in">print</span> python_obj[<span class="string">"city"</span>]</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[中国国家科技馆]]></title>
      <url>http://izheyi.com/2017/02/05/%E4%B8%AD%E5%9B%BD%E5%9B%BD%E5%AE%B6%E7%A7%91%E6%8A%80%E9%A6%86/</url>
      <content type="html"><![CDATA[<p>大过年去的，本以为人会少一些，绝逼是低估了中国人的数量，哈哈。</p>
<p>整体还是不错的，外观大气，里边也很大，花了近5个小时才看完。<br><img src="/images/izheyi/2017/02/kejiguan_01.JPG" alt=""><br><img src="/images/izheyi/2017/02/kejiguan_13.JPG" alt=""></p>
<p>儿童科技乐园，都说有各种科学知识展示，适合带小孩游玩，我觉得也就是一个游乐场而已，还有就是很多的熊孩子。<br><img src="/images/izheyi/2017/02/kejiguan_02.JPG" alt=""><br><img src="/images/izheyi/2017/02/kejiguan_03.JPG" alt=""><br><img src="/images/izheyi/2017/02/kejiguan_04.JPG" alt=""><br><img src="/images/izheyi/2017/02/kejiguan_05.JPG" alt=""><br><img src="/images/izheyi/2017/02/kejiguan_06.JPG" alt=""></p>
<a id="more"></a>
<p>四个展馆都去了，孩子貌似不是很感兴趣，有些东西可能还是太陌生了，而且是只能看不能玩，碰到能玩的还是很嗨的。<br>还有鲁班锁，让自己玩，遗憾的是捣鼓了好长时间，也没有安装起来。<br><img src="/images/izheyi/2017/02/kejiguan_07.JPG" alt=""><br><img src="/images/izheyi/2017/02/kejiguan_08.JPG" alt=""><br><img src="/images/izheyi/2017/02/kejiguan_09.JPG" alt=""><br><img src="/images/izheyi/2017/02/kejiguan_10.JPG" alt=""><br><img src="/images/izheyi/2017/02/kejiguan_11.JPG" alt=""><br><img src="/images/izheyi/2017/02/kejiguan_12.JPG" alt=""><br><img src="/images/izheyi/2017/02/kejiguan_14.JPG" alt=""><br><img src="/images/izheyi/2017/02/kejiguan_15.JPG" alt=""><br><img src="/images/izheyi/2017/02/kejiguan_16.JPG" alt=""><br><img src="/images/izheyi/2017/02/kejiguan_17.JPG" alt=""><br><img src="/images/izheyi/2017/02/kejiguan_18.JPG" alt=""><br><img src="/images/izheyi/2017/02/kejiguan_19.JPG" alt=""><br><img src="/images/izheyi/2017/02/kejiguan_21.JPG" alt=""><br><img src="/images/izheyi/2017/02/kejiguan_22.JPG" alt=""><br><img src="/images/izheyi/2017/02/kejiguan_23.JPG" alt=""><br><img src="/images/izheyi/2017/02/kejiguan_24.JPG" alt=""><br><img src="/images/izheyi/2017/02/kejiguan_25.JPG" alt=""><br><img src="/images/izheyi/2017/02/kejiguan_26.JPG" alt=""><br><img src="/images/izheyi/2017/02/kejiguan_27.JPG" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[2017春节]]></title>
      <url>http://izheyi.com/2017/01/30/2017%E6%98%A5%E8%8A%82/</url>
      <content type="html"><![CDATA[<p>今年由于种种原因，还是没能回的了老家过年，已经两年没有回家过年了，虽然说在家很无聊，回家呆不了三天就想着回来，但心里还是有想回家的冲动，不是纯粹为了过年，而是想回家。</p>
<p>本来说是去圆明园看庙会，竟然说不办了，买了票进去走了一圈就出来去了颐和园，圆明园大冬天的本来也就没啥好看的。颐和园也没活动，就看了腊梅展，因为经常来这里，跟平常没啥两样。<br><img src="/images/izheyi/2017/01/chunjie_01.JPG" alt=""><br><img src="/images/izheyi/2017/01/chunjie_02.JPG" alt=""><br><img src="/images/izheyi/2017/01/chunjie_03.JPG" alt=""><br><img src="/images/izheyi/2017/01/chunjie_11.JPG" alt=""></p>
<a id="more"></a>
<p>不过最后还是去了地坛庙会，那个人多呀，吃个东西都得排半天队，感觉也没多大意思，孩子玩的还是很开心。<br><img src="/images/izheyi/2017/01/chunjie_04.JPG" alt=""><br><img src="/images/izheyi/2017/01/chunjie_05.JPG" alt=""><br><img src="/images/izheyi/2017/01/chunjie_06.JPG" alt=""><br><img src="/images/izheyi/2017/01/chunjie_07.JPG" alt=""><br><img src="/images/izheyi/2017/01/chunjie_08.JPG" alt=""><br><img src="/images/izheyi/2017/01/chunjie_09.JPG" alt=""><br><img src="/images/izheyi/2017/01/chunjie_10.JPG" alt=""></p>
<p>在某人的极力推荐下，去吃了某家的饭，感觉非常一般。<br><img src="/images/izheyi/2017/01/chunjie_12.JPG" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[SoupUI - Jenkins run has error: Invalid format for date field]]></title>
      <url>http://izheyi.com/2016/12/16/SoupUI-Jenkins-run-has-error-Invalid-format-for-date-field/</url>
      <content type="html"><![CDATA[<p>In soapui, we use date in the below format:<br><img src="/images/soapui/date.jpg" alt=""><br>we can run correctly when we run this with SoupUI tool directly, but when we run with jenkinins + Maven, have invalid format error:<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   "<span class="attribute">status</span>": <span class="value"><span class="number">400</span></span>,</span><br><span class="line">   "<span class="attribute">message</span>": <span class="value"><span class="string">"Invalid format for from or to date field."</span></span><br><span class="line"></span>&#125;</span><br></pre></td></tr></table></figure></p>
<p>Seems the date doesn’t encoding when we run script with Jenkins, so we need to this manually when design script with SoapUI:<br><img src="/images/soapui/date_encode.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[SoupUI - Jenkins run has error:org.apache.xmlbeans.impl.xpath.saxon.XBeansXPath cannot be cast to org.apache.xmlbeans.impl.store.SaxonXBeansDelegate$SelectPathInterface]]></title>
      <url>http://izheyi.com/2016/12/05/SoupUI-Jenkins-run-has-error-java-lang-ClassCastException-org-apache-xmlbeans-impl-xpath-saxon-XBeansXPath-cannot-be-cast-to-org-apache-xmlbeans-impl-store-SaxonXBeansDelegate-SelectPathInterface/</url>
      <content type="html"><![CDATA[<p>Recently, i run SoapUI script with Jenkins + Maven, encounter the below error message:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">java<span class="class">.lang</span><span class="class">.RuntimeException</span>: java<span class="class">.lang</span><span class="class">.ClassCastException</span>: org<span class="class">.apache</span><span class="class">.xmlbeans</span><span class="class">.impl</span><span class="class">.xpath</span><span class="class">.saxon</span><span class="class">.XBeansXPath</span> cannot be cast to org<span class="class">.apache</span><span class="class">.xmlbeans</span><span class="class">.impl</span><span class="class">.store</span><span class="class">.SaxonXBeansDelegate</span><span class="variable">$SelectPathInterface</span></span><br><span class="line">	at org<span class="class">.apache</span><span class="class">.xmlbeans</span><span class="class">.impl</span><span class="class">.store</span><span class="class">.SaxonXBeansDelegate</span><span class="class">.createInstance</span>(SaxonXBeansDelegate<span class="class">.java</span>:<span class="number">102</span>)</span><br><span class="line">	at org<span class="class">.apache</span><span class="class">.xmlbeans</span><span class="class">.impl</span><span class="class">.store</span><span class="class">.Path</span><span class="variable">$SaxonPathImpl</span>.<span class="function"><span class="title">create</span><span class="params">(Path.java:<span class="number">448</span>)</span></span></span><br><span class="line">	at org<span class="class">.apache</span><span class="class">.xmlbeans</span><span class="class">.impl</span><span class="class">.store</span><span class="class">.Path</span><span class="class">.getCompiledPathSaxon</span>(Path<span class="class">.java</span>:<span class="number">185</span>)</span><br><span class="line">	at org<span class="class">.apache</span><span class="class">.xmlbeans</span><span class="class">.impl</span><span class="class">.store</span><span class="class">.Path</span><span class="class">.getCompiledPath</span>(Path<span class="class">.java</span>:<span class="number">115</span>)</span><br><span class="line">	at org<span class="class">.apache</span><span class="class">.xmlbeans</span><span class="class">.impl</span><span class="class">.store</span><span class="class">.Path</span><span class="class">.getCompiledPath</span>(Path<span class="class">.java</span>:<span class="number">91</span>)</span><br><span class="line">	at org<span class="class">.apache</span><span class="class">.xmlbeans</span><span class="class">.impl</span><span class="class">.store</span><span class="class">.Cursor</span>._selectPath(Cursor<span class="class">.java</span>:<span class="number">902</span>)</span><br><span class="line">	at org<span class="class">.apache</span><span class="class">.xmlbeans</span><span class="class">.impl</span><span class="class">.store</span><span class="class">.Cursor</span><span class="class">.selectPath</span>(Cursor<span class="class">.java</span>:<span class="number">2634</span>)</span><br><span class="line">	at org<span class="class">.apache</span><span class="class">.xmlbeans</span><span class="class">.impl</span><span class="class">.values</span><span class="class">.XmlObjectBase</span><span class="class">.selectPath</span>(XmlObjectBase<span class="class">.java</span>:<span class="number">431</span>)</span><br><span class="line">	at org<span class="class">.apache</span><span class="class">.xmlbeans</span><span class="class">.impl</span><span class="class">.values</span><span class="class">.XmlObjectBase</span><span class="class">.selectPath</span>(XmlObjectBase<span class="class">.java</span>:<span class="number">415</span>)</span><br><span class="line">	at com<span class="class">.eviware</span><span class="class">.soapui</span><span class="class">.support</span><span class="class">.xml</span><span class="class">.XmlUtils</span><span class="class">.getXPathValue</span>(XmlUtils<span class="class">.java</span>:<span class="number">1349</span>)</span><br><span class="line">	at com<span class="class">.eviware</span><span class="class">.soapui</span><span class="class">.assertion</span><span class="class">.messagecontent</span><span class="class">.MessageContent</span><span class="class">.setCurrent</span>(SourceFile:<span class="number">149</span>)</span><br><span class="line">	at com<span class="class">.eviware</span><span class="class">.soapui</span><span class="class">.impl</span><span class="class">.wsdl</span><span class="class">.teststeps</span><span class="class">.assertions</span><span class="class">.MessageContentAssertion</span><span class="class">.internalAssertResponse</span>(SourceFile:<span class="number">102</span>)</span><br><span class="line">	at com<span class="class">.eviware</span><span class="class">.soapui</span><span class="class">.impl</span><span class="class">.wsdl</span><span class="class">.teststeps</span><span class="class">.WsdlMessageAssertion</span><span class="class">.assertResponse</span>(WsdlMessageAssertion<span class="class">.java</span>:<span class="number">150</span>)</span><br><span class="line"><span class="number">08</span>:<span class="number">09</span>:<span class="number">30</span>,<span class="number">321</span> DEBUG [HttpClientSupport<span class="variable">$SoapUIHttpClient</span>] Attempt <span class="number">1</span> to execute request</span><br><span class="line">	at com<span class="class">.eviware</span><span class="class">.soapui</span><span class="class">.impl</span><span class="class">.wsdl</span><span class="class">.teststeps</span><span class="class">.RestTestRequest</span><span class="class">.assertResponse</span>(RestTestRequest<span class="class">.java</span>:<span class="number">141</span>)</span><br><span class="line">	at com<span class="class">.eviware</span><span class="class">.soapui</span><span class="class">.impl</span><span class="class">.wsdl</span><span class="class">.teststeps</span><span class="class">.RestTestRequest</span><span class="class">.setResponse</span>(RestTestRequest<span class="class">.java</span>:<span class="number">128</span>)</span><br><span class="line">	at com<span class="class">.eviware</span><span class="class">.soapui</span><span class="class">.impl</span><span class="class">.wsdl</span><span class="class">.teststeps</span><span class="class">.RestTestRequestStep</span><span class="class">.run</span>(RestTestRequestStep<span class="class">.java</span>:<span class="number">809</span>)</span><br></pre></td></tr></table></figure></p>
<p>Can’t find a method to solve this even google more, finally got it, update ‘poi-ooxml’ to the latest version in pom.xml.<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>poi-ooxml<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">version</span>&gt;</span>3.15<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Jenkins create job display blank page]]></title>
      <url>http://izheyi.com/2016/11/18/Jenkinis-create-job-blank-page/</url>
      <content type="html"><![CDATA[<p>After upgrade jenkins to latest version, i was not able to create a new job and while clicking the ‘New Item’ it directs to a blank page.</p>
<p><strong>Solution:</strong><br>Checked the error message, should be the plugin version issue, it works after i upgrade plugin to latest version.</p>
<p>You can try this method if you also encounter this issue, this may or may not help you^_^</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[SoapUI - property transfer between test cases]]></title>
      <url>http://izheyi.com/2016/11/09/SoapUI-property-transfer-between-test-cases/</url>
      <content type="html"><![CDATA[<p>When doing Restful API automation with SoapUI, case calling another case is very usually, here i did a little research, just a start.</p>
<h1 id="Simple-Demo"><a href="#Simple-Demo" class="headerlink" title="Simple Demo"></a>Simple Demo</h1><p>This demo is: login system, get the authorization token, then get the calendar list.<br><img src="/images/soapui/simple.jpg" alt=""></p>
<ol>
<li>Create a test suite and a test case, and add the login request.</li>
<li><p>To get the correct format authorization token.</p>
<figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> groovy.json.<span class="type">JsonSlurper</span></span><br><span class="line"><span class="keyword">import</span> groovy.json.*</span><br><span class="line"></span><br><span class="line">def response = context.expand( '$&#123;<span class="type">Login</span><span class="comment">#Response&#125;' )</span></span><br><span class="line">def <span class="type">JsonSlurper</span> jsonSlurper = new <span class="type">JsonSlurper</span>()</span><br><span class="line">def <span class="type">Object</span> <span class="literal">result</span> = jsonSlurper.parseText(response)</span><br><span class="line">def token = <span class="literal">result</span>.token</span><br><span class="line">def authorization = <span class="string">"Bearer "</span>+token</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> authorization</span><br></pre></td></tr></table></figure>
</li>
<li><p>Transer property to getCalendar request.<br><img src="/images/soapui/simple_transferprop.jpg" alt=""></p>
</li>
</ol>
<h1 id="Run-TestCase"><a href="#Run-TestCase" class="headerlink" title="Run TestCase"></a>Run TestCase</h1><p>From demo we can see, the login request adding in get calendar API, in this way, we will adding login request in each test case. if the login request change someday, we need to update all test cases, not easy to maintain, so here we can separate login request to another test suite.<br><img src="/images/soapui/runtestcase.jpg" alt=""></p>
<ol>
<li>Separate login test suite.</li>
<li><p>Set customized token to a property use Groovy.</p>
<figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> groovy.json.<span class="type">JsonSlurper</span></span><br><span class="line"><span class="keyword">import</span> groovy.json.*</span><br><span class="line"></span><br><span class="line">def response = context.expand( '$&#123;<span class="type">Login</span><span class="comment">#Response&#125;' )</span></span><br><span class="line">def <span class="type">JsonSlurper</span> jsonSlurper = new <span class="type">JsonSlurper</span>()</span><br><span class="line">def <span class="type">Object</span> <span class="literal">result</span> = jsonSlurper.parseText(response)</span><br><span class="line">def token = <span class="literal">result</span>.token</span><br><span class="line">def authorization = <span class="string">"Bearer "</span>+token</span><br><span class="line"></span><br><span class="line">testRunner.testCase.setPropertyValue(<span class="string">"token"</span>, authorization)</span><br></pre></td></tr></table></figure>
</li>
<li><p>Setup get calendar test suite.</p>
</li>
<li>Add ‘Run TestCase’ in test case.<br><img src="/images/soapui/runtestcase_add.jpg" alt=""></li>
<li>Add token(return from ‘Run TestCase’ step) to get calendar request.<br><img src="/images/soapui/runtestcase_setvalue.jpg" alt=""></li>
</ol>
<h1 id="Groovy-Script"><a href="#Groovy-Script" class="headerlink" title="Groovy Script"></a>Groovy Script</h1><p>Use ‘Run TestCase’ method, it’s not easy to determine which user to login, need to maintain in the login suite, the best is to pass user/pwd from get calendar request, and here we go.<br><img src="/images/soapui/groovy.jpg" alt=""></p>
<ol>
<li><p>In get calendar case, we use groovy script to run login request instead of Run TestCase.<br><em>In CaseB &gt; getCalendar &gt; Login</em></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import com<span class="class">.eviware</span><span class="class">.soapui</span><span class="class">.support</span><span class="class">.types</span><span class="class">.StringToObjectMap</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// get your test case</span></span><br><span class="line">def testCase1 = testRunner<span class="class">.testCase</span><span class="class">.testSuite</span><span class="class">.project</span><span class="class">.getTestSuiteByName</span>(<span class="string">"CaseA"</span>).<span class="function"><span class="title">getTestCaseByName</span><span class="params">(<span class="string">"pass"</span>)</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// set the user and password properties in the context</span></span><br><span class="line">context.<span class="function"><span class="title">setProperty</span><span class="params">(<span class="string">"Login_userName"</span>,<span class="string">"yongfei.hu"</span>)</span></span></span><br><span class="line">context.<span class="function"><span class="title">setProperty</span><span class="params">(<span class="string">"Login_password"</span>,<span class="string">"Beyond@123"</span>)</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// run the testCase</span></span><br><span class="line">def contextMap = new <span class="function"><span class="title">StringToObjectMap</span><span class="params">( context )</span></span></span><br><span class="line">testCase1.<span class="function"><span class="title">run</span><span class="params">(contextMap,false)</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// return the token value</span></span><br><span class="line">return  testCase1.<span class="function"><span class="title">getPropertyValue</span><span class="params">(<span class="string">"token"</span>)</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Then need to update the pass parameter to login request.<br><img src="/images/soapui/groovy_property.jpg" alt=""></p>
</li>
<li>Add token(return from ‘Login’ step) to get calendar request.<br><img src="/images/soapui/groovy_propertyvalue.jpg" alt=""></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[SoapUI - change endpoint for TestCase]]></title>
      <url>http://izheyi.com/2016/10/15/SoapUI-change-endpoint-for-TestCase/</url>
      <content type="html"><![CDATA[<p>在用SoapUI时，会碰到baseUrl改变的情况，需要对所有的Case修改成最新的endpoint。</p>
<p>我们可以在Project中统一的变更来实现：</p>
<ol>
<li>在Project Tab中双击左侧导航栏的Service URL；</li>
<li>选择‘Endpoints’；</li>
<li>修改Endpoint。<br><img src="/images/soapui/endpoint_url.jpg" alt=""></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[日日新儿童绘画课]]></title>
      <url>http://izheyi.com/2016/10/06/%E5%84%BF%E7%AB%A5%E7%BB%98%E7%94%BB%E8%AF%BE/</url>
      <content type="html"><![CDATA[<p>一直吵着要学画画，去年等了一年也没有开国画的班，今年还是开不起来，总算报了儿童绘画的班，玩的开心就好。</p>
<p>以下作品仅做留念。</p>
<p><img src="/images/izheyi/2016/10/paint_01.jpg" alt=""><br><img src="/images/izheyi/2016/10/paint_02.jpg" alt=""><br><img src="/images/izheyi/2016/10/paint_03.jpg" alt=""><br><img src="/images/izheyi/2016/10/paint_04.jpg" alt=""></p>
<a id="more"></a>
<p><img src="/images/izheyi/2016/10/paint_05.jpg" alt=""><br><img src="/images/izheyi/2016/10/paint_06.jpg" alt=""><br><img src="/images/izheyi/2016/10/paint_07.jpg" alt=""><br><img src="/images/izheyi/2016/10/paint_08.jpg" alt=""><br><img src="/images/izheyi/2016/10/paint_09.jpg" alt=""><br><img src="/images/izheyi/2016/10/paint_10.jpg" alt=""><br><img src="/images/izheyi/2016/10/paint_11.jpg" alt=""><br><img src="/images/izheyi/2016/10/paint_12.jpg" alt=""><br><img src="/images/izheyi/2016/10/paint_13.jpg" alt=""><br><img src="/images/izheyi/2016/10/paint_14.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[逛植物园]]></title>
      <url>http://izheyi.com/2016/10/02/%E9%80%9B%E6%A4%8D%E7%89%A9%E5%9B%AD/</url>
      <content type="html"><![CDATA[<p>这个国庆不是严重雾霾，就是连绵阴雨，就好了一天，挣扎着去了植物园，正好赶上了这唯一的好天。</p>
<p>小丁大概两岁的时候来过一次，来去匆匆，都没来得及好好看看。以前总觉得植物园有啥好看的，这次感受就不一样了，确实是挺漂亮的一个地方，环境好，植物种类也很多，玩的人很多，比想象的要漂亮的多。</p>
<p><img src="/images/izheyi/2016/10/zhiwuyuan_0.JPG" alt=""><br><img src="/images/izheyi/2016/10/zhiwuyuan_01.jpg" alt=""><br><img src="/images/izheyi/2016/10/zhiwuyuan_02.jpg" alt=""><br><img src="/images/izheyi/2016/10/zhiwuyuan_03.jpg" alt=""></p>
<a id="more"></a>
<p><img src="/images/izheyi/2016/10/zhiwuyuan_1.JPG" alt=""><br><img src="/images/izheyi/2016/10/zhiwuyuan_2.JPG" alt=""><br><img src="/images/izheyi/2016/10/zhiwuyuan_3.JPG" alt=""><br><img src="/images/izheyi/2016/10/zhiwuyuan_4.JPG" alt=""><br><img src="/images/izheyi/2016/10/zhiwuyuan_5.JPG" alt=""><br><img src="/images/izheyi/2016/10/zhiwuyuan_6.JPG" alt=""><br><img src="/images/izheyi/2016/10/zhiwuyuan_7.JPG" alt=""><br><img src="/images/izheyi/2016/10/zhiwuyuan_8.JPG" alt=""><br><img src="/images/izheyi/2016/10/zhiwuyuan_9.JPG" alt=""><br><img src="/images/izheyi/2016/10/zhiwuyuan_10.JPG" alt=""><br><img src="/images/izheyi/2016/10/zhiwuyuan_11.JPG" alt=""><br><img src="/images/izheyi/2016/10/zhiwuyuan_12.JPG" alt=""><br><img src="/images/izheyi/2016/10/zhiwuyuan_13.JPG" alt=""><br><img src="/images/izheyi/2016/10/zhiwuyuan_14.JPG" alt=""><br><img src="/images/izheyi/2016/10/zhiwuyuan_15.JPG" alt=""><br><img src="/images/izheyi/2016/10/zhiwuyuan_16.JPG" alt=""><br><img src="/images/izheyi/2016/10/zhiwuyuan_17.JPG" alt=""><br><img src="/images/izheyi/2016/10/zhiwuyuan_18.JPG" alt=""><br><img src="/images/izheyi/2016/10/zhiwuyuan_19.JPG" alt=""><br><img src="/images/izheyi/2016/10/zhiwuyuan_20.JPG" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[做性能测试时，怎么判断网络带宽够不够]]></title>
      <url>http://izheyi.com/2016/09/12/%E5%81%9A%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E6%97%B6%EF%BC%8C%E6%80%8E%E4%B9%88%E5%88%A4%E6%96%AD%E7%BD%91%E7%BB%9C%E5%B8%A6%E5%AE%BD%E5%A4%9F%E4%B8%8D%E5%A4%9F/</url>
      <content type="html"><![CDATA[<p>简单记录一下怎么判断网络带宽对性能测试的影响。</p>
<p><em>注：100Mbps = 12.5M/s，带宽是bps</em></p>
<ol>
<li><p>压力机和服务器之间的真实带宽<br>这个一般自己来测试一下，可以用工具iperf， 详细请看：<a href="https://iperf.fr/" target="_blank" rel="external">iperf</a><br><img src="/images/performancetesting/iperf.jpg" alt=""><br>这样，就可以获得二者之间的带宽为393M/s</p>
</li>
<li><p>单个用户跑业务的吞吐量的平均值<br>假设跑完后的平均值是1000k，那需要的带宽就约是8M；若是想跑100个用户就需要800M，根据第一步测试的结果实际带宽是393M，所以是跑100个用户带宽是不够的。</p>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[去了N次的北京动物园]]></title>
      <url>http://izheyi.com/2016/08/28/%E5%8E%BB%E4%BA%86N%E6%AC%A1%E7%9A%84%E5%8C%97%E4%BA%AC%E5%8A%A8%E7%89%A9%E5%9B%AD/</url>
      <content type="html"><![CDATA[<p>小朋友自己的计划是抽出一天去动物园玩，玩的很开心，每一次都有不周的收获，认识不同的动物和习性。</p>
<p>在儿童乐园还认识了一个叫贝贝的小朋友，长大了，到哪都能找个小朋友玩，希望你以后还能这么的开心，能找到你的好朋友。<br><img src="/images/izheyi/2016/08/zoo_1.JPG" alt=""><br><img src="/images/izheyi/2016/08/zoo_2.JPG" alt=""><br><img src="/images/izheyi/2016/08/zoo_4.JPG" alt=""></p>
<a id="more"></a>
<p><img src="/images/izheyi/2016/08/zoo_5.JPG" alt=""><br><img src="/images/izheyi/2016/08/zoo_6.JPG" alt=""><br><img src="/images/izheyi/2016/08/zoo_7.JPG" alt=""><br><img src="/images/izheyi/2016/08/zoo_8.JPG" alt=""><br><img src="/images/izheyi/2016/08/zoo_9.JPG" alt=""><br><img src="/images/izheyi/2016/08/zoo_10.JPG" alt=""><br><img src="/images/izheyi/2016/08/zoo_11.JPG" alt=""><br><img src="/images/izheyi/2016/08/zoo_12.JPG" alt=""><br><img src="/images/izheyi/2016/08/zoo_13.JPG" alt=""><br><img src="/images/izheyi/2016/08/zoo_14.JPG" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Load Runner - 响应时间VS事务时间]]></title>
      <url>http://izheyi.com/2016/08/10/Load-Runner-%E5%93%8D%E5%BA%94%E6%97%B6%E9%97%B4VS%E4%BA%8B%E5%8A%A1%E6%97%B6%E9%97%B4/</url>
      <content type="html"><![CDATA[<h1 id="响应时间"><a href="#响应时间" class="headerlink" title="响应时间"></a>响应时间</h1><p>响应时间是通过记录用户请求的开始时间和服务器返回内容到用户的时间差值来计算用户操作响应时间的。<br><img src="/images/performancetesting/rt.jpg" alt=""></p>
<ul>
<li>网络时间： N1…N6</li>
<li>Web服务器时间： WT</li>
<li>App服务器时间： AT</li>
<li>DB服务器时间： DT<br>在现实中，Web Server，App Server，Database Server一般都放在一个高速的局域网中，所以它们之间的网络时间s可以忽略。</li>
</ul>
<h1 id="事务时间"><a href="#事务时间" class="headerlink" title="事务时间"></a>事务时间</h1><p>事务的官方定义：事务是指用户在客户端做一种或多种业务所需要的操作集(actions)，通过事务开始和结束函数可以标记完成该业务所需要的操作内容(脚本section)。<br>对于一个事务时间来说，一般由4个部分组成：<br><strong>[Tr = RT + Tt + Wasted Time]</strong></p>
<ul>
<li><p>响应时间</p>
</li>
<li><p>Think Time<br>Think Time是为了更加真实的模拟用户场景。</p>
  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Action()</span><br><span class="line">&#123;</span><br><span class="line">	lr_start_transaction(<span class="string">"自身时间"</span>);</span><br><span class="line">	lr_think_time(<span class="number">3</span>);</span><br><span class="line">	lr_end_transaction(<span class="string">"自身时间"</span>, LR_AUTO);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>要在Run-time Settings中设置Think Time，启用Replay Think Time。Replay Log:</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Starting iteration <span class="number">1</span>.</span><br><span class="line">Starting action Action.</span><br><span class="line">Action.<span class="function"><span class="title">c</span><span class="params">(<span class="number">3</span>)</span></span>: Notify: Transaction <span class="string">"自身时间"</span> started.</span><br><span class="line">Action.<span class="function"><span class="title">c</span><span class="params">(<span class="number">4</span>)</span></span>: lr_think_time: <span class="number">3.00</span> seconds.</span><br><span class="line">Action.<span class="function"><span class="title">c</span><span class="params">(<span class="number">5</span>)</span></span>: Notify: Transaction <span class="string">"自身时间"</span> ended with <span class="string">"Pass"</span> status (Duration: <span class="number">3.0053</span> Think Time: <span class="number">2.9992</span>).</span><br><span class="line">Ending action Action.</span><br><span class="line">Ending iteration <span class="number">1</span>.</span><br></pre></td></tr></table></figure>
</li>
<li><p>事务自身时间</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Action()</span><br><span class="line">&#123;</span><br><span class="line">	lr_start_transaction(<span class="string">"自身时间"</span>);</span><br><span class="line">	lr_end_transaction(<span class="string">"自身时间"</span>, LR_AUTO);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Replay Log:</p>
<figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">Starting</span> iteration <span class="number">1</span>.</span><br><span class="line"><span class="variable">Starting</span> action <span class="variable">Action</span>.</span><br><span class="line"><span class="variable">Action</span>.c(<span class="number">3</span>): <span class="variable">Notify</span>: <span class="variable">Transaction</span> <span class="string">"自身时间"</span> started.</span><br><span class="line"><span class="variable">Action</span>.c(<span class="number">5</span>): <span class="variable">Notify</span>: <span class="variable">Transaction</span> <span class="string">"自身时间"</span> ended with <span class="string">"Pass"</span> status (<span class="variable">Duration</span>: <span class="number">0.0016</span>).</span><br><span class="line"><span class="variable">Ending</span> action <span class="variable">Action</span>.</span><br><span class="line"><span class="variable">Ending</span> iteration <span class="number">1</span>.</span><br></pre></td></tr></table></figure>
<p>事务中哪怕没有操作，也是需要时间的，不过这个时间一般都非常少，所以可以忽略。</p>
</li>
<li><p>Wasted Time<br>在默认情况下，LoadRunner会将自身脚本运行浪费的时间自动记录Wasted Time，例如执行关联，检查点等函数的时间。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Action()</span><br><span class="line">&#123;</span><br><span class="line">    lr_start_transaction(<span class="string">"waste time"</span>);</span><br><span class="line">	web_url(<span class="string">"baidu"</span>, <span class="string">"URL=http://baidu.com/"</span>, LAST);</span><br><span class="line">    lr_end_transaction(<span class="string">"waste time"</span>, LR_AUTO);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Replay Log:</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Action.<span class="function"><span class="title">c</span><span class="params">(<span class="number">3</span>)</span></span>: Notify: Transaction <span class="string">"waste time"</span> started.</span><br><span class="line">Action.<span class="function"><span class="title">c</span><span class="params">(<span class="number">4</span>)</span></span>: Detected non-resource <span class="string">"http://www.baidu.com/"</span> <span class="keyword">in</span> <span class="string">"http://baidu.com/"</span>  	[MsgId: MMSG-<span class="number">26574</span>]</span><br><span class="line">Action.<span class="function"><span class="title">c</span><span class="params">(<span class="number">4</span>)</span></span>: Found resource <span class="string">"http://www.baidu.com/img/bd_logo1.png"</span> <span class="keyword">in</span> HTML <span class="string">"http://www.baidu.com/"</span>  	[MsgId: MMSG-<span class="number">26659</span>]</span><br><span class="line">Action.<span class="function"><span class="title">c</span><span class="params">(<span class="number">4</span>)</span></span>: Found resource <span class="string">"http://www.baidu.com/img/baidu_jgylogo3.gif"</span> <span class="keyword">in</span> HTML <span class="string">"http://www.baidu.com/"</span>  	[MsgId: MMSG-<span class="number">26659</span>]</span><br><span class="line">Action.<span class="function"><span class="title">c</span><span class="params">(<span class="number">4</span>)</span></span>: Found resource <span class="string">"http://s1.bdstatic.com/r/www/cache/static/jquery/jquery-1.10.2.min_f2fb5194.js"</span> <span class="keyword">in</span> HTML <span class="string">"http://www.baidu.com/"</span>  	[MsgId: MMSG-<span class="number">26659</span>]</span><br><span class="line">Action.<span class="function"><span class="title">c</span><span class="params">(<span class="number">4</span>)</span></span>: <span class="function"><span class="title">web_url</span><span class="params">(<span class="string">"baidu"</span>)</span></span> was successful, <span class="number">69095</span> <span class="tag">body</span> bytes, <span class="number">2403</span> <span class="tag">header</span> bytes, <span class="number">13</span> chunking overhead bytes  	[MsgId: MMSG-<span class="number">26385</span>]</span><br><span class="line">Action.<span class="function"><span class="title">c</span><span class="params">(<span class="number">5</span>)</span></span>: Notify: Transaction <span class="string">"waste time"</span> ended with <span class="string">"Pass"</span> status (Duration: <span class="number">9.6275</span> Wasted Time: <span class="number">0.3107</span>).</span><br></pre></td></tr></table></figure>
<p>某些时候外部接口进行处理所消耗的时间也会影响事务的时间，这个时间LoadRunner无法处理。比如对用户的加密/解密。就需要计算这些时间开销，并且将这个开销的时间记入Wasted Time中：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//<span class="operator"><span class="keyword">use</span> timers <span class="keyword">to</span> <span class="keyword">collect</span> wasted <span class="keyword">time</span>, <span class="keyword">and</span> the <span class="keyword">use</span> lr_wasted_time <span class="keyword">to</span> remove that wasted <span class="keyword">time</span> <span class="keyword">from</span> the transactions. </span><br><span class="line">timer = lr_start_timer();</span></span><br><span class="line">wasteTime = lr_end_timer(timer);</span><br><span class="line">lr_wasted_time(wasteTime);</span><br></pre></td></tr></table></figure>
<p>注：在做删除的时候要看好了，别忘了加上LoadRunner自身的时间。</p>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[读书真的无用吗？]]></title>
      <url>http://izheyi.com/2016/07/25/%E8%AF%BB%E4%B9%A6%E7%9C%9F%E7%9A%84%E6%97%A0%E7%94%A8%E5%90%97%EF%BC%9F/</url>
      <content type="html"><![CDATA[<blockquote>
<p>上世纪末以来，特别是进入21世纪，在经济大潮冲击下，金钱成为衡量人的价值的标准，加上大学生难就业，工资低等多种因素，就又有了这种讨论。</p>
</blockquote>
<p><img src="/images/shenghuo/book.jpg" alt=""></p>
<p>刚大学毕业拿不到高工资才是正常的呀，毕业后的前三年，工资的涨幅也不会太大，而三年之后大多会成倍增长。</p>
<p>人生本就短短几十年，一定要长远来看待，不要只看眼前的利益。所谓的读书无用，我还没有看到这个，倒是看见很多后悔没有上学读书，后悔没有拿到本科文凭的人。</p>
<p>小A在我们老家那算是干啥啥不会，弄啥啥不中，要是当时不读书，都说在老家待着就饿死了。</p>
<p>小A成绩一直都很一般，高考也没考上本科，但是只要想上，老爸砸锅卖铁也支持，村里的人就不这么认为了，专科又不是好学校，上了再找不到工作，白花钱；邻居拿自家儿子做比较，高中毕业去打工一年挣4万，你这上学一年花2万，几年下来差几万，你毕业了工资也不见得比打工高。十年后的今天我想现在请问一下，你35岁了还靠出力打工吗？现在的经济下，你还能那么好挣钱吗？可是小A因为读书增长了见识，因为读书有了梦想和目标，因为读书留在了你们所不屑的大城市（蜗居，节奏快），因为读书有了不会被饿死的稳定工作，因为读书可以跟你侃一天都不带重样的（内向，从小到大都没跟邻居说过话）……</p>
<p>有的孩子，父母是研究生学历，早早就让孩子看书看电影，学英语练舞蹈。这样家庭出身的孩子，一旦选择努力，那么他们拥有的视野和从小养成的习惯，会帮助他们看得很远很远。所以对于大多数像我们这样的农村孩子来说，就要更加努力，读书对我们来说就是唯一的出路。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[陪小曦姐姐暑假游玩]]></title>
      <url>http://izheyi.com/2016/07/20/%E9%99%AA%E5%B0%8F%E6%9B%A6%E5%A7%90%E5%A7%90%E6%9A%91%E5%81%87%E6%B8%B8%E7%8E%A9/</url>
      <content type="html"><![CDATA[<p>直接上图好了，不想说太多话，这段时间两个孩子在一块，感触很多，父母的陪伴永远也替代不了小朋友之间的相处，或许是真的要好好想一下闺女一直说的想要一个小弟弟/妹妹的想法。</p>
<p>话说你是来打酱油的？还是来抢镜的？<br><img src="/images/izheyi/2016/07/qiang_0.jpg" alt=""><br><img src="/images/izheyi/2016/07/qiang_1.jpg" alt=""><br><img src="/images/izheyi/2016/07/qiang_2.jpg" alt=""><br><img src="/images/izheyi/2016/07/qiang_3.jpg" alt=""><br><img src="/images/izheyi/2016/07/qiang_4.jpg" alt=""><br><img src="/images/izheyi/2016/07/qiang_5.jpg" alt=""><br><img src="/images/izheyi/2016/07/qiang_6.jpg" alt=""><br><img src="/images/izheyi/2016/07/qiang_7.jpg" alt=""></p>
<a id="more"></a>
<p>正常模式<br><img src="/images/izheyi/2016/07/xiaoxi_1.jpg" alt=""><br><img src="/images/izheyi/2016/07/xiaoxi_2.jpg" alt=""><br><img src="/images/izheyi/2016/07/xiaoxi_3.jpg" alt=""><br><img src="/images/izheyi/2016/07/xiaoxi_4.jpg" alt=""><br><img src="/images/izheyi/2016/07/xiaoxi_5.jpg" alt=""><br><img src="/images/izheyi/2016/07/xiaoxi_6.jpg" alt=""><br><img src="/images/izheyi/2016/07/xiaoxi_7.jpg" alt=""><br><img src="/images/izheyi/2016/07/xiaoxi_8.jpg" alt=""><br><img src="/images/izheyi/2016/07/xiaoxi_9.jpg" alt=""><br><img src="/images/izheyi/2016/07/xiaoxi_10.jpg" alt=""><br><img src="/images/izheyi/2016/07/xiaoxi_11.jpg" alt=""><br><img src="/images/izheyi/2016/07/xiaoxi_12.jpg" alt=""><br><img src="/images/izheyi/2016/07/xiaoxi_13.jpg" alt=""><br><img src="/images/izheyi/2016/07/xiaoxi_14.jpg" alt=""><br><img src="/images/izheyi/2016/07/xiaoxi_15.jpg" alt=""><br><img src="/images/izheyi/2016/07/xiaoxi_16.jpg" alt=""><br><img src="/images/izheyi/2016/07/xiaoxi_17.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Load Runner - VuGen参数化高阶说明]]></title>
      <url>http://izheyi.com/2016/07/11/Load-Runner-VuGen%E5%8F%82%E6%95%B0%E5%8C%96%E9%AB%98%E9%98%B6%E8%AF%B4%E6%98%8E/</url>
      <content type="html"><![CDATA[<p>前面我们说了为什么要做参数化，以及参数化的具体实现，其实说到底就是要实现数据驱动，其实不管是做性能还是功能自动化，都是相通的，是个要考虑的问题，我们这里拿Load Runner做个说明。</p>
<h1 id="1-录制-编写基本脚本"><a href="#1-录制-编写基本脚本" class="headerlink" title="1. 录制/编写基本脚本"></a>1. 录制/编写基本脚本</h1><p>通过录制/编写来实现基本的业务流程，这种情况下，数据是Hard Code在脚本中的，在并发性能的时候，这种数据是很不真实的场景。</p>
<h1 id="2-实现参数化-数据驱动"><a href="#2-实现参数化-数据驱动" class="headerlink" title="2. 实现参数化(数据驱动)"></a>2. 实现参数化(数据驱动)</h1><p>为了模拟更真实的场景，保证业务功能的正确性，我们要做数据的参数化，具体请参考 <a href="/2015/12/22/Load-Runner-VuGen参数化基础/">LR参数化实现</a></p>
<h1 id="3-实现动态参数化"><a href="#3-实现动态参数化" class="headerlink" title="3. 实现动态参数化"></a>3. 实现动态参数化</h1><p>参数化把数据和脚本分离开来，但是有时候会有问题。比如下面这个购物场景，我想随机进入一个商品品类中再选择一件商品，对品类进行参数化，即把所有品类都放到外部数据文件中，那万一品类有增加/减少了，都得再回去修改数据文件，这也是一个很头疼的工作。<br>理想的状态下，应该是在选择品类之前，先从页面上动态获取当前所有的品类，然后再进行品类选择，这样不管在什么情况下，业务的正确性都是能够保证的。<br>在Load Runner中，我们就要用到关联了：</p>
<ol>
<li><p>获取所有的商品品类</p>
<figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">web_reg_save_param(<span class="string">"categorties"</span>,</span><br><span class="line">		<span class="string">"LB=cat="</span>,</span><br><span class="line">		<span class="string">"RB=\"</span>&gt;<span class="string">",</span></span><br><span class="line">		<span class="string">"Ord=All"</span>,</span><br><span class="line">		LAST);</span><br></pre></td></tr></table></figure>
</li>
<li><p>获取随机的商品品类</p>
<figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lr_save_string<span class="list">(<span class="keyword">lr_paramarr_random</span><span class="list">(<span class="string">"categorties"</span>)</span>, <span class="string">"category"</span>)</span><span class="comment">;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>进行后续的操作</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">web_url</span>(<span class="string">"Homepage"</span>, </span><br><span class="line">		<span class="string">"URL=http://xxx.com/list.html?cat=&#123;category&#125;"</span>, </span><br><span class="line">		LAST);</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[软件测试的一些思考]]></title>
      <url>http://izheyi.com/2016/06/29/%E6%B5%8B%E8%AF%95%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83/</url>
      <content type="html"><![CDATA[<p>从毕业后一直都算是混在测试圈，确切的说，从大三的时候就开始学习软件测试相关的知识，目前来看，没有入错行，从自身等各方面考量，我的选择还是正确的。</p>
<p>一路走来，感慨良多，很幸运自己实习的时候就进了个好公司，也很幸运这一路走来领导的信任和朋友的支持。从一个只知道黑盒功能测试的小白，全靠自己摸索，从功能到自动化，再到性能，进化到稍微有一点自己的知识体系的测试人。咱不能跟测试界的大牛比，比起多年前的自己，现在是好了很多，足矣。</p>
<p>列一些大体的知识框架（个人观点），大家共勉：</p>
<h1 id="测试的目的"><a href="#测试的目的" class="headerlink" title="测试的目的"></a>测试的目的</h1><p>一说这个，首先反应出来的就是找Bug，验证RQMT，如果更高层次的来看待这个问题，测试是不是可以用来评估软件的质量；是不是用来预防Bug。</p>
<h1 id="测试的本质"><a href="#测试的本质" class="headerlink" title="测试的本质"></a>测试的本质</h1><p>说到底，就是： 数据 + 执行 + 验证。</p>
<h1 id="测试人员的素质"><a href="#测试人员的素质" class="headerlink" title="测试人员的素质"></a>测试人员的素质</h1><p>一说这个，好多人都会说一些基本的素质，如什么‘三心二意’了，==。 做久了就会发现，其实是有更多更高的能力需要我们慢慢培养的：快速学习的能力，问题分析定位能力，编码的能力，探索测试，等等。。</p>
<h1 id="测试的工作效率"><a href="#测试的工作效率" class="headerlink" title="测试的工作效率"></a>测试的工作效率</h1><p>工作效率到底取决于什么：你的测试技术高？你的编码能力强？大家可以思考总结一下。</p>
<h1 id="测试的价值"><a href="#测试的价值" class="headerlink" title="测试的价值"></a>测试的价值</h1><p>不管在什么行业，做什么工作，得体现出自身的价值，才能得到公司的认可，也能满足自身更高层次的需求。可以从以下角度思考一下：</p>
<ol>
<li>公司角度</li>
<li>项目角度</li>
<li>自身角度</li>
</ol>
<h1 id="测试的影响力"><a href="#测试的影响力" class="headerlink" title="测试的影响力"></a>测试的影响力</h1><p>This world is not for silence people，提高自身影响力，才能更好的更容易的做事，得到大家的认可，从而实现自己的价值。 可以做以下几点思考：</p>
<ol>
<li>测试的流程制定和把控</li>
<li>测试相关工作组件的相互支撑的体系</li>
<li>专业化的体现</li>
<li>其他组合作</li>
</ol>
<h1 id="测试的现状"><a href="#测试的现状" class="headerlink" title="测试的现状"></a>测试的现状</h1><p>目前讨论比较多的</p>
<ol>
<li>0和-1的游戏</li>
<li>测试这个行业会不会消失</li>
<li>自动化的重要性</li>
</ol>
<p>只是对测试的整体的一个总结，详细具体的相关Item，请参见Blog其他文章。同时欢迎拍砖，共同探讨。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[端午节十渡游玩]]></title>
      <url>http://izheyi.com/2016/06/11/%E7%AB%AF%E5%8D%88%E8%8A%82%E5%8D%81%E6%B8%A1%E6%B8%B8%E7%8E%A9/</url>
      <content type="html"><![CDATA[<p>端午节和小朋友一块去了十渡玩了两天，景色还是不错的，毕竟在山里，有山有水，玩的很开心。不过有一点，人太多了，碰到节假日还是不要出去的好。</p>
<h1 id="玻璃栈道和高山漂流"><a href="#玻璃栈道和高山漂流" class="headerlink" title="玻璃栈道和高山漂流"></a>玻璃栈道和高山漂流</h1><p>玻璃栈道倒真没觉得有啥害怕的，也很短，很没意思。<br>一直期待能玩一次漂流，感觉这是这次最有意思的项目了，遗憾的是人太多了，从下面下来也就不过两分钟，光排队就用了2个半小时，小朋友还有点害怕了，中间的台阶就提前下来了:(</p>
<p><img src="/images/izheyi/2016/06/zhandao_0.jpg" alt=""><br><img src="/images/izheyi/2016/06/zhandao_1.jpg" alt=""><br><img src="/images/izheyi/2016/06/zhandao_2.jpg" alt=""><br><img src="/images/izheyi/2016/06/zhandao_3.jpg" alt=""><br><img src="/images/izheyi/2016/06/zhandao_4.jpg" alt=""><br><img src="/images/izheyi/2016/06/zhandao_5.jpg" alt=""></p>
<a id="more"></a>
<h1 id="孤山寨"><a href="#孤山寨" class="headerlink" title="孤山寨"></a>孤山寨</h1><p>进入峡谷，两侧山峰林立，峡谷内有溪水流下，沿峡谷河床山路拾级而上，景致幽美。<br><img src="/images/izheyi/2016/06/gushanzai_1.jpg" alt=""><br><img src="/images/izheyi/2016/06/gushanzai_2.jpg" alt=""><br><img src="/images/izheyi/2016/06/gushanzai_3.jpg" alt=""><br><img src="/images/izheyi/2016/06/gushanzai_4.jpg" alt=""><br><img src="/images/izheyi/2016/06/gushanzai_5.jpg" alt=""><br><img src="/images/izheyi/2016/06/gushanzai_6.jpg" alt=""><br><img src="/images/izheyi/2016/06/gushanzai_7.jpg" alt=""><br><img src="/images/izheyi/2016/06/gushanzai_8.jpg" alt=""><br><img src="/images/izheyi/2016/06/gushanzai_9.jpg" alt=""></p>
<p>在排队中爬上了“一线天”，只见陡峭山坡的石壁之中裂开一条巨缝，最窄处仅能一人通过。<br><img src="/images/izheyi/2016/06/yixiantian_1.jpg" alt=""><br><img src="/images/izheyi/2016/06/yixiantian_2.jpg" alt=""><br><img src="/images/izheyi/2016/06/yixiantian_3.jpg" alt=""><br><img src="/images/izheyi/2016/06/yixiantian_4.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Robot Framework-Establish Customize Library Through Implement Send Email Function]]></title>
      <url>http://izheyi.com/2016/06/08/Robot-Framework-Establish-Customize-Library-Through-Implement-Send-Email-Function/</url>
      <content type="html"><![CDATA[<p>When using Robot Framework, yes, it’s fast and easy to use, but for some special scenario, Robot Framework didn’t provide relevant library and keyword, such as send email.<br>We can implement this through keyword <code>Evaluate</code>, but it’s maybe not appropriate way. so it’s better for us to encapsulate system level library and keyword.</p>
<h1 id="Implementation"><a href="#Implementation" class="headerlink" title="Implementation"></a>Implementation</h1><p>Here we implement this by sending mail:</p>
<ol>
<li>In python Lib\site-packages folder(e.g.,C:\Python27\Lib\site-packages ), create folder ‘GmailLibrary’.</li>
<li><p>Design send mail library ‘sendmail.py’</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">import smtplib</span><br><span class="line">from email<span class="class">.MIMEMultipart</span> import MIMEMultipart</span><br><span class="line">from email<span class="class">.MIMEBase</span> import MIMEBase</span><br><span class="line">from email<span class="class">.MIMEText</span> import MIMEText</span><br><span class="line">from email import Encoders</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line">class <span class="function"><span class="title">SendEmailUtility</span><span class="params">(object)</span></span>:</span><br><span class="line"></span><br><span class="line">    ROBOT_LIBRARY_SCOPE = <span class="string">'Global'</span></span><br><span class="line">    </span><br><span class="line">    def __init__(self):</span><br><span class="line">        print <span class="string">'send email utility'</span></span><br><span class="line">        </span><br><span class="line">    def <span class="function"><span class="title">send_mail_no_attachment</span><span class="params">(self,from_user,from_password,to, subject, text)</span></span>:</span><br><span class="line">           msg = <span class="function"><span class="title">MIMEMultipart</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line">           msg[<span class="string">'From'</span>] = from_user</span><br><span class="line">           msg[<span class="string">'To'</span>] = to</span><br><span class="line">           msg[<span class="string">'Subject'</span>] = subject</span><br><span class="line"></span><br><span class="line">           msg.<span class="function"><span class="title">attach</span><span class="params">(MIMEText(text)</span></span>)</span><br><span class="line"></span><br><span class="line">           mailServer = smtplib.<span class="function"><span class="title">SMTP</span><span class="params">(<span class="string">'outlook.office365.com'</span>)</span></span></span><br><span class="line">           mailServer.<span class="function"><span class="title">ehlo</span><span class="params">()</span></span></span><br><span class="line">           mailServer.<span class="function"><span class="title">starttls</span><span class="params">()</span></span></span><br><span class="line">           mailServer.<span class="function"><span class="title">ehlo</span><span class="params">()</span></span></span><br><span class="line">           mailServer.<span class="function"><span class="title">login</span><span class="params">(from_user, from_password)</span></span></span><br><span class="line">           mailServer.<span class="function"><span class="title">sendmail</span><span class="params">(from_user, to, msg.as_string()</span></span>)</span><br><span class="line">           mailServer.<span class="function"><span class="title">close</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Design ‘<strong>init</strong>.py’</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sendemail <span class="keyword">import</span> SendEmailUtility</span><br><span class="line">__version__ = <span class="string">'1.0'</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EmailLibrary</span><span class="params">(SendEmailUtility)</span>:</span>  </span><br><span class="line">    ROBOT_LIBRARY_SCOPE = <span class="string">'GLOBAL'</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Import the library ‘MailLibrary’ in Robot Framework</p>
</li>
<li>Check keyword in ‘Keyword List’<br><img src="/images/rf/mail_keyword.jpg" alt=""></li>
<li>Create case to send mail<br><img src="/images/rf/mail_call.jpg" alt=""></li>
<li>Mail send result<br><img src="/images/rf/mail_result.jpg" alt=""></li>
</ol>
<h1 id="Postscript"><a href="#Postscript" class="headerlink" title="Postscript"></a>Postscript</h1><p>We can implement everything from this way, but the important thing is you need to know python, even a little:)</p>
<p>Use the tool, but not subject to the tool.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Robot Framework-External Variable File]]></title>
      <url>http://izheyi.com/2016/06/03/Robot-Framework-External-Variable-File/</url>
      <content type="html"><![CDATA[<p>在Robot Framework中，变量的设置有很多种形式，为了统一的管理，或者以便后续的来做数据驱动，还是要把数据分离出去，最终实现业务逻辑和数据的分离。</p>
<h1 id="简单例子"><a href="#简单例子" class="headerlink" title="简单例子"></a>简单例子</h1><p>这里只做一个简单的描述：</p>
<ol>
<li>在C：盘下建数据文件，只能是.py文件<br><img src="/images/rf/variable_data.jpg" alt=""></li>
<li>在RF中引用<br><img src="/images/rf/variable_call.jpg" alt=""></li>
</ol>
<h1 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h1><p>为了工程的统一管理，我们可以在Test Project Root下创建Test Data文件夹，把数据分类管理于此。</p>
<ol>
<li>数据<br>每一个Test Suite有一个数据文件，每一个用例用一行数据来实现，用例里多个数据用List方式存储。</li>
</ol>
<ul>
<li>数据文件名就是Test Suite名字</li>
<li>数据变量名就是Test Case名字</li>
</ul>
<ol>
<li>调用<br>都基于Built-in变量来实现，动态管理。<br><img src="/images/rf/variable_import.jpg" alt=""></li>
</ol>
<h1 id="高级"><a href="#高级" class="headerlink" title="高级"></a>高级</h1><p>抛砖引玉，只是捋一下思路：</p>
<ol>
<li>通过Test Case的Test Template来设计</li>
<li>一个用例一个数据文件，数据多的话从理解的角度要好一些</li>
<li>通过csv、Excel、DB的方式来存储数据</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[六一儿童节汇演]]></title>
      <url>http://izheyi.com/2016/06/01/%E5%85%AD%E4%B8%80%E5%84%BF%E7%AB%A5%E8%8A%82%E6%B1%87%E6%BC%94/</url>
      <content type="html"><![CDATA[<p>小丁的表现还是可圈可点，加油！！</p>
<h1 id="幼儿舞蹈-十一点半"><a href="#幼儿舞蹈-十一点半" class="headerlink" title="幼儿舞蹈 - 十一点半"></a>幼儿舞蹈 - 十一点半</h1><iframe height="498" width="510" src="http://player.youku.com/embed/XMTU5NjY0NzAzMg==" frameborder="0" allowfullscreen></iframe>

<p>仅做一留念，其他的学业汇报就不列了，开心就好。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Robot Framework-MongoDB: ISODate ]]></title>
      <url>http://izheyi.com/2016/05/26/Robot-Framework-MongoDB-Testing-ISODate/</url>
      <content type="html"><![CDATA[<p>上篇也提到了这个问题，现在挤点时间出来又研究了一下。Robot Framework 在操作的过程中是传的是String，我们在decode时需要从Json String中decode datetime。</p>
<h1 id="JSON-DateTime"><a href="#JSON-DateTime" class="headerlink" title="JSON-DateTime"></a>JSON-DateTime</h1><p>在Github发现有人做了这些，就直接拿出来用好了，使用说明请参考<a href="https://github.com/nicolaiarocci/json-datetime" target="_blank" rel="external">JSON-DateTime</a></p>
<ol>
<li><p>基本使用<br>安装完成后，就可以直接用下边方式来调用：</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="prompt">&gt;&gt;</span>&gt; import simplejson as json</span><br><span class="line"><span class="prompt">&gt;&gt;</span>&gt; a =<span class="string">'&#123;"createdDate" : "Thu, 1 Mar 2012 10:00:49 UTC"&#125;'</span></span><br><span class="line"><span class="prompt">&gt;&gt;</span>&gt; json.loads(a)</span><br><span class="line">&#123;<span class="string">'createdDate'</span><span class="symbol">:</span> datetime.datetime(<span class="number">2012</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">49</span>)&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>说明<br>这种日期格式是它默认的格式，但是看起来和用起来都有点不太好，我们需要重新定义一个自己的格式，如下：</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="prompt">&gt;&gt;</span>&gt; a =<span class="string">'&#123;"createdDate" : "2012-5-1 10:00:49"&#125;'</span></span><br><span class="line"><span class="prompt">&gt;&gt;</span>&gt; json.loads(a, datetime_format=<span class="string">'%Y-%m-%d %H:%M:%S'</span>)</span><br><span class="line">&#123;<span class="string">'createdDate'</span><span class="symbol">:</span> datetime.datetime(<span class="number">2012</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">49</span>)&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="RF集成"><a href="#RF集成" class="headerlink" title="RF集成"></a>RF集成</h1><p>我们这里需要修改一下‘mongoquery.py’的引用，把<code>import json</code>修改成<code>import simplejson as json</code>。<br>还有就是默认日期格式的修改，我们可以在‘mongoquery.py’或‘jsondatetime.py’里修改，这里因为我们本来就对‘mongoquery.py’做了修改，所以统一也在这里修改了。<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">recordJSON = json.loads(recordJSON, datetime_format='%Y-%<span class="keyword">m</span>-%<span class="keyword">d</span> %<span class="keyword">H</span>:%<span class="keyword">M</span>:%S')</span><br></pre></td></tr></table></figure></p>
<ol>
<li>引用<br><img src="/images/rf/mongodb_iosdate.jpg" alt=""></li>
<li>结果<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">        "<span class="attribute">_id</span>" : <span class="value"><span class="number">11</span></span>,</span><br><span class="line">        "<span class="attribute">name</span>" : <span class="value"><span class="string">"insert"</span></span>,</span><br><span class="line">        "<span class="attribute">type</span>" : <span class="value"><span class="string">"calendar"</span></span>,</span><br><span class="line">        "<span class="attribute">createdDate</span>" : <span class="value">ISODate(<span class="string">"2012-02-03T10:00:49Z"</span>)</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Robot Framework-MongoDB]]></title>
      <url>http://izheyi.com/2016/05/16/Robot-Framework-MongoDB-Testing/</url>
      <content type="html"><![CDATA[<p>要做API或者UI自动化，甚至于手工测试，对于测试数据的准备，我们不可能手动的一条一条添加，正好实验了一把用RF来操控MongoDB。<br>以下只是个简单的实验，证明能够操作MongoDB。</p>
<h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><p>从官网的Library中查找 MongoDB library，或者直接Github <a href="https://github.com/iPlantCollaborativeOpenSource/Robotframework-MongoDB-Library" target="_blank" rel="external">Robotframework-MongoDB-Library</a>。</p>
<ol>
<li><p>安装pymongo</p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip <span class="keyword">install</span> pymongo</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装Library<br>You can install by pulling down source to ‘C:\Python27\Lib\site-packages’ and executing the following:</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python setup<span class="class">.py</span> install</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="数据库连接"><a href="#数据库连接" class="headerlink" title="数据库连接"></a>数据库连接</h1><p>本来对这块也不是很熟悉，之前没用过，折腾了好长时间在这个地方，按照官方的使用方法一直不成功<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Or for an authenticated connection</span></span><br><span class="line"><span class="title">Connect</span> To MongoDB admin:admin<span class="variable">@foo</span>.bar.org <span class="variable">$&#123;27017&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>重新查询了pymongo和mongoClient，这里做个说明：<br>对于authenticated connection，用<code>Connect To Mongodb user:password@ip/db 27017</code>，一直报错<code>FAIL : ValueError: Port must be an integer between 0 and 65535: password@ip/db</code>。<br>这里必须要用MongoDB的URL connection scheme<br><img src="/images/rf/mongodb_connect.jpg" alt=""></p>
<h1 id="数据库查询"><a href="#数据库查询" class="headerlink" title="数据库查询"></a>数据库查询</h1><p><img src="/images/rf/mongodb_query.jpg" alt=""><br>这里验证了工作中可能要用到的两个查询关键字，有需要的话，再研究剩下的查询关键字。<br><code>Retrieve Some Mongodb Records</code>：根据Jason文件条件在相关数据库和Collection中查询记录。记住：字符串要用双引号，单引号会报告。<br><code>Retrieve Mongodb Records With Desired Fields</code>：查询出指定列的显示， 相当于关系Sql: select a and b from table。记住：对于指定列，常规的直接用key就好；有嵌套的，用dot连接（e.g., address.city）；指定多个列，每个列之间用逗号隔开。</p>
<h1 id="数据库更新"><a href="#数据库更新" class="headerlink" title="数据库更新"></a>数据库更新</h1><p><img src="/images/rf/mongodb_update.jpg" alt=""><br>这里不做说明，会用就好了。</p>
<h1 id="数据库插入"><a href="#数据库插入" class="headerlink" title="数据库插入"></a>数据库插入</h1><p><img src="/images/rf/mongodb_insert.jpg" alt=""></p>
<h1 id="数据库删除"><a href="#数据库删除" class="headerlink" title="数据库删除"></a>数据库删除</h1><p><img src="/images/rf/mongodb_delete.jpg" alt=""></p>
<p>以上的操作，已经能满足当前工作中的需要，只做这些验证就OK了。</p>
<p><strong>特别说明：</strong><br>项目中实际用到的Jason文件<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">        "<span class="attribute">_id</span>" : <span class="value">NumberLong(<span class="string">"444206992590551"</span>)</span>,</span><br><span class="line">        "<span class="attribute">name</span>" : <span class="value"><span class="string">"xx"</span></span>,</span><br><span class="line">        "<span class="attribute">createdId</span>" : <span class="value">NumberLong(<span class="string">"884011643699965"</span>)</span>,</span><br><span class="line">        "<span class="attribute">createdDate</span>" : <span class="value">ISODate(<span class="string">"2016-05-17T00:43:43.555Z"</span>)</span><br><span class="line"></span>&#125;</span><br></pre></td></tr></table></figure></p>
<ol>
<li><p>在使用的过程中，只要是用到‘_id’时，就报格式不对的错<code>FAIL : TypeError: id must be an instance of (bytes, unicode, ObjectId), not &lt;type &#39;int&#39;&gt;</code>，查看了一下原码，把下面的代码注释掉就可以了。</p>
 <figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="string">'_id'</span> <span class="keyword">in</span> recordJSON:</span><br><span class="line">            recordJSON[<span class="string">'_id'</span>] = <span class="function"><span class="title">ObjectId</span><span class="params">(recordJSON[<span class="string">'_id'</span>])</span></span></span><br></pre></td></tr></table></figure>
<p> 把要用到的函数都一并修改掉。</p>
</li>
<li>还有就是时间的问题，如果不是必须的，这些字段就不要添加了。<br>还有这么一种情况，必须要添加日期字段，这里就是有错误：在Json文件中只能用字符串的形式，保存到库里”createdDate” : “2016-05-20 02:48:35.620000”，但是实际上应该是”createdDate” : ISODate(“2016-05-17T03:01:23.145Z”)，目前还没有找到合适的方法，比较头疼，做个标记。</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Robot Framework-Restful API Testing ]]></title>
      <url>http://izheyi.com/2016/05/10/Robot-Framework-Restful-API-Testing/</url>
      <content type="html"><![CDATA[<p>目前项目用的是SOUPUI做的API测试，但同事反映还是有诸多的问题，考虑到本组的接口不多，且没有做几个自动化的，也问了很多朋友，用RF的非常多，所以就用RF做一个简单的Demo，以后直接转移过来。</p>
<h1 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h1><p>从官网的Library中查找HTTP library (Requests)，或者直接Github <a href="https://github.com/bulkan/robotframework-requests/" target="_blank" rel="external">robotframework-requests</a>， 按照说明安装即可。</p>
<h1 id="例子实现"><a href="#例子实现" class="headerlink" title="例子实现"></a>例子实现</h1><ol>
<li><p>先把库引用进来</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span> Settings <span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>							</span><br><span class="line">Library	RequestsLibrary</span><br></pre></td></tr></table></figure>
</li>
<li><p>利用封装好的关键字来实现脚本<br><img src="/images/rf/api_script.jpg" alt=""></p>
</li>
</ol>
<p><em>为了更好的理解和使用，得去学习一下 <a href="http://python-requests.org" target="_blank" rel="external">Python HTTP Requests for Humans™</a></em></p>
<p>这里只是个简单的使用，在以后使用的过程中，会把知识点记录下来，如果有必要。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Robot Framework-Table Handling]]></title>
      <url>http://izheyi.com/2016/04/26/Robot-Framework-Table-Handling/</url>
      <content type="html"><![CDATA[<p>Robot Framework provide some table handling keyword, one for get cell text, rest are for check point keyword,actually, it’s not enouth for us to handle table actions in script designing.</p>
<p>When we use Java or other languages to design script under Selenium Webdriver, we also need to customize class to implement relevant methods, such as, getTableRowCount, clickLinkInTableCell…..</p>
<p>But for Robot Framework, search from Google, seems there not a good solution，think about many ways，finally, find the below method to handle table actions, maybe it’s not the best way, anyway, it’s worked.</p>
<h1 id="Get-Table-Row-Count"><a href="#Get-Table-Row-Count" class="headerlink" title="Get Table Row Count"></a>Get Table Row Count</h1><p>We can use ‘Get Matching Xpath Count’ method to get table row count.<br><img src="/images/rf/table_get_row_count.jpg" alt=""><br>Here, the locator is the row(tr) locator rather than table locator,  and need to use xpath.</p>
<h1 id="Get-Row-By-Cell-Text"><a href="#Get-Row-By-Cell-Text" class="headerlink" title="Get Row By Cell Text"></a>Get Row By Cell Text</h1><p>Based on ‘Get Table Row Count’ keyword, use for loop to judge text in which row, to Get Row By Cell Textget current row index/number.<br><img src="/images/rf/table_get_row_by_text.jpg" alt=""></p>
<h1 id="Click-Link-In-Table-Cell"><a href="#Click-Link-In-Table-Cell" class="headerlink" title="Click Link In Table Cell"></a>Click Link In Table Cell</h1><p>From ‘Get Row By Cell Text’, get the current row index, then we can the link in table cell.<br><img src="/images/rf/table_click_link_in_cell.jpg" alt=""></p>
<h1 id="Example-And-More"><a href="#Example-And-More" class="headerlink" title="Example And More"></a>Example And More</h1><ul>
<li>We can use the customized method like the below way<br><img src="/images/rf/table_call.jpg" alt=""><br><strong>Notes:</strong> we will get the below error if we define locator with prefix ‘xpath=’, i am not sure why, or maybe only happened on my laptop, so please don’t use the prefix when define tr locator.<figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">InvalidSelectorException</span>: <span class="type">Message</span>: <span class="type">The</span> given selector xpath=//table[contains(@id, 'calendar_tableview')]/tbody/tr <span class="keyword">is</span> either invalid <span class="keyword">or</span> does <span class="keyword">not</span> <span class="literal">result</span> <span class="keyword">in</span> a <span class="type">WebElement</span>. <span class="type">The</span> following error occurred:</span><br><span class="line"><span class="type">InvalidSelectorError</span>: <span class="type">Unable</span> to locate an element <span class="keyword">with</span> the xpath expression xpath=//table[contains(@id, 'calendar_tableview')]/tbody/tr because <span class="keyword">of</span> the following error:</span><br><span class="line"><span class="type">TypeError</span>: <span class="type">The</span> expression cannot be converted to <span class="keyword">return</span> the specified <span class="keyword">type</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="Do-more-jobs"><a href="#Do-more-jobs" class="headerlink" title="Do more jobs"></a>Do more jobs</h1><p>We can implement more actions based on the above major implementation, such as ‘Get Table Column Count’, ‘Select Checkbox In Table Cell’, ‘Select From List In Table Cell’………</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Robot Framework-基础知识学习]]></title>
      <url>http://izheyi.com/2016/04/21/Robot-Framework-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0/</url>
      <content type="html"><![CDATA[<p>我觉得不管学什么东西，最先要知道是什么，原理是什么，能做什么，基础的操作，对于细节性的东西，技术点相关知识，可以在日后的工作中再慢慢的补充，以便形成自己的知识体系。</p>
<p>周末和晚上的时间，学习了一些基础知识，这里只罗列一些点，想更详细的说明和学习，就去Robot Framework官网查看<a href="http://robotframework.org/robotframework/#user-guide" target="_blank" rel="external">User Guide</a></p>
<ol>
<li>Robot Framework是个什么样的框架</li>
<li>RIDE的基本操作：各种组件的创建和脚本运行等</li>
<li>Test Suite、Resource、Keyword之前的关系</li>
<li>一些主要是关键字的了解</li>
<li>RF里的分层</li>
</ol>
<p>对于分层，这里还是有点困惑的，有说要做到流程和数据的分离，有的说本来就是关键字驱动，直接都写到Case里就行，封装的层太多了，也不见得是个好事；有说应该分四层，或者五层，有的说三层就够了，封的多了也是麻烦。这就跟什么是测试框架这个问题一样，一百人可能就有一百种对测试框架的理解和定义。不管怎么分，分几层，对当前的项目适合，能把控的了，应该就是没有太大问题的。</p>
<p><em>但是现在对于分层，跟Team有一些不同见解:(</em></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Robot Framework-Web测试环境]]></title>
      <url>http://izheyi.com/2016/04/18/Robot-Framework-Web%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83/</url>
      <content type="html"><![CDATA[<p>我们用Selenium Webdriver来进行Web测试，以下是运行环境的搭建：</p>
<h1 id="Selenium2Library"><a href="#Selenium2Library" class="headerlink" title="Selenium2Library"></a>Selenium2Library</h1><p>如果要做Web的自动化话，需要安装Selenium的库，用以下命令<code>pip install robotframework-selenium2library</code><br>在RIDE设计自动化的时候，先要import安装的Selenium2Library。</p>
<h1 id="ExtendedSelenium2Library"><a href="#ExtendedSelenium2Library" class="headerlink" title="ExtendedSelenium2Library"></a>ExtendedSelenium2Library</h1><p>Extended Selenium 2 (WebDriver) web testing library for Robot Framework，点击 <a href="https://github.com/rickypc/robotframework-extendedselenium2library" target="_blank" rel="external">Here</a> 查看详细信息。</p>
<h1 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h1><p>对于Firefox，是默认的浏览器，我们不需要做设置就可以直接运行；但是对于IE和Chrome，我们需要下载相应的Driver做设置：</p>
<ol>
<li>去<a href="http://docs.seleniumhq.org/download/" target="_blank" rel="external">Selenium官网</a></li>
<li>放到环境变量path路径的目录里或把他所在的目录加到path环境变量中</li>
</ol>
<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><ol>
<li>显示“[ WARN ] Keyword ‘Capture Page Screenshot’ could not be run on failure: No browser is open”，<br>遇到此问题，请打开文件浏览器至Selenium2Library的utils目录，修改其中的browsercache.py文件，将close(self)方法中的语句“browser.quit()”修改为“browser.close()”。即可解决此问题。 </li>
<li>IE浏览器<br>IE页面的显示比例要为100%。</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Robot Framework Enviroment Setup on Windows 32 bit]]></title>
      <url>http://izheyi.com/2016/04/15/Robot-Framework-Enviroment-Setup-on-Windows-32-bit/</url>
      <content type="html"><![CDATA[<h1 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h1><p>Windows7 32位，Python 2.7</p>
<h1 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h1><h2 id="安装Python"><a href="#安装Python" class="headerlink" title="安装Python"></a>安装Python</h2><ol>
<li>去<a href="https://www.python.org/" target="_blank" rel="external">Python官网</a>下载最新版本，python-2.7.11.msi。</li>
<li>双击默认安即可（<strong>在安装过程中记得选择：Add python.exe to Path</strong>），一路Next。</li>
</ol>
<h2 id="安装wxPython"><a href="#安装wxPython" class="headerlink" title="安装wxPython"></a>安装wxPython</h2><ol>
<li>去<a href="https://sourceforge.net/projects/wxpython/files/wxPython/2.8.12.1/" target="_blank" rel="external">Here</a>，wxPython2.8-win32-unicode-2.8.12.1-py27.exe，要下载unicode版本，2.8.12.1是RIDE稳定支持的版本，py27是Python2.7。</li>
<li>双击默认安即可，一路Next。</li>
</ol>
<h2 id="安装Robot-Framework"><a href="#安装Robot-Framework" class="headerlink" title="安装Robot Framework"></a>安装Robot Framework</h2><ol>
<li>因为刚安装的python自带pip，直接用些工具安装就行，</li>
<li>默认pip的版本低，可以通过<code>pip install -U pip</code>升级。</li>
<li>用<code>pip install robotframework</code>安装Robot Framework。<br><em>注：如果安装不成功，就自己下载源码包进行安装</em></li>
</ol>
<h2 id="安装RIDE"><a href="#安装RIDE" class="headerlink" title="安装RIDE"></a>安装RIDE</h2><ol>
<li>用<code>pip install robotframework-ride</code>安装。</li>
</ol>
<p>到此，基本的环境就搭建完成了。 在命令行输入<code>ride.py</code>就可以打开可视窗体，进行自动化设计了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[快速获得文件夹下所有文件和文件夹的名字]]></title>
      <url>http://izheyi.com/2016/04/11/%E5%BF%AB%E9%80%9F%E8%8E%B7%E5%BE%97%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8B%E6%89%80%E6%9C%89%E6%96%87%E4%BB%B6%E5%92%8C%E6%96%87%E4%BB%B6%E5%A4%B9%E7%9A%84%E5%90%8D%E5%AD%97/</url>
      <content type="html"><![CDATA[<p>在Windows下，因为之前做QTP，是用Vbs写了一段代码，用的时候，只要指定要查找的文件夹就可以。现在发现了一个更便捷的方式，Mark一下。</p>
<p>只需要用下边这个批处理脚本即可：<br><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dir <span class="keyword">*</span>.<span class="keyword">*</span> /b &gt; list.txt</span><br></pre></td></tr></table></figure></p>
<p><strong>使用方法：</strong></p>
<ol>
<li>把此脚本文件保存为.bat文件，</li>
<li>Copy此脚本到要查找的文件夹下，</li>
<li>运行此脚本文件，</li>
<li>查找的名称会保存到当前文件夹的’list.txt’文件中。</li>
</ol>
<p><img src="/images/automation/dir.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[测试用例详细程度的一些思考]]></title>
      <url>http://izheyi.com/2016/04/11/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B%E8%AF%A6%E7%BB%86%E7%A8%8B%E5%BA%A6%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83/</url>
      <content type="html"><![CDATA[<p>已经有三四年没有做过手工测试了，最近换了一个新工作，也要去做手工测试，去写用例，目前大多数的公司都是这个样子的哈。</p>
<p>在写用例的过程中，Team反映了这么个问题，领导要求把用例写的很细，具体到每个Step的描述，可是这样在执行的时候往往因为时间的原因而执行不完，但是领导认为不够详细的话，执行起来可能会有问题，比如让不熟悉功能的人按用例执行，问我的标准是什么？</p>
<p>那测试用例的标准应该是什么呢？应该详细到何种程度呢？我想这也应该是大多数测试人员所要面临的问题。</p>
<p>我觉得我们可以从以下几个方面来权衡:</p>
<ol>
<li><p>项目的角度</p>
<ul>
<li><p><strong>目标</strong><br>不管是文档还是代码，当然也包括测试用例，都要符合项目的最终目标。</p>
</li>
<li><p><strong>需求和设计会不会经常变更</strong><br>如果变更频繁的话，用例可能很快就失效，用例越详细，成本会越大。</p>
</li>
</ul>
</li>
<li><p>公司流程的角度</p>
<ul>
<li><strong>整体测试流程和要求</strong><br>公司整个测试流程上有没有相应的标准和公司内部定义的用例模板，可能也需要遵循这些标准，当然了，如果流程不合理了，也是可以进行相应更改。</li>
</ul>
</li>
<li><p>测试的角度</p>
<ul>
<li><p><strong>采用的测试方法</strong><br>如果是传统的开发模式，用例可以写到足够的详细，但如果要是采用的探索性测试，那就只需要测试思路就OK。</p>
</li>
<li><p><strong>测试用例的用途</strong><br>比如一些金融项目里有全职自动化组，他们不懂业务，只是根据手工测试用例来进行自动化，那用例就需要很详细，包括测试数据==，</p>
</li>
<li><p><strong>用例执行者</strong><br>对于新人，用例应该足够的详细，以确保这些人的正常工作。</p>
</li>
<li><p><strong>用例粒度</strong><br>传统的开发模式下，有的要求一个bug要对应到一个case,这就要求用例要定的很细，但是现在的开发中，是不必要这么做的，比如：对用户名的修改功能测试，我们写一个用例就可以了，没必要按正常和异常的场景来设计多个用例。</p>
</li>
</ul>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Win7查看端口号被占用]]></title>
      <url>http://izheyi.com/2016/03/31/Win7%E6%9F%A5%E7%9C%8B%E7%AB%AF%E5%8F%A3%E5%8F%B7%E8%A2%AB%E5%8D%A0%E7%94%A8/</url>
      <content type="html"><![CDATA[<ol>
<li>开始-运行输入CMD</li>
<li><p>在CMD窗口中输入netstat -aon|findstr 80，80表示要查看的端口号</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\youfei.hu&gt;netstat -aon|findstr <span class="number">80</span></span><br><span class="line">  TCP    <span class="number">10.24</span><span class="number">.32</span><span class="number">.104</span>:<span class="number">49323</span>     <span class="number">220.181</span><span class="number">.132</span><span class="number">.85</span>:<span class="number">80</span>      ESTABLISHED     <span class="number">3516</span></span><br></pre></td></tr></table></figure>
<p>说明是有程序在占有了80端口，那么是什么程序占了80端口呢？看到最右侧有占有这个程序的进程ID：3516，我们只需要查出3516是哪个程序就可以了</p>
</li>
<li><p>在CMD中继续输入以下命令：tasklist|findstr “3516”，3516就是之前的进程ID。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\youfei.hu&gt;tasklist|findstr <span class="string">"3516"</span></span><br><span class="line"><span class="number">360</span>Tray.exe                   <span class="number">3516</span> Console                    <span class="number">1</span>     <span class="number">48</span>,<span class="number">640</span> K</span><br></pre></td></tr></table></figure>
<p>可以看到3516对应的是360程序占用这个端口。</p>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Change Win7 profession version lanuage from Chinese to English]]></title>
      <url>http://izheyi.com/2016/03/31/Change-Win7-profession-version-lanuage-from-Chinese-to-English/</url>
      <content type="html"><![CDATA[<p>新工作给了个本是中文的操作系统，工作中需要用英文的系统，重装英文的系统有点麻烦，如果是旗舰版或者企业版，可以直接从‘控制面板’的里‘显示语言’来完成这个切换工作。</p>
<p>我这个偏偏是专业版，以上的方式行不通，可以用下面的工具和方法来实现转换：</p>
<ol>
<li>下载： Vistalizator.exe</li>
<li>下载win7相应版本英语语言包： windows6.1-kb2483139-x64-en-us_language.exe</li>
<li>运行Vistalizator.exe 增加语言选择<br><img src="/images/automation/vistalizator.jpg" alt=""></li>
<li>选择按装好的英文—点击‘更改语言’按钮<br><em>此过程中可能需要安装一些用到的update</em></li>
<li>退出Vistalizator.exe</li>
<li>重启计算机，当前的显示语言已经切换到了english</li>
</ol>
<p>同时也下载office2013相应的语言包，对office进行语言切换。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python-函数]]></title>
      <url>http://izheyi.com/2016/03/04/Python-%E5%87%BD%E6%95%B0/</url>
      <content type="html"><![CDATA[<h1 id="定义函数"><a href="#定义函数" class="headerlink" title="定义函数"></a>定义函数</h1><p>你可以定义一个由自己想要功能的函数，以下是简单的规则：</p>
<ul>
<li>函数代码块以def关键词开头，后接函数标识符名称和圆括号()。</li>
<li>任何传入参数和自变量必须放在圆括号中间。圆括号之间可以用于定义参数。</li>
<li>函数的第一行语句可以选择性地使用文档字符串—用于存放函数说明。</li>
<li>函数内容以冒号起始，并且缩进。</li>
<li>Return[expression]结束函数，选择性地返回一个值给调用方。不带表达式的return相当于返回 None。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">functionname</span><span class="params">( parameters )</span>:</span></span><br><span class="line">   <span class="string">"函数_文档字符串"</span></span><br><span class="line">   function_suite</span><br><span class="line">   <span class="keyword">return</span> [expression]</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="函数参数"><a href="#函数参数" class="headerlink" title="函数参数"></a>函数参数</h1><ul>
<li><strong>必备参数</strong><br>必备参数须以正确的顺序传入函数。调用时的数量必须和声明时的一样。</li>
<li><strong>默认参数</strong><br>设置默认参数时，有几点要注意： 1. 必选参数在前，默认参数在后，否则Python的解释器会报错； 2. 当函数有多个参数时，把变化大的参数放前面，变化小的参数放后面。变化小的参数就可以作为默认参数。</li>
<li><p><strong>可变参数</strong><br>加了星号（<em>）的变量名会存放所有未命名的变量参数。</em>args是可变参数，args接收的是一个tuple；</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">functionname</span><span class="params">([formal_args,] *args )</span>:</span></span><br><span class="line">   <span class="string">"函数_文档字符串"</span></span><br><span class="line">   function_suite</span><br><span class="line">   <span class="keyword">return</span> [expression</span><br></pre></td></tr></table></figure>
  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 可写函数说明</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printinfo</span><span class="params">( arg1, *vartuple )</span>:</span></span><br><span class="line">   <span class="string">"打印任何传入的参数"</span></span><br><span class="line">   <span class="keyword">print</span> <span class="string">"输出: "</span></span><br><span class="line">   <span class="keyword">print</span> arg1</span><br><span class="line">   <span class="keyword">for</span> var <span class="keyword">in</span> vartuple:</span><br><span class="line">      <span class="keyword">print</span> var</span><br><span class="line">   <span class="keyword">return</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 调用printinfo 函数</span></span><br><span class="line">printinfo( <span class="number">10</span> );</span><br><span class="line">printinfo( <span class="number">70</span>, <span class="number">60</span>, <span class="number">50</span> );</span><br></pre></td></tr></table></figure>
</li>
</ul>
<a id="more"></a>
<h1 id="Return语句"><a href="#Return语句" class="headerlink" title="Return语句"></a>Return语句</h1><p>return语句[表达式]退出函数，选择性地向调用方返回一个表达式。</p>
<ul>
<li><strong>返回多个值</strong><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="command">return</span> x, y, z </span><br><span class="line">   <span class="comment"># 和 return (x, y, z) 一样</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>函数可以同时返回多个值，看似是返回了多个值，但其实就是一个tuple。</p>
<h1 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h1><p>python 使用 lambda 来创建匿名函数。</p>
<ul>
<li>lambda只是一个表达式，函数体比def简单很多。 </li>
<li>lambda的主体是一个表达式，而不是一个代码块。仅仅能在lambda表达式中封装有限的逻辑进去。 </li>
<li>lambda函数拥有自己的名字空间，且不能访问自有参数列表之外或全局名字空间里的参数。</li>
<li>虽然lambda函数看起来只能写一行，却不等同于C或C++的内联函数，后者的目的是调用小函数时不占用栈内存从而增加运行效率。<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># 可写函数说明</span></span><br><span class="line">sum = lambda arg1, arg2: arg1 + arg2;</span><br><span class="line"> </span><br><span class="line"><span class="preprocessor"># 调用sum函数</span></span><br><span class="line">print <span class="string">"相加后的值为 : "</span>, sum( <span class="number">10</span>, <span class="number">20</span> )</span><br><span class="line">print <span class="string">"相加后的值为 : "</span>, sum( <span class="number">20</span>, <span class="number">20</span> )</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>关键字lambda表示匿名函数，冒号前面的arg1, arg2表示函数参数。</p>
<h1 id="关键字参数"><a href="#关键字参数" class="headerlink" title="关键字参数"></a>关键字参数</h1><p>允许你传入0个或任意个含参数名的参数，这些关键字参数在函数内部自动组装为一个dict。**kw是关键字参数，kw接收的是一个dict。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">def <span class="function"><span class="title">funcF</span><span class="params">(a, **b)</span></span>:</span><br><span class="line">  print <span class="tag">a</span></span><br><span class="line">  <span class="keyword">for</span> x <span class="keyword">in</span> <span class="tag">b</span>:</span><br><span class="line">    print x + <span class="string">": "</span> + <span class="function"><span class="title">str</span><span class="params">(b[x])</span></span></span><br><span class="line">调用<span class="function"><span class="title">funcF</span><span class="params">(<span class="number">100</span>, c=<span class="string">'你好'</span>, b=<span class="number">200</span>)</span></span>，执行结果</span><br><span class="line"><span class="number">100</span></span><br><span class="line">c: 你好</span><br><span class="line"><span class="tag">b</span>: <span class="number">200</span></span><br></pre></td></tr></table></figure></p>
<h1 id="递归函数"><a href="#递归函数" class="headerlink" title="递归函数"></a>递归函数</h1><p>跟其他语言的没二样，不做说明。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python-基础]]></title>
      <url>http://izheyi.com/2016/03/02/Python-%E5%9F%BA%E7%A1%80/</url>
      <content type="html"><![CDATA[<p>好处就不罗嗦了，看看市面上招自动化测试的JD里就知道这东东的‘地位’了：）<br>这里只对它进行一下简单的了解，弄明白是怎么回事。</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>不做过多介绍，自己去官网下载相应版本安装即可：<a href="https://www.python.org/" target="_blank" rel="external">Python官网</a><br>我的是在Windows下安装的，在安装的过程中，记得要“Add Python 3.5 to PATH”，如果安装的时候没做操作，安装完后要手工的添加。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C:\Users&gt;python</span><br><span class="line">Python <span class="number">3.5</span><span class="number">.1</span> (v3<span class="number">.5</span><span class="number">.1</span>:<span class="number">37</span>a07cee5969, Dec  <span class="number">6</span> <span class="number">2015</span>, <span class="number">01</span>:<span class="number">38</span>:<span class="number">48</span>) [MSC v<span class="number">.1900</span> <span class="number">32</span> bit (Intel)] on win32</span><br><span class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> or <span class="string">"license"</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>
<p>安装成功！</p>
<h1 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h1><h2 id="行和缩进"><a href="#行和缩进" class="headerlink" title="行和缩进"></a>行和缩进</h2><p>Python的代码块不使用大括号（{}）来控制类，函数以及其他逻辑判断。python最具特色的就是用缩进来写模块。缩进的空白数量是可变的，但是所有代码块语句必须包含相同的缩进空白数量，这个必须严格执行。</p>
<h2 id="多行语句"><a href="#多行语句" class="headerlink" title="多行语句"></a>多行语句</h2><p>Python语句中一般以新行作为为语句的结束符。但是我们可以使用斜杠（ \）将一行的语句分为多行显示。<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">total</span> = <span class="keyword">item_one </span>+ \</span><br><span class="line">        <span class="keyword">item_two </span>+ \</span><br><span class="line">        <span class="keyword">item_three</span></span><br></pre></td></tr></table></figure></p>
<p>语句中包含[], {} 或 () 括号就不需要使用多行连接符。<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">days</span> = [<span class="string">'Monday'</span>, <span class="string">'Tuesday'</span>, <span class="string">'Wednesday'</span>,</span><br><span class="line">        <span class="string">'Thursday'</span>, <span class="string">'Friday'</span>]</span><br></pre></td></tr></table></figure></p>
<h2 id="同一行显示多条语句"><a href="#同一行显示多条语句" class="headerlink" title="同一行显示多条语句"></a>同一行显示多条语句</h2><p>Python可以在同一行中使用多条语句，语句之间使用分号(;)分割。</p>
<h2 id="Python-引号"><a href="#Python-引号" class="headerlink" title="Python 引号"></a>Python 引号</h2><p>Python 接收单引号(‘ )，双引号(“ )，三引号(‘’’ “””) 来表示字符串，引号的开始与结束必须的相同类型的。其中三引号可以由多行组成，编写多行文本的快捷语法，常用语文档字符串，在文件的特定地点，被当做注释。</p>
<h1 id="Python运算符优先级"><a href="#Python运算符优先级" class="headerlink" title="Python运算符优先级"></a>Python运算符优先级</h1><p><img src="/images/python/yunsuanfu.jpg" alt=""></p>
<h1 id="数据类型和变量"><a href="#数据类型和变量" class="headerlink" title="数据类型和变量"></a>数据类型和变量</h1><p>Python支持多种数据类型，在计算机内部，可以把任何数据都看成一个“对象”，而变量就是在程序中用来指向这些数据对象的，对变量赋值就是把数据和变量给关联起来。<br>跟其他语言基本没什么差别，整数，浮点数，字符串，布尔值，空值 ====<br>Note：1. 空值是Python里一个特殊的值，用None表示。None不能理解为0，因为0是有意义的，而None是一个特殊的空值。2. Python的整数没有大小限制。3. 字符串，加号（+）是字符串连接运算符，星号（*）是重复操作。</p>
<a id="more"></a>
<h1 id="List和Tuple"><a href="#List和Tuple" class="headerlink" title="List和Tuple"></a>List和Tuple</h1><p>Python内置的一种数据类型是列表：list。list是一种有序的集合，可以随时添加和删除其中的元素。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; index = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">&gt;&gt;&gt; index</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br></pre></td></tr></table></figure></p>
<ol>
<li>用len()函数可以获得list元素的个数。</li>
<li>用索引来访问list中每一个位置的元素，记得索引是从0开始的；如果要取最后一个元素，除了计算索引位置外，还可以用-1做索引。</li>
<li>列表中的值得分割也可以用到变量[头下标:尾下标]，就可以截取相应的列表。</li>
<li>list是一个可变的有序表，所以，可以用append往list中追加元素到末尾；也可以用insert把元素插入到指定的位置。</li>
<li>要删除list末尾的元素，用pop()方法；要删除指定位置的元素，用pop(i)方法，其中i是索引位置。</li>
<li>要把某个元素替换成别的元素，可以直接赋值给对应的索引位置。</li>
<li>list里面的元素的数据类型也可以不同，list元素也可以是另一个list。</li>
</ol>
<p>另一种有序列表叫元组：tuple。tuple和list非常类似，但是tuple一旦初始化就不能修改。它也没有append()，insert()这样的方法。<br>因为tuple不可变，所以代码更安全。如果可能，能用tuple代替list就尽量用tuple。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; tuple = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">&gt;&gt;&gt; tuple</span><br><span class="line">(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br></pre></td></tr></table></figure></p>
<ol>
<li>如果要定义一个空的tuple，可以写成()。</li>
<li>如果要定义一个只有1个元素的tuple，有能直接用(1)，因为括号()既可以表示tuple，又可以表示数学公式中的小括号，会产生歧义。必须加一个逗号,，来消除歧义。<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="prompt">&gt;&gt;</span>&gt; tuple = (<span class="number">1</span>)</span><br><span class="line"><span class="prompt">&gt;&gt;</span>&gt; tuple</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="prompt">&gt;&gt;</span>&gt; tuple = (<span class="number">1</span>,)</span><br><span class="line"><span class="prompt">&gt;&gt;</span>&gt; tuple</span><br><span class="line">(<span class="number">1</span>,)</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="Python数据类型转换"><a href="#Python数据类型转换" class="headerlink" title="Python数据类型转换"></a>Python数据类型转换</h1><p>有时候，我们需要对数据内置的类型进行转换，数据类型的转换，你只需要将数据类型作为函数名即可。<br><img src="/images/python/zhuanhuan.jpg" alt=""></p>
<h1 id="判断"><a href="#判断" class="headerlink" title="判断"></a>判断</h1><p>if语句的完整形式就是：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> &lt;条件判断<span class="number">1</span>&gt;:</span><br><span class="line">    &lt;执行<span class="number">1</span>&gt;</span><br><span class="line">elif &lt;条件判断<span class="number">2</span>&gt;:</span><br><span class="line">    &lt;执行<span class="number">2</span>&gt;</span><br><span class="line">elif &lt;条件判断<span class="number">3</span>&gt;:</span><br><span class="line">    &lt;执行<span class="number">3</span>&gt;</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    &lt;执行<span class="number">4</span>&gt;</span><br></pre></td></tr></table></figure></p>
<ol>
<li>注意不要少写了冒号。</li>
<li>注意Python的缩进规则。</li>
</ol>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="function"><span class="title">int</span><span class="params">(input(<span class="string">'Please input age:'</span>)</span></span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> name &gt; <span class="number">100</span>:</span><br><span class="line">	<span class="function"><span class="title">print</span><span class="params">(<span class="string">'aa'</span>)</span></span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">	<span class="function"><span class="title">print</span><span class="params">(<span class="string">'bb'</span>)</span></span></span><br></pre></td></tr></table></figure>
<h1 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h1><p>Python的循环有两种，一种是for…in循环，依次把list或tuple中的每个元素迭代出来。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; indexs = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">&gt;&gt;&gt; <span class="keyword">for</span> index in indexs:</span><br><span class="line">...     print(index)</span><br><span class="line">...</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure></p>
<p>for x in …循环就是把每个元素代入变量x，然后执行缩进块的语句。</p>
<p>第二种循环是while循环，只要条件满足，就不断循环，条件不满足时退出循环。</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; <span class="tag">i</span> = <span class="number">5</span></span><br><span class="line">&gt;&gt;&gt; while <span class="tag">i</span> &gt;<span class="number">0</span>:</span><br><span class="line">...     <span class="tag">i</span> = <span class="tag">i</span> - <span class="number">1</span></span><br><span class="line">...     <span class="function"><span class="title">print</span><span class="params">(i)</span></span></span><br><span class="line">...</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure>
<h1 id="dict和set"><a href="#dict和set" class="headerlink" title="dict和set"></a>dict和set</h1><p>dict - 数据字典，跟其他语言的没什么区别，不多作介绍，就是key-value。</p>
<p>set和dict类似，也是一组key的集合，但不存储value。由于key不能重复，所以，在set中，没有重复的key。</p>
<ol>
<li>重复元素在set中自动被过滤。</li>
<li>通过add(key)方法可以添加元素到set中。</li>
<li>通过remove(key)方法可以删除元素。</li>
</ol>
<p><em>Note:这里只做一些基本语法介绍，具体到更细节的应用，就参考相应的教程。</em></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[正则表达式入门]]></title>
      <url>http://izheyi.com/2016/02/28/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%85%A5%E9%97%A8/</url>
      <content type="html"><![CDATA[<p>正则表达式就是用于描述这些规则的工具。换句话说，正则表达式就是记录文本规则的代码。之前知道的很少，也就知道?,*了，工作中用到了，网上教程学习一下，对正则表达式有个基本的了解和使用。</p>
<h1 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h1><p><img src="/images/regex/yuanzifu.jpg" alt="元字符"><br>^匹配你要用来查找的字符串的开头，$匹配结尾。这两个代码在验证输入的内容时非常有用，比如一个网站如果要求你填写的用户名必须为8位到10位数字时，可以使用：^\d{8,10}$。</p>
<p><em>如果你想查找元字符本身的话，你就得使用\来取消这些字符的特殊意义</em></p>
<h1 id="限定符"><a href="#限定符" class="headerlink" title="限定符"></a>限定符</h1><p><img src="/images/regex/xiandingfu.jpg" alt="限定符"><br>下面是一些使用重复的例子：<br>Windows\d+匹配Windows后面跟1个或更多数字</p>
<h1 id="字符类"><a href="#字符类" class="headerlink" title="字符类"></a>字符类</h1><p>要想查找数字，字母或数字，空白是很简单的，因为已经有了对应这些字符集合的元字符，但是如果你想匹配没有预定义元字符的字符集合(比如元音字母a,e,i,o,u),应该怎么办？</p>
<p>很简单，你只需要在方括号里列出它们就行了，像[aeiou]就匹配任何一个英文元音字母，[.?!]匹配标点符号(.或?或!)。</p>
<h1 id="分枝条件"><a href="#分枝条件" class="headerlink" title="分枝条件"></a>分枝条件</h1><p>正则表达式里的分枝条件指的是有几种规则，如果满足其中任意一种规则都应该当成匹配，具体方法是用|把不同的规则分隔开。<br>看例子：<br>(?0\d{2})?[- ]?\d{8}|0\d{2}[- ]?\d{8}这个表达式匹配3位区号的电话号码，其中区号可以用小括号括起来，也可以不用，区号与本地号间可以用连字号或空格间隔，也可以没有间隔。</p>
<a id="more"></a>
<h1 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h1><p>我们已经提到了怎么重复单个字符（直接在字符后面加上限定符就行了）；但如果想要重复多个字符又该怎么办？你可以用小括号来指定子表达式(也叫做分组)，然后你就可以指定这个子表达式的重复次数了，你也可以对子表达式进行其它一些操作(后面会有介绍)。<br>(\d{1,3}.){3}\d{1,3}是一个简单的IP地址匹配表达式。要理解这个表达式，请按下列顺序分析它：\d{1,3}匹配1到3位的数字，(\d{1,3}.){3}匹配三位数字加上一个英文句号(这个整体也就是这个分组)重复3次，最后再加上一个一到三位的数字(\d{1,3})。<br>不幸的是，它也将匹配256.300.888.999这种不可能存在的IP地址。如果能使用算术比较的话，或许能简单地解决这个问题，但是正则表达式中并不提供关于数学的任何功能，所以只能使用冗长的分组，选择，字符类来描述一个正确的IP地址：<code>((2[0-4]\d|25[0-5]|[01]?\d\d?)\.){3}(2[0-4]\d|25[0-5]|[01]?\d\d?)</code>。</p>
<h1 id="反义"><a href="#反义" class="headerlink" title="反义"></a>反义</h1><p>有时需要查找不属于某个能简单定义的字符类的字符。<br><img src="/images/regex/fanyi.jpg" alt="反义代码"></p>
<p>再深入的知识点，以后用到了再学习吧。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[八达岭长城]]></title>
      <url>http://izheyi.com/2016/02/27/%E5%85%AB%E8%BE%BE%E5%B2%AD%E9%95%BF%E5%9F%8E/</url>
      <content type="html"><![CDATA[<p>一块去爬了长城，又是陪家里人去的。这次带了小丁，玩的很开心，也不用去上学。</p>
<p>还是很不错的，自己一直爬到了最高点，赞一个！！！</p>
<p><img src="/images/izheyi/2016/02/changcheng_0.jpg" alt=""><br><img src="/images/izheyi/2016/02/changcheng_1.jpg" alt=""><br><img src="/images/izheyi/2016/02/changcheng_2.jpg" alt=""><br><img src="/images/izheyi/2016/02/changcheng_3.jpg" alt=""></p>
<a id="more"></a>
<p><img src="/images/izheyi/2016/02/changcheng_4.jpg" alt=""><br><img src="/images/izheyi/2016/02/changcheng_5.jpg" alt=""><br><img src="/images/izheyi/2016/02/changcheng_7.jpg" alt=""><br><img src="/images/izheyi/2016/02/changcheng_8.jpg" alt=""><br><img src="/images/izheyi/2016/02/changcheng_9.jpg" alt=""><br><img src="/images/izheyi/2016/02/changcheng_10.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[java内存泄露分析]]></title>
      <url>http://izheyi.com/2016/02/18/java%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E5%88%86%E6%9E%90/</url>
      <content type="html"><![CDATA[<blockquote>
<p>在这里，我们还是先温习一下‘对象气球’：<br>对象就像一个充满氢气的气球，我们没有办法直接去得到它，要想对它的使用都必须通过一根连着它的绳子来访问，这根绳子就是对象的引用。<br>一根绳子同时只能连着一个气球，就像一个引用同时只能指向一个对象；<br>可以用多根绳子同时连接一个气球，也就是可以有多个引用同时指向同一个对象；<br>如果某个气球没有任何绳子连着它，那它就会飞走，同样，某个对象如果没有引用连接它，它就会成为垃圾，等着被java的垃圾收集器回收；<br>如果某根绳子没有连接任何气球，那么它就是一个空引用，对它的访问没有意义。<br>同样，某个引用如果没有指向对象，那么对它的访问将会抛出NullPointerException</p>
</blockquote>
<h1 id="Java内存回收机制"><a href="#Java内存回收机制" class="headerlink" title="Java内存回收机制"></a>Java内存回收机制</h1><p> Java 的内存管理就是对象的分配和释放问题。分配内存的方式多种多样，取决于该种语言的语法结构。但不论是哪一种语言的内存分配方式，最后都要返回所分配的内存块的起始地址，即返回一个指针到内存块的首地址。在Java 中所有对象都是在堆（Heap）中分配的，对象的创建通常都是采用new或者是反射的方式，但对象释放却有直接的手段，所以对象的回收都是由Java虚拟机通过垃圾收集器去完成的。这种收支两条线的方法确实简化了程序员的工作，但同时也加重了JVM的工作，这也是Java 程序运行速度较慢的原因之一。因为，GC 为了能够正确释放对象，GC 必须监控每一个对象的运行状态，包括对象的申请、引用、被引用、赋值等，GC 都需要进行监控。监视对象状态是为了更加准确地、及时地释放对象，而释放对象的根本原则就是该对象不再被引用。</p>
<h1 id="JVM垃圾回收"><a href="#JVM垃圾回收" class="headerlink" title="JVM垃圾回收"></a>JVM垃圾回收</h1><h2 id="GC类型"><a href="#GC类型" class="headerlink" title="GC类型"></a>GC类型</h2><ul>
<li><strong>新生代的GC</strong><br>Minor GC（新生代回收）的触发条件比较简单，Eden空间不足就开始进行Minor GC回收新生代。</li>
<li><strong>老年代GC</strong><br>而Full GC（老年代回收，一般伴随一次Minor GC）则有几种触发条件：<br>（1）老年代空间不足<br>（2）PermSpace空间不足<br>（3）统计得到的Minor GC晋升到老年代的平均大小大于老年代的剩余空间</li>
</ul>
<h2 id="内存类型"><a href="#内存类型" class="headerlink" title="内存类型"></a>内存类型</h2><ul>
<li>Java堆内存</li>
<li>Perm内存</li>
<li>Java进程本地内存</li>
</ul>
<h1 id="瓶颈分析"><a href="#瓶颈分析" class="headerlink" title="瓶颈分析"></a>瓶颈分析</h1><p>定位分析：</p>
<ol>
<li>生成堆的dump文件</li>
<li>分析dump文件<br>详细参考文章相关章节：<a href="http://wenku.baidu.com/link?url=p6SRx-GOp_awHt2oBbNoLYJ5jKa7ygsa7LbqVWXGkQFtCForji55bQGuGVzfcoBaIhzOYnCZordP1NFR7L5CeJPcUb2lW5TEWRoJ4HE2j_y" target="_blank" rel="external">分析</a></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[大虾真好吃]]></title>
      <url>http://izheyi.com/2016/02/10/%E5%A4%A7%E8%99%BE%E7%9C%9F%E5%A5%BD%E5%90%83/</url>
      <content type="html"><![CDATA[<p><img src="/images/izheyi/2016/02/xia_0.JPG" alt=""><br><img src="/images/izheyi/2016/02/xia_1.JPG" alt=""><br><img src="/images/izheyi/2016/02/xia_2.JPG" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[过年去南锣鼓巷]]></title>
      <url>http://izheyi.com/2016/02/09/%E8%BF%87%E5%B9%B4%E5%8E%BB%E5%8D%97%E9%94%A3%E9%BC%93%E5%B7%B7/</url>
      <content type="html"><![CDATA[<p>来北京这么多年，一直说来这看看，终于如愿了，玩的很开心，吃的还不错。<br>话不多说，上图：）<br><img src="/images/izheyi/2016/02/nanluo_0.JPG" alt=""><br><img src="/images/izheyi/2016/02/nanluo_1.JPG" alt=""><br><img src="/images/izheyi/2016/02/nanluo_2.JPG" alt=""><br><img src="/images/izheyi/2016/02/nanluo_5.JPG" alt=""></p>
<a id="more"></a>
<p><img src="/images/izheyi/2016/02/nanluo_6.JPG" alt=""><br><img src="/images/izheyi/2016/02/nanluo_7.JPG" alt=""><br><img src="/images/izheyi/2016/02/nanluo_8.JPG" alt=""><br><img src="/images/izheyi/2016/02/nanluo_9.JPG" alt=""><br><img src="/images/izheyi/2016/02/nanluo_10.JPG" alt=""></p>
<iframe height="498" width="510" src="http://player.youku.com/embed/XMTQ3MjIxOTM1Mg==" frameborder="0" allowfullscreen></iframe>

<p><img src="/images/izheyi/2016/02/nanluo_11.JPG" alt=""><br><img src="/images/izheyi/2016/02/nanluo_12.JPG" alt=""><br><img src="/images/izheyi/2016/02/nanluo_13.JPG" alt=""><br><img src="/images/izheyi/2016/02/nanluo_14.JPG" alt=""><br><img src="/images/izheyi/2016/02/nanluo_15.JPG" alt=""><br><img src="/images/izheyi/2016/02/nanluo_16.JPG" alt=""><br><img src="/images/izheyi/2016/02/nanluo_17.JPG" alt=""><br><img src="/images/izheyi/2016/02/nanluo_18.JPG" alt=""><br><img src="/images/izheyi/2016/02/nanluo_19.JPG" alt=""><br><img src="/images/izheyi/2016/02/nanluo_20.JPG" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[2016新年快乐]]></title>
      <url>http://izheyi.com/2016/02/08/2016%E6%96%B0%E5%B9%B4%E5%BF%AB%E4%B9%90/</url>
      <content type="html"><![CDATA[<p>今年过年，由于种种原因，没能回家过年，还蛮遗憾的。新年第一天，出去活动一下，开心每一天。<br><img src="/images/izheyi/2016/02/yiheyuan_00.JPG" alt=""><br><img src="/images/izheyi/2016/02/yiheyuan_0.JPG" alt=""><br><img src="/images/izheyi/2016/02/yiheyuan_1.JPG" alt=""><br><img src="/images/izheyi/2016/02/yiheyuan_2.JPG" alt=""></p>
<a id="more"></a>
<p><img src="/images/izheyi/2016/02/yiheyuan_3.JPG" alt=""><br><img src="/images/izheyi/2016/02/yiheyuan_4.JPG" alt=""><br><img src="/images/izheyi/2016/02/yiheyuan_5.JPG" alt=""><br><img src="/images/izheyi/2016/02/yiheyuan_6.JPG" alt=""></p>
<iframe height="498" width="510" src="http://player.youku.com/embed/XMTQ3MjIxNzI2OA==" frameborder="0" allowfullscreen></iframe>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[包饺子]]></title>
      <url>http://izheyi.com/2016/01/30/%E5%8C%85%E9%A5%BA%E5%AD%90/</url>
      <content type="html"><![CDATA[<p>去商场置办年货，正好赶上有包饺子的活动，小丁和妈妈就去参加了。<br><img src="/images/izheyi/2016/01/jiaozi_0.JPG" alt=""><br><img src="/images/izheyi/2016/01/jiaozi_1.JPG" alt=""><br><img src="/images/izheyi/2016/01/jiaozi_2.JPG" alt=""><br><img src="/images/izheyi/2016/01/jiaozi_3.JPG" alt=""></p>
<a id="more"></a>
<p><img src="/images/izheyi/2016/01/jiaozi_4.JPG" alt=""></p>
<iframe height="498" width="510" src="http://player.youku.com/embed/XMTQ3MjIxNTg2OA==" frameborder="0" allowfullscreen></iframe>


<p>因为DAADY提前回家了，妈妈说：只有妈妈和小丁两个人，在包的饺子数量和创意上都没有获得奖励；最后吃饺子的时候，有包山楂的幸运饺子，也没有吃到，小丁是很有意思的，大喊我吃到山楂味了。就是想得奖，有名次，想拿第一名无可厚非，但是这些终究是过眼云烟，不要把这些看的太重，开心就好了，过程往往比结果更让人回味，做一个坐在路边给别人鼓掌的人，未必就是失败的人生。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java线程堆栈分析]]></title>
      <url>http://izheyi.com/2016/01/15/Java%E7%BA%BF%E7%A8%8B%E5%A0%86%E6%A0%88%E5%88%86%E6%9E%90/</url>
      <content type="html"><![CDATA[<p>线程堆栈也称作线程调用堆栈。Java线程堆栈是虚拟机中线程（包括锁）状态的一个瞬间快照，即系统在某个时刻所有线程的运行状态,包括每一个线程的调用堆栈，锁的持有情况等信息。</p>
<p>线程堆栈的信息都包含：</p>
<ol>
<li>线程的名字，ID，线程的数量等。</li>
<li>线程的运行状态，锁的状态（锁被哪个线程持有，哪个线程再等待锁等）。</li>
<li>调用堆栈（即函数的调用层次关系）。调用堆栈包含完整的类名，所执行的方法，源代码的行数。</li>
</ol>
<p>借助线程堆栈，可以分析许多问题，如线程死锁、锁争用、死循环、识别耗时操作等等。在多线程场合下的稳定性问题分析和性能问题分析，线程堆栈分析是最有效的方法，在多数情况下甚至无需对系统了解就可以进行相应的分析。<br>线程堆栈最善于分析如下类型的问题:<br>• 系统无缘无故CPU过高。<br>• 系统挂起，无响应。<br>• 系统运行越来越慢。<br>• 性能瓶颈（如无法充分利用CPU等）<br>• 线程死锁、死循环，饿死等。<br>• 由于线程数量太多导致系统失败（如无法创建线程等）。</p>
<h1 id="输出线程状态"><a href="#输出线程状态" class="headerlink" title="输出线程状态"></a>输出线程状态</h1><p>Java虚拟机提供了线程转储(Thread dump)的后门，通过这个后门，可以将线程堆栈打印出来。<br>我们这里拿Linux做例子，写了一个简单的java程序在Linux一直运行着：</p>
<ul>
<li>kill -3 [java pid]<br>不会在当前终端输出，它会输出到代码执行的或指定的地方去。比如，kill -3 tomcat pid, 输出堆栈到log目录下。</li>
<li>Jstack [java pid]<br>这个比较简单，在当前终端显示，也可以重定向到指定文件中。</li>
<li>JvisualVM：Thread Dump<br>不做说明，打开JvisualVM后，都是界面操作，过程还是很简单的。</li>
</ul>
<h1 id="解读线程状态"><a href="#解读线程状态" class="headerlink" title="解读线程状态"></a>解读线程状态</h1><h2 id="dump的线程信息"><a href="#dump的线程信息" class="headerlink" title="dump的线程信息"></a>dump的线程信息</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"main"</span> prio=<span class="number">10</span> tid=<span class="number">0</span>x00007f730c008800 nid=<span class="number">0</span>x63eb runnable [<span class="number">0</span>x00007f73117c6000]</span><br><span class="line">   java<span class="class">.lang</span><span class="class">.Thread</span><span class="class">.State</span>: RUNNABLE</span><br><span class="line">        at java<span class="class">.io</span><span class="class">.FileOutputStream</span><span class="class">.writeBytes</span>(Native Method)</span><br><span class="line">        at java<span class="class">.io</span><span class="class">.FileOutputStream</span><span class="class">.write</span>(FileOutputStream<span class="class">.java</span>:<span class="number">345</span>)</span><br><span class="line">        at java<span class="class">.io</span><span class="class">.BufferedOutputStream</span><span class="class">.flushBuffer</span>(BufferedOutputStream<span class="class">.java</span>:<span class="number">82</span>)</span><br><span class="line">        at java<span class="class">.io</span><span class="class">.BufferedOutputStream</span><span class="class">.flush</span>(BufferedOutputStream<span class="class">.java</span>:<span class="number">140</span>)</span><br><span class="line">        - locked &lt;<span class="number">0</span>x00000000cc407ab8&gt; (<span class="tag">a</span> java<span class="class">.io</span><span class="class">.BufferedOutputStream</span>)</span><br><span class="line">        at java<span class="class">.io</span><span class="class">.PrintStream</span><span class="class">.write</span>(PrintStream<span class="class">.java</span>:<span class="number">482</span>)</span><br><span class="line">        - locked &lt;<span class="number">0</span>x00000000cc407a98&gt; (<span class="tag">a</span> java<span class="class">.io</span><span class="class">.PrintStream</span>)</span><br><span class="line">        at sun<span class="class">.nio</span><span class="class">.cs</span><span class="class">.StreamEncoder</span><span class="class">.writeBytes</span>(StreamEncoder<span class="class">.java</span>:<span class="number">221</span>)</span><br><span class="line">        at sun<span class="class">.nio</span><span class="class">.cs</span><span class="class">.StreamEncoder</span><span class="class">.implFlushBuffer</span>(StreamEncoder<span class="class">.java</span>:<span class="number">291</span>)</span><br><span class="line">        at sun<span class="class">.nio</span><span class="class">.cs</span><span class="class">.StreamEncoder</span><span class="class">.flushBuffer</span>(StreamEncoder<span class="class">.java</span>:<span class="number">104</span>)</span><br><span class="line">        - locked &lt;<span class="number">0</span>x00000000cc407b90&gt; (<span class="tag">a</span> java<span class="class">.io</span><span class="class">.OutputStreamWriter</span>)</span><br><span class="line">        at java<span class="class">.io</span><span class="class">.OutputStreamWriter</span><span class="class">.flushBuffer</span>(OutputStreamWriter<span class="class">.java</span>:<span class="number">185</span>)</span><br><span class="line">        at java<span class="class">.io</span><span class="class">.PrintStream</span><span class="class">.newLine</span>(PrintStream<span class="class">.java</span>:<span class="number">546</span>)</span><br><span class="line">        - eliminated &lt;<span class="number">0</span>x00000000cc407a98&gt; (<span class="tag">a</span> java<span class="class">.io</span><span class="class">.PrintStream</span>)</span><br><span class="line">        at java<span class="class">.io</span><span class="class">.PrintStream</span><span class="class">.println</span>(PrintStream<span class="class">.java</span>:<span class="number">737</span>)</span><br><span class="line">        - locked &lt;<span class="number">0</span>x00000000cc407a98&gt; (<span class="tag">a</span> java<span class="class">.io</span><span class="class">.PrintStream</span>)</span><br><span class="line">        at test.<span class="function"><span class="title">fun2</span><span class="params">(test.java:<span class="number">19</span>)</span></span></span><br><span class="line">        at test.<span class="function"><span class="title">fun1</span><span class="params">(test.java:<span class="number">12</span>)</span></span></span><br><span class="line">        at test.<span class="function"><span class="title">main</span><span class="params">(test.java:<span class="number">6</span>)</span></span></span><br></pre></td></tr></table></figure>
<p>线程堆栈里面的最直观的信息是当前线程的调用上下文，即从哪个函数中调用到哪个函数中（从下往上看），正执行到哪个类的哪一行.</p>
<a id="more"></a>
<h2 id="解读"><a href="#解读" class="headerlink" title="解读"></a>解读</h2><ul>
<li><p>“main” prio=10 tid=0x00007f730c008800 nid=0x63eb runnable [0x00007f73117c6000]<br>  “main” - 线程名称<br>  prio=10 - 线程优先级<br>  tid=0x00007f730c008800 - 线程ID<br>  nid=0x63eb - 对应本地线程ID<br>  runnable - 线程状态<br>  [0x00007f73117c6000] - 线程占用内存地址</p>
<p>  “本地线程”是指该Java线程所对应的虚拟机中的本地线程。</p>
<ol>
<li>ps –ef|grep java：获取java进程id</li>
<li>使用pstack <java pid="">获得Java虚拟机的本地线程的堆栈<br><img src="/images/java/threaddump_nid.jpg" alt=""></java></li>
</ol>
</li>
<li>at test.fun2 (test.java:19)<br>  test - 类名<br>  fun2 - 方法名<br>  test.java - 源代码文件<br>  19 - 所在行号</li>
</ul>
<h1 id="瓶颈分析"><a href="#瓶颈分析" class="headerlink" title="瓶颈分析"></a>瓶颈分析</h1><p>详细参考文章：<a href="http://wenku.baidu.com/link?url=p6SRx-GOp_awHt2oBbNoLYJ5jKa7ygsa7LbqVWXGkQFtCForji55bQGuGVzfcoBaIhzOYnCZordP1NFR7L5CeJPcUb2lW5TEWRoJ4HE2j_y" target="_blank" rel="external">分析</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux下JDK安装配置]]></title>
      <url>http://izheyi.com/2016/01/10/Linux%E4%B8%8BJDK%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<p>java可以运行，只能说明JRE环境变量配置正确；javac不能运行，说明JDK没安装或者环境变量配置错误。</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><ol>
<li><p>创建安装文件夹</p>
<figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="constant">@Automation</span> usr]<span class="preprocessor"># mkdir /usr/java</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>复制安装文件到新建的文件夹</p>
<figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="constant">@Automation</span> usr]<span class="preprocessor"># cd java</span></span><br><span class="line">[root<span class="constant">@Automation</span> java]<span class="preprocessor"># mv /tmp/jdk-7u80-linux-x64.rpm .</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>安装</p>
<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="property">@Automation</span> java]<span class="comment"># rpm -ivh jdk-7u80-linux-x64.rpm</span></span><br><span class="line">Preparing...                <span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment"># [100%]</span></span><br><span class="line">   <span class="number">1</span>:jdk                    <span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment"># [100%]</span></span><br><span class="line">Unpacking JAR files...</span><br><span class="line">        rt.jar...</span><br><span class="line">        jsse.jar...</span><br><span class="line">        charsets.jar...</span><br><span class="line">        tools.jar...</span><br><span class="line">        localedata.jar...</span><br><span class="line">        jfxrt.jar...</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>我的机器安装完jd后，不用配置环境变量也可以正常执行javac、java –version操作，但还是做一下说明。</p>
<ol>
<li><p>修改系统环境变量文件：</p>
 <figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="constant">@Automation</span> java]<span class="preprocessor"># vi /etc/profile</span></span><br></pre></td></tr></table></figure>
<p> 向文件里追加</p>
 <figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">JAVA_HOME=/usr/java/jdk1.<span class="number">7.0_80</span></span><br><span class="line">JRE_HOME=/usr/java/jdk1.<span class="number">7.0_80</span>/jre</span><br><span class="line">PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA</span>_HOME/bin:<span class="variable">$JRE</span>_HOME/bin</span><br><span class="line">CLASSPATH=.:<span class="variable">$JAVA</span>_HOME/lib/dt.jar:<span class="variable">$JAVA</span>_HOME/lib/tools.jar:<span class="variable">$JRE</span>_HOME/lib</span><br><span class="line">export JAVA_HOME JRE_HOME PATH CLASSPATH</span><br></pre></td></tr></table></figure>
</li>
<li><p>使修改生效</p>
 <figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation java]# <span class="keyword">source</span> <span class="regexp">/etc/</span>profile</span><br><span class="line">[root@Automation java]# echo $PATH</span><br><span class="line"><span class="regexp">/usr/</span>lib64<span class="regexp">/qt-3.3/</span>bin:<span class="regexp">/usr/</span>local<span class="regexp">/sbin:/u</span>sr<span class="regexp">/local/</span>bin:<span class="regexp">/sbin:/</span>bin:<span class="regexp">/usr/</span>sbin:<span class="regexp">/usr/</span>bin:<span class="regexp">/root/</span>bin:<span class="regexp">/usr/</span>java<span class="regexp">/jdk1.7.0_80/</span>bin:<span class="regexp">/usr/</span>java<span class="regexp">/jdk1.7.0_80/</span>jre<span class="regexp">/bin</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p><em>Notes：在64位下安装32位JDK，会有错误，要安装对应位数的版本。</em></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[闺女第一次给Daddy洗脚]]></title>
      <url>http://izheyi.com/2016/01/08/%E9%97%BA%E5%A5%B3%E7%AC%AC%E4%B8%80%E6%AC%A1%E7%BB%99Daddy%E6%B4%97%E8%84%9A/</url>
      <content type="html"><![CDATA[<p>今天闺女第一次给Daddy洗脚，不让洗都不愿意，留念一下，也有了大概以下的对话：<br><strong>F: </strong>我老了你还能这么给我洗脚吗？<br><strong>D: </strong>我也不知道我长大了会变成什么样子。。。<br><strong>F: </strong>还会给我洗吗？<br><strong>D: </strong>不知道。。。。</p>
<iframe height="498" width="510" src="http://player.youku.com/embed/XMTQ0Mjc5MDg3Ng==" frameborder="0" allowfullscreen></iframe>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[元旦回老家，兴奋的很]]></title>
      <url>http://izheyi.com/2016/01/05/%E5%85%83%E6%97%A6%E5%9B%9E%E8%80%81%E5%AE%B6%EF%BC%8C%E5%85%B4%E5%A5%8B%E7%9A%84%E5%BE%88/</url>
      <content type="html"><![CDATA[<p>现在的小丁对回老家这件事很是向往和兴奋，提前两周自己就在倒计时，可以不上学，但一定要回老家。希望你长大了，也能保持这份热情:)</p>
<p>大城市的玩伴本来就少，回老家就不一样了，太多的小朋友，没有了所谓的规矩，也不粘着大人了，除了晚上睡觉的时候给读个故事，其他时间根本就不用管，真是玩疯了。</p>
<p>回老家的火车上，碰见了一个小朋友，高兴的玩了一路。<br><img src="/images/izheyi/2016/01/huijia.jpg" alt="你睡的真舒服么^_^"></p>
<p>回京的路上，我们读了故事书，也有了下面的一些小对话：</p>
<iframe height="498" width="510" src="http://player.youku.com/embed/XMTQ0Mjg4OTY1Ng==" frameborder="0" allowfullscreen></iframe>

<iframe height="498" width="510" src="http://player.youku.com/embed/XMTQ0Mjg5MDY1Mg==" frameborder="0" allowfullscreen></iframe>



]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[小丁的第一次元旦演出]]></title>
      <url>http://izheyi.com/2015/12/30/%E5%B0%8F%E4%B8%81%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%85%83%E6%97%A6%E6%BC%94%E5%87%BA/</url>
      <content type="html"><![CDATA[<p>由于种种原因，都上大班了，才有了第一次的元旦文艺演出，小丁的表现真是可圈可点，处处都争取表现到最好，精神可嘉！</p>
<p>好几个节目，小丁好像都是领舞呢:)</p>
<h1 id="歌舞串烧"><a href="#歌舞串烧" class="headerlink" title="歌舞串烧"></a>歌舞串烧</h1><p>我有一只小毛驴 + 新年好</p>
<p><iframe height="498" width="510" src="http://player.youku.com/embed/XMTQ0MjcwNzM5Ng==" frameborder="0" allowfullscreen></iframe><br><img src="/images/izheyi/2015/chuan_1.jpg" alt=""><br><img src="/images/izheyi/2015/chuan_2.jpg" alt=""></p>
<a id="more"></a>
<h1 id="我真的很不错"><a href="#我真的很不错" class="headerlink" title="我真的很不错"></a>我真的很不错</h1><p><iframe height="498" width="510" src="http://player.youku.com/embed/XMTQ0MjY5OTUxMg==" frameborder="0" allowfullscreen></iframe><br><img src="/images/izheyi/2015/bucuo_1.jpg" alt=""><br><img src="/images/izheyi/2015/bucuo_2.jpg" alt=""><br><img src="/images/izheyi/2015/bucuo_3.jpg" alt=""><br><img src="/images/izheyi/2015/bucuo_4.jpg" alt=""><br><img src="/images/izheyi/2015/bucuo_5.jpg" alt=""></p>
<p>中间出了一个小状况，没有关系的，又有多少事情是真正能一帆风顺的呢，有些事情不是我们能把控的了的，关键是面对状况，我们应该怎样去处理它，尽量把事件做到最好。所以，加油小丁！！</p>
<h1 id="孝经-千字文"><a href="#孝经-千字文" class="headerlink" title="孝经 千字文"></a>孝经 千字文</h1><p><iframe height="498" width="510" src="http://player.youku.com/embed/XMTQ0MjY5NzUwNA==" frameborder="0" allowfullscreen></iframe><br><img src="/images/izheyi/2015/qianziwen.jpg" alt=""></p>
<h1 id="学业汇报"><a href="#学业汇报" class="headerlink" title="学业汇报"></a>学业汇报</h1><p><iframe height="498" width="510" src="http://player.youku.com/embed/XMTQ0MjcwODc3Mg==" frameborder="0" allowfullscreen></iframe><br><img src="/images/izheyi/2015/xuebao.jpg" alt=""></p>
<h1 id="武术表演"><a href="#武术表演" class="headerlink" title="武术表演"></a>武术表演</h1><p><iframe height="498" width="510" src="http://player.youku.com/embed/XMTQ0MjcwMDQ3Ng==" frameborder="0" allowfullscreen></iframe><br><img src="/images/izheyi/2015/wushu_1.jpg" alt=""><br><img src="/images/izheyi/2015/wushu_2.jpg" alt=""></p>
<p><em>有一个不愉快的小插曲，爸爸又没控制好脾气，把老师说了一通，说实在的，现在的老师也真是的，该管的不管，不该管的瞎管，有哪个老师真正的能从孩子的角度去看问题、带孩子，哎。。我没有故意要批评或为难哪个老师，或许每个人的教育方式和观点不一样吧。但愿小丁在以后的学习中，能碰见几位‘好老师’。</em></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[2015圣诞节]]></title>
      <url>http://izheyi.com/2015/12/25/2015%E5%9C%A3%E8%AF%9E%E8%8A%82/</url>
      <content type="html"><![CDATA[<p>圣诞节到了，小丁也长大了，好像明白了是咋回事了，我们去了上地华联，又去了中关村，可高兴坏了。<br><img src="/images/izheyi/2015/xmas_0.jpg" alt=""><br><img src="/images/izheyi/2015/xmas_1.jpg" alt=""><br><img src="/images/izheyi/2015/xmas_2.jpg" alt=""><br><img src="/images/izheyi/2015/xmas_3.jpg" alt=""></p>
<a id="more"></a>
<iframe height="498" width="510" src="http://player.youku.com/embed/XMTQ0MjY4OTk4MA==" frameborder="0" allowfullscreen></iframe>

<hr>
<iframe height="498" width="510" src="http://player.youku.com/embed/XMTQ0MjY5MjQwOA==" frameborder="0" allowfullscreen></iframe>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Load Runner - VuGen参数化构造数据]]></title>
      <url>http://izheyi.com/2015/12/23/Load-Runner-VuGen%E5%8F%82%E6%95%B0%E5%8C%96%E6%9E%84%E9%80%A0%E6%95%B0%E6%8D%AE/</url>
      <content type="html"><![CDATA[<p>这才是参数化的难点，构造真实合理数据。<br>最好是利用现在系统中的数据。（数据漂白： 真实数据改成不真实，但还是真实）</p>
<h1 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h1><p>从工具栏打开‘Parameter List’窗口：<br><img src="/images/lr/vugen_parameter_list.jpg" alt=""><br><em>Notes: 参数列表里最多显示100行。</em></p>
<h1 id="Data-Wizard"><a href="#Data-Wizard" class="headerlink" title="Data Wizard"></a>Data Wizard</h1><p>由图形化界面来通过ODBC访问数据库。<br><em>说明例子:我们把Mysql的当前用户列表输出到参数列表里。</em></p>
<ol>
<li>要先在本机安装mysql驱动程序；</li>
<li>点击‘Data Wizard’ button；</li>
<li>选择‘Specify SQL statement manually’，点击‘Next’；</li>
<li>点击‘Create’去创建数据源<br><img src="/images/mysql/datasource.jpg" alt=""></li>
<li>输入‘SQL statement’，点击‘Finish’；<br><img src="/images/lr/vugen_parameter_datawizard_sql.jpg" alt=""></li>
<li>查看参数列表。<br><img src="/images/lr/vugen_parameter_datawizard_success.jpg" alt=""></li>
</ol>
<h1 id="DataFactory"><a href="#DataFactory" class="headerlink" title="DataFactory"></a>DataFactory</h1><p>Quest DataFactory 是一种快速的、易于产生测试数据工具，它能建模复杂数据关系，且有带有GUI界面。DataFactory是一个功能强大的数据产生器，它允许开发人员和QA毫不费力地产生百万行有意义的测试数据。<br><em>说明例子:构造添加用户数据，包括用户名、密码、部门、简历</em></p>
<ol>
<li>要先在本机安装mysql驱动程序；</li>
<li>创建一个新库(DataFactoryUser)和使用的表(User)；</li>
<li>打开DataFactory，选择Connection Method：ODBC；</li>
<li>点击‘ODBC Administrator’，修改数据源到相应的库；</li>
<li>选择数据源，点击‘Next’；</li>
<li>选择刚创造的表；<br><img src="/images/lr/vugen_parameter_datafactory_add_table.jpg" alt=""></li>
<li>完成此次创建，到达主窗口页面；</li>
<li>点击表‘user’，完成配置；<br><img src="/images/lr/vugen_parameter_datafactory_config_table.jpg" alt=""><br><em>Notes:我们实验创建到本地文件中10000条数据。</em></li>
<li>点击字段‘username’,完成配置；<br><img src="/images/lr/vugen_parameter_datafactory_config_field.jpg" alt=""></li>
<li>同样配置剩下的字段；</li>
<li>点击‘Run’，生成数据。</li>
</ol>
<p>DataFactory只能生成英文数据，不能生成中文数据。<br>下面是8个很不错的免费测试数据生成器。</p>
<ul>
<li>GenerateData</li>
<li>DBMonster</li>
<li>CSV Data Generator</li>
<li>Datagenerator</li>
<li>dgMaster</li>
<li>Spawner Data Generator</li>
<li>Test Dictionary</li>
<li>Fresh Trash Generator</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Centos下Mysql远程访问]]></title>
      <url>http://izheyi.com/2015/12/22/Centos%E4%B8%8BMysql%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE/</url>
      <content type="html"><![CDATA[<p>Mysql默认是不可以通过远程机器访问的,通过下面的配置可以开启远程访问 </p>
<p>在MySQL Server端：<br>执行mysql 命令进入mysql命令模式， </p>
<pre><code>mysql&gt; use mysql;   
mysql&gt; GRANT ALL ON *.* TO admin@&apos;%&apos; IDENTIFIED BY &apos;admin&apos; WITH GRANT OPTION;  
mysql&gt; flush privileges;
</code></pre><p>授权命令的意思是允许任何IP地址（上面的%就是这个意思）的电脑用admin帐户和密码（admin）来访问这个MySQL Server。<br>不要用root帐户远程登录的。</p>
<p>做了以上操作，发现远程还是不行，报错：<code>Can&#39;t connect to MySQL server on x.x.x.x (10061)</code>。<br>我们要去<code>/etc/my.cnf</code>文件里，修改/增加以下内容<br><code>[mysqld]</code><br><code>bing-address=0.0.0.0</code><br>By setting the bind-address to 0.0.0.0 Mysql will now listen on all interfaces.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CentOS命令登录MySQL时，ERROR 1045 (28000): Access denied for user root@localhost (using password: NO)]]></title>
      <url>http://izheyi.com/2015/12/22/CentOS%E5%91%BD%E4%BB%A4%E7%99%BB%E5%BD%95MySQL%E6%97%B6%EF%BC%8C%E6%8A%A5%E9%94%99ERROR-1045-28000-Access-denied-for-user-root-localhost-using-password-NO/</url>
      <content type="html"><![CDATA[<p>用命令行来登录Mysql时，就会出现这个错误。</p>
<h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><ol>
<li>停用mysql服务： <code>[root@Automation ~]# service mysqld stop</code></li>
<li>输入命令：<code>[root@Automation ~]# mysqld_safe --user=mysql --skip-grant-tables --skip-networking &amp;</code> </li>
<li><p>另打开一个SSH，登入数据库：</p>
<figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="variable">@Automation</span> ~]<span class="comment"># mysql -u root mysql·</span></span><br><span class="line">mysql&gt; <span class="keyword">use</span> mysql</span><br><span class="line">mysql&gt; UPDATE user SET Password=PASSWORD(<span class="string">'newpassword'</span>)where USER=<span class="string">'newuser'</span>;</span><br><span class="line">mysql&gt; FLUSH PRIVILEGES;</span><br><span class="line">mysql&gt; <span class="keyword">exit</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p>删除mysqld_safe：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation ~]<span class="preprocessor"># ps -A | grep mysql</span></span><br><span class="line"> <span class="number">3297</span> ?        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> mysqld_safe</span><br><span class="line"> <span class="number">3399</span> ?        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> mysqld</span><br><span class="line">[root@Automation ~]<span class="preprocessor"># kill -<span class="number">9</span> <span class="number">3297</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>启用mysql服务： <code>[root@Automation ~]# service mysqld start</code></p>
</li>
<li>登录数据库<figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">[</span>root@Automation ~]<span class="comment"># mysql -uadmin -padmin</span></span><br><span class="line">Welcome to the MySQ<span class="class">L monitor.  Commands end with ;</span><span class="instruction"> or </span>\g.</span><br><span class="line">Your MySQL connection id is 5</span><br><span class="line">Server version: 5.1.73 Source distribution</span><br><span class="line"></span><br><span class="line">Copyright<span class="function"> (</span>c<span class="function">)</span> 2000, 2013, Oracle<span class="instruction"> and/or </span>its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation<span class="instruction"> and/or </span>its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type 'help;'<span class="instruction"> or </span>'\h' for help. Type '\c' to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Load Runner - VuGen参数化方式]]></title>
      <url>http://izheyi.com/2015/12/22/Load-Runner-VuGen%E5%8F%82%E6%95%B0%E5%8C%96%E6%96%B9%E5%BC%8F/</url>
      <content type="html"><![CDATA[<p>就是这两个选项：select next row和update value on。<br><img src="/images/lr/vugen_parameter_method.jpg" alt="9种方式"></p>
<p>可以通过“参数模拟(Simulate Parameter)”来模拟多虚拟用户的情况下，各次迭代中每个用户对参数的取值。</p>
<ol>
<li>Sequential - Each Iteration<br><img src="/images/lr/vugen_parameter_sequential_iteration.jpg" alt=""></li>
<li>Random - Each Iteration<br><img src="/images/lr/vugen_parameter_random_iteration.jpg" alt=""></li>
<li>Unique - Each Iteration<br><img src="/images/lr/vugen_parameter_unique_iteration.jpg" alt=""></li>
<li>Sequential - Once<br><img src="/images/lr/vugen_parameter_sequential_once.jpg" alt=""></li>
<li>Random - Once<br><img src="/images/lr/vugen_parameter_random_once.jpg" alt=""></li>
<li>Unique - Once<br><img src="/images/lr/vugen_parameter_unique_once.jpg" alt=""></li>
</ol>
<a id="more"></a>
<ol>
<li>Sequential - Each Occurrence<br>每次发生的次数是未知的，所以我们没法模拟这个。</li>
<li>Random - Each Occurrence<br>同上。</li>
<li>Unique - Each Occurrence<br>同上。</li>
</ol>
<p>在Controller中如何分配参数值。可以选自动分配，也可以指定每个虚拟用户的参数值数量。<br><img src="/images/lr/vugen_parameter_allocate_auto.jpg" alt=""><br><img src="/images/lr/vugen_parameter_allocate_value.jpg" alt=""></p>
<p>Notes: 这块在脚本和场景设计的时候，还是比较有难度的，要弄明白各个组合的含义，弄明白业务的规则。<br>例如:</p>
<ol>
<li>用户注册，每次换一个用户；Unique，迭代更新；</li>
<li>同一个用户不能在不同机器同时登录。Unique，Once。</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Load Runner - VuGen参数化基础]]></title>
      <url>http://izheyi.com/2015/12/22/Load-Runner-VuGen%E5%8F%82%E6%95%B0%E5%8C%96%E5%9F%BA%E7%A1%80/</url>
      <content type="html"><![CDATA[<p><strong>参数化的目的就是为了真实。</strong><br><img src="/images/lr/vugen_parameter_list.jpg" alt="Parameter List"></p>
<h1 id="参数化步骤"><a href="#参数化步骤" class="headerlink" title="参数化步骤"></a>参数化步骤</h1><p>实现步骤也很简单，双击选中要参数化的内容，右键 -&gt; Replace with a Parameter；在替换的参数名处点右键，选择Replace more occurrences进行其他值替换。根据情况不同也可使用Ctrl+H替换。<br>例子：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Action()</span><br><span class="line">&#123;</span><br><span class="line">	lr_error_message(<span class="string">"test"</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>参数化后：<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">Action</span>()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="tag">lr_error_message</span>(<span class="string">"&#123;message&#125;"</span>);</span><br><span class="line">	<span class="tag">return</span> <span class="tag">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>但执行的结果：<br><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Starting <span class="keyword">action</span> <span class="keyword">Action</span>.</span><br><span class="line"><span class="keyword">Action</span>.c(<span class="number">3</span>): Error: &#123;message&#125;</span><br><span class="line">Ending <span class="keyword">action</span> <span class="keyword">Action</span>.</span><br></pre></td></tr></table></figure></p>
<p>lr_error_message只是原样输出双引号里的内容，并没有取出参数值的功能。那我们就要取出参数的值，传给相应函数。<br>The <code>lr_eval_string</code> function returns the input string after evaluating any embedded parameters.<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">Action</span>()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="tag">lr_error_message</span>(<span class="function">lr_eval_string</span>(<span class="string">"&#123;message&#125;"</span>));</span><br><span class="line">	<span class="tag">return</span> <span class="tag">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>再次执行结果：<br><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Starting <span class="keyword">action</span> <span class="keyword">Action</span>.</span><br><span class="line"><span class="keyword">Action</span>.c(<span class="number">3</span>): Error: test</span><br><span class="line">Ending <span class="keyword">action</span> <span class="keyword">Action</span>.</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<h1 id="多参数放在一个文件里"><a href="#多参数放在一个文件里" class="headerlink" title="多参数放在一个文件里"></a>多参数放在一个文件里</h1><p>多数情况下，我们不可能把每个参数列表都放到单独的文件中。比如用户登录时的用户名和密码，正常情况下应该是放在一下文件里的。<br>实现步骤：</p>
<ol>
<li>对username和password参数化；</li>
<li>在username参数列表里添加用户名和密码数据；<br><img src="/images/lr/vugen_parameter_1st.jpg" alt=""></li>
<li>选中password参数，做相应修改；<br><img src="/images/lr/vugen_parameter_2nd.jpg" alt=""></li>
</ol>
<h1 id="Log日志跟踪"><a href="#Log日志跟踪" class="headerlink" title="Log日志跟踪"></a>Log日志跟踪</h1><p>调试脚本想查看每次迭代时，运行的是哪行的参数，可做如下设置：<br>运行设置窗口，在Log -&gt; extended log 选择<parameter substitution="">，运行后在Replay Log中显示。<br><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Starting <span class="keyword">action</span> <span class="keyword">Action</span>.</span><br><span class="line"><span class="keyword">Action</span>.c(<span class="number">3</span>): Notify: <span class="type">Parameter</span> Substitution: <span class="type">parameter</span> <span class="string">"message"</span> =  <span class="string">"test1"</span></span><br><span class="line"><span class="keyword">Action</span>.c(<span class="number">3</span>): Error: test1</span><br><span class="line">Ending <span class="keyword">action</span> <span class="keyword">Action</span>.</span><br></pre></td></tr></table></figure></parameter></p>
<p>以后做关联的时候，此处设置也能详细的显示出来关联信息，要知道的一点是写日志会对客户端造成压力，所以运行脚本的，不选择‘Extended Log’。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[QTP can't get the latest update after updating in extenal library file]]></title>
      <url>http://izheyi.com/2015/12/21/QTP-can-t-get-the-latest-update-after-updating-in-extenal-library-file/</url>
      <content type="html"><![CDATA[<p>Sometimes QTP doesn’t pick up the latest library file change if the script is already open.   </p>
<p>When we update an external library file, in QTP, even if close the updating file and open it again, the change might not get picked up the next time you run it.   </p>
<h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>Open the library in QTP and do a syntax check by using <code>Ctrl+F7</code>.<br>That seems to force QTP to read the latest content.  </p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Load Runner - VuGen Get & Post]]></title>
      <url>http://izheyi.com/2015/12/20/Load-Runner-VuGen-Get-Post/</url>
      <content type="html"><![CDATA[<p>性能测试中大部的都是基于HTTP协议的，脚本里的90%都是Get和Post，多数是Get请求。我们用以下两个方法来实现HTTP请求：</p>
<h1 id="Get-web-url"><a href="#Get-web-url" class="headerlink" title="Get - web_url()"></a>Get - web_url()</h1><p>此函数用来模拟用户请求，它也是在脚本中最常使用的函数之一。<br>语法：<br><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Int Web_url(<span class="keyword">const</span> <span class="built_in">char</span> *StepName, <span class="keyword">const</span> <span class="built_in">char</span> * url, &lt;Lists <span class="keyword">of</span> Attributes&gt;, [EXTRARES,&lt;Lists <span class="keyword">of</span> Resource Attributes&gt;,LAST)</span><br></pre></td></tr></table></figure></p>
<p>例子：<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">web_url<span class="list">(<span class="string">"Open Login Page"</span>,</span><br><span class="line">        <span class="string">"URL=http://10.11.2.22/"</span>,</span><br><span class="line">        <span class="string">"Resource=0"</span>,</span><br><span class="line">        <span class="string">"RecContentType=text/html"</span>,</span><br><span class="line">        <span class="string">"Referer="</span>,</span><br><span class="line">        <span class="string">"Snapshot=t1.inf"</span>,</span><br><span class="line">        <span class="string">"Mode=HTML"</span>,</span><br><span class="line">        EXTRARES,</span><br><span class="line">        <span class="string">"URL=/common/login/button.gif"</span>, ENDITEM,</span><br><span class="line">        <span class="string">"URL=/common/login/main.jpg"</span>, ENDITEM,</span><br><span class="line">        <span class="string">"URL=/common/login/head_bg.gif"</span>, ENDITEM,</span><br><span class="line">        LAST)</span><span class="comment">;</span></span><br></pre></td></tr></table></figure></p>
<p>返回值:<br>成功时返回LR_PASS (0)，失败时返回 LR_FAIL (1)。</p>
<p>参数的几点说明:</p>
<ol>
<li>最基本的三个参数是StepName，url, LAST，在不能录制的情况下，可以自己用这三个参数写代码。</li>
<li>Resource - 指定一个值说明这个URL是否是一个资源，0 表示非资源，1 表示资源。</li>
<li>RecContentType - 指定接受服务器什么格式文件。</li>
<li>EXTRARES 是由script、active、java applet、flash、CSS产生的请求，在页面上都找不到。<ul>
<li>每一个都是一个请求。</li>
<li>加不加额外资源，会影响下载量。</li>
<li>能不能删除此处脚本，取决于是不是全部都是图片或样式的请求，有没有特殊的请求存在。(原则上只要是录制时录下来的，不是无关的内容，就保留下来。)</li>
<li>如果在脚本回放时不想下载图片、样式表等，设置：<br>  Run-time Setting -&gt; Browser Emulation -&gt; Download non-html resources。只关心业务处理能力，带宽受限时取消此选项。默认是选中的。</li>
</ul>
</li>
</ol>
<p><em>Notes: 排错，只关注url部分即可，数据要是有变化的话，要进行参数化。</em></p>
<h1 id="Post-web-submit-data"><a href="#Post-web-submit-data" class="headerlink" title="Post - web_submit_data()"></a>Post - web_submit_data()</h1><p>与Get请求的web_url函数相比，多了ITEMDATA。<br><figure class="highlight capnproto"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int web_submit_data( <span class="keyword">const</span> char *StepName, <span class="keyword">const</span> char *Action, &lt;<span class="built_in">List</span> <span class="keyword">of</span> Attributes&gt;, ITEMDATA, &lt;<span class="built_in">List</span> <span class="keyword">of</span> data&gt;, [ EXTRARES, &lt;<span class="built_in">List</span> <span class="keyword">of</span> Resource Attributes&gt;,] LAST );</span><br></pre></td></tr></table></figure></p>
<p>例子：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">web_submit_data("<span class="operator"><span class="keyword">start</span><span class="string">", </span><br><span class="line">"</span><span class="keyword">Action</span>=login.asp<span class="string">", </span><br><span class="line">"</span>Method=POST<span class="string">",</span><br><span class="line">ITEMDATA, </span><br><span class="line">"</span><span class="keyword">name</span>=<span class="keyword">user</span><span class="string">", "</span><span class="keyword">value</span>=yongfeiuall<span class="string">", ENDITEM, </span><br><span class="line">"</span><span class="keyword">name</span>=<span class="keyword">password</span><span class="string">", "</span><span class="keyword">value</span>=yongfeiuall<span class="string">", ENDITEM, </span><br><span class="line">"</span><span class="keyword">name</span>=sessionID<span class="string">", "</span><span class="keyword">value</span>=<span class="number">20151220</span><span class="string">", ENDITEM, </span><br><span class="line">LAST);</span></span></span><br></pre></td></tr></table></figure></p>
<p>返回值:<br>成功时返回LR_PASS (0)，失败时返回 LR_FAIL (1)。</p>
<p>参数的几点说明：</p>
<ol>
<li>Action：Form中的ACTION属性，指定了完成Form中的操作用到的URL。 </li>
<li>Method：表单提交方法：POST或GET（默认是POST）。 </li>
<li>ITEMDATA：数据域和属性的分隔符。 <ul>
<li>List of Data：<br>数据域列表定义了表单提交的内容。由于此请求是上下文无关的，因此数据域包含了所有的隐含域。使用Form的编码规则组织数据域。<br>数据域列表可以使用下面任意一种格式：<br>“name=n1”, “value=v1”, ENDITEM,<br>“name=n2”, “EncryptedValue=qwerty”, ENDITEM, </li>
<li>如果要自己写脚本的话，用HTTPWATCH工具，在POST_DATA中可以看到提交对应的参数名和参数值,与脚本一致。</li>
</ul>
</li>
</ol>
<p><em>Notes：排错，两个地方：1. Action 2. ITEMDATA提交的数据不合法。</em></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux运行级别和chkconfig/service]]></title>
      <url>http://izheyi.com/2015/12/18/Linux%E8%BF%90%E8%A1%8C%E7%BA%A7%E5%88%AB%E5%92%8Cchkconfig/</url>
      <content type="html"><![CDATA[<h1 id="运行级别"><a href="#运行级别" class="headerlink" title="运行级别"></a>运行级别</h1><p>什么是运行级别呢？简单点来说，运行级别就是操作系统当前正在运行的功能级别。级别是从0到6(7个运行级别)，具有不同的功能。<br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation ~]# more /etc/inittab</span><br><span class="line"><span class="preprocessor"># inittab is only used by upstart for the default runlevel.</span></span><br><span class="line"><span class="preprocessor">#</span></span><br><span class="line"><span class="preprocessor"># ADDING OTHER CONFIGURATION HERE WILL HAVE NO EFFECT ON YOUR SYSTEM.</span></span><br><span class="line"><span class="preprocessor">#</span></span><br><span class="line"><span class="preprocessor"># System initialization is started by /etc/init/rcS.conf</span></span><br><span class="line"><span class="preprocessor">#</span></span><br><span class="line"><span class="preprocessor"># Individual runlevels are started by /etc/init/rc.conf</span></span><br><span class="line"><span class="preprocessor">#</span></span><br><span class="line"><span class="preprocessor"># Ctrl-Alt-Delete is handled by /etc/init/control-alt-delete.conf</span></span><br><span class="line"><span class="preprocessor">#</span></span><br><span class="line"><span class="preprocessor"># Terminal gettys are handled by /etc/init/tty.conf and /etc/init/serial.conf,</span></span><br><span class="line"><span class="preprocessor"># with configuration in /etc/sysconfig/init.</span></span><br><span class="line"><span class="preprocessor">#</span></span><br><span class="line"><span class="preprocessor"># For information on how to write upstart event handlers, or how</span></span><br><span class="line"><span class="preprocessor"># upstart works, see init(5), init(8), and initctl(8).</span></span><br><span class="line"><span class="preprocessor">#</span></span><br><span class="line"><span class="preprocessor"># Default runlevel. The runlevels used are:</span></span><br><span class="line"><span class="preprocessor">#   0 - halt (Do NOT set initdefault to this)</span></span><br><span class="line"><span class="preprocessor">#   1 - Single user mode</span></span><br><span class="line"><span class="preprocessor">#   2 - Multiuser, without NFS (The same as 3, if you do not have networking)</span></span><br><span class="line"><span class="preprocessor">#   3 - Full multiuser mode</span></span><br><span class="line"><span class="preprocessor">#   4 - unused</span></span><br><span class="line"><span class="preprocessor">#   5 - X11</span></span><br><span class="line"><span class="preprocessor">#   6 - reboot (Do NOT set initdefault to this)</span></span><br><span class="line"><span class="preprocessor">#</span></span><br><span class="line">id:<span class="number">5</span>:initdefault:</span><br></pre></td></tr></table></figure></p>
<p>简单说明：</p>
<ol>
<li>查看运行级别用：runlevel</li>
<li>进入其它运行级别用：init N，如果init 3则进入终端模式，init 5则又登录图形GUI模式</li>
<li>标准的Linux运行级别为3或5，如果是3的话，系统就在多用户状态；如果是5的话，则是运行着X Window系统。</li>
<li>不同的运行级别有不同的用处，也应该根据自己的不同情形来设置。例如，如果丢失了root口令，那么可以让机器启动进入单用户状态来设置。</li>
</ol>
<a id="more"></a>
<h1 id="chkconfig"><a href="#chkconfig" class="headerlink" title="chkconfig"></a>chkconfig</h1><p>chkconfig命令主要用来更新（启动或停止）和查询系统服务的运行级信息。chkconfig命令可以快速地设置开机时需要自动启动的服务程序。<br>用法：<br><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">chkconfig [--list] [--<span class="keyword">type</span> &lt;<span class="keyword">type</span>&gt;] [<span class="keyword">name</span>]</span><br><span class="line">chkconfig --add &lt;<span class="keyword">name</span>&gt;</span><br><span class="line">chkconfig --del &lt;<span class="keyword">name</span>&gt;</span><br><span class="line">chkconfig --override &lt;<span class="keyword">name</span>&gt;</span><br><span class="line">chkconfig [--level &lt;levels&gt;] [--<span class="keyword">type</span> &lt;<span class="keyword">type</span>&gt;] &lt;<span class="keyword">name</span>&gt; &lt;on|off|reset|resetpriorities&gt;</span><br></pre></td></tr></table></figure></p>
<p>例子：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --<span class="built_in">list</span>      列出所有的系统服务</span><br><span class="line">chkconfig --add httpd 增加httpd服务</span><br><span class="line">chkconfig --del httpd 删除httpd服务</span><br><span class="line">chkconfig --level httpd <span class="number">2345</span> on 把httpd在运行级别为<span class="number">2</span>、<span class="number">3</span>、<span class="number">4</span>、<span class="number">5</span>的情况下都是on（开启）的状态。</span><br></pre></td></tr></table></figure></p>
<h1 id="service"><a href="#service" class="headerlink" title="service"></a>service</h1><p>service命令可以快速地开启和停止linux中的服务程。<br>用法：<br><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Usage: service <span class="variable">&lt; option &gt;</span> |<span class="string"> --status-all </span>|<span class="string"> [ service_name [ command </span>|<span class="string"> --full-restart ] ]</span></span><br></pre></td></tr></table></figure></p>
<p>例子：<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">service mysqld <span class="built_in">start</span></span><br><span class="line">service mysqld restart</span><br><span class="line">service mysqld <span class="built_in">stop</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java线程状态及监控工具]]></title>
      <url>http://izheyi.com/2015/12/18/Java%E7%BA%BF%E7%A8%8B%E7%8A%B6%E6%80%81%E5%8F%8A%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/</url>
      <content type="html"><![CDATA[<h1 id="线程状态"><a href="#线程状态" class="headerlink" title="线程状态"></a>线程状态</h1><p>在监控的过程中，要弄明白下边这6种状态(我们主要关注分析的：Runnable, Blocked, Waiting)：</p>
<ol>
<li>NEW<br>　 当线程对象对创建后，即进入了新建状态</li>
<li>RUNNABLE<br>　 当调用线程对象的start()方法，线程即进入就绪状态。正在 Java 虚拟机中执行的线程处于这种状态。该状态的线程位于可运行线程池中，等待被线程调度选中，获取cpu 的使用权 。</li>
<li>BLOCKED<br>　 处于运行状态中的线程由于某种原因，暂时放弃对CPU的使用权，停止执行，此时进入阻塞状态，直到其进入到就绪状态，才有机会再次被CPU调用以进入到运行状态。根据阻塞产生的原因不同，阻塞状态又可以分为三种：<ul>
<li>等待阻塞：运行状态中的线程执行wait()方法，使本线程进入到等待阻塞状态；</li>
<li>同步阻塞：线程在获取synchronized同步锁失败(因为锁被其它线程所占用)，它会进入同步阻塞状态；</li>
<li>其他阻塞：通过调用线程的sleep()或join()或发出了I/O请求时，线程会进入到阻塞状态。当sleep()状态超时、join()等待线程终止或者超时、或者I/O处理完毕时，线程重新转入就绪状态。</li>
</ul>
</li>
<li>WAITING<br>　 无限期地等待另一个线程来执行某一特定操作的线程处于这种状态。某一线程因为调用下列方法之一而处于等待状态：<ul>
<li>不带超时值的 Object.wait</li>
<li>不带超时值的 Thread.join</li>
<li>LockSupport.park</li>
</ul>
</li>
<li>TIMED_WAITING<br>　 具有指定等待时间的某一等待线程的线程状态。某一线程因为调用以下带有指定正等待时间的方法之一而处于定时等待状态：<ul>
<li>Thread.sleep</li>
<li>带有超时值的 Object.wait</li>
<li>带有超时值的 Thread.join</li>
<li>LockSupport.parkNanos</li>
<li>LockSupport.parkUntil</li>
</ul>
</li>
<li>TERMINATED<br>　　已终止线程的线程状态。线程已经结束执行。</li>
</ol>
<a id="more"></a>
<h1 id="监控工具"><a href="#监控工具" class="headerlink" title="监控工具"></a>监控工具</h1><p>线程快照是当前java虚拟机内每一条线程正在执行的方法堆栈的集合，生成线程快照的主要目的是定位线程出现长时间停顿的原因，如线程间死锁、死循环、请求外部资源导致的长时间等待等。<br>线程Dump是非常有用的诊断Java应用问题的工具，每一个Java虚拟机都有及时生成显示所有线程在某一点状态的线程Dump的能力。</p>
<h2 id="JVisualVM"><a href="#JVisualVM" class="headerlink" title="JVisualVM"></a>JVisualVM</h2><p>这是Java平台本身提供的性能分析工具。该工具是用来监控java运行程序的cpu、内存、线程等的使用情况。并且使用图表的方式监控java程序、还具有远程监控能力。<br><img src="/images/java/jvisualvm_thread.jpg" alt="Java VisualVM"><br><em>Notes:这里只做个简单说明，用到的地方再详细说明。</em></p>
<h2 id="Jstack"><a href="#Jstack" class="headerlink" title="Jstack"></a>Jstack</h2><p>jstack是java虚拟机自带的一种堆栈跟踪工具，用于生成java虚拟机当前时刻的线程快照。<br>使用jstack命令的帮助可以看到，该工具的功能也很强大：<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">C:&gt;jstack</span><br><span class="line">Usage:</span><br><span class="line">    jstack [-l] &lt;pid&gt;</span><br><span class="line">        (<span class="built_in">to</span> connect <span class="built_in">to</span> running <span class="built_in">process</span>)</span><br><span class="line">    jstack -F [-m] [-l] &lt;pid&gt;</span><br><span class="line">        (<span class="built_in">to</span> connect <span class="built_in">to</span> <span class="operator">a</span> hung <span class="built_in">process</span>)</span><br><span class="line">    jstack [-m] [-l] &lt;executable&gt; &lt;core&gt;</span><br><span class="line">        (<span class="built_in">to</span> connect <span class="built_in">to</span> <span class="operator">a</span> core <span class="built_in">file</span>)</span><br><span class="line">    jstack [-m] [-l] [server_id@]&lt;remote serv</span><br><span class="line">        (<span class="built_in">to</span> connect <span class="built_in">to</span> <span class="operator">a</span> remote debug server)</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">    -F  <span class="built_in">to</span> force <span class="operator">a</span> thread dump. Use when jsta</span><br><span class="line">is hung)</span><br><span class="line">    -m  <span class="built_in">to</span> print both java <span class="operator">and</span> native frames</span><br><span class="line">    -l  <span class="keyword">long</span> listing. Prints additional infor</span><br><span class="line">    -h <span class="operator">or</span> -help <span class="built_in">to</span> print this help message</span><br></pre></td></tr></table></figure></p>
<h2 id="JProfiler"><a href="#JProfiler" class="headerlink" title="JProfiler"></a>JProfiler</h2><p>是一个商业授权的Java剖析工具，它把CPU、执行绪和内存的剖析组合在一个强大的应用中。<br>这里不做过多介绍。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java运行环境、执行过程和JVM入门]]></title>
      <url>http://izheyi.com/2015/12/15/Java%E6%89%A7%E8%A1%8C%E6%9C%BA%E5%88%B6%E8%BF%87%E7%A8%8B%E5%92%8CJVM%E5%85%A5%E9%97%A8/</url>
      <content type="html"><![CDATA[<h1 id="Java运行过程"><a href="#Java运行过程" class="headerlink" title="Java运行过程"></a>Java运行过程</h1><p><img src="/images/java/java_run.jpg" alt=""></p>
<h1 id="JVM"><a href="#JVM" class="headerlink" title="JVM"></a>JVM</h1><p>概念性的东西也不多说了，JVM的体系结构如下：<br><img src="/images/java/jvm.jpg" alt=""><br>在系统监控和分析中，我们主要关心的是堆和栈</p>
<ul>
<li>栈是运行时单位，堆是存储单位</li>
<li>栈解决程序运行问题，堆解决数据存储问题</li>
<li>堆中存的是对象，栈中存的基本数据类型和堆中对象的引用</li>
<li>栈代表了处理逻辑，而堆代表了数据</li>
<li>栈异常：java.lang.StackOverflowError</li>
<li>堆异常：java.lang.OutOfMemoryError</li>
</ul>
<a id="more"></a>
<h1 id="Java运行过程内存分配"><a href="#Java运行过程内存分配" class="headerlink" title="Java运行过程内存分配"></a>Java运行过程内存分配</h1><p>Java中程序执行过程及内存分配情况：<br><img src="/images/java/java_memory.jpg" alt=""></p>
<ul>
<li>栈：保存局部变量的值，包括：1.用来保存基本数据类型的值；2.保存类的实例，即堆区对象的引用(指针)。也可以用来保存加载方法时的帧。</li>
<li>堆：用来存放动态产生的数据，比如new出来的对象。注意创建出来的对象只包含属于各自的成员变量，并不包括成员方法。因为同一个类的对象拥有各自的成员变量，存储在各自的堆中，但是他们共享该类的方法，并不是每创建一个对象就把成员方法复制一次。</li>
<li>代码段：用来存放从硬盘上读取的源程序代码。 - 类</li>
<li>数据段：用来存放static定义的静态成员</li>
</ul>
<p><strong>基础类型(4类8种)占一块内存，引用类型占两块内存。</strong><br>具体请参考此Blog：<a href="http://blog.csdn.net/qh_java/article/details/9084091" target="_blank" rel="external">java内存分配分析</a></p>
<h2 id="对象气球"><a href="#对象气球" class="headerlink" title="对象气球"></a>对象气球</h2><p>对象就像一个充满氢气的气球，我们没有办法直接去得到它，要想对它的使用都必须通过一根连着它的绳子来访问，这根绳<br>子就是对象的引用。</p>
<ol>
<li>一根绳子同时只能连着一个气球，就像一个引用同时只能指向一个对象；</li>
<li>可以用多根绳子同时连接一个气球，也就是可以有多个引用同时指向同一个对象；</li>
<li>如果某个气球没有任何绳子连着它，那它就会飞走，同样，某个对象如果没有引用连接它，它就会成为垃圾，等着被java的垃圾收集器回收；</li>
<li>如果某根绳子没有连接任何气球，那么它就是一个空引用，对它的访问没有意义。</li>
<li>同样，某个引用如果没有指向对象，那么对它的访问将会抛出NullPointerException</li>
</ol>
<p><em>Notes：图片和说明文字来自网络，有问题请告之。</em></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[HTTP协议基础]]></title>
      <url>http://izheyi.com/2015/12/14/HTTP%E5%8D%8F%E8%AE%AE%E5%9F%BA%E7%A1%80/</url>
      <content type="html"><![CDATA[<p>目前接触到的基本上都是Web端的性能测试，都是基于HTTP协议的，这里对HTTP协议做个简单的认识：</p>
<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>官方概念不多说，简单来说，就是一个基于应用层的通信规范：双方要进行通信，大家都要遵守一个规范，这个规范就是HTTP协议。<br>HTTP三点注意事项：</p>
<ul>
<li>HTTP是无连接<br>无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。</li>
<li>HTTP是媒体独立的<br>这意味着，只要客户端和服务器知道如何处理的数据内容，任何类型的数据都可以通过HTTP发送。客户端以及服务器指定使用适合的MIME-type内容类型。 </li>
<li>HTTP是无状态<br>HTTP协议是无状态协议。同一个客户端的这次请求和上次请求是没有对应关系，对http服务器来说，它并不知道这两个请求来自同一个客户端。 为了解决这个问题， Web程序引入了Cookie机制来维护状态.</li>
</ul>
<p><img src="/images/performancetesting/http_woshou.jpg" alt="HTTP 三次握手"><br>第一次握手：建立连接时，客户端发送syn包（syn=j）到服务器，并进入SYN_SENT状态，等待服务器确认；SYN：同步序列编号（Synchronize Sequence Numbers）。<br>第二次握手：服务器收到syn包，必须确认客户的SYN（ack=j+1），同时自己也发送一个SYN包（syn=k），即SYN+ACK包，此时服务器进入SYN_RECV状态；<br>第三次握手：客户端收到服务器的SYN+ACK包，向服务器发送确认包ACK(ack=k+1），此包发送完毕，客户端和服务器进入ESTABLISHED（TCP连接成功）状态，完成三次握手。</p>
<h1 id="工作流程"><a href="#工作流程" class="headerlink" title="工作流程"></a>工作流程</h1><p>一次HTTP操作称为一个事务，其工作过程可分为四步：</p>
<ol>
<li>首先客户机与服务器需要建立连接。只要单击某个超级链接，HTTP的工作开始。</li>
<li>建立连接后，客户机发送一个请求给服务器，请求方式的格式为：统一资源标识符（URL）、协议版本号，后边是MIME信息包括请求修饰符、客户机信息和可能的内容。</li>
<li>服务器接到请求后，给予相应的响应信息，其格式为一个状态行，包括信息的协议版本号、一个成功或错误的代码，后边是MIME信息包括服务器信息、实体信息和可能的内容。</li>
<li>客户端接收服务器所返回的信息通过浏览器显示在用户的显示屏上，然后客户机与服务器断开连接。</li>
</ol>
<p>如果在以上过程中的某一步出现错误，那么产生错误的信息将返回到客户端，有显示屏输出。对于用户来说，这些过程是由HTTP自己完成的，用户只要用鼠标点击，等待信息显示就可以了</p>
<a id="more"></a>
<h1 id="消息结构"><a href="#消息结构" class="headerlink" title="消息结构"></a>消息结构</h1><p>Request 消息分为3部分，第一部分叫请求行， 第二部分叫请求头部, 第三部分是body。header和body之间有个空行。<br>Response消息的结构， 和Request消息的结构基本一样。 同样也分为三部分，第一部分叫状态行, 第二部分叫消息报头，第三部分是响应正文。header和body之间也有个空行。</p>
<h2 id="请求头信息"><a href="#请求头信息" class="headerlink" title="请求头信息"></a>请求头信息</h2><p>HTTP最常见的请求头如下：</p>
<ul>
<li>Accept：浏览器可接受的MIME类型；</li>
<li>Accept-Charset：浏览器可接受的字符集；</li>
<li>Accept-Encoding：浏览器能够进行解码的数据编码方式，比如gzip。Servlet能够向支持gzip的浏览器返回经gzip编码的HTML页面。许多情形下这可以减少5到10倍的下载时间；</li>
<li>Accept-Language：浏览器所希望的语言种类，当服务器能够提供一种以上的语言版本时要用到；</li>
<li>Authorization：授权信息，通常出现在对服务器发送的WWW-Authenticate头的应答中；</li>
<li>Connection：表示是否需要持久连接。如果Servlet看到这里的值为“Keep-Alive”，或者看到请求使用的是HTTP 1.1（HTTP 1.1默认进行持久连接），它就可以利用持久连接的优点，当页面包含多个元素时（例如Applet，图片），显著地减少下载所需要的时间。要实现这一点，Servlet需要在应答中发送一个Content-Length头，最简单的实现方法是：先把内容写入ByteArrayOutputStream，然后在正式写出内容之前计算它的大小；</li>
<li>Content-Length：表示请求消息正文的长度；</li>
<li>Cookie：这是最重要的请求头信息之一；</li>
<li>From：请求发送者的email地址，由一些特殊的Web客户程序使用，浏览器不会用到它；</li>
<li>Host：初始URL中的主机和端口；</li>
<li>If-Modified-Since：只有当所请求的内容在指定的日期之后又经过修改才返回它，否则返回304“Not Modified”应答；</li>
<li>Pragma：指定“no-cache”值表示服务器必须返回一个刷新后的文档，即使它是代理服务器而且已经有了页面的本地拷贝；</li>
<li>Referer：包含一个URL，用户从该URL代表的页面出发访问当前请求的页面。</li>
<li>User-Agent：浏览器类型，如果Servlet返回的内容与浏览器类型有关则该值非常有用；</li>
<li>UA-Pixels，UA-Color，UA-OS，UA-CPU：由某些版本的IE浏览器所发送的非标准的请求头，表示屏幕大小、颜色深度、操作系统和CPU类型。</li>
</ul>
<h2 id="响应头信息"><a href="#响应头信息" class="headerlink" title="响应头信息"></a>响应头信息</h2><ul>
<li>Allow：服务器支持哪些请求方法（如GET、POST等）；</li>
<li>Content-Encoding：文档的编码（Encode）方法。只有在解码之后才可以得到Content-Type头指定的内容类型。利用gzip压缩文档能够显著地减少HTML文档的下载时间。Java的GZIPOutputStream可以很方便地进行gzip压缩，但只有Unix上的Netscape和Windows上的IE 4、IE 5才支持它。因此，Servlet应该通过查看Accept-Encoding头（即request.getHeader(“Accept-Encoding”)）检查浏览器是否支持gzip，为支持gzip的浏览器返回经gzip压缩的HTML页面，为其他浏览器返回普通页面；</li>
<li>Content-Length：表示内容长度。只有当浏览器使用持久HTTP连接时才需要这个数据。如果你想要利用持久连接的优势，可以把输出文档写入ByteArrayOutputStram，完成后查看其大小，然后把该值放入Content-Length头，最后通过byteArrayStream.writeTo(response.getOutputStream()发送内容；</li>
<li>Content-Type： 表示后面的文档属于什么MIME类型。Servlet默认为text/plain，但通常需要显式地指定为text/html。由于经常要设置Content-Type，因此HttpServletResponse提供了一个专用的方法setContentTyep。 可在web.xml文件中配置扩展名和MIME类型的对应关系；</li>
<li>Date：当前的GMT时间。你可以用setDateHeader来设置这个头以避免转换时间格式的麻烦；</li>
<li>Expires：指明应该在什么时候认为文档已经过期，从而不再缓存它。</li>
<li>Last-Modified：文档的最后改动时间。客户可以通过If-Modified-Since请求头提供一个日期，该请求将被视为一个条件GET，只有改动时间迟于指定时间的文档才会返回，否则返回一个304（Not Modified）状态。Last-Modified也可用setDateHeader方法来设置；</li>
<li>Location：表示客户应当到哪里去提取文档。Location通常不是直接设置的，而是通过HttpServletResponse的sendRedirect方法，该方法同时设置状态代码为302；</li>
<li>Refresh：表示浏览器应该在多少时间之后刷新文档，以秒计。除了刷新当前文档之外，你还可以通过<code>setHeader(&quot;Refresh&quot;, &quot;5; URL=http://host/path&quot;)</code>让浏览器读取指定的页面。注意这种功能通常是通过设置HTML页面HEAD区的<code>&lt;META HTTP-EQUIV=&quot;Refresh&quot; CONTENT=&quot;5;URL=http://host/path&quot;&gt;</code>实现，这是因为，自动刷新或重定向对于那些不能使用CGI或Servlet的HTML编写者十分重要。但是，对于Servlet来说，直接设置Refresh头更加方便。注意Refresh的意义是“N秒之后刷新本页面或访问指定页面”，而不是“每隔N秒刷新本页面或访问指定页面”。因此，连续刷新要求每次都发送一个Refresh头，而发送204状态代码则可以阻止浏览器继续刷新，不管是使用Refresh头还是<meta http-equiv="Refresh" ...="">。注意Refresh头不属于HTTP 1.1正式规范的一部分，而是一个扩展，但Netscape和IE都支持它。</li>
</ul>
<h1 id="Get-amp-Post"><a href="#Get-amp-Post" class="headerlink" title="Get &amp; Post"></a>Get &amp; Post</h1><p>Http协议定义了很多与服务器交互的方法，最基本的有4种，分别是GET,POST,PUT,DELETE. 一个URL地址用于描述一个网络上的资源，而HTTP中的GET, POST, PUT, DELETE就对应着对这个资源的查，改，增，删4个操作。 我们最常见的就是GET和POST，占90%以上，多数是Get请求。GET一般用于获取/查询资源信息，而POST一般用于更新资源信息.<br>我们看看GET和POST的区别</p>
<ol>
<li>GET提交的数据会放在URL之后，以?分割URL和传输数据，参数之间以&amp;相连，如EditPosts.aspx?name=test1&amp;id=123456.  POST方法是把提交的数据放在HTTP包的Body中.</li>
<li>GET提交的数据大小有限制（因为浏览器对URL的长度有限制），而POST方法提交的数据没有限制.</li>
<li>GET方式需要使用Request.QueryString来取得变量的值，而POST方式通过Request.Form来获取变量的值。</li>
<li>GET方式提交数据，会带来安全问题，比如一个登录页面，通过GET方式提交数据时，用户名和密码将出现在URL上，如果页面可以被缓存或者其他人可以访问这台机器，就可以从历史记录获得该用户的账号和密码.</li>
</ol>
<h1 id="状态码"><a href="#状态码" class="headerlink" title="状态码"></a>状态码</h1><h2 id="状态码分类"><a href="#状态码分类" class="headerlink" title="状态码分类"></a>状态码分类</h2><p><code>1**</code> 信息，服务器收到请求，需要请求者继续执行操作<br><code>2**</code> 成功，操作被成功接收并处理<br><code>3**</code> 重定向，需要进一步的操作以完成请求<br><code>4**</code> 客户端错误，请求包含语法错误或无法完成请求<br><code>5**</code> 服务器错误，服务器在处理请求的过程中发生了错误 </p>
<h2 id="状态码列表"><a href="#状态码列表" class="headerlink" title="状态码列表"></a>状态码列表</h2><p><img src="/images/performancetesting/http_100.jpg" alt="100"><br><img src="/images/performancetesting/http_200.jpg" alt="200"><br><img src="/images/performancetesting/http_300.jpg" alt="300"><br><img src="/images/performancetesting/http_400.jpg" alt="400"><br><img src="/images/performancetesting/http_500.jpg" alt="500"></p>
<h2 id="常见的HTTP状态码"><a href="#常见的HTTP状态码" class="headerlink" title="常见的HTTP状态码"></a>常见的HTTP状态码</h2><p>200 - 请求成功<br>301 - 资源（网页等）被永久转移到其它URL<br>404 - 请求的资源（网页等）不存在<br>500 - 内部服务器错误</p>
<h1 id="Cookie-amp-Session"><a href="#Cookie-amp-Session" class="headerlink" title="Cookie &amp; Session"></a>Cookie &amp; Session</h1><p>Cookie和Session都为了用来保存状态信息，都是保存客户端状态的机制，它们都是为了解决HTTP无状态的问题而所做的努力。<br>Cookie和Session有以下明显的不同点：</p>
<ul>
<li>Cookie将状态保存在客户端，Session将状态保存在服务器端；</li>
<li>Cookies是服务器在本地机器上存储的小段文本并随每一个请求发送至同一个服务器。Cookie最早在RFC2109中实现，后续RFC2965做了增强。网络服务器用HTTP头向客户端发送cookies，在客户终端，浏览器解析这些cookies并将它们保存为一个本地文件，它会自动将同一服务器的任何请求缚上这些cookies。Session并没有在HTTP的协议中定义；</li>
<li>Session是针对每一个用户的，变量的值保存在服务器上，用一个sessionID来区分是哪个用户session变量,这个值是通过用户的浏览器在访问的时候返回给服务器，当客户禁用cookie时，这个值也可能设置为由get来返回给服务器；</li>
<li>就安全性来说：当你访问一个使用session 的站点，同时在自己机子上建立一个cookie，建议在服务器端的SESSION机制更安全些.因为它不会任意读取客户存储的信息。</li>
</ul>
<h2 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h2><p>Session机制是一种服务器端的机制，服务器使用一种类似于散列表的结构（也可能就是使用散列表）来保存信息。<br>当程序需要为某个客户端的请求创建一个session的时候，服务器首先检查这个客户端的请求里是否已包含了一个session标识 - 称为 session id，如果已包含一个session id则说明以前已经为此客户端创建过session，服务器就按照session id把这个 session检索出来使用（如果检索不到，可能会新建一个），如果客户端请求不包含session id，则为此客户端创建一个session并且生成一个与此session相关联的session id，session id的值应该是一个既不会重复，又不容易被找到规律以仿造的字符串，这个 session id将被在本次响应中返回给客户端保存。</p>
<h2 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h2><p>服务器在响应消息中用Set-Cookie头将Cookie的内容回送给客户端，客户端在新的请求中将相同的内容携带在Cookie头中发送给服务器。从而实现会话的保持。</p>
<h1 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h1><p>WEB缓存(cache)位于Web服务器和客户端之间。<br>缓存会根据请求保存输出内容的副本，例如html页面，图片，文件，当下一个请求来到的时候：如果是相同的URL，缓存直接使用副本响应访问请求，而不是向源服务器再次发送请求。<br>常见流程：<br>服务器收到请求时，会在200OK中回送该资源的Last-Modified和ETag头，客户端将该资源保存在cache中，并记录这两个属性。当客户端需要发送相同的请求时，会在请求中携带If-Modified-Since和If-None-Match两个头。两个头的值分别是响应中Last-Modified和ETag头的值。服务器通过这两个头判断本地资源未发生变化，客户端不需要重新下载，返回304响应。<br>HTTP协议定义了相关的消息头来使WEB缓存尽可能好的工作。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Load Runner - VuGen脚本开发基础]]></title>
      <url>http://izheyi.com/2015/12/10/Load-Runner-VuGen%E8%84%9A%E6%9C%AC%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80/</url>
      <content type="html"><![CDATA[<h1 id="Load-Runner"><a href="#Load-Runner" class="headerlink" title="Load Runner"></a>Load Runner</h1><p>主要由以下工具构成</p>
<ul>
<li>VuGen（Virtual User Generator） - 开发脚本（录制+编写）</li>
<li>Controller - 体现多线程，VuGen中也有体现</li>
<li>Analysis - 结果分析</li>
<li>Load generator - 压力机（客户端），可以跨平台。</li>
</ul>
<h1 id="VuGen工具使用"><a href="#VuGen工具使用" class="headerlink" title="VuGen工具使用"></a>VuGen工具使用</h1><h2 id="录制"><a href="#录制" class="headerlink" title="录制"></a>录制</h2><p>录制目的是帮助快速生成脚本。<br><strong>录制原理</strong>：录制的是在B和S之间基本协议的数据包。Lr在B和S之间，相当于一个截取的功能。<br><strong>录制设置</strong>：主要有以下两个方面</p>
<ol>
<li>设置字符集编码：Advanced –&gt; Support charset (选中Checkbox和UTF-8)</li>
<li>设置HTTP/HTML Level： Recording –&gt; HTML-based script –&gt; HTML Advanced –&gt; Script type (选择第2个选项)</li>
</ol>
<p><em>Notes：在‘开始录制’窗口，不选择‘Record the application startup’，打开页面后就不会自动录制，到希望录制的地方点击‘Record’再开始录制。</em></p>
<h2 id="回放"><a href="#回放" class="headerlink" title="回放"></a>回放</h2><p><strong>回放原理</strong>：回放时不需要启动被测试程序（浏览器）不打开浏览器，LR可以模拟多线程。<br><strong>回放设置</strong>：脚本运行顺序、迭代，思考时间，网速模拟等等。</p>
<h1 id="脚本开发知识点"><a href="#脚本开发知识点" class="headerlink" title="脚本开发知识点"></a>脚本开发知识点</h1><p><img src="/images/lr/vugen_zhishidian.jpg" alt="六个点"><br>最难的是关联和思考时间，后边会一个一个单独详细介绍。</p>
<h1 id="排错"><a href="#排错" class="headerlink" title="排错"></a>排错</h1><p>这个是非常重要的，可在以下地方查看：</p>
<ol>
<li>主界面Replay Log<br><em>LR只能判断请求成功与否，不能判断业务是否正确。</em></li>
<li>业务是否成功View –&gt;TestResults下 Submit Data</li>
<li>关联 General Log</li>
</ol>
<p>脚本老是失败原因：参数化、关联、思考时间。</p>
<p><em>Notes: 脚本开发最好是用以下组合（LR11 + Win7 + IE9）</em></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[TestNG 命令行运行]]></title>
      <url>http://izheyi.com/2015/12/10/TestNG-%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%BF%90%E8%A1%8C/</url>
      <content type="html"><![CDATA[<p>之前一直是在Eclipse里运行测试的，本次简单介绍一下怎么样来实现命令行来执行TestNG。<br>Assuming that you have TestNG in your class path, the simplest way to invoke TestNG is as follows:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java org<span class="class">.testng</span><span class="class">.TestNG</span> testng1<span class="class">.xml</span> [testng2<span class="class">.xml</span> testng3<span class="class">.xml</span> ...]</span><br></pre></td></tr></table></figure></p>
<p>主要是在Windows下做的配置（<em>有步骤已经做过，请忽略</em>）：</p>
<ol>
<li>下载JDK安装，配置环境变量。</li>
<li>下载testng-6.8.8.jar包，放在C:\TestNG, 并配置了环境变量<ul>
<li>TESTNG_HOME 为 C:\TESTNG</li>
<li>CLASSPATH 为 %CLASSPATH%;%TESTNG_HOME%\testng-6.8.jar;  </li>
</ul>
</li>
<li><p>在F:\testng下创建一个java文件command.java</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"> <span class="keyword">import</span> <span class="keyword">static</span> org.testng.Assert.assertEquals;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line"><span class="annotation">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAdd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	String str = <span class="string">"TestNG is working fine"</span>;</span><br><span class="line">	assertEquals(<span class="string">"TestNG is working fine"</span>, str);</span><br><span class="line">&#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>编译java文件</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">javac</span> <span class="tag">Command</span><span class="class">.java</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>在同目录下，创建testng.xml</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="doctype">&lt;!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd" &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">suite</span> <span class="attribute">name</span>=<span class="value">"Suite1"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">test</span> <span class="attribute">name</span>=<span class="value">"test1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">classes</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="title">class</span> <span class="attribute">name</span>=<span class="value">"Command"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">classes</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">test</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">suite</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>使用java调用testng.xml</p>
<figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">F:\testng&gt;java org.testng.TestNG testng.xml</span><br><span class="line">[TestNG] Running:</span><br><span class="line">F:\testng\testng.xml</span><br><span class="line"></span><br><span class="line">===============================================</span><br><span class="line">Suite1</span><br><span class="line">Total tests run: 1, Failures: 0, Skips: 0</span><br><span class="line">===============================================</span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux操作系统监控]]></title>
      <url>http://izheyi.com/2015/12/09/Performance-Testing-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9B%91%E6%8E%A7/</url>
      <content type="html"><![CDATA[<p>在性能测试的过程中，要监控的地方应该就是以下部分：</p>
<ul>
<li>操作系统</li>
<li>中间件</li>
<li>Code</li>
<li>DB</li>
<li>网络</li>
</ul>
<p>这5部分来说，主要的瓶颈可能多是操作系统、代码和DB。会在下面把这两个部分说明，操作系统基于Linux，代码基于Java，DB视情况而定。</p>
<h1 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h1><p>CPU监控的关键指标做一个大概的说明：</p>
<h2 id="运行队列"><a href="#运行队列" class="headerlink" title="运行队列"></a>运行队列</h2><p>正在执行和等待CPU处理的任务的总和，称为运行队列。运行队列越长，说明排队等待的任务越多，响应越慢。<br><strong>Notes：运行队列长度最大不要超过当前内核数的3倍。</strong><br>Another common system statistic is that of load average. The load on a system is the total amount of running and runnable process. For example, if two processes were running and three were available to run, the system’s load would be five. The load average is the amount of load over a given amount of time. Typically, the load average is taken over <strong>1 minute, 5 minutes, and 15 minutes</strong>. This enables you to see how the load changes over time.</p>
<h2 id="上下文切换"><a href="#上下文切换" class="headerlink" title="上下文切换"></a>上下文切换</h2><p>To create the illusion that a given single processor runs multiple tasks simultaneously, the Linux kernel constantly switches between different processes. The switch between different processes is called a context switch, because when it happens, the CPU saves all the context information from the old process and retrieves all the context information for the new process.<br>是CPU在不同进程间按时间片轮换，交互性强的需要高优先级，交互性弱的需要低优先级。在linux系统中，有两种优先级：普通优先级和实时优先级。上下文切换不可避免，如果可能最好减少上下文切换。</p>
<h2 id="中断"><a href="#中断" class="headerlink" title="中断"></a>中断</h2><p>一般来自于外部硬件中断，中断也是不可避免的。中断就会有上下文切换，但是上正文切换并不都是中断造成的。<br><em>性能测试不需要特别关心内核的问题（中断、上下文切换），而是关注有时因程序写的不好造成的频繁切换（不正常切换）。</em></p>
<h2 id="资源利用率"><a href="#资源利用率" class="headerlink" title="资源利用率"></a>资源利用率</h2><p>CPU utilization is a straightforward concept. At any given time, the CPU can be doing one of seven things.<br>First, it can be idle, which means that the processor is not actually doing any work and is waiting for something to do. This is “<strong>idle</strong>“ time.<br>Second, the CPU can be running user code, which is specified as “<strong>user</strong>“ time.<br>Third, the CPU can be executing code in the Linux kernel on behalf of the application code. This is “<strong>system</strong>“ time.<br>Fourth, the CPU can be executing user code that has been “nice”ed or set to run at a lower priority than normal processes. （切换线程优先级时消耗的时间)<br>Fifth, the CPU can be in iowait, which mean the system is spending its time waiting for I/O (such as disk or network) to complete.<br>Sixth, the CPU can be in irq state, which means it is in high-priority kernel code handling a hardware interrupt.<br>Finally, the CPU can be in softirq mode, which means it is executing kernel code that was also triggered by an interrupt, but it is running at a lower priority (the bottom-half code). This can happen when a device interrupt occurs, but the kernel needs to do some work with it before it is ready to hand it over to user space (for example, with a network packet).<br>通常我们只关注：idle, user, system, (+wa)。<br><strong>在正常情况下，用户态和系统态的CUP消耗比率是7：3.</strong></p>
<a id="more"></a>
<h1 id="Memory"><a href="#Memory" class="headerlink" title="Memory"></a>Memory</h1><h2 id="Swap"><a href="#Swap" class="headerlink" title="Swap"></a>Swap</h2><p>All systems have a fixed amount of physical memory in the form of RAM chips. The Linux kernel allows applications to run even if they require more memory than available with the physical memory. The Linux kernel uses the hard drive as a temporary memory. This hard drive space is called <strong>swap space</strong>.<br><strong>交换空间大小一般是实际物理内存大小的2倍。</strong><br>Although swap is an excellent way to allow processes to run, it is terribly slow. It can be up to 1,000 times slower for an application to use swap rather than physical memory.</p>
<h2 id="Cache-amp-Buffer"><a href="#Cache-amp-Buffer" class="headerlink" title="Cache &amp; Buffer"></a>Cache &amp; Buffer</h2><p><strong>Cache(读缓存)</strong>： If your system has much more physical memory than required by your applications, Linux will cache recently used files in physical memory so that subsequent accesses to that file do not require an access to the hard drive.<br><strong>Buffer(写缓存)</strong>: To further optimize applications, Linux sets aside memory to use for data that needs to be written to disk. These set-asides are called buffers. If an application has to write something to the disk, which would usually take a long time, Linux lets the application continue immediately but saves the file data into a memory buffer. At some point in the future, the buffer is flushed to disk, but the application can continue immediately. </p>
<h2 id="程序内存申请整个流程"><a href="#程序内存申请整个流程" class="headerlink" title="程序内存申请整个流程"></a>程序内存申请整个流程</h2><p>程序申请操作的不是直接要物理内存地址，而是一个虚拟的地址表，跟实际内存映射。<br>例子：</p>
<ul>
<li>实际物理内存2G, 已经占用1.5G，剩余0.5G</li>
<li>程序申请1G<br><img src="/images/linux/memory_process.jpg" alt=""></li>
</ul>
<p><em>请与文章末尾的Spotlight可视化界面进行参照学习，更容易理解。</em></p>
<h1 id="Disk-I-O"><a href="#Disk-I-O" class="headerlink" title="Disk I/O"></a>Disk I/O</h1><p>这块的内容在内存的流程中已经提及，Disk的主要工作就是读和写，提高性能的主要手段也就是减少磁盘的访问次数。<br>iostat 命令用来监视系统输入/输出设备负载，如果没有安装需要自己安装。<br>安装时可以执行如下命令<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> sysstat</span><br></pre></td></tr></table></figure></p>
<p>命令使用<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation ~]<span class="preprocessor"># iostat</span></span><br><span class="line">Linux <span class="number">2.6</span><span class="number">.32</span>-<span class="number">573.</span>el6.x86_64 (Automation)        <span class="number">2015</span>年<span class="number">12</span>月<span class="number">10</span>日  _x86_64_        (<span class="number">2</span> CPU)</span><br><span class="line"></span><br><span class="line">avg-cpu:  %user   %nice %system %iowait  %steal   %idle</span><br><span class="line">           <span class="number">0.02</span>    <span class="number">0.02</span>    <span class="number">0.08</span>    <span class="number">0.03</span>    <span class="number">0.00</span>   <span class="number">99.85</span></span><br><span class="line"></span><br><span class="line">Device:            tps   Blk_read/s   Blk_wrtn/s   Blk_read   Blk_wrtn</span><br><span class="line">sda               <span class="number">0.63</span>        <span class="number">15.39</span>        <span class="number">14.25</span>    <span class="number">2560734</span>    <span class="number">2370826</span></span><br><span class="line">scd0              <span class="number">0.00</span>         <span class="number">0.00</span>         <span class="number">0.00</span>        <span class="number">360</span>          <span class="number">0</span></span><br><span class="line">dm-<span class="number">0</span>              <span class="number">2.05</span>        <span class="number">15.33</span>        <span class="number">14.25</span>    <span class="number">2551410</span>    <span class="number">2370808</span></span><br><span class="line">dm-<span class="number">1</span>              <span class="number">0.00</span>         <span class="number">0.02</span>         <span class="number">0.00</span>       <span class="number">2600</span>          <span class="number">0</span></span><br></pre></td></tr></table></figure></p>
<h1 id="Network"><a href="#Network" class="headerlink" title="Network"></a>Network</h1><p>考虑的是带宽。主要工具：iptraf，如果没安装需要自己安装。<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> -y iptraf</span><br></pre></td></tr></table></figure></p>
<p>还有netstat, ifconfig====</p>
<h1 id="监控工具"><a href="#监控工具" class="headerlink" title="监控工具"></a>监控工具</h1><p>这里主要介绍两个Linux自带的工具：</p>
<h2 id="vmstat"><a href="#vmstat" class="headerlink" title="vmstat"></a>vmstat</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation ~]<span class="preprocessor"># vmstat <span class="number">2</span></span></span><br><span class="line">procs -----------memory---------- ---swap-- -----io---- --system-- -----cpu------</span><br><span class="line"> r  b   swpd   <span class="built_in">free</span>   buff  cache   si   so    bi    bo   in   cs us sy id wa st</span><br><span class="line"> <span class="number">0</span>      <span class="number">0</span> <span class="number">3029876</span> <span class="number">199616</span> <span class="number">690980</span>    <span class="number">0</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">2</span>    <span class="number">3</span>    <span class="number">2</span>  <span class="number">0</span>  <span class="number">0</span> <span class="number">100</span>  <span class="number">0</span>  <span class="number">0</span></span><br><span class="line"> <span class="number">0</span>      <span class="number">0</span> <span class="number">3029752</span> <span class="number">199616</span> <span class="number">690980</span>    <span class="number">0</span>    <span class="number">0</span>     <span class="number">0</span>    <span class="number">41</span> <span class="number">1009</span>   <span class="number">39</span>  <span class="number">0</span>  <span class="number">0</span> <span class="number">100</span>  <span class="number">0</span>  <span class="number">0</span></span><br><span class="line"> <span class="number">0</span>      <span class="number">0</span> <span class="number">3029752</span> <span class="number">199616</span> <span class="number">690980</span>    <span class="number">0</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">3</span> <span class="number">1004</span>   <span class="number">36</span>  <span class="number">0</span>  <span class="number">0</span> <span class="number">100</span>  <span class="number">0</span>  <span class="number">0</span></span><br><span class="line"> <span class="number">0</span>      <span class="number">0</span> <span class="number">3029752</span> <span class="number">199616</span> <span class="number">690980</span>    <span class="number">0</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">4</span> <span class="number">1004</span>   <span class="number">36</span>  <span class="number">0</span>  <span class="number">0</span> <span class="number">100</span>  <span class="number">0</span>  <span class="number">0</span></span><br><span class="line"> <span class="number">0</span>      <span class="number">0</span> <span class="number">3029752</span> <span class="number">199616</span> <span class="number">690980</span>    <span class="number">0</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">6</span> <span class="number">1003</span>   <span class="number">33</span>  <span class="number">0</span>  <span class="number">0</span> <span class="number">100</span>  <span class="number">0</span>  <span class="number">0</span></span><br></pre></td></tr></table></figure>
<p><strong>Notes：</strong><br>r 表示运行队列(就是说多少个进程真的分配到CPU)，我测试的服务器目前CPU比较空闲，没什么程序在跑，当这个值超过了CPU数目，就会出现CPU瓶颈了。这个也和top的负载有关系，一般负载超过了3就比较高，超过了5就高，超过了10就不正常了，服务器的状态很危险。top的负载类似每秒的运行队列。如果运行队列过大，表示你的CPU很繁忙，一般会造成CPU使用率很高。</p>
<p>b 表示阻塞的进程,这个不多说，进程阻塞，大家懂的。</p>
<p>swpd 虚拟内存已使用的大小，如果大于0，表示你的机器物理内存不足了，如果不是程序内存泄露的原因，那么你该升级内存了或者把耗内存的任务迁移到其他机器。</p>
<p>free   空闲的物理内存的大小，我的机器内存总共8G，剩余3415M。</p>
<p>buff   Linux/Unix系统是用来存储，目录里面有什么内容，权限等的缓存，我本机大概占用300多M</p>
<p>cache  cache直接用来记忆我们打开的文件,给文件做缓冲，(这里是Linux/Unix的聪明之处，把空闲的物理内存的一部分拿来做文件和目录的缓存，是为了提高程序执行的性能，当程序使用内存时，buffer/cached会很快地被使用。)</p>
<p>si  每秒从磁盘读入虚拟内存的大小，如果这个值大于0，表示物理内存不够用或者内存泄露了，要查找耗内存进程解决掉。我的机器内存充裕，一切正常。</p>
<p>so  每秒虚拟内存写入磁盘的大小，如果这个值大于0，同上。</p>
<p>bi  块设备每秒接收的块数量，这里的块设备是指系统上所有的磁盘和其他块设备，默认块大小是1024byte，我本机上没什么IO操作，所以一直是0。</p>
<p>bo 块设备每秒发送的块数量，例如我们读取文件，bo就要大于0。bi和bo一般都要接近0，不然就是IO过于频繁，需要调整。</p>
<p>in 每秒CPU的中断次数，包括时间中断</p>
<p>cs 每秒上下文切换次数，例如我们调用系统函数，就要进行上下文切换，线程的切换，也要进程上下文切换，这个值要越小越好，太大了，要考虑调低线程或者进程的数目,例如在apache和nginx这种web服务器中，我们一般做性能测试时会进行几千并发甚至几万并发的测试，选择web服务器的进程可以由进程或者线程的峰值一直下调，压测，直到cs到一个比较小的值，这个进程和线程数就是比较合适的值了。系统调用也是，每次调用系统函数，我们的代码就会进入内核空间，导致上下文切换，这个是很耗资源，也要尽量避免频繁调用系统函数。上下文切换次数过多表示你的CPU大部分浪费在上下文切换，导致CPU干正经事的时间少了，CPU没有充分利用，是不可取的。</p>
<p>us 用户CPU时间。</p>
<p>sy 系统CPU时间，如果太高，表示系统调用时间长，例如是IO操作频繁。</p>
<p>id  空闲 CPU时间，一般来说，id + us + sy = 100,一般我认为id是空闲CPU使用率，us是用户CPU使用率，sy是系统CPU使用率。</p>
<p>wa 等待IO CPU时间。</p>
<h2 id="top"><a href="#top" class="headerlink" title="top"></a>top</h2><p>top很消耗资源，相当于任务管理器，不建议使用。<br>在top信息里，也可以看到运行队列长度的信息，只不过top里显示的是一段时间内的平均值：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation ~]# top</span><br><span class="line">top - 09:39:58 up 21:13,  1 user,  <span class="operator"><span class="keyword">load</span> average: <span class="number">0.00</span>, <span class="number">0.00</span>, <span class="number">0.00</span></span><br><span class="line">Tasks: <span class="number">147</span> total,   <span class="number">1</span> running, <span class="number">146</span> sleeping,   <span class="number">0</span> stopped,   <span class="number">0</span> zombie</span><br><span class="line">Cpu(s):  <span class="number">0.0</span>%us,  <span class="number">0.0</span>%sy,  <span class="number">0.0</span>%ni,<span class="number">100.0</span>%<span class="keyword">id</span>,  <span class="number">0.0</span>%wa,  <span class="number">0.0</span>%hi,  <span class="number">0.0</span>%si,  <span class="number">0.0</span>%st</span><br><span class="line">Mem:   <span class="number">3389988</span><span class="keyword">k</span> total,  <span class="number">1705472</span><span class="keyword">k</span> used,  <span class="number">1684516</span><span class="keyword">k</span> free,   <span class="number">124564</span><span class="keyword">k</span> buffers</span><br><span class="line">Swap:  <span class="number">3522556</span><span class="keyword">k</span> total,        <span class="number">0</span><span class="keyword">k</span> used,  <span class="number">3522556</span><span class="keyword">k</span> free,   <span class="number">992336</span><span class="keyword">k</span> cached</span><br><span class="line"></span><br><span class="line">  PID <span class="keyword">USER</span>      PR  NI  VIRT  RES  SHR S %CPU %MEM    <span class="keyword">TIME</span>+  COMMAND</span><br><span class="line"> <span class="number">2649</span> root      <span class="number">20</span>   <span class="number">0</span> <span class="number">2286</span><span class="keyword">m</span> <span class="number">295</span><span class="keyword">m</span>  <span class="number">12</span><span class="keyword">m</span> S  <span class="number">0.3</span>  <span class="number">8.9</span>   <span class="number">2</span>:<span class="number">55.70</span> <span class="keyword">java</span></span><br><span class="line"><span class="number">18382</span> root      <span class="number">20</span>   <span class="number">0</span> <span class="number">15032</span> <span class="number">1228</span>  <span class="number">916</span> R  <span class="number">0.3</span>  <span class="number">0.0</span>   <span class="number">0</span>:<span class="number">00.01</span> top</span><br><span class="line">    <span class="number">1</span> root      <span class="number">20</span>   <span class="number">0</span> <span class="number">19356</span> <span class="number">1528</span> <span class="number">1220</span> S  <span class="number">0.0</span>  <span class="number">0.0</span>   <span class="number">0</span>:<span class="number">01.73</span> init</span><br><span class="line">    <span class="number">2</span> root      <span class="number">20</span>   <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span> S  <span class="number">0.0</span>  <span class="number">0.0</span>   <span class="number">0</span>:<span class="number">00.00</span> kthreadd</span></span><br></pre></td></tr></table></figure></p>
<p><em>Notes: 还有其他的Linux性能监控工具，比如Spotlight，商业工具，可视化的界面，显示信息包括：操作系统、网络、CPU、内存、磁盘。</em><br><img src="/images/linux/spotlight.jpg" alt="Spotlight"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Centos下Nginx + php-fpm安装配置]]></title>
      <url>http://izheyi.com/2015/12/08/Centos%E4%B8%8BNginx-php-fpm%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<h1 id="Nginx安装"><a href="#Nginx安装" class="headerlink" title="Nginx安装"></a>Nginx安装</h1><p>Nginx是一款轻量级的Web 服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器，并在一个BSD-like协议下发行。</p>
<ol>
<li><p>编译环境安装<br>我们默认你是安装好了的，如果没有安装的话，请用下面命令安装<br>make安装：</p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y <span class="keyword">install</span> gcc automake autoconf libtool make</span><br></pre></td></tr></table></figure>
<p>g++安装：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="operator"><span class="keyword">install</span> gcc gcc-<span class="keyword">c</span>++</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>依赖包安装<br>我们选择/usr/local/src作为源码目录。Nginx需要依赖下面3个包：</p>
<ul>
<li><p>rewrite模块需要 pcre 库</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> /usr/<span class="keyword">local</span>/src</span><br><span class="line">wget ftp:<span class="comment">//ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.37.tar.gz</span></span><br><span class="line">tar -zxvf pcre-8.37.tar.gz</span><br><span class="line"><span class="keyword">cd</span> pcre-8.37</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
</li>
<li><p>gzip模块需要 zlib 库</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/src</span><br><span class="line">wget http:<span class="comment">//zlib.net/zlib-1.2.8.tar.gz</span></span><br><span class="line">tar -zxvf zlib-<span class="number">1.2</span><span class="number">.8</span>.tar.gz</span><br><span class="line">cd zlib-<span class="number">1.2</span><span class="number">.8</span></span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
</li>
<li><p>ssl 功能需要openssl库</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/src</span><br><span class="line">wget http:<span class="comment">//www.openssl.org/source/openssl-1.0.1q.tar.gz</span></span><br><span class="line">tar -zxvf openssl-<span class="number">1.0</span><span class="number">.1</span>q.tar.gz</span><br><span class="line">cd openssl-<span class="number">1.0</span><span class="number">.1</span>q</span><br><span class="line">./config</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ol>
<a id="more"></a>
<ol>
<li><p>Nginx安装</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/src</span><br><span class="line">wget <span class="symbol">http:</span>/<span class="regexp">/nginx.org/download</span><span class="regexp">/nginx-1.8.0.tar.gz</span><br><span class="line">tar -zxvf nginx-1.8.0.tar.gz</span><br><span class="line">cd nginx-1.8.0</span><br><span class="line">./configure</span> --sbin-path=<span class="regexp">/usr/local</span><span class="regexp">/nginx/nginx</span> --conf-path=<span class="regexp">/usr/local</span><span class="regexp">/nginx/nginx</span>.conf --pid-path=<span class="regexp">/usr/local</span><span class="regexp">/nginx/nginx</span>.pid --<span class="keyword">with</span>-http_ssl_module --<span class="keyword">with</span>-pcre=<span class="regexp">/usr/local</span><span class="regexp">/src/pcre</span>-<span class="number">8.37</span> --<span class="keyword">with</span>-zlib=<span class="regexp">/usr/local</span><span class="regexp">/src/zlib</span>-<span class="number">1.2</span>.<span class="number">8</span> --<span class="keyword">with</span>-openssl=<span class="regexp">/usr/local</span><span class="regexp">/src/openssl</span>-<span class="number">1.0</span>.<span class="number">1</span>q</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
<p><em>Note: 开始我用pcre2，会有以下错误：pcre.h：没有那个文件或目录，后来切换到pcre，安装成功。</em></p>
</li>
<li><p>Nginx启动检查<br>a. 确保系统的 80 端口没被其他程序占用。</p>
<figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ano<span class="string">|grep 80</span></span><br></pre></td></tr></table></figure>
<p><em>Notes:我的CentoOS上已经安装了Apache，端口被占用，先关闭<code>service httpd stop</code>。</em><br>b. 启动</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/nginx/</span>nginx</span><br></pre></td></tr></table></figure>
<p>c. 验证<br>打开浏览器，打开此电脑IP地址：<br><img src="/images/linux/nginx.jpg" alt=""></p>
</li>
</ol>
<h1 id="php-fpm安装"><a href="#php-fpm安装" class="headerlink" title="php-fpm安装"></a>php-fpm安装</h1><p>nginx只是个web服务器，本身不能处理PHP，当接收到请求后，如果是php请求，则发给php解释器处理，并把结果返回给客户端。<br>nginx一般是把请求发fastcgi管理进程处理，fascgi管理进程选择cgi子进程处理结果并返回被nginx。 PHP-FPM是一个PHP FastCGI管理器<br>目前的PHP已经集成php-fpm了，我们只要安装一下PHP就可以了。</p>
<ol>
<li><p>依赖包安装</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">yum</span> -y install libmcrypt-devel mhash-devel libxslt-devel libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel libxml2 libxml2-devel zlib zlib-devel glibc glibc-devel glib2 glib2-devel <span class="keyword">bzip2 </span><span class="keyword">bzip2-devel </span>ncurses ncurses-devel curl curl-devel e2fsprogs e2fsprogs-devel krb5 krb5-devel libidn libidn-devel openssl openssl-devel</span><br></pre></td></tr></table></figure>
</li>
<li><p>PHP安装</p>
<figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">cd</span> <span class="comment">/usr/local/src</span></span><br><span class="line"><span class="comment">wget</span> <span class="comment">http://cn2</span><span class="string">.</span><span class="comment">php</span><span class="string">.</span><span class="comment">net/distributions/php</span><span class="literal">-</span><span class="comment">5</span><span class="string">.</span><span class="comment">5</span><span class="string">.</span><span class="comment">30</span><span class="string">.</span><span class="comment">tar</span><span class="string">.</span><span class="comment">gz</span></span><br><span class="line"><span class="comment">tar</span> <span class="literal">-</span><span class="comment">zxvf</span> <span class="comment">php</span><span class="literal">-</span><span class="comment">5</span><span class="string">.</span><span class="comment">5</span><span class="string">.</span><span class="comment">30</span><span class="string">.</span><span class="comment">tar</span><span class="string">.</span><span class="comment">gz</span></span><br><span class="line"><span class="comment">cd</span> <span class="comment">php</span><span class="literal">-</span><span class="comment">5</span><span class="string">.</span><span class="comment">5</span><span class="string">.</span><span class="comment">30</span></span><br><span class="line"><span class="string">.</span><span class="comment">/configure</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">prefix=/usr/local/php</span>  <span class="literal">-</span><span class="literal">-</span><span class="comment">enable</span><span class="literal">-</span><span class="comment">fpm</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">enable</span><span class="literal">-</span><span class="comment">mbstring</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">disable</span><span class="literal">-</span><span class="comment">pdo</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">with</span><span class="literal">-</span><span class="comment">curl</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">disable</span><span class="literal">-</span><span class="comment">debug</span>  <span class="literal">-</span><span class="literal">-</span><span class="comment">disable</span><span class="literal">-</span><span class="comment">rpath</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">enable</span><span class="literal">-</span><span class="comment">inline</span><span class="literal">-</span><span class="comment">optimization</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">with</span><span class="literal">-</span><span class="comment">bz2</span>  <span class="literal">-</span><span class="literal">-</span><span class="comment">with</span><span class="literal">-</span><span class="comment">zlib</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">enable</span><span class="literal">-</span><span class="comment">sockets</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">enable</span><span class="literal">-</span><span class="comment">sysvsem</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">enable</span><span class="literal">-</span><span class="comment">sysvshm</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">enable</span><span class="literal">-</span><span class="comment">pcntl</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">enable</span><span class="literal">-</span><span class="comment">mbregex</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">with</span><span class="literal">-</span><span class="comment">mhash</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">enable</span><span class="literal">-</span><span class="comment">zip</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">with</span><span class="literal">-</span><span class="comment">pcre</span><span class="literal">-</span><span class="comment">regex</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">with</span><span class="literal">-</span><span class="comment">mysql</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">with</span><span class="literal">-</span><span class="comment">mysqli</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">with</span><span class="literal">-</span><span class="comment">gd</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">with</span><span class="literal">-</span><span class="comment">jpeg</span><span class="literal">-</span><span class="comment">dir</span></span><br><span class="line"><span class="comment">make</span></span><br><span class="line"><span class="comment">make</span> <span class="comment">install</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>php-fpm设置运行用户</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> /usr/<span class="keyword">local</span>/php/etc</span><br><span class="line">cp php-fpm.<span class="keyword">conf</span>.default php-fpm.<span class="keyword">conf</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="Nginx配置支持php-fpm"><a href="#Nginx配置支持php-fpm" class="headerlink" title="Nginx配置支持php-fpm"></a>Nginx配置支持php-fpm</h1>  <figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> /usr/local/nginx</span><br><span class="line"><span class="keyword">cp</span> php-fpm.<span class="keyword">conf</span>.default php-fpm.<span class="keyword">conf</span></span><br><span class="line"><span class="keyword">vi</span> nginx.<span class="keyword">conf</span></span><br></pre></td></tr></table></figure>
<p>  修改文件以下部分:<br>  <figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">location ~ \.php$ &#123;</span><br><span class="line">       root           html;</span><br><span class="line">       fastcgi_pass   <span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">9000</span>;</span><br><span class="line">       fastcgi_index  index.php;</span><br><span class="line">       fastcgi_param  SCRIPT_FILENAME  /<span class="variable">$document</span>_root<span class="variable">$fastcgi</span>_script_name;</span><br><span class="line">       include        fastcgi_params;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><ol>
<li><p>创建php文件<br>在/usr/local/nginx/html下创建index.php文件，输入如下内容</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="preprocessor">&lt;?php</span></span><br><span class="line">	<span class="keyword">echo</span> phpinfo();</span><br><span class="line"><span class="preprocessor">?&gt;</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>启动服务(如果Nginx和php-fpm没有启动)</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/nginx/</span>nginx</span><br></pre></td></tr></table></figure>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/php/</span>sbin<span class="regexp">/php-fpm</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>浏览器查看<br>打开浏览器，访问<a href="http://此电脑IP/index.php：" target="_blank" rel="external">http://此电脑IP/index.php：</a><br><img src="/images/linux/php-fpm.jpg" alt=""></p>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[TFS 'DiffPackage' package did not load correctly]]></title>
      <url>http://izheyi.com/2015/12/07/DiffPackage-package-did-not-load-correctly/</url>
      <content type="html"><![CDATA[<p>Today i got a weird issue, when i compare 2 files in TFS, got the “package did not load correctly” error.</p>
<p><strong>Solution</strong></p>
<ol>
<li>Close Visual Studio</li>
<li>Open a Developer Command Prompt For VS 2012(as administrator)</li>
<li>Type <code>devenv /setup</code></li>
<li>Restart Visual Studio</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux下软件安装]]></title>
      <url>http://izheyi.com/2015/12/06/Linux%E4%B8%8B%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<p>在Linux下安装软件的几种方法，做一个简单的介绍：</p>
<ol>
<li>直接运行可执行程序，类似于Windows下的安装。</li>
<li>绿色版，也就是免安装，例如：Tomcat。</li>
<li>rpm安装<ul>
<li>查询是否已经安装<br><code>rpm -aq mysql</code></li>
<li>删除已安装软件<br><code>rpm -e [上一步查询到的内容]</code><br>删除的时候，会有一些依赖关系的报错，可用下面方法强制删除，强制解除依赖关系<br><code>rpm -e --nodeps [上一步查询到的内容]</code></li>
<li>安装软件<br><code>rpm -ivh [rpm软件包]</code></li>
</ul>
</li>
<li>源码安装<ul>
<li>生成配置文件<br><code>./configure</code></li>
<li>编译<br><code>make</code></li>
<li>安装软件<br><code>make install</code></li>
</ul>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[UFT 12.01 Identifies Firefox web object as Window object]]></title>
      <url>http://izheyi.com/2015/12/04/UFT-12-01-Identifies-Firefox-web-object-as-Window-object/</url>
      <content type="html"><![CDATA[<p>I got a problem:  UFT 12.01 Identifies web object as Window object.<br>Currently I use UFT 12.01. I rolled back Firefox to v31. It seems UFT 12.01 supports this version. But….</p>
<p><strong>Solution:</strong><br>Go to “Tools -&gt; Add-ons -&gt; Extensions”, enable Unified Functional Testing Extension.</p>
<p>It should be work now. </p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Selenium Grid 自动分配]]></title>
      <url>http://izheyi.com/2015/12/03/Selenium-Grid-%E8%87%AA%E5%8A%A8%E5%88%86%E9%85%8D/</url>
      <content type="html"><![CDATA[<p>Selenium Grid来实现多个nodes间的自动分配，以达到分布式并发的效果。</p>
<p>hub和node的启动和测试脚本，参见：<a href="/2015/11/30/Selenium-Grid-初探/">Selenium Grid 初探</a></p>
<p>这次 TestNG XML 文件如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">suite</span> <span class="attribute">thread-count</span>=<span class="value">"5"</span> <span class="attribute">parallel</span>=<span class="value">"classes"</span>  <span class="attribute">name</span>=<span class="value">"demo"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">test</span> <span class="attribute">name</span>=<span class="value">"test1"</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="title">parameter</span> <span class="attribute">name</span>=<span class="value">"browser"</span> <span class="attribute">value</span>=<span class="value">"ff"</span>/&gt;</span>  </span><br><span class="line">     <span class="tag">&lt;<span class="title">parameter</span> <span class="attribute">name</span>=<span class="value">"nodeUrl"</span> <span class="attribute">value</span>=<span class="value">"http://192.168.24.13:4444"</span>/&gt;</span>  </span><br><span class="line">   <span class="tag">&lt;<span class="title">parameter</span> <span class="attribute">name</span>=<span class="value">"webSite"</span> <span class="attribute">value</span>=<span class="value">"http://www.baidu.com"</span>/&gt;</span>  </span><br><span class="line">     <span class="tag">&lt;<span class="title">classes</span>&gt;</span>  </span><br><span class="line">         <span class="tag">&lt;<span class="title">class</span> <span class="attribute">name</span>=<span class="value">"testGrid2.Grid"</span> /&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="title">classes</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;/<span class="title">test</span>&gt;</span>  </span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="title">test</span> <span class="attribute">name</span>=<span class="value">"test2"</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="title">parameter</span> <span class="attribute">name</span>=<span class="value">"browser"</span> <span class="attribute">value</span>=<span class="value">"chrome"</span>/&gt;</span>  </span><br><span class="line">     <span class="tag">&lt;<span class="title">parameter</span> <span class="attribute">name</span>=<span class="value">"nodeUrl"</span> <span class="attribute">value</span>=<span class="value">"http://192.168.24.13:4444"</span>/&gt;</span>  </span><br><span class="line">   <span class="tag">&lt;<span class="title">parameter</span> <span class="attribute">name</span>=<span class="value">"webSite"</span> <span class="attribute">value</span>=<span class="value">"http://www.baidu.com"</span>/&gt;</span>  </span><br><span class="line">     <span class="tag">&lt;<span class="title">classes</span>&gt;</span>  </span><br><span class="line">         <span class="tag">&lt;<span class="title">class</span> <span class="attribute">name</span>=<span class="value">"testGrid2.Grid"</span> /&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="title">classes</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;/<span class="title">test</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="title">suite</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>Notes: url value是Grid Server地址（e.g., WebDriver wd = new RemoteWebDriver(<code>&quot;http://localhost:4444/wd/hub&quot;</code>, ieDesiredcap)）。</p>
<p>对想使用Selenium Grid的来说，实现起来应该不会太麻烦，把框架里的单线程运行的公共脚本<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WebDriver wd = <span class="keyword">new</span> FirefoxDriver();</span><br></pre></td></tr></table></figure></p>
<p>改成<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">DesiredCapabilities</span> ff = DesiredCapabilities.firefox();  </span><br><span class="line"><span class="title">WebDriver</span> wd = new RemoteWebDriver(<span class="string">"http://localhost:4444/wd/hub"</span>, ff);</span><br></pre></td></tr></table></figure></p>
<p>然后再把hub的地址设置到Global Setting里边去。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Selenium Grid 初探]]></title>
      <url>http://izheyi.com/2015/11/30/Selenium-Grid-%E5%88%9D%E6%8E%A2/</url>
      <content type="html"><![CDATA[<p>之前研究过Jenkins的应用，知道基本的流程和原理，能进行一些基本的应用。<br>Grid的好处不多说。Selenium-Grid包括两个部分：<br>Hub：总控节点，连接调用Node，负责分配用例到对应的Node节点所在的执行器上Node<br>Node：负责执行TestCase，启动浏览器</p>
<p>举例说一下整个流程：</p>
<ol>
<li><p>Start the hub<br>通过windows的DOS窗口进入selenium-server-standalone-2.48.2.jar所在目录，执行以下命令</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">java</span> <span class="tag">-jar</span> <span class="tag">selenium-server-standalone-2</span><span class="class">.48</span><span class="class">.2</span><span class="class">.jar</span> <span class="tag">-role</span> <span class="tag">hub</span></span><br></pre></td></tr></table></figure>
<p>Default port is 4444. To change the default port, you can add the optional parameter -port when you run the command. You can view the status of the hub by opening a browser window and navigating to: <a href="http://localhost:4444/grid/console" target="_blank" rel="external">http://localhost:4444/grid/console</a></p>
</li>
<li><p>Start the nodes<br>进入到node，通过windows的DOS窗口进入selenium-server-standalone-2.48.2.jar所在目录，执行以下命令</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">java</span> <span class="tag">-jar</span> <span class="tag">selenium-server-standalone-2</span><span class="class">.48</span><span class="class">.2</span><span class="class">.jar</span> <span class="tag">-role</span> <span class="tag">node</span> <span class="tag">-hub</span> <span class="rule"><span class="attribute">http</span>:<span class="value">//localhost:<span class="number">4444</span>/grid/register</span></span></span><br></pre></td></tr></table></figure>
<p>至此，Selenium-Grid就弄成功了，下面我用一个简单的例子来跑一下。</p>
<a id="more"></a>
</li>
<li><p>Grid run</p>
</li>
</ol>
<ul>
<li><p>Selenium Script</p>
<figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">Grid</span> </span>&#123;</span><br><span class="line">	private WebDriver driver;</span><br><span class="line">	DesiredCapabilities browserCapa;</span><br><span class="line">	<span class="built_in">String</span> baseUrl;</span><br><span class="line"></span><br><span class="line">	<span class="annotation">@Parameters</span>(&#123; <span class="string">"browser"</span>, <span class="string">"nodeUrl"</span>, <span class="string">"webSite"</span> &#125;)</span><br><span class="line">	<span class="annotation">@BeforeMethod</span></span><br><span class="line">	public <span class="keyword">void</span> setUp(<span class="built_in">String</span> browser, <span class="built_in">String</span> nodeUrl, <span class="built_in">String</span> webSite) &#123;</span><br><span class="line">		baseUrl = webSite;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (browser.equals(<span class="string">"ie"</span>))</span><br><span class="line">			browserCapa = DesiredCapabilities.internetExplorer();</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (browser.equals(<span class="string">"ff"</span>))</span><br><span class="line">			browserCapa = DesiredCapabilities.firefox();</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (browser.equals(<span class="string">"chrome"</span>))</span><br><span class="line">			browserCapa = DesiredCapabilities.chrome();</span><br><span class="line"></span><br><span class="line">		<span class="built_in">String</span> url = nodeUrl + <span class="string">"/wd/hub"</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			driver = <span class="keyword">new</span> RemoteWebDriver(<span class="keyword">new</span> URL(url), browserCapa);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (MalformedURLException e) &#123;</span><br><span class="line">			<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		driver.<span class="literal">get</span>(webSite);</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="annotation">@Parameters</span>(&#123; <span class="string">"browser"</span>&#125;)</span><br><span class="line">	<span class="annotation">@Test</span></span><br><span class="line">	public <span class="keyword">void</span> test1(<span class="built_in">String</span> browser)  &#123;</span><br><span class="line">		System.out.println(driver.getCurrentUrl());</span><br><span class="line">		driver.quit();</span><br><span class="line">		System.out.println(browser + <span class="string">" test1"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>TestNG XML</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">suite</span> <span class="attribute">thread-count</span>=<span class="value">"5"</span> <span class="attribute">parallel</span>=<span class="value">"tests"</span>  <span class="attribute">name</span>=<span class="value">"demo"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">test</span> <span class="attribute">name</span>=<span class="value">"test1"</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="title">parameter</span> <span class="attribute">name</span>=<span class="value">"browser"</span> <span class="attribute">value</span>=<span class="value">"ff"</span>/&gt;</span>  </span><br><span class="line">     <span class="tag">&lt;<span class="title">parameter</span> <span class="attribute">name</span>=<span class="value">"nodeUrl"</span> <span class="attribute">value</span>=<span class="value">"http://localhost:5555"</span>/&gt;</span>  </span><br><span class="line">   <span class="tag">&lt;<span class="title">parameter</span> <span class="attribute">name</span>=<span class="value">"webSite"</span> <span class="attribute">value</span>=<span class="value">"http://www.baidu.com"</span>/&gt;</span>  </span><br><span class="line">     <span class="tag">&lt;<span class="title">classes</span>&gt;</span>  </span><br><span class="line">         <span class="tag">&lt;<span class="title">class</span> <span class="attribute">name</span>=<span class="value">"testGrid2.Grid"</span> /&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="title">classes</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;/<span class="title">test</span>&gt;</span>  </span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="title">test</span> <span class="attribute">name</span>=<span class="value">"test2"</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="title">parameter</span> <span class="attribute">name</span>=<span class="value">"browser"</span> <span class="attribute">value</span>=<span class="value">"ie"</span>/&gt;</span>  </span><br><span class="line">     <span class="tag">&lt;<span class="title">parameter</span> <span class="attribute">name</span>=<span class="value">"nodeUrl"</span> <span class="attribute">value</span>=<span class="value">"http://10.8.20.160:5555"</span>/&gt;</span>  </span><br><span class="line">   <span class="tag">&lt;<span class="title">parameter</span> <span class="attribute">name</span>=<span class="value">"webSite"</span> <span class="attribute">value</span>=<span class="value">"http://www.baidu.com"</span>/&gt;</span>  </span><br><span class="line">     <span class="tag">&lt;<span class="title">classes</span>&gt;</span>  </span><br><span class="line">         <span class="tag">&lt;<span class="title">class</span> <span class="attribute">name</span>=<span class="value">"testGrid2.Grid"</span> /&gt;</span></span><br><span class="line"> </span><br><span class="line">     <span class="tag">&lt;/<span class="title">classes</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;/<span class="title">test</span>&gt;</span>  </span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="title">test</span> <span class="attribute">name</span>=<span class="value">"test3"</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="title">parameter</span> <span class="attribute">name</span>=<span class="value">"browser"</span> <span class="attribute">value</span>=<span class="value">"chrome"</span>/&gt;</span>  </span><br><span class="line">     <span class="tag">&lt;<span class="title">parameter</span> <span class="attribute">name</span>=<span class="value">"nodeUrl"</span> <span class="attribute">value</span>=<span class="value">"http://10.8.20.160:5555"</span>/&gt;</span>  </span><br><span class="line">   <span class="tag">&lt;<span class="title">parameter</span> <span class="attribute">name</span>=<span class="value">"webSite"</span> <span class="attribute">value</span>=<span class="value">"http://www.baidu.com"</span>/&gt;</span>  </span><br><span class="line">     <span class="tag">&lt;<span class="title">classes</span>&gt;</span>  </span><br><span class="line">         <span class="tag">&lt;<span class="title">class</span> <span class="attribute">name</span>=<span class="value">"testGrid2.Grid"</span> /&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="title">classes</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;/<span class="title">test</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="title">suite</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>运行testNG XML就可以看到结果了。</p>
<p>只是一个初步的环境搭建，还有很多没想明白的地方，需要再深入的研究一下。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Performance Testing-核心原理]]></title>
      <url>http://izheyi.com/2015/11/27/Performance-Testing-%E6%A0%B8%E5%BF%83%E5%8E%9F%E7%90%86/</url>
      <content type="html"><![CDATA[<p>之前有说过，性能测试是基于协议的，要有大的并发，尽量在真实的环境中来做测试。这就是核心：多线程，协议，模拟真实场景。</p>
<h1 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h1><ul>
<li>线程和进程<br>理解二者的概念和区别，进程是管理单元，线程是执行单元</li>
<li>单线程和多线程<br>单线程好比有三条并行的公路，每条上只有一个车道。优点是安全性好。Linux就是单线程的操作系统。<br>多线程好比只有一条马路，上面有三个车道。优点是资源共享，节省资源。Windows就是多线程的操作系统。<a id="more"></a>
<h1 id="协议"><a href="#协议" class="headerlink" title="协议"></a>协议</h1>优先使用高层协议。如果高层协议搞不定，继续往下走，直至使用socket协议。但Socket也不是万能的，对于加密传输的数据也无能为力。<h2 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h2><img src="/images/performancetesting/protocol_http.jpg" alt=""><h2 id="WebService"><a href="#WebService" class="headerlink" title="WebService"></a>WebService</h2><img src="/images/performancetesting/protocol_webservice.jpg" alt=""><h2 id="Socket"><a href="#Socket" class="headerlink" title="Socket"></a>Socket</h2>处于最底层，发送的是二进制数据。其难点之一是字符集。同样的内容，字符集编码不同，产生的二进制内容不同。<br><img src="/images/performancetesting/protocol_socket.jpg" alt=""></li>
</ul>
<p>只介绍几种常用的，还有其他协议：Java Vuser，自定义等等。</p>
<h1 id="模拟真实场景"><a href="#模拟真实场景" class="headerlink" title="模拟真实场景"></a>模拟真实场景</h1><p>这也没啥好说的，这也是性能测试中的难点之一。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Excel-Unprotect-Macro]]></title>
      <url>http://izheyi.com/2015/11/27/Excel-Unprotect-Macro/</url>
      <content type="html"><![CDATA[<p>Today i use a previous excel with Macro, but forget the protected password, we can use the following way to unprotect macro password.</p>
<ol>
<li>Download the “unprotect_macro.xlsm” file.<br><a href="/images/excel/unprotect_macro.xlsm">Unprotect Macro</a></li>
<li>Open these 2 documents.</li>
<li>Run “unprotected()” in “unprotect_macro.xlsm” file.</li>
<li>Should be upprotect now.</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Performance Testing-基本介绍]]></title>
      <url>http://izheyi.com/2015/11/27/Performance-Testing-%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/</url>
      <content type="html"><![CDATA[<h1 id="自动化测试的基本认识"><a href="#自动化测试的基本认识" class="headerlink" title="自动化测试的基本认识"></a>自动化测试的基本认识</h1><p>也做了很多年的手动测试和功能自动化测试，其实说到底，测试从本质上来看其实就是“数据+执行+验证”的过程。<br>自动化测试从分层的角度来看：</p>
<ul>
<li>单元 &amp; API测试 - 基于代码层面</li>
<li>功能自动化 - 基于UI层面</li>
<li>性能测试 - 基于协议层面</li>
</ul>
<h1 id="什么是性能测试"><a href="#什么是性能测试" class="headerlink" title="什么是性能测试"></a>什么是性能测试</h1><p>理论上的知识自己Google。性能测试与功能测试不同，不再是验证功能是否正确，而是重点关注实现得好不好，重心是关注瓶颈所在。有时也会关注功能问题中的死锁、内存泄漏等问题。</p>
<ul>
<li>性能类型的一些说明：<br>压力测试 - 什么时候压死<br>负载测试 - 不同压力下的表现<br>基准测试 - 正常情况下的压力</li>
<li>测试工具<br>Load Runner<br>Jmeter<br>…<a id="more"></a>
</li>
</ul>
<h1 id="基本性能指标"><a href="#基本性能指标" class="headerlink" title="基本性能指标"></a>基本性能指标</h1><p>说白了，就是衡量系统性能的一些关注点。从不同的角度来看的话，也就是说不同的用户对系统指标的关心是不一样的。</p>
<ul>
<li>真实用户角度<br>试想一下你打开一个网站，最关心的是什么？慢是最受不了的吧！！<br>关心点 - 快： RT(响应时间)</li>
<li>运维角度<br>不必多说，关心点 - 系统的资源利用率</li>
<li>开发角度<br>最底层的东西，关心点 - 代码(算法)和数据库</li>
<li>客户角度<br>试想一下你是网站的所有者，最关心的是什么？系统处理能力不够吧！！<br>关心点 - 多： TPS(业务处理能力)</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Performance Testing-开篇]]></title>
      <url>http://izheyi.com/2015/11/27/Performance-Testing-%E5%BC%80%E7%AF%87/</url>
      <content type="html"><![CDATA[<p>对性能测试从工作起就一知半解，感觉很高大尚的东西，之前做过几个项目也参加过简单的培训，对性能测试有了一个初步的认识，之后一直没来得及整理和思考。接下来的这段时间整理一下，总结一下思路和流程，以备后用，也尽量让它们能纳入到自己的知识结构体系中。</p>
<h1 id="本次整理大概内容"><a href="#本次整理大概内容" class="headerlink" title="本次整理大概内容"></a>本次整理大概内容</h1><ul>
<li>性能测试基础知识</li>
<li>Load Runner基本使用</li>
<li>Java和JVM的简单分析</li>
<li>Linux的简单分析</li>
</ul>
<h1 id="本次记录笔记的一些说明"><a href="#本次记录笔记的一些说明" class="headerlink" title="本次记录笔记的一些说明"></a>本次记录笔记的一些说明</h1><ul>
<li>是基于Load Runner、Linux、Java来学习的</li>
<li>内容可能会有些散</li>
<li><strong>为了减少打字，可能会记录一些当时培训的内容，如果有任何不妥，请告之，做相应处理。</strong></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[中国也过感恩节？]]></title>
      <url>http://izheyi.com/2015/11/26/%E4%B8%AD%E5%9B%BD%E4%B9%9F%E8%BF%87%E6%84%9F%E6%81%A9%E8%8A%82%EF%BC%9F/</url>
      <content type="html"><![CDATA[<p>这分明是美国人的一个古老节日，也是美国人合家欢聚的节日，在这天家人团聚在一起，品尝感恩节火鸡和南瓜饼等美食。</p>
<p>其实自古以来，中华民族就乐于助人、知恩图报，“受人滴水之恩，当以涌泉相报”一度传为名句。中国教育更多关注分数和升学率，加之很多孩子都是独生子女，家人的溺爱导致孩子觉得别人的关怀是理所当然，不少学生不懂得感谢、感激，只知道索取。</p>
<p>要感恩，不一定非得节日这天，感恩，感恩，每时每刻都应该。</p>
<p>小丁班里的小节目：</p>
<embed src="http://player.youku.com/player.php/sid/XMTM5ODMxMTUwMA==/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash"> 


<p>不要怀着什么目的去过这个节日，也不要过度的解读西方文化。请保持自我！！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[下雪去颐和园]]></title>
      <url>http://izheyi.com/2015/11/22/%E4%B8%8B%E9%9B%AA%E5%8E%BB%E9%A2%90%E5%92%8C%E5%9B%AD/</url>
      <content type="html"><![CDATA[<p>今天是大到暴雪，2015年第二场雪，天气预报这次准了，一直吵吵着要出去玩，下午和闺女就去颐和园玩了一圈，人可是真多啊，这么好的天，大家都舍不得在家呆着啊。还真不是很冷，很不错，玩的很开心。<br><img src="/images/izheyi/2015/11_22_000.jpg" alt=""><br><img src="/images/izheyi/2015/11_22_00.jpg" alt=""><br><a id="more"></a><br><img src="/images/izheyi/2015/11_22_01.jpg" alt=""><br><img src="/images/izheyi/2015/11_22_02.jpg" alt=""><br>落了满地的银杏叶，一地金黄，好漂亮啊！<br><img src="/images/izheyi/2015/11_22_1.jpg" alt=""><br><img src="/images/izheyi/2015/11_22_2.jpg" alt=""><br><img src="/images/izheyi/2015/11_22_3.jpg" alt=""><br><img src="/images/izheyi/2015/11_22_4.jpg" alt=""><br><img src="/images/izheyi/2015/11_22_5.jpg" alt=""><br><img src="/images/izheyi/2015/11_22_6.jpg" alt=""><br>看到别人的雪人，也想让老爹做一个，可是人家都是铲子，DADDY可是实打实的直接用手啊，手套都没有。我感觉很是像一个兔子呢，可是闺女说是像小羊羔，哈哈。。。<br><img src="/images/izheyi/2015/11_22_7.jpg" alt=""><br><img src="/images/izheyi/2015/11_22_8.jpg" alt=""><br>这个字写的还是很不错的哟。<br><img src="/images/izheyi/2015/11_22_9.jpg" alt=""><br><img src="/images/izheyi/2015/11_22_11.jpg" alt=""><br><img src="/images/izheyi/2015/11_22_12.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Git学习后话]]></title>
      <url>http://izheyi.com/2015/11/19/Git%E5%AD%A6%E4%B9%A0%E5%90%8E%E8%AF%9D/</url>
      <content type="html"><![CDATA[<p>主要学习了一些基本的操作，供以后参考：<br><img src="/images/git/summary.jpg" alt="请在新窗口打开查看全图"></p>
<p>BTW, 附加两个Git速查表:<br><a href="/images/git/github-git-cheat-sheet.pdf">Github Cheat Sheet</a><br><a href="/images/git/git-cheatsheet.pdf">Cheat Sheet</a></p>
<p>更详细的学习请参考Git官网：<a href="http://git-scm.com" target="_blank" rel="external">Git</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Git服务器搭建]]></title>
      <url>http://izheyi.com/2015/11/18/CentOS%E4%B8%8B%E5%AE%89%E8%A3%85Git%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      <content type="html"><![CDATA[<p>本次环境搭建说明：<br>Server是在CentOS 6.7<br>Client是在Win7<br>利用SSH</p>
<h1 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h1><p>在连网的情况下安装非常容易，一句<code>yum install git</code>搞定。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation file]<span class="preprocessor"># yum install git</span></span><br><span class="line">已加载插件：fastestmirror, refresh-packagekit, security</span><br><span class="line">设置安装进程</span><br><span class="line">base                                                     | <span class="number">3.7</span> kB     <span class="number">00</span>:<span class="number">00</span></span><br><span class="line">base/primary_db                                          | <span class="number">4.6</span> MB     <span class="number">00</span>:<span class="number">08</span></span><br><span class="line">extras                                                   | <span class="number">3.4</span> kB     <span class="number">00</span>:<span class="number">00</span></span><br><span class="line">extras/primary_db                                        |  <span class="number">33</span> kB     <span class="number">00</span>:<span class="number">00</span></span><br><span class="line">updates                                                  | <span class="number">3.4</span> kB     <span class="number">00</span>:<span class="number">00</span></span><br><span class="line">updates/primary_db                                       | <span class="number">2.6</span> MB     <span class="number">00</span>:<span class="number">02</span></span><br><span class="line">包 git-<span class="number">1.7</span><span class="number">.1</span>-<span class="number">3.</span>el6_4<span class="number">.1</span>.x86_64 已安装并且是最新版本</span><br><span class="line">无须任何处理</span><br><span class="line">[root@Automation file]<span class="preprocessor"># git version</span></span><br><span class="line">git version <span class="number">1.7</span><span class="number">.1</span></span><br></pre></td></tr></table></figure></p>
<h1 id="创建git用户"><a href="#创建git用户" class="headerlink" title="创建git用户"></a>创建git用户</h1><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="constant">@Automation</span> /]<span class="preprocessor"># useradd git</span></span><br><span class="line">[root<span class="constant">@Automation</span> /]<span class="preprocessor"># su git</span></span><br><span class="line">[git<span class="constant">@Automation</span> /]$</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="管理证书"><a href="#管理证书" class="headerlink" title="管理证书"></a>管理证书</h1><p>使用 authorized_keys 方法来对用户进行认证。</p>
<ol>
<li><p>Server端搭建<br>在git用户新建一个.ssh的目录。</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[git<span class="variable">@Automation</span> /]<span class="variable">$ </span>cd</span><br><span class="line">[git<span class="variable">@Automation</span> ~]<span class="variable">$ </span>mkdir git</span><br><span class="line">[git<span class="variable">@Automation</span> ~]<span class="variable">$ </span>cd git</span><br><span class="line">[git<span class="variable">@Automation</span> git]<span class="variable">$ </span>mkdir .ssh &amp;&amp; chmod <span class="number">700</span> .ssh</span><br><span class="line">[git<span class="variable">@Automation</span> git]<span class="variable">$ </span>touch .ssh/authorized_keys &amp;&amp; chmod <span class="number">600</span> .ssh/authorized_keys</span><br></pre></td></tr></table></figure>
</li>
<li><p>Client端生成id_rsa.pub文件<br>详细请参考：<a href="https://help.github.com/articles/generating-ssh-keys/" target="_blank" rel="external">Generating SSH keys</a><br>本地查看：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">yongfeiuall@yongfeiuall-pc MINGW32 /c/hexoblog (master)</span><br><span class="line">$ ls -al ~/.ssh</span><br><span class="line">total <span class="number">29</span></span><br><span class="line">drwxr-xr-x <span class="number">1</span> yongfeiuall <span class="number">1049089</span>    <span class="number">0</span> Oct  <span class="number">8</span> <span class="number">12</span>:<span class="number">46</span> ./</span><br><span class="line">drwxr-xr-x <span class="number">1</span> yongfeiuall <span class="number">1049089</span>    <span class="number">0</span> Nov <span class="number">17</span> <span class="number">11</span>:<span class="number">22</span> ../</span><br><span class="line">-rw-r--r-- <span class="number">1</span> yongfeiuall <span class="number">1049089</span> <span class="number">1766</span> Oct  <span class="number">8</span> <span class="number">12</span>:<span class="number">41</span> id_rsa</span><br><span class="line">-rw-r--r-- <span class="number">1</span> yongfeiuall <span class="number">1049089</span>  <span class="number">401</span> Oct  <span class="number">8</span> <span class="number">12</span>:<span class="number">41</span> id_rsa.pub</span><br><span class="line">-rw-r--r-- <span class="number">1</span> yongfeiuall <span class="number">1049089</span>  <span class="number">803</span> Oct  <span class="number">8</span> <span class="number">13</span>:<span class="number">16</span> known_hosts</span><br><span class="line"></span><br><span class="line">yongfeiuall@yongfeiuall-pc MINGW32 /c/hexoblog (master)</span><br><span class="line">$ cd ~/.ssh</span><br><span class="line"></span><br><span class="line">yongfeiuall@yongfeiuall-pc MINGW32 ~/.ssh</span><br><span class="line">$ ls</span><br><span class="line">id_rsa  id_rsa.pub  known_hosts</span><br><span class="line"></span><br><span class="line">yongfeiuall@yongfeiuall-pc MINGW32 ~/.ssh</span><br><span class="line">$ cat id-rsa.pub</span><br><span class="line">cat: id-rsa.pub: No such file or directory</span><br><span class="line"></span><br><span class="line">yongfeiuall@yongfeiuall-pc MINGW32 ~/.ssh</span><br><span class="line">$ cat id_rsa.pub</span><br><span class="line">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCzJu1dMB88j4j7rUGBxpffrWr5wvsFL/Iau65GTLDq5zYjITUUsLw6s7jpoUCw5KhV8hWAlbZb8bdnMjHsxK1jg8GAh5tFQ1wx68CPHqmL7ZxTWfN1tzPYcDVmNi42BCDOUz8tUBa/mmPC/S4L3QQD6ec0nP/<span class="number">58</span>Z0npHIrG30dr9qhuYLwQlOIGTcVPMJJwspa7b9YyroVp5btrxMjShfea7dwT1048pGnVnO0dq3O+GnlD2DOFv/PsdFKh1bYs/dJVlDMFR583R1C1Rwc9vxTkiTWNH5IapPQK34ECaeQ0mNVoJz8r8ZBR1hKOPPcuJ9eyUX1IJPPjNLSX/Tu5xhr yongfeiuall@<span class="number">163.</span>com</span><br></pre></td></tr></table></figure>
</li>
<li><p>将开发者的SSH公钥添加到git用户的authorized_keys这个文件当中，一行一个。</p>
</li>
</ol>
<ul>
<li><p>从本地Copy到Server上</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>scp id_rsa.pub git<span class="variable">@10</span>.<span class="number">22.1</span>.<span class="number">13</span><span class="symbol">:~</span></span><br><span class="line">git<span class="variable">@10</span>.<span class="number">22.1</span>.<span class="number">13</span><span class="string">'s password:</span><br><span class="line">id_rsa.pub                                    100%  401     0.4KB/s   00:00</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Copy到文件中</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[git<span class="variable">@Automation</span> ~]<span class="variable">$ </span>ls</span><br><span class="line">git  id_rsa.pub</span><br><span class="line">[git<span class="variable">@Automation</span> ~]<span class="variable">$ </span>cat id_rsa.pub <span class="prompt">&gt;&gt; </span>git/.ssh/authorized_keys</span><br><span class="line">[git<span class="variable">@Automation</span> ~]<span class="variable">$ </span>cat git/.ssh/authorized_keys</span><br><span class="line">ssh-rsa <span class="constant">AAAAB3NzaC1yc2EAAAADAQABAAABAQCzJu1dMB88j4j7rUGBxpffrWr5wvsFL</span>/<span class="constant">Iau65GTLDq5zYjITUUsLw6s7jpoUCw5KhV8hWAlbZb8bdnMjHsxK1jg8GAh5tFQ1wx68CPHqmL7ZxTWfN1tzPYcDVmNi42BCDOUz8tUBa</span>/mmPC/<span class="constant">S4L3QQD6ec0nP</span>/<span class="number">58</span>Z0npHIrG30dr9qhuYLwQlOIGTcVPMJJwspa7b9YyroVp5btrxMjShfea7dwT1048pGnVnO0dq3O+<span class="constant">GnlD2DOFv</span>/<span class="constant">PsdFKh1bYs</span>/dJVlDMFR583R1C1Rwc9vxTkiTWNH5IapPQK34ECaeQ0mNVoJz8r8ZBR1hKOPPcuJ9eyUX1IJPPjNLSX/<span class="constant">Tu5xhr</span> yongfeiuall<span class="variable">@163</span>.com</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="初始化仓库"><a href="#初始化仓库" class="headerlink" title="初始化仓库"></a>初始化仓库</h1><p>服务器上的仓库在初始化仓库时不用创建工作目录，用–bare选项在git下建立一个空仓库：<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[git<span class="variable">@Automation</span> /]<span class="variable">$ </span>cd/tmp</span><br><span class="line">[git<span class="variable">@Automation</span> tmp]<span class="variable">$ </span>mkdir git</span><br><span class="line">[git<span class="variable">@Automation</span> tmp]<span class="variable">$ </span>cd git</span><br><span class="line">[git<span class="variable">@Automation</span> git]<span class="variable">$ </span>mkdir sample.git</span><br><span class="line">[git<span class="variable">@Automation</span> git]<span class="variable">$ </span>cd sample.git/</span><br><span class="line">[git<span class="variable">@Automation</span> sample.git]<span class="variable">$ </span>git init --bare</span><br><span class="line"><span class="constant">Initialized </span>empty <span class="constant">Git </span>repository <span class="keyword">in</span> /tmp/git/sample.git/</span><br></pre></td></tr></table></figure></p>
<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>在Client端克隆远程仓库<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>git clone git<span class="variable">@10</span>.<span class="number">22.1</span>.<span class="number">13</span><span class="symbol">:/tmp/git/sample</span>.git</span><br><span class="line"><span class="constant">Cloning </span>into <span class="string">'sample'</span>...</span><br><span class="line">git<span class="variable">@10</span>.<span class="number">22.1</span>.<span class="number">13</span><span class="string">'s password:</span><br><span class="line">warning: You appear to have cloned an empty repository.</span><br><span class="line">Checking connectivity... done.</span></span><br></pre></td></tr></table></figure></p>
<h1 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h1><ul>
<li><p>为了不用每次clone代码的时候都输入ip地址，可以采用DNS的方式。具体操作如下 </p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="variable">@Automation</span> git]<span class="variable">$ </span>vim /etc/hosts</span><br></pre></td></tr></table></figure>
<p>在里面加入下面一行 <code>10.22.1.13 gitserver</code>，这样可以用以下命令<code>git clone git@gitserver:/tmp/git/sample.git</code>（<code>git clone git@10.22.1.13:/tmp/git/sample.git</code>）。 </p>
</li>
<li><p>为了保护git服务器，限制开发者登陆服务器，可以采用如下的措施。</p>
<figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="constant">@Automation</span> /]<span class="preprocessor"># vi /etc/passwd</span></span><br></pre></td></tr></table></figure>
<p>在文件结尾处，<code>git:x:500:500::/home/git:/bin/bash</code>；把<code>/bin/bash/</code> 改为<code>/user/bin/git-shell</code>。<br>再登录查看</p>
<figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ ssh git@<span class="number">10.22.1.13</span></span><br><span class="line">git@<span class="number">10.22.1.13</span>'s password:</span><br><span class="line">Last login: Fri Nov <span class="number">20 12:49:43</span> 2015 from <span class="number">10.8.21.197</span></span><br><span class="line">fatal: What do you think I am? <span class="keyword">A</span> shell?</span><br><span class="line">Connection to <span class="number">10.22.1.13</span> closed.</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Git自定义-忽略指定文件]]></title>
      <url>http://izheyi.com/2015/11/17/Git%E8%87%AA%E5%AE%9A%E4%B9%89-%E5%BF%BD%E7%95%A5%E6%8C%87%E5%AE%9A%E6%96%87%E4%BB%B6/</url>
      <content type="html"><![CDATA[<p>一般我们总会有些文件无需纳入Git的管理，也不希望它们总出现在未跟踪文件列表。通常都是些自动生成的文件，比如日志文件，或者编译过程中创建的临时文件等。我们可以创建一个名为 .gitignore 的文件，列出要忽略的文件模式。</p>
<h1 id="文件-gitignore的格式规范"><a href="#文件-gitignore的格式规范" class="headerlink" title="文件.gitignore的格式规范"></a>文件.gitignore的格式规范</h1><ul>
<li>所有空行或者以注释符号 ＃ 开头的行都会被 Git 忽略。</li>
<li>可以使用标准的 glob 模式匹配。</li>
<li>匹配模式最后跟反斜杠（/）说明要忽略的是目录。</li>
<li>要忽略指定模式以外的文件或目录，可以在模式前加上惊叹号（!）取反。</li>
</ul>
<h1 id="忽略文件的原则"><a href="#忽略文件的原则" class="headerlink" title="忽略文件的原则"></a>忽略文件的原则</h1><ul>
<li>忽略操作系统自动生成的文件，比如缩略图等。</li>
<li>忽略编译生成的中间文件、可执行文件等，比如Java编译产生的.class文件。</li>
<li>忽略带有敏感信息的配置文件，比如存放口令的配置文件。</li>
</ul>
<p>Note: 所有配置文件请参见：<a href="https://github.com/github/gitignore" target="_blank" rel="external">https://github.com/github/gitignore</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Git自定义-别名]]></title>
      <url>http://izheyi.com/2015/11/17/Git%E8%87%AA%E5%AE%9A%E4%B9%89-%E5%88%AB%E5%90%8D/</url>
      <content type="html"><![CDATA[<p>有一个小技巧可以使你的Git体验更简单、容易、熟悉：别名。Git并不会在你输入部分命令时自动推断出你想要的命令。 如果不想每次都输入完整的Git命令，可以通过<code>git config</code>文件来轻松地为每一个命令设置一个别名。<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git config --<span class="preprocessor">global</span> <span class="preprocessor">alias</span>.co checkout</span><br><span class="line">$ git config --<span class="preprocessor">global</span> <span class="preprocessor">alias</span>.<span class="keyword">br </span><span class="keyword">branch</span><br><span class="line"></span>$ git config --<span class="preprocessor">global</span> <span class="preprocessor">alias</span>.ci commit</span><br><span class="line">$ git config --<span class="preprocessor">global</span> <span class="preprocessor">alias</span>.st status</span><br></pre></td></tr></table></figure></p>
<p>以后就可以这么来用: <code>git st</code> rather than <code>sit status</code>。</p>
<p>有时候这种别名会非常有用和方便。例如，为了解决取消暂存文件的易用性问题，可以向 Git 中添加你自己的取消暂存别名：<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>git config --global <span class="keyword">alias</span>.unstage <span class="string">'reset HEAD --'</span></span><br></pre></td></tr></table></figure></p>
<p>这会使下面的两个命令等价：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git unstage fileA</span><br><span class="line">$ git <span class="operator"><span class="keyword">reset</span> <span class="keyword">HEAD</span> <span class="comment">-- fileA</span></span></span><br></pre></td></tr></table></figure></p>
<p>通常也会添加一个 last 命令，像这样：<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>git config --global <span class="keyword">alias</span>.last <span class="string">'log -1 HEAD'</span></span><br></pre></td></tr></table></figure></p>
<p>这样，可以轻松地看到最后一次提交：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ git last</span><br><span class="line">commit <span class="number">40</span>cddef63a739782e17e9f3da7ece29b9ec14a94</span><br><span class="line">Author: yongfei.hu &lt;huyongfei@huyongfei-pc.beyondsoft.com&gt;</span><br><span class="line">Date:   Tue Nov <span class="number">17</span> <span class="number">10</span>:<span class="number">21</span>:<span class="number">02</span> <span class="number">2015</span> +<span class="number">0800</span></span><br><span class="line"></span><br><span class="line">    <span class="number">3</span>rd commit</span><br><span class="line"></span><br><span class="line">commit adab21f28df71ab3850882fdad7f4c649fa79366</span><br><span class="line">Author: yongfei.hu &lt;huyongfei@huyongfei-pc.beyondsoft.com&gt;</span><br><span class="line">Date:   Tue Nov <span class="number">17</span> <span class="number">10</span>:<span class="number">20</span>:<span class="number">42</span> <span class="number">2015</span> +<span class="number">0800</span></span><br><span class="line"></span><br><span class="line">    <span class="number">2</span>nd commit</span><br></pre></td></tr></table></figure></p>
<p><strong>Notes:</strong> 配置Git的时候，加上–global是针对当前用户起作用的，如果不加，那只针对当前的仓库起作用。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[本阶段自动化测试的一些思考]]></title>
      <url>http://izheyi.com/2015/11/15/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83/</url>
      <content type="html"><![CDATA[<p>算是对目前项目的一个工作总结吧。</p>
<h1 id="现阶段总结"><a href="#现阶段总结" class="headerlink" title="现阶段总结"></a>现阶段总结</h1><p>现在的项目，从框架的设计到现在的维护，已经接近3年的时间了。<br>团队主要分布于中国（北京和西安），美国和印度。我们是专职的自动化测试团队，做自动化的和做手工测试的严格分开，相对独立。手工测试熟悉业务逻辑，主要设计case。自动化测试主要把manual team提供的自动化case设计自动化脚本，并运行维护。  </p>
<p>以下只是对本阶段的思考，项目主要是做GUI自动化测试，自动化team在实际的工作中，遇到的一些问题：</p>
<ul>
<li>不懂业务逻辑，写脚本的过程中或出现问题不能确定是不是bug，要和manual team确认。<br><strong>思考：</strong>automation team要不断学习业务逻辑，并且能站在用户角度考虑问题，设计合理的自动化用例和脚本。</li>
<li>需求改变，case缺乏维护，自动化的case和脚本维护比较难。<br><strong>思考：</strong>需要经常和manual team沟通，定期更新case。</li>
<li>自动化测试用例，按照手工Team给的用例来设计脚本，导致了功能检查点单一，脚本冗余，执行时间长等问题。<br><strong>思考：</strong> 自动化的测试用例，应该与传统的手工测试用例区分开来，E.g.,基于流程的自动化用例设计。</li>
<li>框架的规范化，分布式团队，初期的时候还有规范，后来人员的扩充，造成了对象库，脚本等的冗余，命名的不统一等等。<br><strong>思考：</strong> 对规范进行重新思考和设计，要严格遵循，由团队Lead进行监督和Review。</li>
<li>框架设计的过程中，也有一些小问题的存在，这里不做说明。<br><strong>思考：</strong> 重新考虑分层，对资源的引用，CI等等。<a id="more"></a>
</li>
</ul>
<p>下面算是对本阶段工作的一个认可吧：<br><img src="/images/automation/automation_show.jpg" alt="Automation Show"></p>
<h1 id="未来计划"><a href="#未来计划" class="headerlink" title="未来计划"></a>未来计划</h1><p>上一个阶段，不管是从团队还是从个人来看，进步都是挺大的，把自身的价值都体现了出来。</p>
<h2 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h2><p>根据已有框架的思考，会进行一些调整和Redesign，某些原因，不做详述。<br>鉴于自动化测试的一些特殊性，目前考虑更大层次的分层，把UI层直接分离出来，直接对UI层进行遍历自动化测试，UI底层对业务逻辑进行自动化测试。</p>
<h2 id="中国团队的发展"><a href="#中国团队的发展" class="headerlink" title="中国团队的发展"></a>中国团队的发展</h2><p>我不希望我的团队仅仅Focus到单一的自动化工具(QTP)上面。不得不承认这个工具的强大和完整，但是好像目前基本上没有什么公司在用，太贵了。目前都是用开源的一些工具：Selenium, Robot Framework等等。<br>我也不希望我的团队仅仅Focus到很low的层面，希望每个人都能够站的更高一些，更全面的来看待自动化这件事，甚至于软件的整个开发流程，而不仅仅是任务的执行者。<br>大环境不用介绍，目前互联网和移动的发展。为了提升团队和个人的竞争力 &amp; 自身价值，最近也弄了一个电脑，在本地搭建了一个服务器让大家鼓捣，希望大家能够在其他的方面都有一些耕耘（虽然一些我们已经在用）：</p>
<ul>
<li>Selenium Web自动化测试</li>
<li>Linux</li>
<li>移动App自动化测试相关</li>
<li>Performance Testing</li>
<li>时下很新的一些技术（MEAN, Git==）</li>
<li>……<br><em>Notes: 后面有时间的话，会再细聊一下怎么样快速的学习。</em></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[爷俩中关村游荡]]></title>
      <url>http://izheyi.com/2015/11/14/%E4%B8%AD%E5%85%B3%E6%9D%91%E6%B8%B8%E8%8D%A1/</url>
      <content type="html"><![CDATA[<p>今天我们爷俩一块去看衣服。。。爸爸一个没买，闺女买了羽绒服和背心。<br><img src="/images/izheyi/2015/11_14_0.jpg" alt="爸爸试衣服"><br><a id="more"></a><br>又吃了薯条和鸡翅，还是一贯的风格，鸡翅就薯条，然后再干吃番茄酱。爸爸啥也没吃，认为是垃圾食品。我们家一年吃这的次数一个手都能数的过来。<br><img src="/images/izheyi/2015/11_14_1.jpg" alt=""></p>
<p>回来后，又玩了在超市里买的立体拼图，动手能力还是可以的，自己捣鼓出来的。赞一下！！<br><img src="/images/izheyi/2015/handwork/1.jpg" alt=""><br><img src="/images/izheyi/2015/handwork/2.jpg" alt=""><br><img src="/images/izheyi/2015/handwork/3.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Git仓库-标签管理]]></title>
      <url>http://izheyi.com/2015/11/12/Git%E4%BB%93%E5%BA%93-%E6%A0%87%E7%AD%BE%E7%AE%A1%E7%90%86/</url>
      <content type="html"><![CDATA[<p>允许有意义的名称到一个特定的版本库中的标签操作。</p>
<h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><ol>
<li>创建新文件“label.txt”，并提交三个版本。</li>
<li>查看状态<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span></span><br><span class="line">commit <span class="number">40</span>cddef63a739782e17e9f3da7ece29b9ec14a94</span><br><span class="line">Author: yongfei.hu &lt;yongfeiuall@<span class="number">163.</span>com&gt;</span><br><span class="line">Date:   Tue Nov <span class="number">17</span> <span class="number">10</span>:<span class="number">21</span>:<span class="number">02</span> <span class="number">2015</span> +<span class="number">0800</span></span><br><span class="line"></span><br><span class="line">    <span class="number">3</span>rd commit</span><br><span class="line"></span><br><span class="line">commit adab21f28df71ab3850882fdad7f4c649fa79366</span><br><span class="line">Author: yongfei.hu &lt;yongfeiuall@<span class="number">163.</span>com&gt;</span><br><span class="line">Date:   Tue Nov <span class="number">17</span> <span class="number">10</span>:<span class="number">20</span>:<span class="number">42</span> <span class="number">2015</span> +<span class="number">0800</span></span><br><span class="line"></span><br><span class="line">    <span class="number">2</span>nd commit</span><br><span class="line"></span><br><span class="line">commit eada2115194c8012be0db423d825d550f7102e09</span><br><span class="line">Author: yongfei.hu &lt;yongfeiuall@<span class="number">163.</span>com&gt;</span><br><span class="line">Date:   Tue Nov <span class="number">17</span> <span class="number">10</span>:<span class="number">20</span>:<span class="number">05</span> <span class="number">2015</span> +<span class="number">0800</span></span><br><span class="line"></span><br><span class="line">    <span class="number">1</span>st commit</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="创建标签"><a href="#创建标签" class="headerlink" title="创建标签"></a>创建标签</h1><p>默认标签是打在最新提交的commit上的。<br><a id="more"></a></p>
<ul>
<li><p>轻量标签（lightweight）<br>这个非常简单，切换到要打标签的分支上，用以下命令：</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git tag <span class="literal">v1</span>.<span class="number">0</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>附注标签（annotated）<br>是带有说明的标签，通常建议创建附注标签。</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git tag -<span class="tag">a</span> v1.<span class="number">0</span> -m <span class="string">'my version 1.0'</span></span><br></pre></td></tr></table></figure>
<p><em>-a指定标签名<br>-m 选项指定了一条将会存储在标签中的信息。</em> </p>
</li>
<li><p>后期打标签<br>有时候，如果忘了打标签，也可以对过去的提交打标签。方法是找到历史提交的commit id，然后打标签：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git tag -<span class="tag">a</span> v0.<span class="number">9</span> -m <span class="string">"my version 0.9"</span> adab21f</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="查看标签"><a href="#查看标签" class="headerlink" title="查看标签"></a>查看标签</h1><ul>
<li><p>列出标签<br>在 Git 中列出已有的标签是非常简单直观的。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git tag</span><br><span class="line">v0<span class="number">.9</span></span><br><span class="line">v1<span class="number">.0</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>查看标签信息<br>可以用git show <tagname>查看标签信息</tagname></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ git show v0<span class="number">.9</span></span><br><span class="line">tag v0<span class="number">.9</span></span><br><span class="line">Tagger: yongfei.hu &lt;yongfeiuall@<span class="number">163.</span>com&gt;</span><br><span class="line">Date:   Tue Nov <span class="number">17</span> <span class="number">10</span>:<span class="number">36</span>:<span class="number">57</span> <span class="number">2015</span> +<span class="number">0800</span></span><br><span class="line"></span><br><span class="line">my version <span class="number">0.9</span></span><br><span class="line"></span><br><span class="line">commit adab21f28df71ab3850882fdad7f4c649fa79366</span><br><span class="line">Author: yongfei.hu &lt;yongfeiuall@<span class="number">163.</span>com&gt;</span><br><span class="line">Date:   Tue Nov <span class="number">17</span> <span class="number">10</span>:<span class="number">20</span>:<span class="number">42</span> <span class="number">2015</span> +<span class="number">0800</span></span><br><span class="line"></span><br><span class="line">    <span class="number">2</span>nd commit</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="提交标签"><a href="#提交标签" class="headerlink" title="提交标签"></a>提交标签</h1><p>默认情况下，<code>git push</code>命令并不会传送标签到远程仓库服务器上。 在创建完标签后你必须显式地推送标签到共享服务器上。 这个过程就像共享远程分支一样。<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="keyword">push </span>origin v0.<span class="number">9</span></span><br></pre></td></tr></table></figure></p>
<p>如果想要一次性推送很多标签，也可以使用带有<code>--tags</code>选项的<code>git push</code>命令。 这将会把所有不在远程仓库服务器上的标签全部传送到那里。<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin <span class="comment">--tags</span></span><br></pre></td></tr></table></figure></p>
<h1 id="删除标签"><a href="#删除标签" class="headerlink" title="删除标签"></a>删除标签</h1><p>标签打错了，也可以用<code>git tag -d &lt;tagname&gt;</code>删除。<br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">tag</span> <span class="attribute">-d</span> v1<span class="number">.0</span></span><br><span class="line">Deleted <span class="built_in">tag</span> <span class="string">'v1.0'</span> (was <span class="number">40</span>cddef)</span><br></pre></td></tr></table></figure></p>
<p>如果标签已经推送到远程，按以下方式删除。</p>
<ol>
<li><p>先从本地删除</p>
 <figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">tag</span> <span class="attribute">-d</span> v1<span class="number">.0</span></span><br><span class="line">Deleted <span class="built_in">tag</span> <span class="string">'v1.0'</span> (was <span class="number">40</span>cddef)</span><br></pre></td></tr></table></figure>
</li>
<li><p>从远程删除<br>用命令<code>git push origin :refs/tags/&lt;tagname&gt;</code>来实现。</p>
 <figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>git push origin <span class="symbol">:refs/tags/v1</span>.<span class="number">0</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="检出标签"><a href="#检出标签" class="headerlink" title="检出标签"></a>检出标签</h1><p>如果你想要工作目录与仓库中特定的标签版本完全一样，可以使用<code>git checkout -b [branchname] [tagname]</code>在特定的标签上创建一个新分支。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout -<span class="tag">b</span> develop v0.<span class="number">9</span></span><br><span class="line">Switched to <span class="tag">a</span> new branch <span class="string">'develop'</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Git分支-团队协作]]></title>
      <url>http://izheyi.com/2015/11/12/Git%E5%88%86%E6%94%AF-%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C/</url>
      <content type="html"><![CDATA[<p>在上节中，已经了解了基本的分支管理，在实际的项目中，肯定是存在远程仓库和团队协作的。下面就来重点讲解，在团队多人协作中的分支推送与抓取。 </p>
<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ol>
<li>在GitHub上创建新仓库”worktogether”，并添加文件”README.md”。</li>
<li>Clone远程库到本地。 实际上Git自动把本地的master分支和远程的master分支对应起来了，且远程仓库的默认名称是origin。</li>
</ol>
<h1 id="查看远程"><a href="#查看远程" class="headerlink" title="查看远程"></a>查看远程</h1><ul>
<li><p>查看</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>git remote</span><br><span class="line">origin</span><br></pre></td></tr></table></figure>
</li>
<li><p>查看详细</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>git remote -v</span><br><span class="line">origin  <span class="symbol">https:</span>/<span class="regexp">/github.com/yongfeiuall</span><span class="regexp">/worktogether.git (fetch)</span><br><span class="line">origin  https:/</span><span class="regexp">/github.com/yongfeiuall</span><span class="regexp">/worktogether.git (push)</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="分支推送"><a href="#分支推送" class="headerlink" title="分支推送"></a>分支推送</h1><p>我们在远程仓库那章节已经学习了怎么使用。 详细请参考：<a href="/2015/11/10/Git仓库-远程仓库/">远程仓库</a><br>修改”README.md”，并提交，推送。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin master</span><br><span class="line">Counting objects: <span class="number">3</span>, done.</span><br><span class="line">Writing objects: <span class="number">100</span>% (<span class="number">3</span>/<span class="number">3</span>), <span class="number">286</span> bytes | <span class="number">0</span> bytes/s, done.</span><br><span class="line">Total <span class="number">3</span> (delta <span class="number">0</span>), reused <span class="number">0</span> (delta <span class="number">0</span>)</span><br><span class="line">To https:<span class="comment">//github.com/yongfeiuall/worktogether.git</span></span><br><span class="line">   <span class="number">952</span>b8b0.<span class="number">.242264</span>d  master -&gt; master</span><br></pre></td></tr></table></figure></p>
<p><img src="/images/git/remote_push.jpg" alt="Push Result"></p>
<h1 id="分支抓取"><a href="#分支抓取" class="headerlink" title="分支抓取"></a>分支抓取</h1><p>团队协作时，在PUSH时难免会有冲突的出现，我们主要是看一下这个处理流程。</p>
<blockquote>
<p>另一人推送提交</p>
</blockquote>
<ol>
<li>在另一台电脑clone仓库”worktogether。</li>
<li>修改文件，并提交。</li>
<li>Push到远程<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin master</span><br><span class="line">Counting objects: <span class="number">3</span>, done.</span><br><span class="line">Delta compression <span class="keyword">using</span> up to <span class="number">4</span> threads.</span><br><span class="line">Compressing objects: <span class="number">100</span>% (<span class="number">2</span>/<span class="number">2</span>), done.</span><br><span class="line">Writing objects: <span class="number">100</span>% (<span class="number">3</span>/<span class="number">3</span>), <span class="number">307</span> bytes | <span class="number">0</span> bytes/s, done.</span><br><span class="line">Total <span class="number">3</span> (delta <span class="number">0</span>), reused <span class="number">0</span> (delta <span class="number">0</span>)</span><br><span class="line">To https:<span class="comment">//github.com/yongfeiuall/worktogether.git</span></span><br><span class="line">   <span class="number">242264</span>d.<span class="number">.5</span>b7966c  master -&gt; master</span><br></pre></td></tr></table></figure>
</li>
</ol>
<blockquote>
<p>你操作同一个文件</p>
</blockquote>
<ol>
<li>修改文件，并提交</li>
<li><p>Push到远程</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin master</span><br><span class="line">To <span class="keyword">https</span>://github.com/yongfeiuall/worktogether.git</span><br><span class="line"> ! [rejected]        master -&gt; master (fetch <span class="keyword">first</span>)</span><br><span class="line">error: failed <span class="built_in">to</span> push some refs <span class="built_in">to</span> <span class="string">'https://github.com/yongfeiuall/worktogether.git'</span></span><br><span class="line">hint: Updates were rejected because <span class="operator">the</span> remote <span class="operator">contains</span> work that you <span class="built_in">do</span></span><br><span class="line">hint: <span class="operator">not</span> have locally. This is usually caused <span class="keyword">by</span> another repository pushing</span><br><span class="line">hint: <span class="built_in">to</span> <span class="operator">the</span> same ref. You may want <span class="built_in">to</span> <span class="keyword">first</span> integrate <span class="operator">the</span> remote changes</span><br><span class="line">hint: (e.g., <span class="string">'git pull ...'</span>) <span class="keyword">before</span> pushing again.</span><br><span class="line">hint: See <span class="operator">the</span> <span class="string">'Note about fast-forwards'</span> <span class="operator">in</span> <span class="string">'git push --help'</span> <span class="keyword">for</span> details.</span><br></pre></td></tr></table></figure>
<p>推送失败，因为另一个人的最新提交和你试图推送的提交有冲突。</p>
</li>
<li><p>get最新的提交</p>
<figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ git pull</span><br><span class="line">remote: <span class="type">Counting</span> objects: <span class="number">3</span>, done.</span><br><span class="line">remote: <span class="type">Compressing</span> objects: <span class="number">100</span>% (<span class="number">2</span>/<span class="number">2</span>), done.</span><br><span class="line">remote: <span class="type">Total</span> <span class="number">3</span> (delta <span class="number">0</span>), reused <span class="number">3</span> (delta <span class="number">0</span>), pack-reused <span class="number">0</span></span><br><span class="line"><span class="type">Unpacking</span> objects: <span class="number">100</span>% (<span class="number">3</span>/<span class="number">3</span>), done.</span><br><span class="line"><span class="type">From</span> https://github.com/yongfeiuall/worktogether</span><br><span class="line">   <span class="number">242264</span>d..<span class="number">5</span>b7966c  master     -&gt; origin/master</span><br><span class="line"><span class="type">Auto</span>-merging <span class="type">README</span>.md</span><br><span class="line"><span class="type">CONFLICT</span> (content): <span class="type">Merge</span> conflict <span class="keyword">in</span> <span class="type">README</span>.md</span><br><span class="line"><span class="type">Automatic</span> merge failed; fix conflicts <span class="keyword">and</span> then commit the <span class="literal">result</span>.</span><br></pre></td></tr></table></figure>
</li>
<li><p>手动解决冲突，并提交</p>
</li>
<li>再次Push<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin master</span><br><span class="line">Counting objects: <span class="number">6</span>, done.</span><br><span class="line">Delta compression <span class="keyword">using</span> up to <span class="number">4</span> threads.</span><br><span class="line">Compressing objects: <span class="number">100</span>% (<span class="number">4</span>/<span class="number">4</span>), done.</span><br><span class="line">Writing objects: <span class="number">100</span>% (<span class="number">6</span>/<span class="number">6</span>), <span class="number">564</span> bytes | <span class="number">0</span> bytes/s, done.</span><br><span class="line">Total <span class="number">6</span> (delta <span class="number">1</span>), reused <span class="number">0</span> (delta <span class="number">0</span>)</span><br><span class="line">To https:<span class="comment">//github.com/yongfeiuall/worktogether.git</span></span><br><span class="line">   <span class="number">5</span>b7966c.<span class="number">.1</span>d2aaa5  master -&gt; master</span><br></pre></td></tr></table></figure>
</li>
</ol>
<blockquote>
<p>引用LIAOXUEFENG BLOG</p>
</blockquote>
<p>多人协作的工作模式通常是这样：</p>
<ol>
<li>首先，可以试图用<code>git push origin branch-name</code>推送自己的修改；</li>
<li>如果推送失败，则因为远程分支比你的本地更新，需要先用<code>git pull</code>试图合并；</li>
<li>如果合并有冲突，则解决冲突，并在本地提交；</li>
<li>没有冲突或者解决掉冲突后，再用<code>git push origin branch-name</code>推送就能成功！<br>如果<code>git pull</code>提示“no tracking information”，则说明本地分支和远程分支的链接关系没有创建，用命令<code>git branch --set-upstream branch-name origin/branch-name</code>。</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Git分支-分支管理]]></title>
      <url>http://izheyi.com/2015/11/12/Git%E5%88%86%E6%94%AF-%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86/</url>
      <content type="html"><![CDATA[<p>在实际开发中，一般企业中开发一个项目的分支策略:</p>
<h1 id="主分支-master"><a href="#主分支-master" class="headerlink" title="主分支(master)"></a>主分支(master)</h1><p>Git主分支的名字，默认叫做Master。它是自动建立的，版本库初始化以后，默认就是在主分支在进行开发。<br>代码库应该有一个、且仅有一个主分支。<br>master分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活。</p>
<h1 id="开发分支-develop"><a href="#开发分支-develop" class="headerlink" title="开发分支(develop)"></a>开发分支(develop)</h1><p>主分支只用来分布重大版本，日常开发都是在这个分支上完成。<br>到某个时候，比如1.0版本发布时，再把dev分支合并到master上，在master分支发布1.0版本。</p>
<h1 id="功能分支-feature"><a href="#功能分支-feature" class="headerlink" title="功能分支(feature)"></a>功能分支(feature)</h1><p>它是为了开发某种特定功能，从Develop分支上面分出来的。开发完成后，要再并入Develop。<br>每添加一个新功能，最好新建一个feature分支，在上面开发，完成后，合并，最后，删除该feature分支。</p>
<h1 id="预发布分支-release"><a href="#预发布分支-release" class="headerlink" title="预发布分支(release)"></a>预发布分支(release)</h1><p>预发布分支，它是指发布正式版本之前（即合并到Master分支之前），我们可能需要有一个预发布的版本进行测试。预发布分支是从Develop分支上面 分出来的，预发布结束以后，必须合并进Develop和Master分支。</p>
<h1 id="bug分支-fix-bug"><a href="#bug分支-fix-bug" class="headerlink" title="bug分支(fix bug)"></a>bug分支(fix bug)</h1><p>软件正式发布以后，难免会出现bug。有了bug就需要修复，每个bug都可以通过一个新的临时分支来修复，修复后，合并分支，然后将临时分支删除。</p>
<p>如果当前分支的工作还未完成，bug又急于修改，那该怎么办呢？</p>
<ol>
<li>创建文件‘bug.txt’，并提交</li>
<li><p>创建新分支</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout -<span class="tag">b</span> develop</span><br><span class="line">Switched to <span class="tag">a</span> new branch <span class="string">'develop'</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>修改文件，并查看状态</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch develop</span><br><span class="line">Changes not staged for <span class="operator"><span class="keyword">commit</span>:</span><br><span class="line">  (<span class="keyword">use</span> <span class="string">"git add &lt;file&gt;..."</span> <span class="keyword">to</span> <span class="keyword">update</span> what will be committed)</span><br><span class="line">  (<span class="keyword">use</span> <span class="string">"git checkout -- &lt;file&gt;..."</span> <span class="keyword">to</span> discard changes <span class="keyword">in</span> working <span class="keyword">directory</span>)</span><br><span class="line"></span><br><span class="line">        modified:   bug.txt</span><br><span class="line"></span><br><span class="line"><span class="keyword">no</span> changes added <span class="keyword">to</span> <span class="keyword">commit</span> (<span class="keyword">use</span> <span class="string">"git add"</span> <span class="keyword">and</span>/<span class="keyword">or</span> <span class="string">"git commit -a"</span>)</span></span><br></pre></td></tr></table></figure>
<p><em>此时需要修改一个紧急的bug。我们可以利用stash功能，把当前工作现场“储藏”起来，修改完bug后再恢复现场后继续工作。</em></p>
</li>
<li><p>保存现场</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git stash</span><br><span class="line">Saved working <span class="built_in">directory</span> <span class="operator">and</span> index state WIP <span class="command"><span class="keyword">on</span> <span class="title">develop</span>: <span class="title">3978a2e</span> <span class="title">add</span> <span class="title">bug</span>.<span class="title">txt</span></span></span><br><span class="line">HEAD is now <span class="keyword">at</span> <span class="number">3978</span>a2e <span class="built_in">add</span> bug.txt</span><br></pre></td></tr></table></figure>
</li>
<li><p>再查看工作区状态</p>
<figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line"><span class="keyword">On</span> branch develop</span><br><span class="line"><span class="literal">nothing</span> <span class="keyword">to</span> commit, working directory clean</span><br></pre></td></tr></table></figure>
<p>工作区是干净的，就可以创建bug分支进行修改bug。</p>
</li>
<li>修改bug完成后，切换到之前的‘develop’分支</li>
<li><p>查看保存现场</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git stash <span class="type">list</span></span><br><span class="line">stash@&#123;<span class="number">0</span>&#125;: WIP <span class="function_start"><span class="keyword">on</span></span> develop: <span class="number">3978</span>a2e add bug.txt</span><br></pre></td></tr></table></figure>
</li>
<li><p>恢复现场</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ git stash pop</span><br><span class="line">On branch develop</span><br><span class="line">Changes not staged for <span class="operator"><span class="keyword">commit</span>:</span><br><span class="line">  (<span class="keyword">use</span> <span class="string">"git add &lt;file&gt;..."</span> <span class="keyword">to</span> <span class="keyword">update</span> what will be committed)</span><br><span class="line">  (<span class="keyword">use</span> <span class="string">"git checkout -- &lt;file&gt;..."</span> <span class="keyword">to</span> discard changes <span class="keyword">in</span> working <span class="keyword">directory</span>)</span><br><span class="line"></span><br><span class="line">        modified:   bug.txt</span><br><span class="line"></span><br><span class="line"><span class="keyword">no</span> changes added <span class="keyword">to</span> <span class="keyword">commit</span> (<span class="keyword">use</span> <span class="string">"git add"</span> <span class="keyword">and</span>/<span class="keyword">or</span> <span class="string">"git commit -a"</span>)</span><br><span class="line">Dropped refs/stash@&#123;<span class="number">0</span>&#125; (ea54fb954976da63842dcdd7faab12092ae71130)</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p><strong>Notes:</strong></p>
<ul>
<li><p>你可以多次stash，恢复的时候，先用git stash list查看，然后恢复指定的stash，用命令：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git stash apply stash@&#123;<span class="number">0</span>&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>用git stash apply恢复后，stash内容并不删除，你需要用git stash drop来删除；</p>
</li>
</ul>
<h1 id="其它分支"><a href="#其它分支" class="headerlink" title="其它分支"></a>其它分支</h1><p>在Git中，由于分支是如此的强大，所以大家可以根据需要创建即可。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Git分支-基础与基本操作]]></title>
      <url>http://izheyi.com/2015/11/11/Git%E5%88%86%E6%94%AF-%E5%9F%BA%E7%A1%80%E4%B8%8E%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<p>分支本质上其实就是一个指向某次提交的可变指针。Git的默认分支名字为master 。而我们是怎么知道当前处于哪个分支当中呢？答案就是在于HEAD这个十分特殊的指针，它专门用于指向于本地分支中的当前分支。</p>
<p><em>Note: 测试数据准备</em><br> 创建新文件“branch.txt”，并提交三个版本<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span> Is test branch.</span><br></pre></td></tr></table></figure></p>
<h1 id="查看分支"><a href="#查看分支" class="headerlink" title="查看分支"></a>查看分支</h1><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git branch</span><br><span class="line"><span class="comment">* master</span></span><br><span class="line">  <span class="keyword">test</span></span><br></pre></td></tr></table></figure>
<p>命令会列出所有分支，当前分支前面会标一个*号。<br><a id="more"></a></p>
<h1 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h1><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="keyword">branch </span>test</span><br></pre></td></tr></table></figure>
<p>查看分支<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git branch</span><br><span class="line"><span class="comment">* master</span></span><br><span class="line">  <span class="keyword">test</span></span><br></pre></td></tr></table></figure></p>
<h1 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h1><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout test</span><br><span class="line"><span class="keyword">Switched </span>to <span class="keyword">branch </span><span class="string">'test'</span></span><br></pre></td></tr></table></figure>
<ul>
<li>查看分支<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="keyword">branch</span><br><span class="line"></span>  master</span><br><span class="line">* test</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><em>Notes:<br>我们可能通过 git checkout 命令加上-b参数表示创建并切换分支上：<br>git checkout -b [name]</em></p>
<ul>
<li>测试分支</li>
</ul>
<ol>
<li><p>此时对‘branch.txt’进行修改，并在‘test’分支上提交。</p>
<figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">this <span class="keyword">Is</span> test branch.</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">On</span> <span class="string">'test'</span> branch.</span><br></pre></td></tr></table></figure>
</li>
<li><p>切换到‘master’分支</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout master</span><br><span class="line"><span class="keyword">Switched </span>to <span class="keyword">branch </span><span class="string">'master'</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>可以看到刚才增加的一行不见了。因为那个提交是在test分支上，而master分支没有变化。</p>
<h1 id="合并分支-Fast-forward"><a href="#合并分支-Fast-forward" class="headerlink" title="合并分支(Fast forward)"></a>合并分支(Fast forward)</h1><p>git merge 命令用于合并指定分支到当前分支。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git merge test</span><br><span class="line">Updating <span class="number">42139</span>cd..c587e76</span><br><span class="line">Fast-forward</span><br><span class="line"> branch.txt | <span class="number">3</span> ++-</span><br><span class="line"> <span class="number">1</span> file changed, <span class="number">2</span> insertions(+), <span class="number">1</span> deletion(-)</span><br></pre></td></tr></table></figure></p>
<p>再查看文件内容，和test分支的最新提交是完全一样的。</p>
<h1 id="删除分支"><a href="#删除分支" class="headerlink" title="删除分支"></a>删除分支</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git branch <span class="operator">-d</span> <span class="built_in">test</span></span><br><span class="line">Deleted branch <span class="built_in">test</span> (was c587e76).</span><br></pre></td></tr></table></figure>
<p>查看分支<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="keyword">branch</span><br><span class="line"></span>* master</span><br></pre></td></tr></table></figure></p>
<h1 id="分支合并冲突"><a href="#分支合并冲突" class="headerlink" title="分支合并冲突"></a>分支合并冲突</h1><ol>
<li><p>创建新分支</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout -<span class="tag">b</span> confict</span><br><span class="line">Switched to <span class="tag">a</span> new branch <span class="string">'confict'</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>修改文件，并提交</p>
<figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">this Is test branch.</span><br><span class="line"><span class="built_in">add</span> <span class="bash">On <span class="string">'test'</span> branch.</span><br><span class="line"></span><span class="built_in">add</span> <span class="bash">On <span class="string">'confict'</span> branch.</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>切换到‘master’分支</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout master</span><br><span class="line"><span class="keyword">Switched </span>to <span class="keyword">branch </span><span class="string">'master'</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>改文件，并提交</p>
<figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">this Is test branch.</span><br><span class="line"><span class="built_in">add</span> <span class="bash">On <span class="string">'test'</span> branch.</span><br><span class="line"></span><span class="built_in">add</span> <span class="bash">On <span class="string">'master'</span> branch.</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>合并分支</p>
<figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git merge confict</span><br><span class="line"><span class="type">Auto</span>-merging branch.txt</span><br><span class="line"><span class="type">CONFLICT</span> (content): <span class="type">Merge</span> conflict <span class="keyword">in</span> branch.txt</span><br><span class="line"><span class="type">Automatic</span> merge failed; fix conflicts <span class="keyword">and</span> then commit the <span class="literal">result</span>.</span><br></pre></td></tr></table></figure>
</li>
<li><p>查看git状态</p>
<figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line"><span class="keyword">On</span> branch master</span><br><span class="line">You have unmerged paths.</span><br><span class="line">  (fix conflicts <span class="keyword">and</span> run <span class="string">"git commit"</span>)</span><br><span class="line"></span><br><span class="line">Unmerged paths:</span><br><span class="line">  (<span class="keyword">use</span> <span class="string">"git add &lt;file&gt;..."</span> <span class="keyword">to</span> mark resolution)</span><br><span class="line"></span><br><span class="line">        both modified:   branch.txt</span><br><span class="line"></span><br><span class="line">no changes added <span class="keyword">to</span> commit (<span class="keyword">use</span> <span class="string">"git add"</span> <span class="keyword">and</span>/<span class="keyword">or</span> <span class="string">"git commit -a"</span>)</span><br></pre></td></tr></table></figure>
</li>
<li><p>打开文件并修改</p>
<ul>
<li><p>查看</p>
<figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">this Is test branch.</span><br><span class="line"><span class="built_in">add</span> <span class="bash">On <span class="string">'test'</span> branch.</span><br><span class="line"></span>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span><br><span class="line"><span class="built_in">add</span> <span class="bash">On <span class="string">'master'</span> branch.</span><br><span class="line"></span>=======</span><br><span class="line"><span class="built_in">add</span> <span class="bash">On <span class="string">'confict'</span> branch.</span><br><span class="line"></span>&gt;&gt;&gt;&gt;&gt;&gt;&gt; confict</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改</p>
<figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">this Is test branch.</span><br><span class="line"><span class="built_in">add</span> <span class="bash">On <span class="string">'test'</span> branch.</span><br><span class="line"></span><span class="built_in">add</span> <span class="bash">On <span class="string">'master'</span> branch.</span><br><span class="line"></span><span class="built_in">add</span> <span class="bash">On <span class="string">'confict'</span> branch.</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>再提交</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git add branch.txt</span><br><span class="line">$ git <span class="operator"><span class="keyword">commit</span> -<span class="keyword">m</span> <span class="string">"concflic fixed"</span></span><br><span class="line">[<span class="keyword">master</span> c44d910] concflic <span class="keyword">fixed</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>查看分支的合并</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ git log --graph</span><br><span class="line"><span class="keyword">*</span>   commit c44d9107ec810b03af593dd164bd6d3a9b6333e7</span><br><span class="line">|<span class="string">\  Merge: 4d0342e 17047cd</span><br><span class="line"></span>|<span class="string"> </span>|<span class="string"> Author: yongfei.hu &lt;yongfeiuall@163.com&gt;</span><br><span class="line"></span>|<span class="string"> </span>|<span class="string"> Date:   Wed Nov 11 15:39:51 2015 +0800</span><br><span class="line"></span>|<span class="string"> </span>|</span><br><span class="line">|<span class="string"> </span>|<span class="string">     concflic fixed</span><br><span class="line"></span>|<span class="string"> </span>|</span><br><span class="line">|<span class="string"> * commit 17047cd86e0615b6bdcfe4df8f27f40776deb276</span><br><span class="line"></span>|<span class="string"> </span>|<span class="string"> Author: yongfei.hu &lt;yongfeiuall@163.com&gt;</span><br><span class="line"></span>|<span class="string"> </span>|<span class="string"> Date:   Wed Nov 11 15:29:06 2015 +0800</span><br><span class="line"></span>|<span class="string"> </span>|</span><br><span class="line">|<span class="string"> </span>|<span class="string">     add 'confict' branch</span><br><span class="line"></span>|<span class="string"> </span>|</span><br><span class="line"><span class="keyword">*</span> |<span class="string"> commit 4d0342e3a989d5ad21104a75055267d41363beee</span><br><span class="line"></span>|<span class="string">/  Author: yongfei.hu &lt;yongfeiuall@163.com&gt;</span><br><span class="line"></span>|<span class="string">   Date:   Wed Nov 11 15:31:05 2015 +0800</span><br><span class="line"></span>|</span><br><span class="line">|<span class="string">       add 'master' branch</span><br><span class="line"></span>|</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="合并分支-普通合并"><a href="#合并分支-普通合并" class="headerlink" title="合并分支(普通合并)"></a>合并分支(普通合并)</h1><p>快速合并就看不出来曾经做过合并，删除分支后会丢掉分支信息。普通合并(Git就会在merge时生成一个新的commit)，合并后的历史有分支记录，能看出来曾经做过合并。<br>git mrege –no-ff [branch name]，–no-ff参数表示禁用快速合并。</p>
<ol>
<li><p>创建新分支</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout -<span class="tag">b</span> noff</span><br><span class="line">Switched to <span class="tag">a</span> new branch <span class="string">'noff'</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>修改文件，并提交</p>
<figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">this Is test branch.</span><br><span class="line"><span class="built_in">add</span> <span class="bash">On <span class="string">'test'</span> branch.</span><br><span class="line"></span><span class="built_in">add</span> <span class="bash">On <span class="string">'master'</span> branch.</span><br><span class="line"></span><span class="built_in">add</span> <span class="bash">On <span class="string">'confict'</span> branch.</span><br><span class="line"></span><span class="built_in">add</span> <span class="bash">On <span class="string">'noff'</span> branch.</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>切换到‘master’分支</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout master</span><br><span class="line"><span class="keyword">Switched </span>to <span class="keyword">branch </span><span class="string">'master'</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>合并分支</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="operator"><span class="keyword">merge</span> <span class="comment">--no-ff -m "merge with no-ff" noff</span></span><br><span class="line"><span class="keyword">Merge</span> made <span class="keyword">by</span> the <span class="string">'recursive'</span> strategy.</span><br><span class="line"> branch.txt | <span class="number">3</span> ++-</span><br><span class="line"> <span class="number">1</span> <span class="keyword">file</span> <span class="keyword">changed</span>, <span class="number">2</span> insertions(+), <span class="number">1</span> deletion(-)</span></span><br></pre></td></tr></table></figure>
<p><em>因为本次合并要创建一个新的commit，所以加上-m参数。</em></p>
</li>
<li>查看分支的合并<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$ git log --graph</span><br><span class="line"><span class="keyword">*</span>   commit 83962f9f60d52784a7b0d9241165e1f81d646bc4</span><br><span class="line">|<span class="string">\  Merge: 3cf9a8b 84d3355</span><br><span class="line"></span>|<span class="string"> </span>|<span class="string"> Author: yongfei.hu &lt;yongfeiuall@163.com&gt;</span><br><span class="line"></span>|<span class="string"> </span>|<span class="string"> Date:   Thu Nov 12 08:11:42 2015 +0800</span><br><span class="line"></span>|<span class="string"> </span>|</span><br><span class="line">|<span class="string"> </span>|<span class="string">     merge with no-ff</span><br><span class="line"></span>|<span class="string"> </span>|</span><br><span class="line">|<span class="string"> * commit 84d3355e070bb4e57ee5055099a227d928f07039</span><br><span class="line"></span>|<span class="string">/  Author: yongfei.hu &lt;yongfeiuall@163.com&gt;</span><br><span class="line"></span>|<span class="string">   Date:   Thu Nov 12 08:09:46 2015 +0800</span><br><span class="line"></span>|</span><br><span class="line">|<span class="string">       add on 'noff' branch</span><br><span class="line"></span>|</span><br><span class="line"><span class="keyword">*</span> commit 3cf9a8be65b1c7d6ab53dac8dd0628016e7c52d2</span><br><span class="line">|<span class="string"> Author: yongfei.hu &lt;yongfeiuall@163.com&gt;</span><br><span class="line"></span>|<span class="string"> Date:   Wed Nov 11 15:49:47 2015 +0800</span><br><span class="line"></span>|</span><br><span class="line">|<span class="string">     a</span></span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Git仓库-远程仓库]]></title>
      <url>http://izheyi.com/2015/11/10/Git%E4%BB%93%E5%BA%93-%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/</url>
      <content type="html"><![CDATA[<p>远程仓库是指托管在因特网或其他网络中的你的项目的版本库。本节只介绍一些很基础的操作应用。</p>
<p><em>说明：这里我们用github任务远程仓库，需要注册github账号。 </em></p>
<h1 id="添加远程库"><a href="#添加远程库" class="headerlink" title="添加远程库"></a>添加远程库</h1><p>为了便于管理，Git要求每个远程主机都必须指定一个主机名。git remote命令就用于管理主机名。</p>
<ol>
<li>在github创建一个新库<br>请参见：<a href="https://help.github.com/articles/create-a-repo/" target="_blank" rel="external">Create A Repo</a></li>
<li>关联本地仓库到GitHub仓库<br>运行 git remote add [remote-name] [url] 添加一个新的远程Git仓库，有以下两种方式：</li>
</ol>
<ul>
<li><p>HTTPS</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote <span class="built_in">add</span> origin http<span class="variable">s:</span>//github.<span class="keyword">com</span>/yongfeiuall/yongfeiuall.github.io.git</span><br></pre></td></tr></table></figure>
</li>
<li><p>SSH<br>本地Git仓库和GitHub仓库之间的传输是通过SSH加密，需要设置：<a href="https://help.github.com/articles/generating-ssh-keys/" target="_blank" rel="external">Generating SSH keys</a></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add origin git@github<span class="class">.com</span>:yongfeiuall/yongfeiuall<span class="class">.github</span><span class="class">.io</span><span class="class">.git</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>添加后，远程库的名字就是origin，这是Git默认的叫法，也可以改成别的。</p>
<p><em>Notes: 使用https除了速度慢以外，还有个最大的麻烦是每次推送都必须输入口令，但是在某些只开放http端口的公司内部就无法使用ssh协议而只能用https。</em><br><a id="more"></a></p>
<h1 id="推送到远程库"><a href="#推送到远程库" class="headerlink" title="推送到远程库"></a>推送到远程库</h1><p>用 git push [remote-name] [local branch-name] 推送本地仓库到GitHub仓库。<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="keyword">push </span>-u origin master</span><br></pre></td></tr></table></figure></p>
<p>由于远程库是空的，我们第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。</p>
<h1 id="从远程仓库中抓取与拉取"><a href="#从远程仓库中抓取与拉取" class="headerlink" title="从远程仓库中抓取与拉取"></a>从远程仓库中抓取与拉取</h1><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>git fetch origin</span><br></pre></td></tr></table></figure>
<p>必须注意 git fetch [remote-name] 命令会将数据拉取到你的本地仓库 - 它并不会自动合并或修改你当前的工作。 可以使用 git pull [remote-name] [local branch-name] 命令来自动的抓取然后合并远程分支到当前分支。<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>git pull origin</span><br></pre></td></tr></table></figure></p>
<h1 id="克隆远程库"><a href="#克隆远程库" class="headerlink" title="克隆远程库"></a>克隆远程库</h1><p>如果你想获得一份已经存在了的Git仓库的拷贝，就要用到git clone命令。<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>git clone <span class="symbol">https:</span>/<span class="regexp">/github.com/yongfeiuall</span><span class="regexp">/yongfeiuall.github.io.git</span></span><br></pre></td></tr></table></figure></p>
<h1 id="远程仓库的移除与重命名"><a href="#远程仓库的移除与重命名" class="headerlink" title="远程仓库的移除与重命名"></a>远程仓库的移除与重命名</h1><p>运行 git remote rename [old-remote-name] [new-remote-name] 重命名一个远程仓库<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>git remote rename origin newName</span><br></pre></td></tr></table></figure></p>
<p>运行 git remote rm [remote-name] 删除一个远程仓库<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>git remote rm origin</span><br></pre></td></tr></table></figure></p>
<p>在网上看到一篇很不错的文章，可参考原文学习：<a href="http://www.ruanyifeng.com/blog/2014/06/git_remote.html" target="_blank" rel="external">Git远程操作详解</a></p>
<p><img src="/images/git/remote_repository.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Git仓库-版本回滚]]></title>
      <url>http://izheyi.com/2015/11/10/Git%E4%BB%93%E5%BA%93-%E7%89%88%E6%9C%AC%E5%9B%9E%E9%80%80/</url>
      <content type="html"><![CDATA[<h1 id="回滚到之前的版本"><a href="#回滚到之前的版本" class="headerlink" title="回滚到之前的版本"></a>回滚到之前的版本</h1><h2 id="创建新文件“build-txt”，并提交三个版本"><a href="#创建新文件“build-txt”，并提交三个版本" class="headerlink" title="创建新文件“build.txt”，并提交三个版本"></a>创建新文件“build.txt”，并提交三个版本</h2><ul>
<li><p>build 1</p>
<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="keyword">st</span> build.</span><br></pre></td></tr></table></figure>
</li>
<li><p>build 2</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>st build.</span><br><span class="line"><span class="number">2</span>nd build.</span><br></pre></td></tr></table></figure>
</li>
<li><p>build 3</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>st build.</span><br><span class="line"><span class="number">2</span>nd build.</span><br><span class="line"><span class="number">3</span>rd build.</span><br></pre></td></tr></table></figure>
</li>
</ul>
<a id="more"></a>
<h2 id="查看log"><a href="#查看log" class="headerlink" title="查看log"></a>查看log</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span></span><br><span class="line">commit <span class="number">027619</span>d39bbf66daf98f4911e804908e36da3a11</span><br><span class="line">Author: yongfei.hu &lt;huyongfei@huyongfei-pc.beyondsoft.com&gt;</span><br><span class="line">Date:   Tue Nov <span class="number">10</span> <span class="number">11</span>:<span class="number">18</span>:<span class="number">59</span> <span class="number">2015</span> +<span class="number">0800</span></span><br><span class="line"></span><br><span class="line">    <span class="number">3</span>rd build</span><br><span class="line"></span><br><span class="line">commit a5a34782dbef50569a18ead65014083c95297de7</span><br><span class="line">Author: yongfei.hu &lt;huyongfei@huyongfei-pc.beyondsoft.com&gt;</span><br><span class="line">Date:   Tue Nov <span class="number">10</span> <span class="number">11</span>:<span class="number">18</span>:<span class="number">33</span> <span class="number">2015</span> +<span class="number">0800</span></span><br><span class="line"></span><br><span class="line">    <span class="number">2</span>nd build</span><br><span class="line"></span><br><span class="line">commit bed53badabb724a6b8eda2d12de6287df0e065f2</span><br><span class="line">Author: yongfei.hu &lt;huyongfei@huyongfei-pc.beyondsoft.com&gt;</span><br><span class="line">Date:   Tue Nov <span class="number">10</span> <span class="number">11</span>:<span class="number">18</span>:<span class="number">14</span> <span class="number">2015</span> +<span class="number">0800</span></span><br><span class="line"></span><br><span class="line">    <span class="number">1</span>st build</span><br></pre></td></tr></table></figure>
<h2 id="回退到第2个版本（2nd-build）"><a href="#回退到第2个版本（2nd-build）" class="headerlink" title="回退到第2个版本（2nd build）"></a>回退到第2个版本（2nd build）</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="operator"><span class="keyword">reset</span> <span class="comment">--hard HEAD^</span></span><br><span class="line"><span class="keyword">HEAD</span> <span class="keyword">is</span> <span class="keyword">now</span> <span class="keyword">at</span> a5a3478 <span class="number">2</span>nd <span class="keyword">build</span></span></span><br></pre></td></tr></table></figure>
<p>查看工作区文档，已经是回退到‘2nd build’。</p>
<p><em>Note: 在Git中，用HEAD表示当前版本，上一个版本就是HEAD^，上上一个版本就是HEAD^^，往上100个版本写成HEAD~100。</em></p>
<h1 id="回滚后，恢复到最新版本"><a href="#回滚后，恢复到最新版本" class="headerlink" title="回滚后，恢复到最新版本"></a>回滚后，恢复到最新版本</h1><ul>
<li><p>如果当前bash窗口没有关闭，找到最新版本的‘commit id’，再指定到上面即可</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="operator"><span class="keyword">reset</span> <span class="comment">--hard 027619d</span></span><br><span class="line"><span class="keyword">HEAD</span> <span class="keyword">is</span> <span class="keyword">now</span> <span class="keyword">at</span> <span class="number">027619</span><span class="keyword">d</span> <span class="number">3</span>rd <span class="keyword">build</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>如果当前bash窗口已关闭，git reflog用来记录你的每一次命令</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git reflog</span><br><span class="line">a5a3478 HEAD@&#123;<span class="number">0</span>&#125;: reset: moving to HEAD^</span><br><span class="line"><span class="number">027619</span>d HEAD@&#123;<span class="number">1</span>&#125;: commit: <span class="number">3</span>rd build</span><br><span class="line">a5a3478 HEAD@&#123;<span class="number">2</span>&#125;: commit: <span class="number">2</span>nd build</span><br><span class="line">bed53ba HEAD@&#123;<span class="number">3</span>&#125;: commit: <span class="number">1</span>st build</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>再指定到相应的commit id上就好。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Git仓库-基本操作]]></title>
      <url>http://izheyi.com/2015/11/10/Git%E4%BB%93%E5%BA%93-%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<h1 id="管理修改"><a href="#管理修改" class="headerlink" title="管理修改"></a>管理修改</h1><p>Git跟踪并管理的是修改，而非文件。<br>每次修改，如果不add到暂存区，那就不会加入到commit中。<br>(可以多次add, 一次commit)第一次修改 -&gt; git add -&gt; 第二次修改 -&gt; git add …… -&gt; git commit</p>
<h1 id="撤消操作"><a href="#撤消操作" class="headerlink" title="撤消操作"></a>撤消操作</h1><p>在任何一个阶段，你都有可能想要撤消某些操作。有时候我们提交完了才发现漏掉了几个文件没有添加，或者提交信息写错了。 此时，可以运行带有 –amend 选项的提交命令尝试重新提交：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="operator"><span class="keyword">commit</span> -<span class="keyword">m</span> <span class="string">'initial commit'</span></span><br><span class="line">$ git <span class="keyword">add</span> <span class="keyword">status</span>.txt</span><br><span class="line">$ git <span class="keyword">commit</span> <span class="comment">--amend</span></span></span><br></pre></td></tr></table></figure></p>
<p>最终你只会有一个提交 - 第二次提交将代替第一次提交的结果。<br><a id="more"></a></p>
<h2 id="撤消对文件的修改"><a href="#撤消对文件的修改" class="headerlink" title="撤消对文件的修改"></a>撤消对文件的修改</h2><ol>
<li><p>创建一个新文件“Redo.txt”，并添加到仓库里。</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span> Is <span class="keyword">For</span> Redo.</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改文档</p>
<figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">this <span class="variable">Is</span> <span class="variable">For</span> <span class="variable">Redo</span>.</span><br><span class="line">test redo.</span><br></pre></td></tr></table></figure>
</li>
<li><p>查看状态</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Changes not staged for <span class="operator"><span class="keyword">commit</span>:</span><br><span class="line">  (<span class="keyword">use</span> <span class="string">"git add &lt;file&gt;..."</span> <span class="keyword">to</span> <span class="keyword">update</span> what will be committed)</span><br><span class="line">  (<span class="keyword">use</span> <span class="string">"git checkout -- &lt;file&gt;..."</span> <span class="keyword">to</span> discard changes <span class="keyword">in</span> working <span class="keyword">directory</span>)</span><br><span class="line"></span><br><span class="line">        modified:   <span class="keyword">Redo</span>.txt</span><br><span class="line"></span><br><span class="line"><span class="keyword">no</span> changes added <span class="keyword">to</span> <span class="keyword">commit</span> (<span class="keyword">use</span> <span class="string">"git add"</span> <span class="keyword">and</span>/<span class="keyword">or</span> <span class="string">"git commit -a"</span>)</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>撤销修改</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>git checkout -- <span class="string">"Redo.txt"</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>查看“Redo.txt”，那些修改已经被撤消了。</p>
<h2 id="取消暂存的文件"><a href="#取消暂存的文件" class="headerlink" title="取消暂存的文件"></a>取消暂存的文件</h2><ol>
<li><p>再次修改“Redo.txt”， 并add到暂存区。</p>
<figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">this <span class="variable">Is</span> <span class="variable">For</span> <span class="variable">Redo</span>.</span><br><span class="line">test redo.</span><br></pre></td></tr></table></figure>
</li>
<li><p>查看状态</p>
<figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line"><span class="keyword">On</span> branch master</span><br><span class="line">Changes <span class="keyword">to</span> be committed:</span><br><span class="line">  (<span class="keyword">use</span> <span class="string">"git reset HEAD &lt;file&gt;..."</span> <span class="keyword">to</span> unstage)</span><br><span class="line"></span><br><span class="line">        modified:   Redo.txt</span><br></pre></td></tr></table></figure>
</li>
<li><p>撤销修改<br>用命令git reset HEAD file可以把暂存区的修改撤销掉（unstage），重新放回工作区</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="operator"><span class="keyword">reset</span> <span class="keyword">HEAD</span> <span class="keyword">Redo</span>.txt</span><br><span class="line">Unstaged changes <span class="keyword">after</span> <span class="keyword">reset</span>:</span><br><span class="line"><span class="keyword">M</span>       <span class="keyword">Redo</span>.txt</span></span><br></pre></td></tr></table></figure>
<p><strong>Note: HEAD - 表示最新的版本。</strong></p>
</li>
<li>再次查看状态<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Changes not staged for <span class="operator"><span class="keyword">commit</span>:</span><br><span class="line">  (<span class="keyword">use</span> <span class="string">"git add &lt;file&gt;..."</span> <span class="keyword">to</span> <span class="keyword">update</span> what will be committed)</span><br><span class="line">  (<span class="keyword">use</span> <span class="string">"git checkout -- &lt;file&gt;..."</span> <span class="keyword">to</span> discard changes <span class="keyword">in</span> working <span class="keyword">directory</span>)</span><br><span class="line"></span><br><span class="line">        modified:   <span class="keyword">Redo</span>.txt</span><br><span class="line"></span><br><span class="line"><span class="keyword">no</span> changes added <span class="keyword">to</span> <span class="keyword">commit</span> (<span class="keyword">use</span> <span class="string">"git add"</span> <span class="keyword">and</span>/<span class="keyword">or</span> <span class="string">"git commit -a"</span>)</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h1><ol>
<li>创建一个新文件“delete.txt”，并添加到仓库里。</li>
<li>把工作目录中的文件删除。</li>
<li><p>查看状态</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Changes not staged for <span class="operator"><span class="keyword">commit</span>:</span><br><span class="line">  (<span class="keyword">use</span> <span class="string">"git add/rm &lt;file&gt;..."</span> <span class="keyword">to</span> <span class="keyword">update</span> what will be committed)</span><br><span class="line">  (<span class="keyword">use</span> <span class="string">"git checkout -- &lt;file&gt;..."</span> <span class="keyword">to</span> discard changes <span class="keyword">in</span> working <span class="keyword">directory</span>)</span><br><span class="line"></span><br><span class="line">        deleted:    <span class="keyword">delete</span>.txt</span><br><span class="line"></span><br><span class="line"><span class="keyword">no</span> changes added <span class="keyword">to</span> <span class="keyword">commit</span> (<span class="keyword">use</span> <span class="string">"git add"</span> <span class="keyword">and</span>/<span class="keyword">or</span> <span class="string">"git commit -a"</span>)</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>删除</p>
</li>
</ol>
<ul>
<li><p>从版本库中删除该文件</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">huyongfei@huyongfei-pc MINGW32 /g/study (master)</span><br><span class="line">$ git rm <span class="operator"><span class="keyword">delete</span>.txt</span><br><span class="line">rm <span class="string">'delete.txt'</span></span><br><span class="line"></span><br><span class="line">$ git <span class="keyword">commit</span> -<span class="keyword">m</span> <span class="string">"remove delete.txt"</span></span><br><span class="line">[<span class="keyword">master</span> a783942] remove <span class="keyword">delete</span>.txt</span><br><span class="line"> <span class="number">1</span> <span class="keyword">file</span> <span class="keyword">changed</span>, <span class="number">0</span> insertions(+), <span class="number">0</span> deletions(-)</span><br><span class="line"> <span class="keyword">delete</span> <span class="keyword">mode</span> <span class="number">100644</span> <span class="keyword">delete</span>.txt</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>删错了<br>就得从库里把误删的文件恢复到最新版本。</p>
<pre><code>$ git checkout --delete.txt
</code></pre><p><strong><em>Note:</em></strong><br>git checkout – [file] 是一个危险的命令。 你对那个文件做的任何修改都会消失 - 你只是拷贝了另一个文件来覆盖它。 除非你确实清楚不想要那个文件了，否则不要使用这个命令。</p>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Git仓库-查看提交历史]]></title>
      <url>http://izheyi.com/2015/11/10/Git%E4%BB%93%E5%BA%93-%E6%9F%A5%E7%9C%8B%E6%8F%90%E4%BA%A4%E5%8E%86%E5%8F%B2/</url>
      <content type="html"><![CDATA[<p>在提交了若干更新，你也许想回顾下提交历史。git log完成这个任务。<br>然后在此项目中运行 git log，应该会看到下面的输出：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span></span><br><span class="line">commit b6a3a44ff118711f59d6ea729453605ae7166ca9</span><br><span class="line">Author: yongfeiuall &lt;yongfeiuall@<span class="number">163.</span>com&gt;</span><br><span class="line">Date:   Tue Nov <span class="number">10</span> <span class="number">08</span>:<span class="number">05</span>:<span class="number">31</span> <span class="number">2015</span> +<span class="number">0800</span></span><br><span class="line"></span><br><span class="line">    add update track</span><br><span class="line"></span><br><span class="line">commit <span class="number">15</span>d47dabff32d9e6e374220fa28a11e6c7bb722b</span><br><span class="line">Author: yongfeiuall &lt;yongfeiuall@<span class="number">163.</span>com&gt;</span><br><span class="line">Date:   Tue Nov <span class="number">10</span> <span class="number">07</span>:<span class="number">57</span>:<span class="number">03</span> <span class="number">2015</span> +<span class="number">0800</span></span><br><span class="line"></span><br><span class="line">    <span class="number">1</span>st commit</span><br><span class="line"></span><br><span class="line">commit <span class="number">60850f</span>d49a528418120836febdb996ef05afd175</span><br><span class="line">Author: yongfeiuall &lt;yongfeiuall@<span class="number">163.</span>com&gt;</span><br><span class="line">Date:   Tue Nov <span class="number">10</span> <span class="number">07</span>:<span class="number">56</span>:<span class="number">23</span> <span class="number">2015</span> +<span class="number">0800</span></span><br><span class="line"></span><br><span class="line">    <span class="number">1</span>st commit</span><br><span class="line"></span><br><span class="line">commit a93f60ed24cb23ccaff828e63402a6fba3ae9d08</span><br><span class="line">Author: yongfeiuall &lt;yongfeiuall@<span class="number">163.</span>com&gt;</span><br><span class="line">Date:   Mon Nov <span class="number">9</span> <span class="number">14</span>:<span class="number">52</span>:<span class="number">43</span> <span class="number">2015</span> +<span class="number">0800</span></span><br><span class="line"></span><br><span class="line">    docuument draft</span><br></pre></td></tr></table></figure></p>
<p>这里只用基本的使用，如果想用更详细的参数和方法，请查看官方文档。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Git仓库-记录每次更新]]></title>
      <url>http://izheyi.com/2015/11/10/Git%E4%BB%93%E5%BA%93-%E8%AE%B0%E5%BD%95%E6%AF%8F%E6%AC%A1%E6%9B%B4%E6%96%B0/</url>
      <content type="html"><![CDATA[<p>工作目录下的每一个文件都不外乎这两种状态：已跟踪或未跟踪。 </p>
<ol>
<li>已跟踪的文件是指那些被纳入了版本控制的文件，在上一次快照中有它们的记录，在工作一段时间后，它们的状态可能处于未修改，已修改或已放入暂存区。 </li>
<li>工作目录中除已跟踪文件以外的所有其它文件都属于未跟踪文件，它们既不存在于上次快照的记录中，也没有放入暂存区。 </li>
<li>初次克隆某个仓库的时候，工作目录中的所有文件都属于已跟踪文件，并处于未修改状态。<br><img src="/images/git/file_status.jpg" alt=""><a id="more"></a>
<h1 id="git-status追踪仓库当前的状态"><a href="#git-status追踪仓库当前的状态" class="headerlink" title="git status追踪仓库当前的状态"></a>git status追踪仓库当前的状态</h1><h2 id="第一次查看"><a href="#第一次查看" class="headerlink" title="第一次查看"></a>第一次查看</h2></li>
</ol>
<ul>
<li><p>新建一个文件status.txt。</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This <span class="keyword">is</span> <span class="keyword">to</span> track status.</span><br></pre></td></tr></table></figure>
</li>
<li><p>查看状态</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Untracked files:</span><br><span class="line">  (<span class="operator"><span class="keyword">use</span> <span class="string">"git add &lt;file&gt;..."</span> <span class="keyword">to</span> <span class="keyword">include</span> <span class="keyword">in</span> what will be committed)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">status</span>.txt</span><br><span class="line"></span><br><span class="line"><span class="keyword">nothing</span> added <span class="keyword">to</span> <span class="keyword">commit</span> but untracked files <span class="keyword">present</span> (<span class="keyword">use</span> <span class="string">"git add"</span> <span class="keyword">to</span> track)</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>Untracked files，未跟踪的文件意味着Git在之前的快照（提交）中没有这些文件。</p>
<h2 id="第二次查看"><a href="#第二次查看" class="headerlink" title="第二次查看"></a>第二次查看</h2><ul>
<li><p>修改文件</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">This <span class="keyword">is</span> <span class="keyword">to</span> track status.</span><br><span class="line"><span class="keyword">update</span> <span class="keyword">file</span>.</span><br></pre></td></tr></table></figure>
</li>
<li><p>查看状态</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Changes not staged for <span class="operator"><span class="keyword">commit</span>:</span><br><span class="line">  (<span class="keyword">use</span> <span class="string">"git add &lt;file&gt;..."</span> <span class="keyword">to</span> <span class="keyword">update</span> what will be committed)</span><br><span class="line">  (<span class="keyword">use</span> <span class="string">"git checkout -- &lt;file&gt;..."</span> <span class="keyword">to</span> discard changes <span class="keyword">in</span> working <span class="keyword">directory</span>)</span><br><span class="line"></span><br><span class="line">        modified:   <span class="keyword">status</span>.txt</span><br><span class="line"></span><br><span class="line"><span class="keyword">no</span> changes added <span class="keyword">to</span> <span class="keyword">commit</span> (<span class="keyword">use</span> <span class="string">"git add"</span> <span class="keyword">and</span>/<span class="keyword">or</span> <span class="string">"git commit -a"</span>)</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>告诉我们，文件被修改了，但还没有准备提交的修改。</p>
<h2 id="第三次查看"><a href="#第三次查看" class="headerlink" title="第三次查看"></a>第三次查看</h2><ul>
<li><p>git add</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="keyword">add </span>status.txt</span><br></pre></td></tr></table></figure>
</li>
<li><p>查看状态</p>
<figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line"><span class="keyword">On</span> branch master</span><br><span class="line">Changes <span class="keyword">to</span> be committed:</span><br><span class="line">  (<span class="keyword">use</span> <span class="string">"git reset HEAD &lt;file&gt;..."</span> <span class="keyword">to</span> unstage)</span><br><span class="line"></span><br><span class="line">        modified:   status.txt</span><br><span class="line">`</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>将要被提交的修改包括status.txt，接着，就可以提交了。</p>
<h2 id="第四次想看"><a href="#第四次想看" class="headerlink" title="第四次想看"></a>第四次想看</h2><ul>
<li><p>git commit</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="operator"><span class="keyword">commit</span> -<span class="keyword">m</span> <span class="string">"add update track"</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>查看状态</p>
<figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line"><span class="keyword">On</span> branch master</span><br><span class="line"><span class="literal">nothing</span> <span class="keyword">to</span> commit, working directory clean</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>当前没有需要提交的修改。</p>
<h1 id="git-diff来分析文件差异"><a href="#git-diff来分析文件差异" class="headerlink" title="git diff来分析文件差异"></a>git diff来分析文件差异</h1><ul>
<li><p>修改文件</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">This <span class="keyword">is</span> <span class="keyword">to</span> track status.</span><br><span class="line"><span class="keyword">update</span> <span class="keyword">file</span>.</span><br><span class="line">test diff.</span><br></pre></td></tr></table></figure>
</li>
<li><p>比较文件</p>
<figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ git diff status.txt</span><br><span class="line">diff --git a/status.txt b/status.txt</span><br><span class="line">index d29d238..c6bbd16 100644</span><br><span class="line"><span class="header">--- a/status.txt</span></span><br><span class="line"><span class="header">+++ b/status.txt</span></span><br><span class="line"><span class="chunk">@@ -1,2 +1,3 @@</span></span><br><span class="line"> This is to track status.</span><br><span class="line"><span class="deletion">-update file.</span></span><br><span class="line"><span class="addition">+update file.</span></span><br><span class="line"><span class="addition">+test diff.</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>Note：<br>要查看尚未暂存的文件更新了哪些部分，用git diff。<br>查看已暂存的将要添加到下次提交里的内容，用git diff –staged。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Git仓库-初始化仓库]]></title>
      <url>http://izheyi.com/2015/11/09/Git%E4%BB%93%E5%BA%93-%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BB%93%E5%BA%93/</url>
      <content type="html"><![CDATA[<h1 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h1><ol>
<li>在d盘创建一个目录’gittest’</li>
<li>进入到’gittest’，右键选择’Git Bash Here’，打开终端，输入命令<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>git init</span><br><span class="line"><span class="constant">Initialized</span> empty <span class="constant">Git</span> repository <span class="keyword">in</span> <span class="constant">D</span><span class="symbol">:/gittest/</span>.git/</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>初始化完成，会在当前目录下多了’.git’目录，这个子目录含有你初始化的Git仓库中所有的必须文件，这些文件是Git仓库的骨干。没事千万不要手动修改这个目录里面的文件，不然改乱了，就把Git仓库给破坏了。</p>
<p>但是，在这个时候，我们仅仅是做了一个初始化的操作，你的项目里的文件还没有被跟踪。</p>
<h1 id="添加文件"><a href="#添加文件" class="headerlink" title="添加文件"></a>添加文件</h1><p>可参见上一篇中的Git工作流程。</p>
<ol>
<li><p>在当前目录下创建一个文件’gitLearn.txt’</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">This note <span class="keyword">for</span> git learning.</span><br><span class="line">Git <span class="keyword">is</span> great tool.</span><br></pre></td></tr></table></figure>
</li>
<li><p>git add，把文件添加到仓库</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="keyword">add </span>gitLearn.txt</span><br></pre></td></tr></table></figure>
</li>
<li><p>git commit，把文件提交到仓库</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="operator"><span class="keyword">commit</span> -<span class="keyword">m</span> <span class="string">"docuument draft"</span></span><br><span class="line">[<span class="keyword">master</span> (root-<span class="keyword">commit</span>) a93f60e] docuument draft</span><br><span class="line"> <span class="number">1</span> <span class="keyword">file</span> <span class="keyword">changed</span>, <span class="number">2</span> insertions(+)</span><br><span class="line"> <span class="keyword">create</span> <span class="keyword">mode</span> <span class="number">100644</span> gitLearn.txt</span></span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Git安装和设置]]></title>
      <url>http://izheyi.com/2015/11/09/Git%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<p>Git可以在Linux、Unix、Mac和Windows这几大平台上正常运行。 这里只介绍在Windows下的Git安装，其他平台下的安装请自行Google。</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>msysgit是Windows版的Git，从 <a href="http://msysgit.github.io/" target="_blank" rel="external">http://msysgit.github.io/</a> 下载，然后安装即可。<br>安装完成后，鼠标右键，在菜单里找到“Git GUI Here”和“Git Bash Here”，就说明Git安装成功！</p>
<h1 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h1><p>Git 自带一个git config的工具来帮助设置控制Git外观和行为的配置变量。<br>安装完成后，还需要设置一下，在命令行输入<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user<span class="class">.name</span> <span class="string">"yongfeiuall"</span></span><br><span class="line">$ git config --global user<span class="class">.email</span> <span class="string">"yongfeiuall@163.com"</span></span><br></pre></td></tr></table></figure></p>
<p>这样做很重要，因为每一个Git的提交都会使用这些信息，并且它会写入到你的每一次提交中，不可更改.</p>
<p><strong>注意</strong>： 如果使用了 –global 选项，那么该命令只需要运行一次，因为之后无论你在该系统上做任何事情， Git 都会使用那些信息。 当你想针对特定项目使用不同的用户名称与邮件地址时，可以在那个项目目录下运行没有 –global 选项的命令来配置。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Git基础]]></title>
      <url>http://izheyi.com/2015/11/09/Git%E5%9F%BA%E7%A1%80/</url>
      <content type="html"><![CDATA[<p>本网站是用hexo+github搭建的，为了解决多电脑操作的问题，联想到用Git在github上来实现；再者Git是目前世界上最先进的分布式版本控制系统，很多公司现在都是用这高端大气上档次的东东。<br>此次会对Git和Github有个简单的入门学习，主要是学习一下思想和流程。说不定以后在自动化的过程中也会用Git来管理自动化工程。</p>
<h1 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h1><p>概念性的东西，不做介绍，实在不明白，请Google吧。</p>
<ul>
<li>集中式版本控制系统<br>这类系统，诸如 CVS、Subversion等，都有一个单一的集中管理的服务器，保存所有文件的修订版本，而协同工作的人们都通过客户端连到这台服务器，取出最新的文件或者提交更新。</li>
<li>分布式版本控制系统<br>在这类系统中，像Git、Mercurial，客户端并不只提取最新版本的文件快照，而是把代码仓库完整地镜像下来。 这么一来，任何一处协同工作用的服务器发生故障，事后都可以用任何一个镜像出来的本地仓库恢复。 因为每一次的克隆操作，实际上都是一次对代码仓库的完整备份。</li>
</ul>
<h1 id="Git思想和基本工作原理"><a href="#Git思想和基本工作原理" class="headerlink" title="Git思想和基本工作原理"></a>Git思想和基本工作原理</h1><h2 id="Git-有三种状态"><a href="#Git-有三种状态" class="headerlink" title="Git 有三种状态"></a>Git 有三种状态</h2><ul>
<li>已提交（committed）<br>表示数据已经安全的保存在本地数据库中。</li>
<li>已修改（modified）<br>表示修改了文件，但还没保存到数据库中。</li>
<li>已暂存（staged）<br>表示对一个已修改文件的当前版本做了标记，使之包含在下次提交的快照中。</li>
</ul>
<h2 id="Git三个工作区域"><a href="#Git三个工作区域" class="headerlink" title="Git三个工作区域"></a>Git三个工作区域</h2><ul>
<li>工作区<br>本地电脑上能看到的目录，存有从Git仓库的压缩数据库中提取出来的文件。</li>
<li>Git仓库<br>Git用来保存项目的元数据和对象数据库的地方。工作区中隐藏目录.git。</li>
<li>暂存区域<br>暂存区域是一个文件，保存了下次将提交的文件列表信息，一般在Git仓库目录中。</li>
</ul>
<h2 id="Git工作流程"><a href="#Git工作流程" class="headerlink" title="Git工作流程"></a>Git工作流程</h2><ol>
<li>在工作目录中修改文件。</li>
<li>暂存文件，将文件的快照放入暂存区域。</li>
<li>提交更新，找到暂存区域的文件，将快照存储到Git仓库目录。</li>
</ol>
<p>说明：此系列是学习笔记，为了减少打字，可能会有Copy过来的理论上的知识说明，如有问题，请告之。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[这是什么派的画？]]></title>
      <url>http://izheyi.com/2015/11/06/%E8%BF%99%E6%98%AF%E4%BB%80%E4%B9%88%E6%B4%BE%E7%9A%84%E7%94%BB%EF%BC%9F/</url>
      <content type="html"><![CDATA[<p>小丁画了画送给妈妈。<br>这幅是两个房子，这个大房子好个性，是外星人住的吗？现实中要是真存在，应该是很拉风的。<br><img src="/images/izheyi/2015/painting/0.jpg" alt="两个房子"><br><a id="more"></a><br>这幅是四个羽毛在坐车，真是没看出来，从小都没有艺术细胞啊:(<br><img src="/images/izheyi/2015/painting/1.jpg" alt="四个羽毛坐车"></p>
<p>相比上边两个，下边这个就中规中矩了。<br><img src="/images/izheyi/2015/painting/2.jpg" alt="娃娃"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MongoDB: Replica Sets + Sharding]]></title>
      <url>http://izheyi.com/2015/11/04/MongoDB-Replica-Sets-Sharding/</url>
      <content type="html"><![CDATA[<p>想学习一下集群的思想和思路，我在一台Windows机器下搭建了一个 Replica Sets + Sharding 测试集群环境。</p>
<h1 id="概念说明"><a href="#概念说明" class="headerlink" title="概念说明"></a>概念说明</h1><p><strong>Replica Set</strong><br>副本集。简单的说集群中包含了多份数据，保证主节点挂掉了，备用节点继续提供数据服务。使用Replica Set来实现读写分离，通过在连接时指定或者在主库指定slaveOk，由Secondary来分担读的压力，Primary只承担写操作。<br>副本集使其组内的每个成员（member）在不同的mongod实例中具有相同的数据备份，这样可以将来自应用服务器的请求访问（request visit）得以均匀的分布在Replica Set的每一个成员所在的mongod实例上，用以减缓单台mongod服务器在请求负载上的压力。在一定时限内Replica Set能完成其组内成员数据的最终一致，这种备份机制是自动且对用户透明的。<br>详细请参考：<a href="https://docs.mongodb.org/manual/core/replication-introduction/" target="_blank" rel="external">Replication Introduction</a></p>
<a id="more"></a>
<p><strong>Sharding</strong><br>Sharding is a method for storing data across multiple machines. MongoDB uses sharding to support deployments with very large data sets and high throughput operations.<br>详细请参考：<a href="https://docs.mongodb.org/manual/core/sharding-introduction/" target="_blank" rel="external">Sharding Introduction</a></p>
<ul>
<li>Shard:<br>使用 Replica Sets确保每个数据节点都具有备份、自动容错转移、自动恢复能力。mongod实例，用于存储实际的数据块，实际生产环境中一个Shard Server角色可由几台机器组个一个Replica Set承担，防止主机单点故障。</li>
<li>Config:<br>使用3个配置服务器确保元数据完整性。mongod实例，存储了整个Cluster Metadata，其中包括Chunk信息。</li>
<li>Route:<br>使用3个路由进程实现负载平衡提高客户端接入性能。mongos实例，前端路由，客户端由此接入，且让整个集群看上去像单一数据库，前端应用可以透明使用。</li>
</ul>
<h1 id="集群环境"><a href="#集群环境" class="headerlink" title="集群环境"></a>集群环境</h1><p>只有一台windows机器，配置方案：<br><img src="/images/mongodb/sharding.jpg" alt=""></p>
<p>分片复本集A（三个分片节点构成一个复本集）：<br>127.0.0.1:10000   127.0.0.1:10001  127.0.0.1:10002<br>分片复本集B（三个分片节点构成一个复本集）：<br>127.0.0.1:20000   127.0.0.1:20001  127.0.0.1:20002<br>Configsvc（三个配置服务器节点）:<br>127.0.0.1:30000   127.0.0.1:30001  127.0.0.1:30002<br>mongos（路由节点）:<br>127.0.0.1:40000</p>
<h1 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h1><h2 id="创建数据和日志目录"><a href="#创建数据和日志目录" class="headerlink" title="创建数据和日志目录"></a>创建数据和日志目录</h2><p><strong>数据文件目录</strong><br>data/shard1/r0<br>data/shard1/r1<br>data/shard1/r2<br>data/shard2/r0<br>data/shard2/r1<br>data/shard2/r2<br>data/configsvr/r0<br>data/configsvr/r1<br>data/configsvr/r2</p>
<p><strong>日志文件目录</strong><br>log/shard1<br>log/shard2<br>log/configsvr</p>
<h2 id="创建分片和复本集"><a href="#创建分片和复本集" class="headerlink" title="创建分片和复本集"></a>创建分片和复本集</h2><h3 id="配置第一组（副本集-Shard1）"><a href="#配置第一组（副本集-Shard1）" class="headerlink" title="配置第一组（副本集-Shard1）"></a>配置第一组（副本集-Shard1）</h3><ol>
<li><p>启动mongod shard11进程</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">D:</span>\mongodb\bin&gt;mongod.exe --logpath <span class="string">d:</span><span class="regexp">/mongodb/</span>log<span class="regexp">/shard1/</span>r0.log --logappend --dbpath <span class="string">d:</span><span class="regexp">/mongodb/</span>data<span class="regexp">/shard1/</span>r0 --port <span class="number">10000</span> --shardsvr --replSet shard1</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动mongod shard12进程</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">D:</span>\mongodb\bin&gt;mongod.exe --logpath <span class="string">d:</span><span class="regexp">/mongodb/</span>log<span class="regexp">/shard1/</span>r1.log --logappend --dbpath <span class="string">d:</span><span class="regexp">/mongodb/</span>data<span class="regexp">/shard1/</span>r1 --port <span class="number">10001</span> --shardsvr --replSet shard1</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动mongod shard13进程</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">D:</span>\mongodb\bin&gt;mongod.exe --logpath <span class="string">d:</span><span class="regexp">/mongodb/</span>log<span class="regexp">/shard1/</span>r2.log --logappend --dbpath <span class="string">d:</span><span class="regexp">/mongodb/</span>data<span class="regexp">/shard1/</span>r2 --port <span class="number">10002</span> --shardsvr --replSet shard1</span><br></pre></td></tr></table></figure>
</li>
<li><p>初始化复本集</p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">D:\mongodb\bin&gt;mongo <span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">10000</span>/admin</span><br><span class="line">MongoDB shell version: <span class="number">2.6</span>.<span class="number">5</span></span><br><span class="line">connecting to: <span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">10000</span>/admin</span><br><span class="line">&gt; config=&#123;_id: <span class="string">'shard1'</span>, members:[&#123;_id: <span class="number">0</span>,host:<span class="string">'127.0.0.1:10000'</span>&#125;,&#123;_id:<span class="number">1</span>,host:<span class="string">'1</span><br><span class="line">27.0.0.1:10001'</span>&#125;,&#123;_id:<span class="number">2</span>,host:<span class="string">'127.0.0.1:10002'</span>&#125;]&#125;</span><br><span class="line">&#123;</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"shard1"</span>,</span><br><span class="line">        <span class="string">"members"</span> : [</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="string">"_id"</span> : <span class="number">0</span>,</span><br><span class="line">                        <span class="string">"host"</span> : <span class="string">"127.0.0.1:10000"</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="string">"_id"</span> : <span class="number">1</span>,</span><br><span class="line">                        <span class="string">"host"</span> : <span class="string">"127.0.0.1:10001"</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="string">"_id"</span> : <span class="number">2</span>,</span><br><span class="line">                        <span class="string">"host"</span> : <span class="string">"127.0.0.1:10002"</span></span><br><span class="line">                &#125;</span><br><span class="line">        ]</span><br><span class="line">&#125;</span><br><span class="line">&gt; rs.initiate(config)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="string">"info"</span> : <span class="string">"Config now saved locally.  Should come online in about a minute."</span>,</span><br><span class="line">        <span class="string">"ok"</span> : <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="配置第二组（副本集-Shard2）"><a href="#配置第二组（副本集-Shard2）" class="headerlink" title="配置第二组（副本集-Shard2）"></a>配置第二组（副本集-Shard2）</h3><ol>
<li><p>启动mongod shard21进程</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">D:</span>\mongodb\bin&gt;mongod.exe --logpath <span class="string">d:</span><span class="regexp">/mongodb/</span>log<span class="regexp">/shard2/</span>r0.log --logappend --dbpath <span class="string">d:</span><span class="regexp">/mongodb/</span>data<span class="regexp">/shard2/</span>r0 --port <span class="number">20000</span> --shardsvr --replSet shard2</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动mongod shard22进程</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">D:</span>\mongodb\bin&gt;mongod.exe --logpath <span class="string">d:</span><span class="regexp">/mongodb/</span>log<span class="regexp">/shard2/</span>r1.log --logappend --dbpath <span class="string">d:</span><span class="regexp">/mongodb/</span>data<span class="regexp">/shard2/</span>r1 --port <span class="number">20001</span> --shardsvr --replSet shard2</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动mongod shard23进程</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">D:</span>\mongodb\bin&gt;mongod.exe --logpath <span class="string">d:</span><span class="regexp">/mongodb/</span>log<span class="regexp">/shard2/</span>r2.log --logappend --dbpath <span class="string">d:</span><span class="regexp">/mongodb/</span>data<span class="regexp">/shard2/</span>r2 --port <span class="number">20002</span> --shardsvr --replSet shard2</span><br></pre></td></tr></table></figure>
</li>
<li><p>初始化复本集</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">D:</span>\mongodb\bin&gt;mongo <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">20000</span>/admin</span><br><span class="line">MongoDB shell <span class="string">version:</span> <span class="number">2.6</span><span class="number">.5</span></span><br><span class="line">connecting <span class="string">to:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">20000</span>/admin</span><br><span class="line">&gt; config=&#123;<span class="string">_id:</span> <span class="string">'shard2'</span>, <span class="string">members:</span>[&#123;<span class="string">_id:</span> <span class="number">0</span>,<span class="string">host:</span><span class="string">'127.0.0.1:20000'</span>&#125;,&#123;<span class="string">_id:</span><span class="number">1</span>,<span class="string">host:</span><span class="string">'127.0.0.1:20001'</span>&#125;,&#123;<span class="string">_id:</span><span class="number">2</span>,<span class="string">host:</span><span class="string">'127.0.0.1:20002'</span>&#125;]&#125;</span><br><span class="line">&#123;</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"shard2"</span>,</span><br><span class="line">        <span class="string">"members"</span> : [</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="string">"_id"</span> : <span class="number">0</span>,</span><br><span class="line">                        <span class="string">"host"</span> : <span class="string">"127.0.0.1:20000"</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="string">"_id"</span> : <span class="number">1</span>,</span><br><span class="line">                        <span class="string">"host"</span> : <span class="string">"127.0.0.1:20001"</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="string">"_id"</span> : <span class="number">2</span>,</span><br><span class="line">                        <span class="string">"host"</span> : <span class="string">"127.0.0.1:20002"</span></span><br><span class="line">                &#125;</span><br><span class="line">        ]</span><br><span class="line">&#125;</span><br><span class="line">&gt; rs.initiate(config)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="string">"info"</span> : <span class="string">"Config now saved locally.  Should come online in about a minute."</span>,</span><br><span class="line">        <span class="string">"ok"</span> : <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="启动三个配置服务节点Configsvr"><a href="#启动三个配置服务节点Configsvr" class="headerlink" title="启动三个配置服务节点Configsvr"></a>启动三个配置服务节点Configsvr</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">D:</span>\mongodb\bin&gt;mongod.exe --configsvr --logpath <span class="string">d:</span><span class="regexp">/mongodb/</span>log<span class="regexp">/configsvr/</span>r0.log --logappend --dbpath <span class="string">d:</span><span class="regexp">/mongodb/</span>data<span class="regexp">/configsvr/</span>r0 --port <span class="number">30000</span></span><br></pre></td></tr></table></figure>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">D:</span>\mongodb\bin&gt;mongod.exe --configsvr --logpath <span class="string">d:</span><span class="regexp">/mongodb/</span>log<span class="regexp">/configsvr/</span>r1.log --logappend --dbpath <span class="string">d:</span><span class="regexp">/mongodb/</span>data<span class="regexp">/configsvr/</span>r1 --port <span class="number">30001</span></span><br></pre></td></tr></table></figure>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">D:</span>\mongodb\bin&gt;mongod.exe --configsvr --logpath <span class="string">d:</span><span class="regexp">/mongodb/</span>log<span class="regexp">/configsvr/</span>r2.log --logappend --dbpath <span class="string">d:</span><span class="regexp">/mongodb/</span>data<span class="regexp">/configsvr/</span>r2 --port <span class="number">30002</span></span><br></pre></td></tr></table></figure>
<h2 id="启动路由节点mongos"><a href="#启动路由节点mongos" class="headerlink" title="启动路由节点mongos"></a>启动路由节点mongos</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\mongodb\bin&gt;mongos.exe --configdb <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">30000</span>,<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">30001</span>,<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">30002</span> --logpath d:/mongodb/<span class="built_in">log</span>/mongos.<span class="built_in">log</span> --logappend --port <span class="number">40000</span></span><br></pre></td></tr></table></figure>
<h2 id="配置分片"><a href="#配置分片" class="headerlink" title="配置分片"></a>配置分片</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">D:\mongodb\bin&gt;mongo <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">40000</span>/admin</span><br><span class="line">MongoDB shell version: <span class="number">2.6</span><span class="number">.5</span></span><br><span class="line">connecting to: <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">40000</span>/admin</span><br><span class="line">mongos&gt; db.runCommand(&#123;addshard:<span class="string">"shard1/127.0.0.1:10000,127.0.0.1:10001,127.0.0.1:10002"</span>&#125;)</span><br><span class="line">&#123; <span class="string">"shardAdded"</span> : <span class="string">"shard1"</span>, <span class="string">"ok"</span> : <span class="number">1</span> &#125;</span><br><span class="line">mongos&gt; db.runCommand(&#123;addshard:<span class="string">"shard2/127.0.0.1:20000,127.0.0.1:20001,127.0.0.1:20002"</span>&#125;)</span><br><span class="line">&#123; <span class="string">"shardAdded"</span> : <span class="string">"shard2"</span>, <span class="string">"ok"</span> : <span class="number">1</span> &#125;</span><br><span class="line">mongos&gt; printShardingStatus()</span><br><span class="line">--- Sharding Status ---</span><br><span class="line">  sharding version: &#123;</span><br><span class="line">        <span class="string">"_id"</span> : <span class="number">1</span>,</span><br><span class="line">        <span class="string">"version"</span> : <span class="number">4</span>,</span><br><span class="line">        <span class="string">"minCompatibleVersion"</span> : <span class="number">4</span>,</span><br><span class="line">        <span class="string">"currentVersion"</span> : <span class="number">5</span>,</span><br><span class="line">        <span class="string">"clusterId"</span> : ObjectId(<span class="string">"563af622785bc1d504c2393c"</span>)</span><br><span class="line">&#125;</span><br><span class="line">  shards:</span><br><span class="line">        &#123;  <span class="string">"_id"</span> : <span class="string">"shard1"</span>,  <span class="string">"host"</span> : <span class="string">"shard1/127.0.0.1:10000,127.0.0.1:10001,127.0.0.1:10002"</span> &#125;</span><br><span class="line">        &#123;  <span class="string">"_id"</span> : <span class="string">"shard2"</span>,  <span class="string">"host"</span> : <span class="string">"shard2/127.0.0.1:20000,127.0.0.1:20001,127.0.0.1:20002"</span> &#125;</span><br><span class="line">  databases:</span><br><span class="line">        &#123;  <span class="string">"_id"</span> : <span class="string">"admin"</span>,  <span class="string">"partitioned"</span> : <span class="literal">false</span>,  <span class="string">"primary"</span> : <span class="string">"config"</span> &#125;</span><br></pre></td></tr></table></figure>
<p><strong>对数据库启用分片</strong><br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mongos&gt; db.runCommand(&#123;<span class="string">"enablesharding"</span>:<span class="string">"sharding"</span>&#125;)</span><br><span class="line">&#123; <span class="string">"ok"</span> : <span class="number">1</span> &#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>对数据库下面的表，启用分片–按照’_id’列进行分片</strong><br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mongos&gt; db.runCommand(&#123;<span class="string">shardcollection:</span> <span class="string">"sharding.testing"</span>, <span class="string">key:</span> &#123;<span class="string">_id:</span><span class="number">1</span>&#125;&#125;)</span><br><span class="line">&#123; <span class="string">"collectionsharded"</span> : <span class="string">"sharding.testing"</span>, <span class="string">"ok"</span> : <span class="number">1</span> &#125;</span><br></pre></td></tr></table></figure></p>
<p>配置到这里，集群搭建完毕了！真是不容易啊！！！</p>
<h1 id="配置验证"><a href="#配置验证" class="headerlink" title="配置验证"></a>配置验证</h1><p>我们来验证下配置的情况，添加10000条数据到数据库中。<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">D</span>:\mongodb\bin&gt;mongo 127.1.1.1:40000/admin</span><br><span class="line">MongoDB <span class="keyword">shell</span> <span class="keyword">version</span>: 2.6.5</span><br><span class="line">connecting to: 127.1.1.1:10000/admin</span><br><span class="line">mongos&gt; <span class="keyword">use</span> sharding</span><br><span class="line">switched to <span class="keyword">db</span> sharding</span><br><span class="line">mongos&gt; <span class="keyword">for</span>(<span class="keyword">var</span> i = 1; i&lt;=10000; i++) <span class="keyword">db</span>.testing.<span class="keyword">save</span>( &#123;name: 'sharding' + i&#125;)</span><br><span class="line">WriteResult(&#123; <span class="string">"nInserted"</span> : 1 &#125;)</span><br></pre></td></tr></table></figure></p>
<p>查看分片状态(我没有限制chunk大小，数据都存在了Shard2中)<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">mongos&gt; use sharding</span><br><span class="line">switched to db sharding</span><br><span class="line">mongos&gt; db.testing.stats()</span><br><span class="line">&#123;</span><br><span class="line">        <span class="string">"sharded"</span> : <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"systemFlags"</span> : <span class="number">1</span>,</span><br><span class="line">        <span class="string">"userFlags"</span> : <span class="number">1</span>,</span><br><span class="line">        <span class="string">"ns"</span> : <span class="string">"sharding.testing"</span>,</span><br><span class="line">        <span class="string">"count"</span> : <span class="number">10000</span>,</span><br><span class="line">        <span class="string">"numExtents"</span> : <span class="number">8</span>,</span><br><span class="line">        <span class="string">"size"</span> : <span class="number">480048</span>,</span><br><span class="line">        <span class="string">"storageSize"</span> : <span class="number">1392640</span>,</span><br><span class="line">        <span class="string">"totalIndexSize"</span> : <span class="number">343392</span>,</span><br><span class="line">        <span class="string">"indexSizes"</span> : &#123;</span><br><span class="line">                <span class="string">"_id_"</span> : <span class="number">343392</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"avgObjSize"</span> : <span class="number">48.0048</span>,</span><br><span class="line">        <span class="string">"nindexes"</span> : <span class="number">1</span>,</span><br><span class="line">        <span class="string">"nchunks"</span> : <span class="number">2</span>,</span><br><span class="line">        <span class="string">"shards"</span> : &#123;</span><br><span class="line">                <span class="string">"shard1"</span> : &#123;</span><br><span class="line">                        <span class="string">"ns"</span> : <span class="string">"sharding.testing"</span>,</span><br><span class="line">                        <span class="string">"count"</span> : <span class="number">0</span>,</span><br><span class="line">                        <span class="string">"size"</span> : <span class="number">0</span>,</span><br><span class="line">                        <span class="string">"storageSize"</span> : <span class="number">696320</span>,</span><br><span class="line">                        <span class="string">"numExtents"</span> : <span class="number">4</span>,</span><br><span class="line">                        <span class="string">"nindexes"</span> : <span class="number">1</span>,</span><br><span class="line">                        <span class="string">"lastExtentSize"</span> : <span class="number">524288</span>,</span><br><span class="line">                        <span class="string">"paddingFactor"</span> : <span class="number">1</span>,</span><br><span class="line">                        <span class="string">"systemFlags"</span> : <span class="number">1</span>,</span><br><span class="line">                        <span class="string">"userFlags"</span> : <span class="number">1</span>,</span><br><span class="line">                        <span class="string">"totalIndexSize"</span> : <span class="number">8176</span>,</span><br><span class="line">                        <span class="string">"indexSizes"</span> : &#123;</span><br><span class="line">                                <span class="string">"_id_"</span> : <span class="number">8176</span></span><br><span class="line">                        &#125;,</span><br><span class="line">                        <span class="string">"ok"</span> : <span class="number">1</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">"shard2"</span> : &#123;</span><br><span class="line">                        <span class="string">"ns"</span> : <span class="string">"sharding.testing"</span>,</span><br><span class="line">                        <span class="string">"count"</span> : <span class="number">10000</span>,</span><br><span class="line">                        <span class="string">"size"</span> : <span class="number">480048</span>,</span><br><span class="line">                        <span class="string">"avgObjSize"</span> : <span class="number">48</span>,</span><br><span class="line">                        <span class="string">"storageSize"</span> : <span class="number">696320</span>,</span><br><span class="line">                        <span class="string">"numExtents"</span> : <span class="number">4</span>,</span><br><span class="line">                        <span class="string">"nindexes"</span> : <span class="number">1</span>,</span><br><span class="line">                        <span class="string">"lastExtentSize"</span> : <span class="number">524288</span>,</span><br><span class="line">                        <span class="string">"paddingFactor"</span> : <span class="number">1</span>,</span><br><span class="line">                        <span class="string">"systemFlags"</span> : <span class="number">1</span>,</span><br><span class="line">                        <span class="string">"userFlags"</span> : <span class="number">1</span>,</span><br><span class="line">                        <span class="string">"totalIndexSize"</span> : <span class="number">335216</span>,</span><br><span class="line">                        <span class="string">"indexSizes"</span> : &#123;</span><br><span class="line">                                <span class="string">"_id_"</span> : <span class="number">335216</span></span><br><span class="line">                        &#125;,</span><br><span class="line">                        <span class="string">"ok"</span> : <span class="number">1</span></span><br><span class="line">                &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"ok"</span> : <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>配置完了会有“MongoDB的“not master and slaveok=false”错误。<br>因为SECONDARY是不允许读写的， 在写多读少的应用中，使用Replica Sets来实现读写分离。通过在连接时指定或者在主库指定slaveOk，由Secondary来分担读的压力，Primary只承担写操作。<br>对于replica set 中的secondary 节点默认是不可读的，我们要去从机上执行以下命令：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SECONDARY&gt; db.<span class="function"><span class="title">getMongo</span><span class="params">()</span></span>.<span class="function"><span class="title">setSlaveOk</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[秋游长城]]></title>
      <url>http://izheyi.com/2015/11/03/%E7%A7%8B%E6%B8%B8%E9%95%BF%E5%9F%8E/</url>
      <content type="html"><![CDATA[<p><img src="/images/shenghuo/changcheng_1.jpg" alt=""></p>
<p>N年前来过两次，每次都是在暑假的时候陪别人来的，回去都晒掉一层皮，说好的打死也不来了，本家弟弟过来，还是一块去了。<br><a id="more"></a><br>这是第三次来长城，人不是太多，好多老人和孩子，北城爬到了头。为嘛感触就有点多了？这难道是因为年纪大了：）</p>
<p>这次主要是陪弟弟来，给他看看东西，谈谈人生，如果能对他今后的发展有些许帮助，我就很满意了。做事先做人，要知道什么是自己想要的，平常心，开心就好！！！</p>
<p><img src="/images/shenghuo/changcheng_2.jpg" alt=""><br><img src="/images/shenghuo/changcheng_3.jpg" alt=""><br><img src="/images/shenghuo/changcheng_4.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Convert DataTable to Html format]]></title>
      <url>http://izheyi.com/2015/11/02/Convert-DataTable-to-Html-format/</url>
      <content type="html"><![CDATA[<p>Need to generate summary report:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">GenerateSummarylHtmlReport</span><span class="params">(DataTable table)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> rowCount = table.Rows.Count;</span><br><span class="line">	<span class="keyword">int</span> colCount = table.Columns.Count;</span><br><span class="line">	<span class="built_in">string</span> summaryReport = <span class="string">" &lt;html&gt;"</span>;</span><br><span class="line">	summaryReport += <span class="string">"&lt;h1 style='text-align:center'&gt; Test Report&lt;/h1&gt;"</span>;</span><br><span class="line">	summaryReport += <span class="string">"&lt;body&gt;"</span>;</span><br><span class="line">	summaryReport += <span class="string">"&lt;table border = '1' cellspacing='0' cellpadding='2' width='100%'&gt;"</span>;</span><br><span class="line">	summaryReport += <span class="string">"&lt;tr style='background-color:#cccccc'&gt;&lt;th&gt;Select&lt;/th&gt;&lt;th&gt;Page Name&lt;/th&gt;&lt;th&gt;Repository&lt;/th&gt;&lt;th&gt;Status&lt;/th&gt;"</span> +</span><br><span class="line">	<span class="string">"&lt;th&gt;Detail&lt;/th&gt;&lt;th&gt;Start Time&lt;/th&gt;&lt;th&gt;End Time&lt;/th&gt;&lt;/tr&gt;"</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; rowCount; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		summaryReport += <span class="string">"&lt;tr&gt;"</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; colCount; j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (table.Rows[i][j].ToString() == <span class="string">"Failed"</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				summaryReport += <span class="string">"&lt;td style='background-color:red'&gt;"</span> + table.Rows[i][j] + <span class="string">"&lt;/td&gt;"</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span> (table.Rows[i][j].ToString().IndexOf(<span class="string">"Passed:"</span>) != -<span class="number">1</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">string</span> pageName = table.Rows[i][<span class="number">1</span>].ToString();</span><br><span class="line">				<span class="built_in">string</span> reportTime = table.Rows[i][<span class="number">5</span>].ToString();</span><br><span class="line">				<span class="built_in">string</span> startDate = reportTime.Split(<span class="string">'-'</span>)[<span class="number">0</span>].Trim();</span><br><span class="line">				<span class="built_in">string</span> startTime = reportTime.Split(<span class="string">'-'</span>)[<span class="number">1</span>].Trim();</span><br><span class="line">				<span class="built_in">string</span> formatStartDate = startDate.Split(<span class="string">'/'</span>)[<span class="number">2</span>] + startDate.Split(<span class="string">'/'</span>)[<span class="number">0</span>] + startDate.Split(<span class="string">'/'</span>)[<span class="number">1</span>];</span><br><span class="line">				<span class="built_in">string</span> formatStartTime = startTime.Split(<span class="string">':'</span>)[<span class="number">0</span>] + startTime.Split(<span class="string">':'</span>)[<span class="number">1</span>] + startTime.Split(<span class="string">':'</span>)[<span class="number">2</span>];</span><br><span class="line">				summaryReport += <span class="string">"&lt;td&gt;&lt;a href='"</span> + formatStartDate + <span class="string">"/"</span> + pageName + formatStartTime + <span class="string">".html'&gt;"</span> + table.Rows[i][j] + <span class="string">"&lt;/td&gt;"</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> </span><br><span class="line">			&#123;</span><br><span class="line">				summaryReport += <span class="string">"&lt;td&gt;"</span> + table.Rows[i][j] + <span class="string">"&lt;/td&gt;"</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		summaryReport += <span class="string">"&lt;/tr&gt;"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	summaryReport += <span class="string">"&lt;/table&gt;"</span>;</span><br><span class="line">	summaryReport += <span class="string">"&lt;/body&gt;"</span>;</span><br><span class="line">	summaryReport += <span class="string">"&lt;/html&gt;"</span>;</span><br><span class="line">	<span class="keyword">return</span> summaryReport;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Convert csv to Html format]]></title>
      <url>http://izheyi.com/2015/11/02/Convert-csv-to-Html-format/</url>
      <content type="html"><![CDATA[<p>When design selenium object management tool, need to generate html report from csv file, implement as below:<br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> static <span class="built_in">string</span> ConvertCsvToHtml(<span class="built_in">string</span> csvText)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//split the CSV, assume no commas or line breaks in text</span></span><br><span class="line">    <span class="built_in">List</span>&lt;<span class="built_in">List</span>&lt;<span class="built_in">string</span>&gt;&gt; splitString = <span class="literal">new</span> <span class="built_in">List</span>&lt;<span class="built_in">List</span>&lt;<span class="built_in">string</span>&gt;&gt;();</span><br><span class="line">    <span class="built_in">List</span>&lt;<span class="built_in">string</span>&gt; lineSplit = csvText<span class="built_in">.</span>Split(<span class="string">'\n'</span>)<span class="built_in">.</span>ToList();</span><br><span class="line">    foreach (<span class="built_in">string</span> line <span class="keyword">in</span> lineSplit)</span><br><span class="line">    &#123;</span><br><span class="line">        splitString<span class="built_in">.</span>Add(line<span class="built_in">.</span>Split(<span class="string">','</span>)<span class="built_in">.</span>ToList());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//encode text safely, and create table</span></span><br><span class="line">    <span class="built_in">string</span> htmlReport = <span class="string">"&lt;html&gt;"</span>;</span><br><span class="line">    htmlReport += <span class="string">"&lt;h1 style='text-align:center'&gt; Test Report&lt;/h1&gt;"</span>;</span><br><span class="line">    htmlReport += <span class="string">"&lt;body&gt;"</span>;</span><br><span class="line">    htmlReport += <span class="string">"&lt;table border = '1' cellspacing='0' cellpadding='2' width='100%'&gt;"</span>;</span><br><span class="line">    foreach(<span class="built_in">List</span>&lt;<span class="built_in">string</span>&gt; splitLine <span class="keyword">in</span> splitString)</span><br><span class="line">    &#123;</span><br><span class="line">        htmlReport += <span class="string">"&lt;tr&gt;"</span>;</span><br><span class="line">        foreach(<span class="built_in">string</span> splitText <span class="keyword">in</span> splitLine)</span><br><span class="line">        &#123;</span><br><span class="line">            htmlReport += <span class="string">"&lt;td&gt;"</span> + WebUtility<span class="built_in">.</span>HtmlEncode(splitText) + <span class="string">"&lt;/td&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        htmlReport += <span class="string">"&lt;/tr&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    htmlReport += <span class="string">"&lt;/table&gt;"</span>;</span><br><span class="line">	htmlReport += <span class="string">"&lt;/body&gt;"</span>;</span><br><span class="line">    htmlReport += <span class="string">"&lt;/html&gt;"</span>;</span><br><span class="line">    <span class="keyword">return</span> htmlReport;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[c#操作Excel: get_range异常]]></title>
      <url>http://izheyi.com/2015/10/29/c-%E6%93%8D%E4%BD%9C-get-range-%E5%BC%82%E5%B8%B8/</url>
      <content type="html"><![CDATA[<p>The script is as below:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">range = worksheet.get_Range(excelAPP.Cells[<span class="number">1</span>, <span class="number">1</span>], excelAPP.Cells[<span class="number">1</span>, colIndex]);</span><br></pre></td></tr></table></figure></p>
<p>When i design this on VS 2010, it’s work fine, but i run on VS 2015, have an error:<br><em>Additional information: ‘object’ does not contain a definition for ‘get_Range’</em></p>
<p><strong>Solution:</strong><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">range = worksheet.Range[worksheet.Cells[<span class="number">1</span>, <span class="number">1</span>], worksheet.Cells[<span class="number">1</span>, colIndex]];</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Selenium Webdriver Object Repository(2)]]></title>
      <url>http://izheyi.com/2015/10/22/Selenium-Webdriver-Object-Repository-2/</url>
      <content type="html"><![CDATA[<p>In the previous blog, we introduced this article [Selenium Object Repository],  or the detail info, please see <a href="/2015/10/12/Selenium-Webdriver-Object-Repository-and-Object-Recognition/">Selenium Webdriver Object Repository and Object Recognition</a></p>
<p>We implement this tool with winform + c#, the below information just fyi, maybe not detail enough, include:<br><a id="more"></a></p>
<h1 id="Page-Management"><a href="#Page-Management" class="headerlink" title="Page Management"></a>Page Management</h1><p>We use a tree to manage the page, one page = one node, can also separate pages into test suite.<br><img src="/images/Selenium/object_repository_page_tree.jpg" alt="Page Tree"></p>
<h1 id="Object-Repository"><a href="#Object-Repository" class="headerlink" title="Object Repository"></a>Object Repository</h1><p>We deposit all object information with csv file.<br><img src="/images/Selenium/object_repository.jpg" alt="Object Repository"></p>
<p>Now, we have many locators, in the following time, we will change it, only have id, xpath, maybe linkText, discard the other locators.</p>
<h1 id="Add-Object"><a href="#Add-Object" class="headerlink" title="Add Object"></a>Add Object</h1><p>Click the page node, we can add object in this page, click ‘Add Object’ button, spy webelement, select its loctor, save with a certain name.<br><img src="/images/Selenium/object_repository_add_object.jpg" alt="Add Object"></p>
<h1 id="Generate-Code"><a href="#Generate-Code" class="headerlink" title="Generate Code"></a>Generate Code</h1><p>We can generate java selenium webdriver automatically, can save much time to design script.<br><img src="/images/Selenium/object_repository_generate_code.jpg" alt="Generate Code"></p>
<h1 id="Object-Highlight"><a href="#Object-Highlight" class="headerlink" title="Object Highlight"></a>Object Highlight</h1><p>We also can highlight one object, or check all objects in this page that we added in the repository.<br><img src="/images/Selenium/object_repository_highlight.jpg" alt="Hight"><br>Note:</p>
<ol>
<li>Need to ‘Start’ service before do highlight and check function.</li>
<li>Will set background to red if not find the element.</li>
<li>Now we need to do this job(Check All) manually, should be implement this automatically.</li>
</ol>
<p>This is our POC, our final thinking is that, for UI automation, we can separate UI and business function, for UI level, we can check page element and page navigation based on the object repository, only focus on UI.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[IEDriverServer Log配置和解析]]></title>
      <url>http://izheyi.com/2015/10/20/IEDriverServer-Log%E9%85%8D%E7%BD%AE%E5%92%8C%E8%A7%A3%E6%9E%90/</url>
      <content type="html"><![CDATA[<h1 id="获得Log"><a href="#获得Log" class="headerlink" title="获得Log"></a>获得Log</h1><p>对于Internet Explorer Driver，有一些很重要的System Properties，例如：<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* webdriver.ie.driver - <span class="operator">the</span> location <span class="operator">of</span> <span class="operator">the</span> IE driver.</span><br><span class="line">* webdriver.ie.driver.loglevel - <span class="operator">the</span> level <span class="keyword">at</span> which loging messages are output.</span><br><span class="line">* webdriver.ie.driver.logfile - full path <span class="operator">and</span> <span class="built_in">file</span> name <span class="operator">of</span> <span class="operator">the</span> <span class="built_in">log</span> <span class="built_in">file</span>.</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@BeforeMethod</span>(alwaysRun = <span class="keyword">true</span>)</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="function">WebDriver <span class="title">openBrowser</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span><br><span class="line">	</span>&#123;</span><br><span class="line">		<span class="keyword">int</span> browserType = GlobalSetting.browserType;</span><br><span class="line">		<span class="keyword">switch</span> (browserType)</span><br><span class="line">		&#123;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">			System.setProperty(<span class="string">"webdriver.ie.driver"</span>, <span class="string">"resource\\IEDriverServer.exe"</span>);</span><br><span class="line">			System.setProperty(<span class="string">"webdriver.ie.driver.logfile"</span>, <span class="string">"c:/bb.txt"</span>);</span><br><span class="line">			System.setProperty(<span class="string">"webdriver.ie.driver.loglevel"</span>, <span class="string">"TRACE"</span>);</span><br><span class="line">			</span><br><span class="line">			DesiredCapabilities ieCapabilities = DesiredCapabilities.internetExplorer();</span><br><span class="line">			ieCapabilities.setCapability(<span class="string">"ignoreZoomSetting"</span>, <span class="keyword">true</span>);</span><br><span class="line">			ieCapabilities.setCapability(InternetExplorerDriver.INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS,<span class="keyword">true</span>);</span><br><span class="line">			driver = <span class="keyword">new</span> InternetExplorerDriver(ieCapabilities);</span><br><span class="line">			Reporter.log(logTime + <span class="string">" Launch browser: IE."</span>);</span><br><span class="line">	</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> driver;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<p>其他地方无需再做任何配置和变动。<br>运行完测试之后，会在设定的C盘下生成bb.txt Log文件，内容如下：<br><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">I <span class="number">2015-10-20</span> <span class="number">10:04:59:25</span>8 server.cc(53) Starting WebDriver server on port: '12700' on host: ''</span><br><span class="line">T <span class="number">2015-10-20</span> <span class="number">10:04:59:25</span>9 server.cc(624) Entering Server<span class="number">::</span>PopulateCommandRepository</span><br><span class="line">T <span class="number">2015-10-20</span> <span class="number">10:04:59:25</span>9 IEServer.cpp(25) Entering IEServer<span class="number">::</span>IEServer</span><br><span class="line">T <span class="number">2015-10-20</span> <span class="number">10:04:59:25</span>9 server.cc(83) Entering Server<span class="number">::</span>Start</span><br><span class="line">D <span class="number">2015-10-20</span> <span class="number">10:04:59:25</span>9 server.cc(104) Mongoose ACL is -<span class="number">0.0.0.0</span>/0,+<span class="number">127.0.0.1</span></span><br><span class="line">T <span class="number">2015-10-20</span> <span class="number">10:04:59:87</span>8 server.cc(62) Entering Server<span class="number">::</span>OnHttpEvent</span><br><span class="line">T <span class="number">2015-10-20</span> <span class="number">10:04:59:87</span>8 server.cc(128) Entering Server<span class="number">::</span>ProcessRequest</span><br><span class="line">T <span class="number">2015-10-20</span> <span class="number">10:04:59:87</span>8 server.cc(137) Process request with: URI: /status HTTP verb: GET</span><br><span class="line">body: &#123;&#125;</span><br><span class="line">T <span class="number">2015-10-20</span> <span class="number">10:04:59:87</span>8 server.cc(230) Entering Server<span class="number">::D</span>ispatchCommand</span><br><span class="line">T <span class="number">2015-10-20</span> <span class="number">10:04:59:87</span>8 server.cc(530) Entering Server<span class="number">::</span>LookupCommand</span><br><span class="line">D <span class="number">2015-10-20</span> <span class="number">10:04:59:87</span>9 server.cc(239) Command: GET /status &#123;&#125;</span><br><span class="line">T <span class="number">2015-10-20</span> <span class="number">10:04:59:87</span>9 IEServer.cpp(43) Entering IEServer<span class="number">::</span>GetStatus</span><br><span class="line">T <span class="number">2015-10-20</span> <span class="number">10:04:59:87</span>9 response.cc(55) Entering Respons<span class="number">e::</span>SetSuccessResponse</span><br><span class="line">T <span class="number">2015-10-20</span> <span class="number">10:04:59:87</span>9 response.cc(61) Entering Respons<span class="number">e::</span>SetResponse</span><br><span class="line">T <span class="number">2015-10-20</span> <span class="number">10:04:59:87</span>9 response.cc(43) Entering Respons<span class="number">e::</span>Serialize</span><br><span class="line">D <span class="number">2015-10-20</span> <span class="number">10:04:59:87</span>9 server.cc(308) Response: &#123;"sessionId":"","status":0,"value":&#123;"build":&#123;"version":"<span class="number">2.42.0.0</span>"&#125;,"os":&#123;"arch":"x86","name":"windows","version":"<span class="number">6.1.7601</span>"&#125;&#125;&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="解析Log"><a href="#解析Log" class="headerlink" title="解析Log"></a>解析Log</h1><p>从上边的Log中我们可以看到，Log分4部分：</p>
<ol>
<li>类型<ul>
<li>I - Info</li>
<li>D - Debug</li>
<li>T - Trace</li>
<li>W - Warning</li>
</ul>
</li>
<li>时间</li>
<li>代码行数</li>
<li>日志信息<br>这里只是对Log文件的一些简单说明，知道每一部分是什么意思。对于详细的东东，driver的常用命令了，每一行是什么意思了，有兴趣的朋友自己去看吧。</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[QTP 11 supports running tests on on Minimized RDP(Remote Desktop) Session Windows]]></title>
      <url>http://izheyi.com/2015/10/20/QTP-11-supports-running-tests-on-on-Minimized-RDP-Remote-Desktop-Session-Windows/</url>
      <content type="html"><![CDATA[<p>Just in case your’re looking for that feature -  now it’s available  :</p>
<p>If you want to run QuickTest in a minimized RDP (remote desktop protocol) session, and you are using an RDP 6.0 or later client, you can enable it by setting a registry value on the <strong>local </strong>computer:</p>
<ol>
<li>Close all remote computer</li>
<li>If it does not exist, create the RemoteDesktop_SuppressWhenMinimized registry value (DWORD type) in one of the following registry paths on the remote computer:<br>HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client<br>or<br>HKEY_LOCAL_MACHINE\Software\Microsoft\Terminal Server Client</li>
<li>Set data value To 2</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[再谈QTP数据驱动]]></title>
      <url>http://izheyi.com/2015/10/19/%E5%86%8D%E8%B0%88QTP%E6%95%B0%E6%8D%AE%E9%A9%B1%E5%8A%A8/</url>
      <content type="html"><![CDATA[<p>QTP本身有就有很好的DataTable功能，所以我们可以利用以下方式来实现数据驱动：</p>
<h1 id="利用脚本从excel导入Data-Table"><a href="#利用脚本从excel导入Data-Table" class="headerlink" title="利用脚本从excel导入Data Table"></a>利用脚本从excel导入Data Table</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">xls_Sheet_Index = <span class="number">1</span></span><br><span class="line">DataTable_Sheet_Index = <span class="number">1</span></span><br><span class="line">Set qtapp=<span class="function"><span class="title">CreateObject</span><span class="params">(<span class="string">"quicktest.application"</span>)</span></span> </span><br><span class="line">qtapp<span class="class">.Launch</span> </span><br><span class="line">qtapp.Visible=True </span><br><span class="line">qtapp<span class="class">.Open</span> <span class="string">"d:\iquicktest"</span></span><br><span class="line">qtapp<span class="class">.Test</span><span class="class">.DataTable</span><span class="class">.ImportSheet</span> <span class="string">"d:\1.xls"</span>,<span class="number">1</span>,<span class="number">1</span></span><br><span class="line">Set qtapp=Nothing</span><br></pre></td></tr></table></figure>
<p>这里有一个问题就是QTP11及之前的版本不能支持Excel2007及发后的版本，如果我们用QTP11来做自动化，本身现在大家都是用的Excel2010，或者之后的版本，就会很麻烦。<br><a id="more"></a></p>
<h1 id="利用ADO打造Excel数据库"><a href="#利用ADO打造Excel数据库" class="headerlink" title="利用ADO打造Excel数据库"></a>利用ADO打造Excel数据库</h1><p>我们会有两种情况的划分：</p>
<h2 id="数据字典的实现"><a href="#数据字典的实现" class="headerlink" title="数据字典的实现"></a>数据字典的实现</h2><p>每个用例对应的数据彻底分离出去，输入的数据，甚至于要选择的导航（因为有些导航的文字可能会发生变化）等等。。。这种情形下，每个用例脚本只需要一行数据就可以了,我们可以利用数据字典来实现高效应用：</p>
<ul>
<li>脚本：</li>
</ul>
<figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Function</span> GetRowDataFromExcel( myXlsFile, mySheet, iRow )</span><br><span class="line"></span><br><span class="line">	<span class="keyword">Dim</span> objExcel, objRS, oDict, j</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">Const</span> adOpenForwardOnly = <span class="number">0</span></span><br><span class="line">	<span class="keyword">Const</span> adOpenKeyset      = <span class="number">1</span></span><br><span class="line">	<span class="keyword">Const</span> adOpenDynamic     = <span class="number">2</span></span><br><span class="line">	<span class="keyword">Const</span> adOpenStatic      = <span class="number">3</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">' Open the object for the Excel file</span></span><br><span class="line">	<span class="keyword">Set</span> objExcel = CreateObject( <span class="string">"ADODB.Connection"</span> )</span><br><span class="line">	<span class="comment">' IMEX=1 includes cell content of any format; </span></span><br><span class="line">	<span class="comment">' Connection string updated to open Excel 2007 (.xslx) files.</span></span><br><span class="line">	objExcel.Open <span class="string">"Provider=Microsoft.ACE.OLEDB.12.0;Data Source="</span> &amp; _</span><br><span class="line">	myXlsFile &amp; <span class="string">";Extended Properties=""Excel 12.0;IMEX=1;HDR=YES;"";"</span></span><br><span class="line">	</span><br><span class="line">	<span class="keyword">Set</span> objRS = CreateObject( <span class="string">"ADODB.Recordset"</span> )</span><br><span class="line">	objRS.Open <span class="string">"Select * from ["</span> &amp; mySheet &amp; <span class="string">"$]"</span>, objExcel, adOpenStatic</span><br><span class="line">	</span><br><span class="line">	<span class="comment">'Move RecordSet to the target Row</span></span><br><span class="line">	<span class="keyword">For</span> j = <span class="number">1</span> <span class="keyword">To</span> iRow -<span class="number">1</span> </span><br><span class="line">		objRS.MoveNext</span><br><span class="line">	<span class="keyword">Next</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">'Use a For..Loop to Build Scripting.Dictionary</span></span><br><span class="line">	<span class="keyword">Set</span> oDict = CreateObject(<span class="string">"Scripting.Dictionary"</span>)</span><br><span class="line">	<span class="keyword">For</span> j = <span class="number">0</span> <span class="keyword">To</span> objRS.Fields.Count - <span class="number">1</span></span><br><span class="line">		oDict.Add <span class="string">""</span> &amp; objRS(j).Name, <span class="string">""</span> &amp; objRS.Fields(j).Value	</span><br><span class="line">	<span class="keyword">Next</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">' Close the file and release the objects</span></span><br><span class="line">	objRS.Close</span><br><span class="line">	objExcel.Close</span><br><span class="line">	<span class="keyword">Set</span> objRS    = <span class="literal">Nothing</span></span><br><span class="line">	<span class="keyword">Set</span> objExcel = <span class="literal">Nothing</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">' Return the results</span></span><br><span class="line">	<span class="keyword">Set</span> GetRowDataFromExcel = oDict</span><br><span class="line">	<span class="keyword">Set</span> oDict = <span class="literal">Nothing</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure>
<ul>
<li>调用：</li>
</ul>
<figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">'获得从‘1.xlsx’文件中的‘Sheet1’的第3行数据</span></span><br><span class="line"><span class="keyword">Set</span> arrSheet = GetRowDataFromExcel( <span class="string">"c:\1.xlsx"</span>, <span class="string">"Sheet1"</span>,  <span class="number">3</span>)</span><br><span class="line">msgbox arrSheet(<span class="string">"userName"</span>) &amp; <span class="string">"_"</span> &amp; arrSheet(<span class="string">"Password"</span>)</span><br></pre></td></tr></table></figure>
<h2 id="数组的实现"><a href="#数组的实现" class="headerlink" title="数组的实现"></a>数组的实现</h2><p>一个用例实现多组数据的应用，例如：登录功能，用户名和密码的各种组合问题。</p>
<ul>
<li>脚本：</li>
</ul>
<figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Function</span> ReadExcel( myXlsFile, mySheet, my1stCell, myLastCell, blnHeader )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">Dim</span> arrData( ), i, j</span><br><span class="line">    <span class="keyword">Dim</span> objExcel, objRS</span><br><span class="line">    <span class="keyword">Dim</span> strHeader, strRange</span><br><span class="line"></span><br><span class="line">    <span class="keyword">Const</span> adOpenForwardOnly = <span class="number">0</span></span><br><span class="line">    <span class="keyword">Const</span> adOpenKeyset      = <span class="number">1</span></span><br><span class="line">    <span class="keyword">Const</span> adOpenDynamic     = <span class="number">2</span></span><br><span class="line">    <span class="keyword">Const</span> adOpenStatic      = <span class="number">3</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">' Define header parameter string for Excel object</span></span><br><span class="line">    <span class="keyword">If</span> blnHeader <span class="keyword">Then</span></span><br><span class="line">        strHeader = <span class="string">"HDR=YES;"</span></span><br><span class="line">    <span class="keyword">Else</span></span><br><span class="line">        strHeader = <span class="string">"HDR=NO;"</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">' Open the object for the Excel file</span></span><br><span class="line">    <span class="keyword">Set</span> objExcel = CreateObject( <span class="string">"ADODB.Connection"</span> )</span><br><span class="line">    <span class="comment">' IMEX=1 includes cell content of any format; tip by Thomas Willig.</span></span><br><span class="line">    <span class="comment">' Connection string updated by Marcel Ni?nkemper to open Excel 2007 (.xslx) files.</span></span><br><span class="line">    objExcel.Open <span class="string">"Provider=Microsoft.ACE.OLEDB.12.0;Data Source="</span> &amp; _</span><br><span class="line">                  myXlsFile &amp; <span class="string">";Extended Properties=""Excel 12.0;IMEX=1;"</span> &amp; _</span><br><span class="line">                  strHeader &amp; <span class="string">""""</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">' Open a recordset object for the sheet and range</span></span><br><span class="line">    <span class="keyword">Set</span> objRS = CreateObject( <span class="string">"ADODB.Recordset"</span> )</span><br><span class="line">    strRange = mySheet &amp; <span class="string">"$"</span> &amp; my1stCell &amp; <span class="string">":"</span> &amp; myLastCell</span><br><span class="line">    objRS.Open <span class="string">"Select * from ["</span> &amp; strRange &amp; <span class="string">"]"</span>, objExcel, adOpenStatic</span><br><span class="line"></span><br><span class="line">    <span class="comment">' Read the data from the Excel sheet</span></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">Do</span> <span class="keyword">Until</span> objRS.EOF</span><br><span class="line">        <span class="comment">' Stop reading when an empty row is encountered in the Excel sheet</span></span><br><span class="line">        <span class="keyword">If</span> IsNull( objRS.Fields(<span class="number">0</span>).Value ) <span class="keyword">Or</span> Trim( objRS.Fields(<span class="number">0</span>).Value ) = <span class="string">""</span> <span class="keyword">Then</span> <span class="keyword">Exit</span> <span class="keyword">Do</span></span><br><span class="line">        <span class="comment">' Add a new row to the output array</span></span><br><span class="line">        <span class="keyword">ReDim</span> <span class="keyword">Preserve</span> arrData( objRS.Fields.Count - <span class="number">1</span>, i )</span><br><span class="line">        <span class="comment">' Copy the Excel sheet's row values to the array "row"</span></span><br><span class="line">        <span class="comment">' IsNull test credits: Adriaan Westra</span></span><br><span class="line">        <span class="keyword">For</span> j = <span class="number">0</span> <span class="keyword">To</span> objRS.Fields.Count - <span class="number">1</span></span><br><span class="line">            <span class="keyword">If</span> IsNull( objRS.Fields(j).Value ) <span class="keyword">Then</span></span><br><span class="line">                arrData( j, i ) = <span class="string">""</span></span><br><span class="line">            <span class="keyword">Else</span></span><br><span class="line">                arrData( j, i ) = Trim( objRS.Fields(j).Value )</span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">        <span class="keyword">Next</span></span><br><span class="line">        <span class="comment">' Move to the next row</span></span><br><span class="line">        objRS.MoveNext</span><br><span class="line">        <span class="comment">' Increment the array "row" number</span></span><br><span class="line">        i = i + <span class="number">1</span></span><br><span class="line">    <span class="keyword">Loop</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">' Close the file and release the objects</span></span><br><span class="line">    objRS.Close</span><br><span class="line">    objExcel.Close</span><br><span class="line">    <span class="keyword">Set</span> objRS    = <span class="literal">Nothing</span></span><br><span class="line">    <span class="keyword">Set</span> objExcel = <span class="literal">Nothing</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">' Return the results</span></span><br><span class="line">    ReadExcel = arrData</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure>
<ul>
<li>调用：</li>
</ul>
<figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">'获得从‘1.xlsx’文件中的‘Sheet1’的‘A1：B6’数据</span></span><br><span class="line">arrSheet = ReadExcel( <span class="string">"c:\1.xlsx"</span>, <span class="string">"Sheet1"</span>, <span class="string">"A1"</span>, <span class="string">"B6"</span>, <span class="literal">True</span> )</span><br><span class="line"><span class="keyword">For</span> intCount = <span class="number">0</span> <span class="keyword">To</span> <span class="built_in">UBound</span>( arrSheet, <span class="number">2</span> )</span><br><span class="line">    <span class="built_in">msgbox</span> arrSheet( <span class="number">0</span>, intCount ) &amp; vbTab &amp; arrSheet( <span class="number">1</span>, intCount )</span><br><span class="line"><span class="keyword">Next</span></span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[vbs把数组导到Excel中]]></title>
      <url>http://izheyi.com/2015/10/13/vbs%E6%8A%8A%E6%95%B0%E7%BB%84%E5%AF%BC%E5%88%B0Excel%E4%B8%AD/</url>
      <content type="html"><![CDATA[<p>最近做框架的时候，遇到一个问题，要把Array中的数据导出到Excel中去。</p>
<h1 id="Implementation"><a href="#Implementation" class="headerlink" title="Implementation"></a>Implementation</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">dim <span class="function"><span class="title">arr</span><span class="params">(<span class="number">10</span>,<span class="number">5</span>)</span></span>  </span><br><span class="line"><span class="keyword">for</span> i=<span class="number">0</span> to <span class="number">10</span>  </span><br><span class="line">	<span class="keyword">for</span> j = <span class="number">0</span> to <span class="number">5</span> </span><br><span class="line">	<span class="function"><span class="title">arr</span><span class="params">(i,j)</span></span>=i*j  </span><br><span class="line">	next  </span><br><span class="line">next  </span><br><span class="line"></span><br><span class="line">set excel = <span class="function"><span class="title">CreateObject</span><span class="params">(<span class="string">"Excel.Application"</span>)</span></span>  </span><br><span class="line">excel<span class="class">.Visible</span> = true   </span><br><span class="line">set oWB = excel<span class="class">.Workbooks</span><span class="class">.Add</span>  </span><br><span class="line">set oSheet = oWB<span class="class">.ActiveSheet</span>  </span><br><span class="line">set xlsheet = oWB.<span class="function"><span class="title">Worksheets</span><span class="params">(<span class="number">1</span>)</span></span>  </span><br><span class="line"><span class="keyword">for</span> i=oWB<span class="class">.Worksheets</span><span class="class">.count</span> to <span class="number">2</span> step -<span class="number">1</span>  </span><br><span class="line">	oWB.<span class="function"><span class="title">Worksheets</span><span class="params">(i)</span></span>.<span class="function"><span class="title">Delete</span><span class="params">()</span></span>  </span><br><span class="line">next  </span><br><span class="line">oSheet.<span class="function"><span class="title">Range</span><span class="params">(<span class="string">"a1"</span>)</span></span>.<span class="function"><span class="title">resize</span><span class="params">(<span class="number">10</span>,<span class="number">5</span>)</span></span>=arr  </span><br><span class="line">set excel=nothing</span><br></pre></td></tr></table></figure>
<h1 id="Result"><a href="#Result" class="headerlink" title="Result"></a>Result</h1><p><img src="/images/VBS/Array_To_Excel.jpg" alt="Execute Result"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Selenium Webdriver Object Repository and Object Recognition]]></title>
      <url>http://izheyi.com/2015/10/12/Selenium-Webdriver-Object-Repository-and-Object-Recognition/</url>
      <content type="html"><![CDATA[<p>In QTP, there is a concept called “Object Repository”. All the objects are added to Object Repository and the objects are used in the test. If there are any changes in the application then we need to update only Object Repository. But in selenium WebDriver, There is no any built-in facility to create object repository. So maintenance of page objects(Page element locators) becomes very hard If you will write all objects of page on code level. </p>
<a id="more"></a>
<p>Yes, we can use the below ways to create selenium WebDriver object repository:</p>
<h1 id="Using-properties-file"><a href="#Using-properties-file" class="headerlink" title="Using properties file"></a>Using properties file</h1><p>A basic object repository can be implemented as a collection of key-value pairs, with the key being a logical name identifying the object and the value containing unique objects properties used to identify the object on a screen.</p>
<h1 id="Static-Variables"><a href="#Static-Variables" class="headerlink" title="Static Variables"></a>Static Variables</h1><p>Instead of using locators directly in the tests we are going to use the locators in the form of static variables. Hence, there is no need to make any change to test cases, the only place where we need to make change is the “Class” containing static variable.</p>
<p>In QTP we can add object easily just using mouse, but in selenium WebDriver, it’s hard, yes, we can use the following ways to identify object:</p>
<ul>
<li>Selenium IDE</li>
<li>FireFox – firebug, firepath</li>
<li>Chrome Developer Tool</li>
<li>IE Developer Tool</li>
</ul>
<p>But it’s hard and time consuming, especially for newer in selenium automation, e.g., they need to know how to generate relative xpath although they don’t know what is xpath.</p>
<p>So now we have a solution, create a new little tool help us with object recognition, it’s very easy for any people, even they don’t know any relevant skills.</p>
<ol>
<li>Open the page you want to spy;</li>
<li>Mouse over the element you want to spy;</li>
<li>The relevant locator will display automatically;</li>
<li>Right-click, copy any locator you need</li>
</ol>
<p><img src="/images/Selenium/Spy_Element.jpg" alt="Spy WebElement"><br><img src="/images/Selenium/Copy_Element.jpg" alt="Copy Locator"></p>
<p>This is our first implementation, maybe in the following time, we can create a ‘real’ object repository(not belongs to the automation project):) we can add object just as QTP does, then we can use it generate selenium ‘Page Object’ script automatically. and maybe more and more…..</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[再看北京自然博物馆]]></title>
      <url>http://izheyi.com/2015/10/11/%E5%86%8D%E7%9C%8B%E5%8C%97%E4%BA%AC%E8%87%AA%E7%84%B6%E5%8D%9A%E7%89%A9%E9%A6%86/</url>
      <content type="html"><![CDATA[<p>国庆期间都没预约到票，就预约到了这个周天。<br>去年的时候来过一次，感觉很不错，再次来，好像少了一些第一次来的那种新鲜感。</p>
<p><img src="/images/izheyi/2015/ziranbowuguan_0.jpg" alt=""><br><img src="/images/izheyi/2015/ziranbowuguan_1.jpg" alt=""><br><img src="/images/izheyi/2015/ziranbowuguan_2.jpg" alt=""><br><img src="/images/izheyi/2015/ziranbowuguan_3.jpg" alt=""><br><img src="/images/izheyi/2015/ziranbowuguan_4.jpg" alt=""><br><img src="/images/izheyi/2015/ziranbowuguan_5.jpg" alt=""><br><img src="/images/izheyi/2015/ziranbowuguan_6.jpg" alt=""><br><img src="/images/izheyi/2015/ziranbowuguan_8.jpg" alt=""><br><img src="/images/izheyi/2015/ziranbowuguan_9.jpg" alt=""><br><img src="/images/izheyi/2015/ziranbowuguan_10.jpg" alt=""><br><img src="/images/izheyi/2015/ziranbowuguan_11.jpg" alt=""><br><img src="/images/izheyi/2015/ziranbowuguan_12.jpg" alt=""><br><img src="/images/izheyi/2015/ziranbowuguan_13.jpg" alt=""><br><img src="/images/izheyi/2015/ziranbowuguan_14.jpg" alt=""><br><img src="/images/izheyi/2015/ziranbowuguan_15.jpg" alt=""><br><img src="/images/izheyi/2015/ziranbowuguan_16.jpg" alt=""><br><img src="/images/izheyi/2015/ziranbowuguan_17.jpg" alt=""><br><img src="/images/izheyi/2015/ziranbowuguan_18.jpg" alt=""><br><img src="/images/izheyi/2015/ziranbowuguan_19.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[建国66周年，逛天安门]]></title>
      <url>http://izheyi.com/2015/10/06/%E5%BB%BA%E5%9B%BD67%E5%91%A8%E5%B9%B4%EF%BC%8C%E9%80%9B%E5%A4%A9%E5%AE%89%E9%97%A8/</url>
      <content type="html"><![CDATA[<p>中国人民抗日战争暨世界反法西斯战争胜利70周年阅兵后，本来说是要去天安门的，不巧那天刚走到颐和园就下雨了，带着闺女就去中关村图书城看书去了。</p>
<a id="more"></a>
<p>今天妈妈去学习了，我们也没啥事做，就来天安门看一看，感受最深的是中国人真多呀！！中间我们还去了钱币博物馆，好多钱啊，还有摇钱树：）</p>
<p>就逛了一圈，走了8公里！！！一出地铁就限流了，想去广场得转到西交民巷走过去，进了广场，闺女又想去城楼，好不容易走过去了，才发现是单行线，有去无回啊，就只能从中山公园里边来到了长安街上，更受不了的，闺女说想去前门吃东西，我们就又原路从西交民巷走了过去。<br>说这某些个人还不相信，较真一下，直接上图：<br><img src="/images/izheyi/2015/Tiananmen_0.jpg" alt=""></p>
<p>总体玩的还是很开心，你在爸爸的脖子上坐着是爽了，爹地容易么:)<br><img src="/images/izheyi/2015/Tiananmen_1.jpg" alt=""><br><img src="/images/izheyi/2015/Tiananmen_2.jpg" alt=""><br><img src="/images/izheyi/2015/Tiananmen_3.jpg" alt=""><br><img src="/images/izheyi/2015/Tiananmen_4.jpg" alt=""><br><img src="/images/izheyi/2015/Tiananmen_5.jpg" alt=""><br><img src="/images/izheyi/2015/Tiananmen_6.jpg" alt=""><br><img src="/images/izheyi/2015/Tiananmen_7.jpg" alt=""><br><img src="/images/izheyi/2015/Tiananmen_8.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[2015国庆香山游]]></title>
      <url>http://izheyi.com/2015/10/01/2015%E5%9B%BD%E5%BA%86%E9%A6%99%E5%B1%B1%E6%B8%B8/</url>
      <content type="html"><![CDATA[<p>今天风是可不小，在山顶都差点没把人给吹走，本来还说坐缆车下来呢，谁知缆车也停了。不过玩的很开心。<br><a id="more"></a><br><img src="/images/izheyi/2015/xiangshan_01.jpg" alt=""><br><img src="/images/izheyi/2015/xiangshan_02.jpg" alt=""><br><img src="/images/izheyi/2015/xiangshan_03.jpg" alt=""><br><img src="/images/izheyi/2015/xiangshan_04.jpg" alt=""><br><img src="/images/izheyi/2015/xiangshan_05.jpg" alt=""><br><img src="/images/izheyi/2015/xiangshan_06.jpg" alt=""><br><img src="/images/izheyi/2015/xiangshan_07.jpg" alt=""><br><img src="/images/izheyi/2015/xiangshan_08.jpg" alt=""><br><img src="/images/izheyi/2015/xiangshan_09.jpg" alt=""><br><img src="/images/izheyi/2015/xiangshan_10.jpg" alt=""><br><img src="/images/izheyi/2015/xiangshan_11.jpg" alt=""><br><img src="/images/izheyi/2015/xiangshan_12.jpg" alt=""><br><img src="/images/izheyi/2015/xiangshan_13.jpg" alt=""><br><img src="/images/izheyi/2015/xiangshan_14.jpg" alt=""><br><img src="/images/izheyi/2015/xiangshan_15.jpg" alt=""><br><img src="/images/izheyi/2015/xiangshan_16.jpg" alt=""><br><img src="/images/izheyi/2015/xiangshan_17.jpg" alt=""><br><img src="/images/izheyi/2015/xiangshan_18.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Dad's birthday]]></title>
      <url>http://izheyi.com/2015/09/19/Dad-s-birthday/</url>
      <content type="html"><![CDATA[<p>在爸爸的记忆中，这可能是爸爸收到的第一份生日卡片，谢谢妈妈和小丁的心意，爸爸也爱你们^_^<img src="/images/izheyi/2015/dbirthday_0.jpg" alt=""></p>
<p><img src="/images/izheyi/2015/dbirthday_1.jpg" alt=""><br><img src="/images/izheyi/2015/dbirthday_2.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[blog 说明]]></title>
      <url>http://izheyi.com/2015/05/01/blog-%E8%AF%B4%E6%98%8E/</url>
      <content type="html"><![CDATA[<h1 id="Why-have-this-blog"><a href="#Why-have-this-blog" class="headerlink" title="Why have this blog"></a>Why have this blog</h1><p>本人略懒，忘性很大，一直以来都想自己弄个blog记录一下自己学习的笔记和技术参考。</p>
<a id="more"></a>
<h2 id="1st"><a href="#1st" class="headerlink" title="1st"></a>1st</h2><p>之前一直在Baidu空间里写，现在空间没了，转到百度文章里去了，很多小伙伴们会问我一些问题，正好最近也在看静态博客Hexo和Github Pages，免费又好用，很好很强大:)<br>以后的技术笔记就在这了。</p>
<h2 id="2nd"><a href="#2nd" class="headerlink" title="2nd"></a>2nd</h2><p>“i just wanna live while i am alive”，过好自己的生活，知道什么是自己想要的生活。想做一下对生活、孩子和家庭的简单记录，或许老了之后拿出来怀念一下，兴许一高兴可以再多活几日:)</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Exporting UFT 12 results into html throws the error about 'IDS_BC']]></title>
      <url>http://izheyi.com/2015/01/26/Exporting-UFT-12-results-into-html-throws-the-error-about-IDS-BC/</url>
      <content type="html"><![CDATA[<p>Exporting UFT 12 results into html throws the error “A reference to variable or parameter ‘IDS_BC’ cannot be resolved.” </p>
<p>I have recently upgraded from QTP 11 to UFT 12. The vbscript I used for QTP 11 worked great, but it is not running with UFT 12.<br><a id="more"></a></p>
<h3 id="Popup-the-below-error-msg"><a href="#Popup-the-below-error-msg" class="headerlink" title="Popup the below error msg:"></a>Popup the below error msg:</h3><p><img src="/images/QTP/uft_report_error.jpg" alt="Export Error"></p>
<h3 id="Export-report-code"><a href="#Export-report-code" class="headerlink" title="Export report code:"></a>Export report code:</h3><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Public</span> <span class="keyword">Function</span> ApplyXSL(<span class="keyword">ByVal</span> inputXML, <span class="keyword">ByVal</span> inputXSL, <span class="keyword">ByVal</span> outputFile)</span><br><span class="line">	sXMLLib = <span class="string">"MSXML.DOMDocument"</span></span><br><span class="line">	<span class="keyword">Set</span> xmlDoc = <span class="built_in">CreateObject</span>(sXMLLib)</span><br><span class="line">	<span class="keyword">Set</span> xslDoc = <span class="built_in">CreateObject</span>(sXMLLib)</span><br><span class="line"></span><br><span class="line">	xmlDoc.async = <span class="literal">False</span></span><br><span class="line">	xslDoc.async = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">	xslDoc.load inputXSL</span><br><span class="line">	xmlDoc.load inputXML</span><br><span class="line"></span><br><span class="line">	outputText = xmlDoc.transformNode(xslDoc.documentElement)</span><br><span class="line">	outputText=<span class="built_in">replace</span>(outputText,<span class="string">"UTF-16"</span>,<span class="string">"gb2312"</span>)</span><br><span class="line">	<span class="keyword">Set</span> FSO = <span class="built_in">CreateObject</span>(<span class="string">"Scripting.FileSystemObject"</span>)</span><br><span class="line"></span><br><span class="line">	<span class="keyword">Set</span> outFile = FSO.CreateTextFile(outputFile,<span class="literal">True</span>)</span><br><span class="line">	outFile.Write outputText</span><br><span class="line">	outFile.Close</span><br><span class="line"></span><br><span class="line">	<span class="keyword">Set</span> outFile = <span class="literal">Nothing</span></span><br><span class="line">	<span class="keyword">Set</span> FSO = <span class="literal">Nothing</span></span><br><span class="line">	<span class="keyword">Set</span> xmlDoc = <span class="literal">Nothing</span></span><br><span class="line">	<span class="keyword">Set</span> xslDoc = <span class="literal">Nothing</span></span><br><span class="line">	<span class="keyword">Set</span> xmlResults = <span class="literal">Nothing</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure>
<h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution:"></a>Solution:</h3><ol>
<li>please go to QTP installation folder. E.g., C:\Program Files\HP\QuickTest Professional\dat<br><img src="/images/QTP/uft_report_solution.jpg" alt=""></li>
<li>Open the “PShort.xsl” file, uncomment the below line<br><img src="/images/QTP/uft_report_solution1.jpg" alt=""></li>
</ol>
<p>I believe you can get the correct result now:)</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用Java操作MongoDB - Insert ISODate]]></title>
      <url>http://izheyi.com/2014/12/26/%E4%BD%BF%E7%94%A8Java%E6%93%8D%E4%BD%9CMongoDB-Insert-ISODate/</url>
      <content type="html"><![CDATA[<p>We could insert data with json as:<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    "<span class="attribute">name_collection1</span>": <span class="value">[</span><br><span class="line">    &#123;</span><br><span class="line">        "<span class="attribute">attribute_1</span>":<span class="value"><span class="string">"value1"</span></span>,</span><br><span class="line">        "<span class="attribute">attribute_2</span>":<span class="value"><span class="string">"value2"</span></span><br><span class="line">    </span>&#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        "<span class="attribute">attribute_3</span>":<span class="value"><span class="number">2</span></span>,</span><br><span class="line">        "<span class="attribute">attribute_4</span>":<span class="value"><span class="string">"value4"</span></span><br><span class="line">    </span>&#125;</span><br><span class="line">    ]</span><br><span class="line"></span>&#125;</span><br></pre></td></tr></table></figure></p>
<p>If you want to use ISODate function or any other javascript function you should see how MongoDB Java Driver deals with it. For example in case of ISODate:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"bornAt"</span>:&#123; <span class="string">"<span class="variable">$date</span>"</span> : <span class="string">"2015-01-05T10:09:15.210Z"</span>&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用Java操作MongoDB - Query]]></title>
      <url>http://izheyi.com/2014/12/25/%E4%BD%BF%E7%94%A8Java%E6%93%8D%E4%BD%9CMongoDB-Query/</url>
      <content type="html"><![CDATA[<p><strong>Query</strong><br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">Mongo mg = <span class="keyword">new</span> Mongo(<span class="string">"localhost"</span>, <span class="number">27017</span>);</span><br><span class="line"><span class="comment">// get db</span></span><br><span class="line">db = mg.getDB(<span class="string">"CRUD"</span>);</span><br><span class="line"><span class="comment">// get collection</span></span><br><span class="line">dc = db.getCollection(<span class="string">"test"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// findOne</span></span><br><span class="line">System.out.<span class="built_in">println</span>(dc.findOne());</span><br><span class="line"></span><br><span class="line"><span class="comment">// find all</span></span><br><span class="line">DBCursor <span class="built_in">cursor</span> = dc.find();</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cursor</span>.hasNext())&#123;</span><br><span class="line">System.out.<span class="built_in">println</span>(<span class="built_in">cursor</span>.next());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// display certain column</span></span><br><span class="line">BasicDBObject keys = <span class="keyword">new</span> BasicDBObject();</span><br><span class="line">keys.put(<span class="string">"name"</span>, <span class="number">1</span>);</span><br><span class="line">keys.put(<span class="string">"_id"</span>, <span class="number">0</span>);</span><br><span class="line">DBCursor <span class="built_in">cursor</span> = dc.find(<span class="keyword">new</span> BasicDBObject(), keys);</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cursor</span>.hasNext()) &#123;</span><br><span class="line">System.out.<span class="built_in">println</span>(<span class="built_in">cursor</span>.next());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// equal | greater | less | not equal | regex</span></span><br><span class="line">BasicDBObject query = <span class="keyword">new</span> BasicDBObject();</span><br><span class="line"><span class="comment">//query.put("name", "hulu1");</span></span><br><span class="line"><span class="comment">//query.put("number", new BasicDBObject("$gt", 2));</span></span><br><span class="line"><span class="comment">//query.put("number", new BasicDBObject("$gte", 2));</span></span><br><span class="line"><span class="comment">//query.put("number", new BasicDBObject("$lt", 5));</span></span><br><span class="line"><span class="comment">//query.put("number", new BasicDBObject("$lte", 5));</span></span><br><span class="line"><span class="comment">//query.put("name", new BasicDBObject("$ne", "hulu1"));</span></span><br><span class="line">query.put(<span class="string">"name"</span>, <span class="keyword">new</span> BasicDBObject(<span class="string">"$regex"</span>, <span class="string">"hulu.*"</span>));</span><br><span class="line">DBCursor <span class="built_in">cursor</span> = dc.find(query);</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cursor</span>.hasNext()) &#123;</span><br><span class="line">System.out.<span class="built_in">println</span>(<span class="built_in">cursor</span>.next());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// in | not in</span></span><br><span class="line">BasicDBObject query = <span class="keyword">new</span> BasicDBObject();</span><br><span class="line">List&lt;<span class="keyword">String</span>&gt; list = <span class="keyword">new</span> ArrayList&lt;<span class="keyword">String</span>&gt;();</span><br><span class="line">list.<span class="built_in">add</span>(<span class="string">"hulu1"</span>);</span><br><span class="line">list.<span class="built_in">add</span>(<span class="string">"hulu4"</span>);</span><br><span class="line">query.put(<span class="string">"name"</span>, <span class="keyword">new</span> BasicDBObject(<span class="string">"$nin"</span>, list));</span><br><span class="line">DBCursor <span class="built_in">cursor</span> = dc.find(query);</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cursor</span>.hasNext()) &#123;</span><br><span class="line">System.out.<span class="built_in">println</span>(<span class="built_in">cursor</span>.next());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// and</span></span><br><span class="line">BasicDBObject query = <span class="keyword">new</span> BasicDBObject();</span><br><span class="line">query.put(<span class="string">"number"</span>, <span class="keyword">new</span> BasicDBObject(<span class="string">"$gt"</span>, <span class="number">2</span>));</span><br><span class="line">query.put(<span class="string">"name"</span>, <span class="string">"hulu1"</span>);</span><br><span class="line">DBCursor <span class="built_in">cursor</span> = dc.find(query);</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cursor</span>.hasNext()) &#123;</span><br><span class="line">System.out.<span class="built_in">println</span>(<span class="built_in">cursor</span>.next());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// or</span></span><br><span class="line">BasicDBObject query = <span class="keyword">new</span> BasicDBObject();</span><br><span class="line">List&lt;BasicDBObject&gt; obj = <span class="keyword">new</span> ArrayList&lt;BasicDBObject&gt;();</span><br><span class="line">obj.<span class="built_in">add</span>(<span class="keyword">new</span> BasicDBObject(<span class="string">"name"</span>, <span class="string">"hulu1"</span>));</span><br><span class="line">obj.<span class="built_in">add</span>(<span class="keyword">new</span> BasicDBObject(<span class="string">"number"</span>, <span class="keyword">new</span> BasicDBObject(<span class="string">"$gt"</span>, <span class="number">2</span>)));</span><br><span class="line">query.put(<span class="string">"$or"</span>, obj);</span><br><span class="line">DBCursor <span class="built_in">cursor</span> = dc.find(query);</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cursor</span>.hasNext()) &#123;</span><br><span class="line">System.out.<span class="built_in">println</span>(<span class="built_in">cursor</span>.next());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用Java操作MongoDB - Update]]></title>
      <url>http://izheyi.com/2014/12/24/%E4%BD%BF%E7%94%A8Java%E6%93%8D%E4%BD%9CMongoDB-Update/</url>
      <content type="html"><![CDATA[<p><strong>Update</strong><br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Mongo mg = new Mongo(<span class="string">"localhost"</span>, 27017);</span><br><span class="line"><span class="comment">// get db</span></span><br><span class="line"><span class="keyword">db</span> = mg.getDB(<span class="string">"CRUD"</span>);</span><br><span class="line"><span class="comment">// get collection</span></span><br><span class="line">dc = <span class="keyword">db</span>.getCollection(<span class="string">"test"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Update</span></span><br><span class="line">BasicDBObject <span class="keyword">query</span> = new BasicDBObject();</span><br><span class="line"><span class="keyword">query</span>.put(<span class="string">"name"</span>, <span class="string">"hulu22"</span>);</span><br><span class="line"><span class="keyword">query</span>.put(<span class="string">"title"</span>, <span class="string">"PO"</span>);</span><br><span class="line">BasicDBObject newDoc = new BasicDBObject();</span><br><span class="line">newDoc.put(<span class="string">"$set"</span>, new BasicDBObject(<span class="string">"title"</span>, <span class="string">"PM"</span>).<span class="keyword">append</span>(<span class="string">"name"</span>, <span class="string">"hulu22"</span>));<span class="comment">// $unset: Removes the specified field from a document.</span></span><br><span class="line"></span><br><span class="line">dc.<span class="keyword">update</span>(<span class="keyword">query</span>, newDoc);</span><br><span class="line"></span><br><span class="line">dc.<span class="keyword">update</span>(<span class="keyword">query</span>, newDoc, false, false);</span><br><span class="line"></span><br><span class="line">dc.updateMulti(<span class="keyword">query</span>, newDoc);</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用Java操作MongoDB - Delete]]></title>
      <url>http://izheyi.com/2014/12/22/%E4%BD%BF%E7%94%A8Java%E6%93%8D%E4%BD%9CMongoDB-Delete/</url>
      <content type="html"><![CDATA[<p><strong>Delete</strong><br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Mongo</span> mg = new <span class="type">Mongo</span>(<span class="string">"localhost"</span>, <span class="number">27017</span>);</span><br><span class="line">// get db</span><br><span class="line">db = mg.getDB(<span class="string">"CRUD"</span>);</span><br><span class="line">// get collection</span><br><span class="line">dc = db.getCollection(<span class="string">"test"</span>);</span><br><span class="line"></span><br><span class="line">//<span class="type">Delete</span></span><br><span class="line"><span class="type">DBObject</span> doc = dc.findOne();</span><br><span class="line"><span class="type">WriteResult</span> <span class="literal">result</span> = dc.remove(doc);</span><br><span class="line"><span class="type">System</span>.<span class="keyword">out</span>.println(<span class="string">"Number of documents are deleted : "</span> + <span class="literal">result</span>.getN());</span><br></pre></td></tr></table></figure></p>
<figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// delete</span></span><br><span class="line">WriteResult wr = dc.remove(<span class="keyword">new</span> BasicDBObject(<span class="string">"name"</span>, <span class="string">"tom"</span>));</span><br><span class="line">System.<span class="keyword">out</span>.println(wr.getN());</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用Java操作MongoDB - Insert]]></title>
      <url>http://izheyi.com/2014/12/22/%E4%BD%BF%E7%94%A8Java%E6%93%8D%E4%BD%9CMongoDB-Insert/</url>
      <content type="html"><![CDATA[<p><strong>Insert</strong><br>Can use the below 4 methods to implement:<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">Mongo mg = <span class="keyword">new</span> Mongo(<span class="string">"localhost"</span>, <span class="number">27017</span>);</span><br><span class="line">// <span class="built_in">get</span> db</span><br><span class="line">db = mg.getDB(<span class="string">"CRUD"</span>);</span><br><span class="line">// <span class="built_in">get</span> collection</span><br><span class="line">dc = db.getCollection(<span class="string">"test"</span>);</span><br><span class="line"></span><br><span class="line">//<span class="number">1</span><span class="keyword">st</span> save</span><br><span class="line">BasicDBObject doc = <span class="keyword">new</span> BasicDBObject();</span><br><span class="line">doc.<span class="keyword">put</span>(<span class="string">"name"</span>, <span class="string">"add"</span>);</span><br><span class="line">doc.<span class="keyword">put</span>(<span class="string">"method"</span>, <span class="string">"save"</span>);</span><br><span class="line">dc.save(doc);</span><br><span class="line"></span><br><span class="line">//<span class="number">2</span>nd <span class="built_in">insert</span> (using BasicDBObject)</span><br><span class="line">BasicDBObject document = <span class="keyword">new</span> BasicDBObject();</span><br><span class="line">document.<span class="keyword">put</span>(<span class="string">"database"</span>, <span class="string">"mongo"</span>);</span><br><span class="line">document.<span class="keyword">put</span>(<span class="string">"table"</span>, <span class="string">"testing"</span>);</span><br><span class="line">BasicDBObject documentDetail = <span class="keyword">new</span> BasicDBObject();</span><br><span class="line">documentDetail.<span class="keyword">put</span>(<span class="string">"records"</span>, <span class="string">"99"</span>);</span><br><span class="line">documentDetail.<span class="keyword">put</span>(<span class="string">"index"</span>, <span class="string">"vps_index1"</span>);</span><br><span class="line">documentDetail.<span class="keyword">put</span>(<span class="string">"active"</span>, <span class="string">"true"</span>);</span><br><span class="line">document.<span class="keyword">put</span>(<span class="string">"detail"</span>, documentDetail);</span><br><span class="line">dc.<span class="built_in">insert</span>(document);</span><br><span class="line"></span><br><span class="line">//<span class="number">3</span>rd <span class="built_in">insert</span> (using BasicDBObjectBuilder)</span><br><span class="line">BasicDBObjectBuilder documentBuilder = BasicDBObjectBuilder.start()</span><br><span class="line">.<span class="built_in">add</span>(<span class="string">"database"</span>, <span class="string">"mkyongDB"</span>)</span><br><span class="line">.<span class="built_in">add</span>(<span class="string">"table"</span>, <span class="string">"hosting"</span>);</span><br><span class="line">dc.<span class="built_in">insert</span>(documentBuilder.<span class="built_in">get</span>());</span><br><span class="line"></span><br><span class="line">//<span class="number">3</span>rd <span class="built_in">insert</span> (using Map)</span><br><span class="line">Map&lt;String, Object&gt; documentMap = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">documentMap.<span class="keyword">put</span>(<span class="string">"name"</span>, <span class="string">"insert"</span>);</span><br><span class="line">documentMap.<span class="keyword">put</span>(<span class="string">"method"</span>, <span class="string">"map"</span>);</span><br><span class="line">dc.<span class="built_in">insert</span>(<span class="keyword">new</span> BasicDBObject(documentMap));</span><br><span class="line"></span><br><span class="line">//<span class="number">4</span><span class="keyword">th</span> <span class="built_in">insert</span> (using JSON --&gt; simplest way)</span><br><span class="line">String json = <span class="string">"&#123;name : 'insert', recommend : true, method : 'JSON'&#125;"</span>;</span><br><span class="line">DBObject dbObject = (DBObject) JSON.parse(json);</span><br><span class="line">dc.<span class="built_in">insert</span>(dbObject);</span><br></pre></td></tr></table></figure></p>
<p><strong>Insert Multiple Documents</strong><br>For multiple data, we can implement this with previous 4th method:<br><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">String</span>[] myList = &#123;<span class="string">"&#123;number : 1, name: 'hulu1', tags: ['test', 'develop'], comments: [&#123;user: 'hu', like: 0&#125;, &#123;user: 'lu', like: 1&#125;]&#125;"</span>&#125;;	</span><br><span class="line">InsertMultipleDocuments(myList);</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">void</span> InsertMultipleDocuments(<span class="built_in">String</span>[] array) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">String</span> json : array) &#123;</span><br><span class="line">DBObject dbObject = (DBObject) <span class="built_in">JSON</span>.parse(json);</span><br><span class="line">dc.insert(dbObject);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用Java操作MongoDB - Basic Usage]]></title>
      <url>http://izheyi.com/2014/12/20/%E4%BD%BF%E7%94%A8Java%E6%93%8D%E4%BD%9CMongoDB-Basic-Usage/</url>
      <content type="html"><![CDATA[<p>List the basic usage, will introduce ‘CRUD’ in the following blogs:</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Mongo mg = new Mongo(<span class="string">"localhost"</span>, 27017);</span><br><span class="line"></span><br><span class="line"><span class="comment">// get db</span></span><br><span class="line"><span class="keyword">db</span> = mg.getDB(<span class="string">"CRUD"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// get collection</span></span><br><span class="line">dc = <span class="keyword">db</span>.getCollection(<span class="string">"test"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//remove collection</span></span><br><span class="line"><span class="keyword">db</span>.getCollection(<span class="string">"test"</span>).<span class="keyword">drop</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//remove db</span></span><br><span class="line"><span class="keyword">db</span>.dropDatabase();</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用Java操作MongoDB]]></title>
      <url>http://izheyi.com/2014/12/20/%E4%BD%BF%E7%94%A8Java%E6%93%8D%E4%BD%9CMongoDB/</url>
      <content type="html"><![CDATA[<ol>
<li>首先，下载mongoDB对Java支持的驱动包 <br>    <a href="https://github.com/mongodb/mongo-java-driver/downloads" target="_blank" rel="external">驱动包下载</a>
    </li>
<li>下面建立一个JavaProject工程，导入下载下来的驱动包。即可在Java中使用mongoDB.<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> MongoDb &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(String[] args) <span class="keyword">throws</span> UnknownHostException &#123;</span><br><span class="line">        MongoClient mg = <span class="keyword">new</span> MongoClient();</span><br><span class="line">        DB db = mg.getDB(<span class="string">"CRUD"</span>);</span><br><span class="line"></span><br><span class="line">        DBCollection users = db.getCollection(<span class="string">"test"</span>);</span><br><span class="line">        DBCursor cur = users.<span class="keyword">find</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (cur.hasNext()) &#123;</span><br><span class="line">            System.out.<span class="keyword">println</span>(cur.<span class="keyword">next</span>());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.<span class="keyword">println</span>(cur.<span class="keyword">count</span>());</span><br><span class="line">        System.out.<span class="keyword">println</span>(cur.getCursorId());</span><br><span class="line">        System.out.<span class="keyword">println</span>(JSON.serialize(cur));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Find Broken Links using QTP without directly opening the links]]></title>
      <url>http://izheyi.com/2014/12/09/Find-Broken-Links-using-QTP-without-directly-opening-the-links/</url>
      <content type="html"><![CDATA[<figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">'This</span> <span class="keyword">is</span> the main page</span><br><span class="line">Browser(<span class="string">"Browser"</span>).Page(<span class="string">"HomePage"</span>).Sync</span><br><span class="line"> </span><br><span class="line"><span class="attribute">'Find</span> <span class="keyword">out</span> <span class="keyword">all</span> the links <span class="keyword">in</span> the page using ChildObjects</span><br><span class="line">Set oLink = Description.Create</span><br><span class="line">oLink(<span class="string">"micclass"</span>).Value = <span class="string">"Link"</span></span><br><span class="line">Set oAllLinks = Browser(<span class="string">"Browser"</span>).Page(<span class="string">"HomePage"</span>).ChildObjects(oLink)</span><br><span class="line"> </span><br><span class="line"><span class="attribute">'Find</span> <span class="keyword">out</span> the count <span class="keyword">of</span> links</span><br><span class="line">iTotalLinks = oAllLinks.Count</span><br><span class="line"> </span><br><span class="line"><span class="attribute">'Loop</span> through <span class="keyword">all</span> the links <span class="keyword">to</span> find <span class="keyword">if</span> the link <span class="keyword">is</span> broken <span class="keyword">or</span> <span class="keyword">not</span></span><br><span class="line"><span class="keyword">For</span> i=<span class="number">0</span> <span class="keyword">to</span> iTotalLinks - <span class="number">1</span></span><br><span class="line"> </span><br><span class="line">  <span class="attribute">'Find</span> <span class="keyword">out</span> the url <span class="keyword">for</span> the link</span><br><span class="line">  sURL = oAllLinks(i).GetROProperty(<span class="string">"url"</span>)</span><br><span class="line"> </span><br><span class="line">  <span class="attribute">'Create</span> a WinHTTP Request using the link<span class="attribute">'s</span> URL</span><br><span class="line">  Set objWinHTTP = CreateObject(<span class="string">"WinHttp.WinHttpRequest.5.1"</span>)</span><br><span class="line">  objWinHTTP.<span class="keyword">Open</span> <span class="string">"GET"</span>, sURL, False</span><br><span class="line">  objWinHTTP.SetRequestHeader <span class="string">"User-Agent"</span>, <span class="string">"Mozilla/4.0 (compatible; MyApp 1.0; Windows NT 5.1)"</span></span><br><span class="line"> </span><br><span class="line">  <span class="attribute">'Send</span> the Request <span class="keyword">to</span> the Server <span class="keyword">and</span> capture the response</span><br><span class="line">  objWinHTTP.Send</span><br><span class="line">  iReturnVal = objWinHTTP.Status</span><br><span class="line"> </span><br><span class="line">  <span class="attribute">'Find</span> <span class="keyword">out</span> <span class="keyword">if</span> the Link exists <span class="keyword">or</span> <span class="keyword">is</span> broken</span><br><span class="line">  <span class="keyword">If</span> iReturnVal = <span class="number">200</span> <span class="keyword">Then</span></span><br><span class="line">    msgbox <span class="string">"Link - "</span> &amp; sURL &amp; <span class="string">" Exists"</span></span><br><span class="line">  ElseIf iReturnVal = <span class="number">404</span> <span class="keyword">Then</span></span><br><span class="line">    msgbox <span class="string">"Link - "</span> &amp; sURL &amp; <span class="string">" is Broken"</span></span><br><span class="line">  <span class="keyword">Else</span></span><br><span class="line">    msgbox <span class="string">"Code"</span> - iReturnVal</span><br><span class="line">  <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"> </span><br><span class="line">  Set objWinHTTP = Nothing</span><br><span class="line"> </span><br><span class="line"><span class="keyword">Next</span></span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[在Win7下环境搭建MongoDB]]></title>
      <url>http://izheyi.com/2014/11/28/%E5%9C%A8Win7%E4%B8%8B%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BAMongoDB/</url>
      <content type="html"><![CDATA[<p>做Selenium一直都是用的Excel来管理数据驱动的数据，现在想用MongoDB来管理，所以对MongoDB做一个简单的了解应用：<br>Include the below items:</p>
<ul>
<li>what is mongodb</li>
<li>installation(environment)</li>
<li>work with java</li>
<li>CRUD</li>
<li>maybe more if have time</li>
</ul>
<p>MongoDB的介绍去官网上直接查看就可以了。<a href="http://www.mongodb.org/" target="_blank" rel="external">MongoDB</a><br><a id="more"></a></p>
<h1 id="在Win7下安装步骤"><a href="#在Win7下安装步骤" class="headerlink" title="在Win7下安装步骤"></a>在Win7下安装步骤</h1><h2 id="下载MongoDB"><a href="#下载MongoDB" class="headerlink" title="下载MongoDB"></a>下载MongoDB</h2><p><a href="http://downloads.mongodb.org/win32/mongodb-win32-i386-2.6.5.zip" target="_blank" rel="external">Download</a><br>下载Windows 32-bit版本并解压缩，程序文件都在bin目录中，其它两个目录分别是C++调用是的头文件和库文件。bin目录中包含如下几个程序：<br><em> mongo.exe，命令行客户端工具。
</em> <br><em> mongod.exe，数据库服务程序。
</em> <br><em> mongodump.exe，数据库备份程序。
</em> <br><em> mongoexport.exe，数据导出工具。
</em> <br><em> mongofiles.exe，GridFS工具。
</em> <br><em> mongoimport.exe，数据导入工具。
</em> <br><em> mongorestore.exe，数据库恢复工具。
</em> <br>* mongos.exe，貌似是性能检测工具。</p>
<h2 id="MongoDB目录"><a href="#MongoDB目录" class="headerlink" title="MongoDB目录"></a>MongoDB目录</h2><p>将其解压到 d:\，再重命名为mongodb，路径为d:\mongodb</p>
<h2 id="设置数据文件路径"><a href="#设置数据文件路径" class="headerlink" title="设置数据文件路径"></a>设置数据文件路径</h2><p>在d:\mongodb盘建一个data文件夹，在data文件夹中新建db文件夹，路径d:\mongodb\data\db;<br>在mongodb文件夹下建立log文件夹，并在log文件夹下建立mongodb.log文件</p>
<h2 id="启动MongoDB服务"><a href="#启动MongoDB服务" class="headerlink" title="启动MongoDB服务"></a>启动MongoDB服务</h2><p>进入 cmd 提示符控制台：<br><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:<span class="command">\mongodb</span><span class="command">\bin</span><span class="command">\mongod</span>.exe --dbpath=d:<span class="command">\mongodb</span><span class="command">\data</span><span class="command">\db</span> --directoryperdb --logpath=d:<span class="command">\mongodb</span><span class="command">\log</span><span class="command">\mongodb</span>.log --logappend</span><br></pre></td></tr></table></figure></p>
<p> 日志文件以及添加方式记录（追加）<br> 数据目录为d:\MongoDB\data\db，并且每个数据库将储存在一个单独的目录（–directoryperdb）</p>
<p>MongoDB服务端的默认连接端口:27017<br><a href="http://localhost:27017/" target="_blank" rel="external">http://localhost:27017/</a><br>可以看到如下提示：<br> You are trying to access MongoDB on the native driver port. For http diagnostic access, add 1000 to the port number<br>如此，MongoDB数据库服务已经成功启动了</p>
<h2 id="客户端连接验证"><a href="#客户端连接验证" class="headerlink" title="客户端连接验证"></a>客户端连接验证</h2><p>新打开一个CMD输入：d:\mongodb\bin\mongo，如果出现下面提示，那么您就可以开始MongoDB之旅了：<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">d</span>:\mongodb\bin\mongo   </span><br><span class="line">MongoDB <span class="keyword">shell</span> <span class="keyword">version</span>: 2.6.5   </span><br><span class="line">connecting to: <span class="keyword">test</span></span><br></pre></td></tr></table></figure></p>
<h2 id="查看MongoDB日志"><a href="#查看MongoDB日志" class="headerlink" title="查看MongoDB日志"></a>查看MongoDB日志</h2><p>查看D:\mongodb\log\mongodb.log文件，即可对MongoDB的运行情况进行查看或排错。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[利用MonteScreenRecorder录制视频]]></title>
      <url>http://izheyi.com/2014/11/20/%E5%88%A9%E7%94%A8MonteScreenRecorder%E5%BD%95%E5%88%B6%E8%A7%86%E9%A2%91/</url>
      <content type="html"><![CDATA[<p>我们可以用以下方式在Selenium Webdriver中capture video.</p>
<h1 id="基本步骤"><a href="#基本步骤" class="headerlink" title="基本步骤"></a>基本步骤</h1><ol>
<li>从<a href="http://www.randelshofer.ch/monte/" target="_blank" rel="external">Monte Screen Recorder</a>，下载“MonteScreenRecorder.jar” </li>
<li>添加Jar包到你的selenium/webdriver eclipse project</li>
<li><p>利用“ScreenRecorder” 类创建一个capture对象方法，脚本如下所示：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//If we didn't name the folder, after execution test script, </span></span><br><span class="line">	<span class="comment">//video file is generated under “Video” folder of current user folder in  Windows machine </span></span><br><span class="line">	<span class="comment">//and “Movies” folder on Mac machine.</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startRecording</span><span class="params">()</span> throws Exception</span><br><span class="line">	</span>&#123;       </span><br><span class="line">		GraphicsConfiguration gc = GraphicsEnvironment</span><br><span class="line">		              .getLocalGraphicsEnvironment()</span><br><span class="line">		              .getDefaultScreenDevice()</span><br><span class="line">		              .getDefaultConfiguration();</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">this</span>.screenRecorder = <span class="keyword">new</span> ScreenRecorder(gc,</span><br><span class="line">		              <span class="keyword">new</span> Format(MediaTypeKey, MediaType.FILE, MimeTypeKey, MIME_AVI),</span><br><span class="line">		              <span class="keyword">new</span> Format(MediaTypeKey, MediaType.VIDEO, EncodingKey, ENCODING_AVI_TECHSMITH_SCREEN_CAPTURE,</span><br><span class="line">		                   CompressorNameKey, ENCODING_AVI_TECHSMITH_SCREEN_CAPTURE,</span><br><span class="line">		                   DepthKey, <span class="number">24</span>, FrameRateKey, Rational.valueOf(<span class="number">15</span>),</span><br><span class="line">		                   QualityKey, <span class="number">1.0f</span>,</span><br><span class="line">		                   KeyFrameIntervalKey, <span class="number">15</span> * <span class="number">60</span>),</span><br><span class="line">		              <span class="keyword">new</span> Format(MediaTypeKey, MediaType.VIDEO, EncodingKey, <span class="string">"black"</span>,</span><br><span class="line">		                   FrameRateKey, Rational.valueOf(<span class="number">30</span>)),</span><br><span class="line">		              null);</span><br><span class="line">		<span class="keyword">this</span>.screenRecorder.start();    </span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>在测试脚本的开始处调用 “screenRecorder.start()” 方法，在结尾调用”screenRecorder.stop()”方法，脚本如下所示：</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">search</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span><br><span class="line"></span>&#123;</span><br><span class="line"> openBrowser();</span><br><span class="line"> startingRecording();</span><br><span class="line"> </span><br><span class="line"> openURL();</span><br><span class="line"> BaiduSearch yy = <span class="keyword">new</span> BaiduSearch(driver);</span><br><span class="line"> yy.searchFor(<span class="string">"searchTest"</span>);</span><br><span class="line"></span><br><span class="line"> driver.quit();</span><br><span class="line"> stopRecording();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<a id="more"></a>
<h1 id="进阶应用"><a href="#进阶应用" class="headerlink" title="进阶应用"></a>进阶应用</h1><p>大多数情况下，我们都希望把录制的视频放到一个指定的目录下，</p>
<ol>
<li><p>这时候你需要重写“ScreenRecorder”类的“createMovieFile”方法，脚本如下所示：</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">SpecializedScreenRecorder</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">ScreenRecorder</span> &#123;</span></span><br><span class="line"></span><br><span class="line">	 <span class="keyword">private</span> <span class="type">String</span> name; </span><br><span class="line">	  </span><br><span class="line">	    public <span class="type">SpecializedScreenRecorder</span>(<span class="type">GraphicsConfiguration</span> cfg, </span><br><span class="line">	           <span class="type">Rectangle</span> captureArea, <span class="type">Format</span> fileFormat, <span class="type">Format</span> screenFormat, </span><br><span class="line">	           <span class="type">Format</span> mouseFormat, <span class="type">Format</span> audioFormat, <span class="type">File</span> movieFolder, </span><br><span class="line">	           <span class="type">String</span> name) <span class="keyword">throws</span> <span class="type">IOException</span>, <span class="type">AWTException</span> &#123; </span><br><span class="line">	         <span class="keyword">super</span>(cfg, captureArea, fileFormat, screenFormat, mouseFormat, </span><br><span class="line">	                  audioFormat, movieFolder); </span><br><span class="line">	         <span class="keyword">this</span>.name = name; </span><br><span class="line">	    &#125; </span><br><span class="line">	  </span><br><span class="line">	    <span class="annotation">@Override</span> </span><br><span class="line">	    <span class="keyword">protected</span> <span class="type">File</span> createMovieFile(<span class="type">Format</span> fileFormat) <span class="keyword">throws</span> <span class="type">IOException</span> &#123; </span><br><span class="line">	          <span class="keyword">if</span> (!movieFolder.exists()) &#123; </span><br><span class="line">	                movieFolder.mkdirs(); </span><br><span class="line">	          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!movieFolder.isDirectory()) &#123; </span><br><span class="line">	                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="type">IOException</span>(<span class="string">"\""</span> + movieFolder + <span class="string">"\" is not a directory."</span>); </span><br><span class="line">	          &#125; </span><br><span class="line">	                            </span><br><span class="line">	          <span class="type">SimpleDateFormat</span> dateFormat = <span class="keyword">new</span> <span class="type">SimpleDateFormat</span>( </span><br><span class="line">	                   <span class="string">"yyyy-MM-dd HH.mm.ss"</span>); </span><br><span class="line">	                          </span><br><span class="line">	          <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">File</span>(movieFolder, name + <span class="string">"-"</span> + dateFormat.format(<span class="keyword">new</span> <span class="type">Date</span>()) + <span class="string">"."</span></span><br><span class="line">	                  + <span class="type">Registry</span>.getInstance().getExtension(fileFormat)); </span><br><span class="line">	    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改startingRecording方法</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Save video to desire location</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startingRecording</span><span class="params">()</span> throws Exception</span><br><span class="line">	</span>&#123;       </span><br><span class="line">		File file = <span class="keyword">new</span> File(<span class="string">"D:\\Videos"</span>);</span><br><span class="line">		</span><br><span class="line">		Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize(); </span><br><span class="line">        <span class="keyword">int</span> width = screenSize.width; </span><br><span class="line">        <span class="keyword">int</span> height = screenSize.height; </span><br><span class="line">                        </span><br><span class="line">        Rectangle captureSize = <span class="keyword">new</span> Rectangle(<span class="number">0</span>,<span class="number">0</span>, width, height); </span><br><span class="line">        </span><br><span class="line">		GraphicsConfiguration gc = GraphicsEnvironment</span><br><span class="line">		              .getLocalGraphicsEnvironment()</span><br><span class="line">		              .getDefaultScreenDevice()</span><br><span class="line">		              .getDefaultConfiguration();</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">this</span>.screenRecorder = <span class="keyword">new</span> SpecializedScreenRecorder(gc, captureSize, </span><br><span class="line">		              <span class="keyword">new</span> Format(MediaTypeKey, MediaType.FILE, MimeTypeKey, MIME_AVI),</span><br><span class="line">		              <span class="keyword">new</span> Format(MediaTypeKey, MediaType.VIDEO, EncodingKey, ENCODING_AVI_TECHSMITH_SCREEN_CAPTURE,</span><br><span class="line">		                   CompressorNameKey, ENCODING_AVI_TECHSMITH_SCREEN_CAPTURE,</span><br><span class="line">		                   DepthKey, <span class="number">24</span>, FrameRateKey, Rational.valueOf(<span class="number">15</span>),</span><br><span class="line">		                   QualityKey, <span class="number">1.0f</span>,</span><br><span class="line">		                   KeyFrameIntervalKey, <span class="number">15</span> * <span class="number">60</span>),</span><br><span class="line">		              <span class="keyword">new</span> Format(MediaTypeKey, MediaType.VIDEO, EncodingKey, <span class="string">"black"</span>,</span><br><span class="line">		                   FrameRateKey, Rational.valueOf(<span class="number">30</span>)),</span><br><span class="line">		              null, file, <span class="string">"MyVideo"</span>);</span><br><span class="line">		<span class="keyword">this</span>.screenRecorder.start();    </span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>重新执行脚本，会在指定的路径下产生视频：<br><img src="/images/Selenium/video_result.jpg" alt="Video"></p>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java操作Sql Server 2008数据库]]></title>
      <url>http://izheyi.com/2014/11/18/Java%E6%93%8D%E4%BD%9CSql-Server-2008%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      <content type="html"><![CDATA[<p>在做自动化的过程中，遇到了这种情况，做个记录。</p>
<ol>
<li>直接去官网下载即可，<a href="https://msdn.microsoft.com/zh-cn/data/aa937724.aspx" target="_blank" rel="external">Microsoft JDBC Driver for SQL Server</a><br>下载解压文件，得到sqljdbc.jar和sqljdbc4.jar。如果你使用的是jre1.7版本，则忽略sqljdbc.jar（因为它用不了，而且如果和sqljdbc4.jar一起用会出错），只留下sqljdbc4.jar。</li>
<li>配置Classpath<br>网上有很多人说要配置这个路径，我没有配置，但是也通过，这里不记录，如果有问题了，就知道可能是Classpath的问题：）</li>
<li>Eclipse应用<br>打开Eclipse，创建新工程，把sqljdbc4.jar包添加到工程中。</li>
<li>创建脚本测试 <figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> class ExecuteSql &#123; </span><br><span class="line">     <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span> [] args) </span><br><span class="line">     &#123; </span><br><span class="line">        <span class="keyword">String</span> dbURL=<span class="string">"jdbc:你的数据库名   "</span>; </span><br><span class="line">        <span class="keyword">String</span> userName=<span class="string">"填写你的用户名，我的是sa"</span>; </span><br><span class="line">        <span class="keyword">String</span> userPwd=<span class="string">"填写你的密码"</span>; </span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123; </span><br><span class="line">            Class.forName(driverName);</span><br><span class="line">            Connection dbConn=DriverManager.getConnection(dbURL,userName,userPwd); </span><br><span class="line">            System.out.<span class="built_in">println</span>(<span class="string">"连接数据库成功"</span>); </span><br><span class="line">        &#125; <span class="keyword">catch</span>(Exception e) &#123; </span><br><span class="line">            e.printStackTrace(); </span><br><span class="line">            System.out.<span class="built_in">print</span>(<span class="string">"连接失败"</span>); </span><br><span class="line">        &#125;     </span><br><span class="line">     &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[How to learn test automation]]></title>
      <url>http://izheyi.com/2014/10/23/How-to-learn-test-automation/</url>
      <content type="html"><![CDATA[<p>Automation is very important in the whole SDLC, especially in the agile, the iteration time for each sprint is very short, it’s impossible to only rely on manual testing. </p>
<p>i attened many seminar or meeting, or discuss with person(they are top notch in software testing), the word most times metoned is “automaton”.</p>
<p><strong>here i want to dscribe my opinions based on UI automaiton.</strong><br><a id="more"></a></p>
<p>many people asked me about automation: how to learn automation? how to learn QTP? how to learn Selenium? if i learn QTP, but maybe my company don’t use it, what should i do? i learn Selenium with Java, but my company ask to use Python, what should i do? …….</p>
<p>i also thinked about this many times, i do believe that you should not to learn a automation tool, you should to learn the automation thought. if you have thought, you can implement automation with any tool, right?</p>
<p>so please double comfirm the automation relevant items:</p>
<h1 id="Automation-Component"><a href="#Automation-Component" class="headerlink" title="Automation Component"></a>Automation Component</h1><p><img src="/images/automation/automation_component.jpg" alt="Automation Component"><br>you need to keep in mind this illustration, the whole high level for automation</p>
<ul>
<li>Object Repository: it’s the hub and base of automation, all automation work start from here</li>
<li>Script: using relevant language to design</li>
<li>Run: determine how to exec automaiton, e.g., single or group, with CI or not</li>
<li>Report: generate which style report</li>
</ul>
<h1 id="Automation-Principle"><a href="#Automation-Principle" class="headerlink" title="Automation Principle"></a>Automation Principle</h1><ol>
<li>encapsulate object to object repository</li>
<li>when you run script, compare properties of object in repository with run time object’s properties</li>
<li>if equals, indicate object match successfully, go to the next action; otherwise, prompt object can’t identify</li>
</ol>
<h1 id="Automation-Hierarchy"><a href="#Automation-Hierarchy" class="headerlink" title="Automation Hierarchy"></a>Automation Hierarchy</h1><p>we need to know the delamination thoughts, should know how to implement this action. for instance:</p>
<ul>
<li>high level(Automation) : UT, API, UI</li>
<li>low level(UI Layer): Object, Script, Recovery Scenario, Library, etc…</li>
</ul>
<h1 id="Automation-Script-Design"><a href="#Automation-Script-Design" class="headerlink" title="Automation Script Design"></a>Automation Script Design</h1><p>no matter languages use, no matter tools use, these are all don’t matter, one thing we need to know is design thought. we need to know what is we want, how to start to design script, the design steps should in your mind.</p>
<p>e.g., using Java + Eclipse + Selenium to do automation, these below steps should aready in you mind before you write script.</p>
<ol>
<li>need to know which test case need to automate</li>
<li>import selenium java client to eclipse and config the path</li>
<li>import the needed namespace</li>
<li>design script (1. launch driver; 2. open browser; 3. write script according case; 4. driver quit)</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Selenium处理Windows程序(进程)]]></title>
      <url>http://izheyi.com/2014/10/20/Selenium%E5%A4%84%E7%90%86Windows%E7%A8%8B%E5%BA%8F-%E8%BF%9B%E7%A8%8B/</url>
      <content type="html"><![CDATA[<p>Selenium WebDriver java 提供了一个专门的WindowsUtils类去和Windows操作系统交互。</p>
<p>就像我们之前说过有时候跑完脚本后，IEDriverServer.exe进程没杀掉，以及处理的方法。但是有一些未知的情况下，还是会有这样的情况。</p>
<p>对测试环境的设置我们可以做一个更好的处理。在Test运行之前和之后，都去关掉相应的进程，这样的话，就算是跑完脚本后，一些相关进程没关闭，再下次运行的时候，也会重新设置运行环境。</p>
<p>以下的方法：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">WindowsUtils</span><span class="class">.tryToKillByName</span>("<span class="tag">IEDriverServer</span><span class="class">.exe</span>");</span><br><span class="line"><span class="tag">WindowsUtils</span><span class="class">.tryToKillByName</span>("<span class="tag">iexplore</span><span class="class">.exe</span>");</span><br></pre></td></tr></table></figure></p>
<p>WindowsUtils会去查询指定的进程名称，并kill掉所有运行的相关进程。这儿有一个小问题，如果当前指定进程不存在，就会抛出一个异常，但是也不会影响脚本的运行，Test会继续运行下一个步骤，只是查看的时候会有异常错误信息，感觉有点怪怪的。</p>
 <a id="more"></a>
<p><strong>解决方法：</strong></p>
<p>我们可以在运行这个方法之前，先去判断进程是否存在，如果存在再执行，反之，就不执行。下面是个小例子：<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">@<span class="type">BeforeMethod</span>(alwaysRun = <span class="literal">true</span>)</span><br><span class="line">	public <span class="keyword">static</span> <span class="type">WebDriver</span> openBrowser() throws <span class="type">Exception</span></span><br><span class="line">	&#123;</span><br><span class="line">		stopSelenium();</span><br><span class="line">		<span class="type">int</span> browserType = <span class="type">GlobalSetting</span>.browserType;</span><br><span class="line">		switch (browserType)</span><br><span class="line">		&#123;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">			driver = new <span class="type">FirefoxDriver</span>();</span><br><span class="line">			log(<span class="string">"INFO"</span>, <span class="string">"Launch browser: Firefox."</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> driver;</span><br><span class="line">	</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	@<span class="type">AfterMethod</span>(alwaysRun = <span class="literal">true</span>)</span><br><span class="line">	public <span class="keyword">static</span> <span class="type">void</span> stopSelenium() &#123;</span><br><span class="line">		<span class="keyword">if</span> (isProcessRunging(<span class="string">"IEDriverServer.exe"</span>))&#123;</span><br><span class="line">			<span class="type">WindowsUtils</span>.tryToKillByName(<span class="string">"IEDriverServer.exe"</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		<span class="keyword">if</span> (isProcessRunging(<span class="string">"iexplore.exe"</span>))&#123;</span><br><span class="line">			<span class="type">WindowsUtils</span>.tryToKillByName(<span class="string">"iexplore.exe"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public <span class="keyword">static</span> boolean isProcessRunging(<span class="type">String</span> processName) throws <span class="type">Exception</span> &#123;</span><br><span class="line">		boolean <span class="literal">result</span> = <span class="literal">false</span>;</span><br><span class="line">		<span class="type">Process</span> p = <span class="type">Runtime</span>.getRuntime().exec(<span class="string">"tasklist"</span>);</span><br><span class="line">		<span class="type">BufferedReader</span> reader = new <span class="type">BufferedReader</span>(new <span class="type">InputStreamReader</span>(</span><br><span class="line">				p.getInputStream()));</span><br><span class="line">		<span class="type">String</span> line;</span><br><span class="line">		<span class="keyword">while</span> ((line = reader.readLine()) != null) &#123;</span><br><span class="line">			<span class="keyword">if</span> (line.contains(processName)) &#123;</span><br><span class="line">				<span class="literal">result</span> = <span class="literal">true</span>;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></p>
<p>这样的话，应该就不会再有上边说的那个异常了。</p>
<p>上边我们加了BeforeMethod和AfterMethod注释，这样我觉得一个好处就是在用例层，我们就不用再每次再专门弄一个setup去做一些设置，只有Test就好了。只是个人的一些拙见，也是在学习中，有任何不对的地方，还请多多指正：）</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[QTP Recovery Scenario Specification]]></title>
      <url>http://izheyi.com/2014/10/09/QTP-Recovery-Scenario-Specification/</url>
      <content type="html"><![CDATA[<blockquote>
<p>When we run script under our new framework, we found that will missing the “FrameworkErrorHandler.vbs” in Recovery Scenario.  </p>
</blockquote>
<p><strong>Issue:</strong><br>For the better transplantation, we use the relevant path for all items in new framework, but once we generate the QRS file, the relevant path will change to absolute path, and we can’t modify this path any more.<br><img src="/images/QTP/rs_issue.jpg" alt=""></p>
<p><strong>Solution:</strong><br>Now that this file is change to absolute path, and need to in keeping with relevant path in framework, I thought a way to specify a path, and generate the “FrameworkErrorHandler.vbs” dynamically:<br><img src="/images/QTP/rs_solution.jpg" alt=""></p>
<p>Before we run the test cases, copy the “FrameworkErrorHandler.vbs” in framework to root directory of C disk.<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Set fso = <span class="function"><span class="title">CreateObject</span><span class="params">( <span class="string">"Scripting.FileSystemObject"</span> )</span></span></span><br><span class="line">fso<span class="class">.CopyFile</span> oParentFolder + <span class="string">"FrameworkErrorHandler.vbs"</span>, <span class="string">"c:\FrameworkErrorHandler.vbs"</span></span><br><span class="line">fso.<span class="function"><span class="title">GetFile</span><span class="params">(<span class="string">"c:\FrameworkErrorHandler.vbs"</span>)</span></span><span class="class">.Attributes</span> = <span class="number">0</span> <span class="string">'set file attribute to nomal</span></span><br></pre></td></tr></table></figure></p>
<p>No matter you put the framework in anywhere of your PC, QRS file can find and read the custom recovery scenario function file successfully.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Run VBS file with command line and pass parameter]]></title>
      <url>http://izheyi.com/2014/10/09/Run-VBS-file-with-command-and-pass-parameter/</url>
      <content type="html"><![CDATA[<p><strong>VBS Code:</strong><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">Set</span> args = WScript.Arguments</span><br><span class="line"><span class="keyword">If</span> args.<span class="keyword">Count</span> = <span class="number">1</span> <span class="keyword">Then</span></span><br><span class="line">	<span class="keyword">test</span>= WScript.Arguments(<span class="number">0</span>)</span><br><span class="line">	MsgBox <span class="string">"test  "</span> &amp; <span class="keyword">name</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span></span><br></pre></td></tr></table></figure></p>
<p>Save this code in test.vbs file.</p>
<p><strong>Command Code:</strong><br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wscript<span class="class">.exe</span> test<span class="class">.vbs</span> helloworld</span><br></pre></td></tr></table></figure></p>
<p>The result will be “test Helloworld”.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[定制元素属性检查，并写到ReportNG中]]></title>
      <url>http://izheyi.com/2014/09/20/%E5%AE%9A%E5%88%B6%E5%85%83%E7%B4%A0%E5%B1%9E%E6%80%A7%E6%A3%80%E6%9F%A5%EF%BC%8C%E5%B9%B6%E5%86%99%E5%88%B0ReportNG%E4%B8%AD/</url>
      <content type="html"><![CDATA[<p>QTP 和Selenium 都会有这种要检查某一个控件元素属性的情况，比如去检查一个Button的显示文字是什么？</p>
<p>为了更方便的书写程序，并优美的显示到HTML测试报告中，做了以下几个小小的封装，只是小小的尝试，让大家做个参考，抛砖引玉了。。</p>
<h1 id="脚本实现"><a href="#脚本实现" class="headerlink" title="脚本实现"></a>脚本实现</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">public void verifyAttribute(WebElement we, String weName, String propertyName, String expectValue)</span><br><span class="line">	&#123;</span><br><span class="line">		String actualValue = we.getAttribute(propertyName);</span><br><span class="line">		</span><br><span class="line">		log("INFO", "Verify &#123;" + propertyName + "&#125; attribute for element [" + weName + "]");</span><br><span class="line"></span><br><span class="line">		if (actualValue.equals(expectValue))&#123;</span><br><span class="line">			Reporter.log("<span class="tag">&lt;<span class="title">TABLE</span> <span class="attribute">border</span>=<span class="value">'1'</span>&gt;</span><span class="tag">&lt;<span class="title">TR</span>&gt;</span><span class="tag">&lt;<span class="title">TD</span>&gt;</span>Actual Value<span class="tag">&lt;/<span class="title">TD</span>&gt;</span><span class="tag">&lt;<span class="title">TD</span>&gt;</span>"+actualValue+"<span class="tag">&lt;/<span class="title">TD</span>&gt;</span><span class="tag">&lt;/<span class="title">TR</span>&gt;</span><span class="tag">&lt;<span class="title">TR</span>&gt;</span><span class="tag">&lt;<span class="title">TD</span>&gt;</span>Expected Value<span class="tag">&lt;/<span class="title">TD</span>&gt;</span><span class="tag">&lt;<span class="title">TD</span>&gt;</span>"+expectValue+"<span class="tag">&lt;/<span class="title">TD</span>&gt;</span><span class="tag">&lt;/<span class="title">TR</span>&gt;</span><span class="tag">&lt;<span class="title">TR</span>&gt;</span><span class="tag">&lt;<span class="title">TD</span>&gt;</span>Checkpoint Status<span class="tag">&lt;/<span class="title">TD</span>&gt;</span><span class="tag">&lt;<span class="title">TD</span> <span class="attribute">style</span>=<span class="value">'background-color:green'</span>&gt;</span><span class="tag">&lt;<span class="title">b</span>&gt;</span>Passed<span class="tag">&lt;/<span class="title">b</span>&gt;</span><span class="tag">&lt;/<span class="title">TD</span>&gt;</span><span class="tag">&lt;/<span class="title">TR</span>&gt;</span><span class="tag">&lt;/<span class="title">TABLE</span>&gt;</span>");</span><br><span class="line">			</span><br><span class="line">		&#125;</span><br><span class="line">		else &#123;</span><br><span class="line">			Reporter.log("<span class="tag">&lt;<span class="title">TABLE</span> <span class="attribute">border</span>=<span class="value">'1'</span>&gt;</span><span class="tag">&lt;<span class="title">TR</span>&gt;</span><span class="tag">&lt;<span class="title">TD</span>&gt;</span>Actual Value<span class="tag">&lt;/<span class="title">TD</span>&gt;</span><span class="tag">&lt;<span class="title">TD</span>&gt;</span>"+actualValue+"<span class="tag">&lt;/<span class="title">TD</span>&gt;</span><span class="tag">&lt;/<span class="title">TR</span>&gt;</span><span class="tag">&lt;<span class="title">TR</span>&gt;</span><span class="tag">&lt;<span class="title">TD</span>&gt;</span>Expected Value<span class="tag">&lt;/<span class="title">TD</span>&gt;</span><span class="tag">&lt;<span class="title">TD</span>&gt;</span>"+expectValue+"<span class="tag">&lt;/<span class="title">TD</span>&gt;</span><span class="tag">&lt;/<span class="title">TR</span>&gt;</span><span class="tag">&lt;<span class="title">TR</span>&gt;</span><span class="tag">&lt;<span class="title">TD</span>&gt;</span>Checkpoint Status<span class="tag">&lt;/<span class="title">TD</span>&gt;</span><span class="tag">&lt;<span class="title">TD</span> <span class="attribute">style</span>=<span class="value">'background-color:red'</span>&gt;</span><span class="tag">&lt;<span class="title">b</span>&gt;</span>Failed<span class="tag">&lt;/<span class="title">b</span>&gt;</span><span class="tag">&lt;/<span class="title">TD</span>&gt;</span><span class="tag">&lt;/<span class="title">TR</span>&gt;</span><span class="tag">&lt;/<span class="title">TABLE</span>&gt;</span>");</span><br><span class="line">			handleFailure("Error Case Research: ");</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		Assert.assertEquals(actualValue, expectValue);</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">public static void <span class="built_in">log</span>(String <span class="built_in">log</span>Type, String <span class="built_in">log</span>Info)&#123;</span><br><span class="line">		System.setProperty(<span class="string">"org.uncommons.reportng.escape-output"</span>, <span class="string">"false"</span>);</span><br><span class="line">		System.setProperty(<span class="string">"com.testng.reporter.escape-output"</span>, <span class="string">"false"</span>);</span><br><span class="line">		</span><br><span class="line">		switch(<span class="built_in">log</span>Type)&#123;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">"INFO"</span>:</span><br><span class="line">			Reporter.log(<span class="built_in">log</span>Time + <span class="string">"&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;font color='gray'&gt;&lt;strong&gt;INFO&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/strong&gt;&lt;/font&gt;"</span> + <span class="built_in">log</span>Info);</span><br><span class="line">			<span class="built_in">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">"PASS"</span>:</span><br><span class="line">			Reporter.log(<span class="built_in">log</span>Time + <span class="string">"&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;font color='green'&gt;&lt;strong&gt;PASS&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/strong&gt;&lt;/font&gt;"</span> + <span class="built_in">log</span>Info);</span><br><span class="line">			<span class="built_in">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">"FAIL"</span>:</span><br><span class="line">			Reporter.log(<span class="built_in">log</span>Time + <span class="string">"&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;font color='red'&gt;&lt;strong&gt;FAIL&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/strong&gt;&lt;/font&gt;"</span> + <span class="built_in">log</span>Info);</span><br><span class="line">			<span class="built_in">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<p> 这里只是个例子，要区别一下getAttribute和getText。</p>
 <a id="more"></a>
<h1 id="脚本调用"><a href="#脚本调用" class="headerlink" title="脚本调用"></a>脚本调用</h1><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">search</span><span class="params">()</span></span><br><span class="line"> </span>&#123;</span><br><span class="line">  openBrowser();</span><br><span class="line">  openURL();</span><br><span class="line">  BaiduSearch yy = <span class="keyword">new</span> BaiduSearch(driver);</span><br><span class="line">  verifyAttribute(yy.searchButton, <span class="string">"Search Button"</span>, <span class="string">"type"</span>, <span class="string">"submit"</span>);</span><br><span class="line">  driver.quit();</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="annotation">@Test</span></span><br><span class="line"> <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">aa</span><span class="params">()</span></span><br><span class="line"> </span>&#123;</span><br><span class="line">  openURL();</span><br><span class="line">  BaiduSearch yy = <span class="keyword">new</span> BaiduSearch(driver);</span><br><span class="line">  </span><br><span class="line">  verifyAttribute(yy.searchButton, <span class="string">"Search Button"</span>, <span class="string">"type"</span>, <span class="string">"sgubmit"</span>);</span><br><span class="line">  driver.close();</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<h1 id="结果显示"><a href="#结果显示" class="headerlink" title="结果显示"></a>结果显示</h1><p><img src="/images/Selenium/custom_report.jpg" alt="Test Result"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Selenium如何处理Table]]></title>
      <url>http://izheyi.com/2014/08/08/Selenium%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86Table/</url>
      <content type="html"><![CDATA[<p>由于webdriver中没有专门的table类，所以我们需要简单的封装出一个易用易扩展的Table类来帮助简化代码。</p>
<p>以下是我之前用Java语言来实现的一个简单的封装：<br><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line"> <span class="keyword">*</span> <span class="variable">&lt;b&gt;</span>Name:<span class="variable">&lt;/b&gt;</span> WebTable<span class="variable">&lt;/br&gt;</span> <span class="variable">&lt;b&gt;</span>Description: <span class="variable">&lt;/b&gt;</span>This class is used to handling</span><br><span class="line"> <span class="keyword">*</span> web table<span class="variable">&lt;/br&gt;</span></span><br><span class="line"> <span class="keyword">*</span> </span><br><span class="line"> <span class="keyword">*</span> <span class="comment">@author &lt;i&gt;Yongfei Hu&lt;/i&gt;</span></span><br><span class="line"> <span class="keyword">*</span>/</span><br><span class="line"></span><br><span class="line">public class WebTable &#123;</span><br><span class="line"></span><br><span class="line">	private WebElement webTable;</span><br><span class="line">	StartingSelenium ss = new StartingSelenium();</span><br><span class="line"></span><br><span class="line">	public WebTable(WebElement webTable) &#123;</span><br><span class="line">		this.webTable = webTable;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public WebElement getWebTable() &#123;</span><br><span class="line">		return webTable;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	/<span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">	 <span class="keyword">*</span> <span class="variable">&lt;b&gt;</span>Name: getTableRows<span class="variable">&lt;/b&gt;</span> <span class="variable">&lt;b&gt;</span>Description:<span class="variable">&lt;/b&gt;</span> This method is to get table</span><br><span class="line">	 <span class="keyword">*</span> rows list</span><br><span class="line">	 <span class="keyword">*</span> </span><br><span class="line">	 <span class="keyword">*</span> <span class="comment">@return tableRows</span></span><br><span class="line">	 <span class="keyword">*</span>/</span><br><span class="line">	private List<span class="variable">&lt;WebElement&gt;</span> getTableRows() &#123;</span><br><span class="line">		List<span class="variable">&lt;WebElement&gt;</span> tableRows = webTable.findElements(By.tagName(<span class="string">"tr"</span>));</span><br><span class="line">		return tableRows;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	/<span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">	 <span class="keyword">*</span> <span class="variable">&lt;b&gt;</span>Name: getTableColumns<span class="variable">&lt;/b&gt;</span> <span class="variable">&lt;b&gt;</span>Description:<span class="variable">&lt;/b&gt;</span> This method is to get</span><br><span class="line">	 <span class="keyword">*</span> table columns list</span><br><span class="line">	 <span class="keyword">*</span> </span><br><span class="line">	 <span class="keyword">*</span> <span class="comment">@param currentRow</span></span><br><span class="line">	 <span class="keyword">*</span> </span><br><span class="line">	 <span class="keyword">*</span> <span class="comment">@return tableColumns</span></span><br><span class="line">	 <span class="keyword">*</span>/</span><br><span class="line">	private List<span class="variable">&lt;WebElement&gt;</span> getTableColumns(WebElement currentRow) &#123;</span><br><span class="line">		List<span class="variable">&lt;WebElement&gt;</span> tableColumns = currentRow.findElements(By</span><br><span class="line">				.tagName(<span class="string">"td"</span>));</span><br><span class="line">		return tableColumns;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	/<span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">	 <span class="keyword">*</span> <span class="variable">&lt;b&gt;</span>Name: getRowCount<span class="variable">&lt;/b&gt;</span> <span class="variable">&lt;b&gt;</span>Description:<span class="variable">&lt;/b&gt;</span> This method is to get the</span><br><span class="line">	 <span class="keyword">*</span> table row count</span><br><span class="line">	 <span class="keyword">*</span> </span><br><span class="line">	 <span class="keyword">*</span> <span class="comment">@return rowCount</span></span><br><span class="line">	 <span class="keyword">*</span>/</span><br><span class="line">	public int getRowCount() &#123;</span><br><span class="line">		int rowCount = getTableRows().size();</span><br><span class="line">		Reporter.log(<span class="string">"Rows in the table: "</span> + rowCount, true);</span><br><span class="line">		return rowCount;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	/<span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">	 <span class="keyword">*</span> <span class="variable">&lt;b&gt;</span>Name: getColumnCount<span class="variable">&lt;/b&gt;</span> <span class="variable">&lt;b&gt;</span>Description:<span class="variable">&lt;/b&gt;</span> This method is to get the</span><br><span class="line">	 <span class="keyword">*</span> table column count</span><br><span class="line">	 <span class="keyword">*</span> </span><br><span class="line">	 <span class="keyword">*</span> <span class="comment">@return columnCount</span></span><br><span class="line">	 <span class="keyword">*</span>/</span><br><span class="line">	public int getColumnCount() &#123;</span><br><span class="line">		WebElement headerRow = getTableRows().get(0);</span><br><span class="line">		List<span class="variable">&lt;WebElement&gt;</span> tableColumns = getTableColumns(headerRow);</span><br><span class="line">		int columnCount = tableColumns.size();</span><br><span class="line">		Reporter.log(<span class="string">"Column in the table: "</span> + columnCount, true);</span><br><span class="line">		return columnCount;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	/<span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">	 <span class="keyword">*</span> <span class="variable">&lt;b&gt;</span>Name: getCellText<span class="variable">&lt;/b&gt;</span> <span class="variable">&lt;b&gt;</span>Description: <span class="variable">&lt;/b&gt;</span> This method is to get the</span><br><span class="line">	 <span class="keyword">*</span> specific cell data</span><br><span class="line">	 <span class="keyword">*</span> </span><br><span class="line">	 <span class="keyword">*</span> <span class="comment">@param row</span></span><br><span class="line">	 <span class="keyword">*</span> <span class="comment">@param column</span></span><br><span class="line">	 <span class="keyword">*</span> <span class="comment">@return cellText</span></span><br><span class="line">	 <span class="keyword">*</span>/</span><br><span class="line">	public String getCellText(int row, int column) &#123;</span><br><span class="line">		WebElement currentRow = getTableRows().get(row);</span><br><span class="line">		List<span class="variable">&lt;WebElement&gt;</span> tableColumns = getTableColumns(currentRow);</span><br><span class="line">		return tableColumns.get(column).getText();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	/<span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">	 <span class="keyword">*</span> <span class="variable">&lt;b&gt;</span>Name: getRowByCellText<span class="variable">&lt;/b&gt;</span> <span class="variable">&lt;b&gt;</span>Description:<span class="variable">&lt;/b&gt;</span> This method is to get</span><br><span class="line">	 <span class="keyword">*</span> the row number by the cell data</span><br><span class="line">	 <span class="keyword">*</span> </span><br><span class="line">	 <span class="keyword">*</span> <span class="comment">@param cellText</span></span><br><span class="line">	 <span class="keyword">*</span> </span><br><span class="line">	 <span class="keyword">*</span> <span class="comment">@return rowNumber</span></span><br><span class="line">	 <span class="keyword">*</span>/</span><br><span class="line">	public int getRowByCellText(String cellText) &#123;</span><br><span class="line">		int rowCount = getRowCount();</span><br><span class="line">		int colCount = getColumnCount();</span><br><span class="line">		int getRow = 0;</span><br><span class="line">		boolean flag;</span><br><span class="line"></span><br><span class="line">		for (int i = 0; i <span class="variable">&lt; rowCount; i++) &#123;</span><br><span class="line">			flag = false;</span><br><span class="line"></span><br><span class="line">			for (int j = 0; j &lt; colCount; j++) &#123;</span><br><span class="line">				if (getCellText(i, j).equals(cellText)) &#123;</span><br><span class="line">					getRow = i;</span><br><span class="line">					flag = true;</span><br><span class="line">					Reporter.log("The text: " + cellText + " in row number: "</span><br><span class="line">							+ getRow, true);</span><br><span class="line">					break;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			if (flag) &#123;</span><br><span class="line">				break;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		return getRow;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	/**</span><br><span class="line">	 * &lt;b&gt;</span>Name: clickLinkInCell<span class="variable">&lt;/b&gt;</span> <span class="variable">&lt;b&gt;</span>Description: <span class="variable">&lt;/b&gt;</span> This method is to click</span><br><span class="line">	 <span class="keyword">*</span> link in the specific cell</span><br><span class="line">	 <span class="keyword">*</span> </span><br><span class="line">	 <span class="keyword">*</span> <span class="comment">@param row</span></span><br><span class="line">	 <span class="keyword">*</span> <span class="comment">@param column</span></span><br><span class="line">	 <span class="keyword">*</span> <span class="comment">@param index</span></span><br><span class="line">	 <span class="keyword">*</span> </span><br><span class="line">	 <span class="keyword">*</span>/</span><br><span class="line">	public void clickLinkInCell(int row, int column, int index) &#123;</span><br><span class="line">		WebElement currentRow = getTableRows().get(row);</span><br><span class="line">		WebElement currentCell = getTableColumns(currentRow).get(column);</span><br><span class="line">		currentCell.findElements(By.tagName(<span class="string">"a"</span>)).get(index).click();</span><br><span class="line">		Reporter.log(<span class="string">"Clickin a link on the row: "</span> + row, true);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	/<span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">	 <span class="keyword">*</span> <span class="variable">&lt;b&gt;</span>Name: clickLinkInCell<span class="variable">&lt;/b&gt;</span> <span class="variable">&lt;b&gt;</span>Description: <span class="variable">&lt;/b&gt;</span> This method is to click</span><br><span class="line">	 <span class="keyword">*</span> link in the specific cell</span><br><span class="line">	 <span class="keyword">*</span> </span><br><span class="line">	 <span class="keyword">*</span> <span class="comment">@param row</span></span><br><span class="line">	 <span class="keyword">*</span> <span class="comment">@param column</span></span><br><span class="line">	 <span class="keyword">*</span> <span class="comment">@param index</span></span><br><span class="line">	 <span class="keyword">*</span> <span class="comment">@param linkName</span></span><br><span class="line">	 <span class="keyword">*</span> </span><br><span class="line">	 <span class="keyword">*</span>/</span><br><span class="line">	public void clickLinkInCell(int row, int column, int index, String linkName) &#123;</span><br><span class="line">		WebElement currentRow = getTableRows().get(row);</span><br><span class="line">		WebElement currentCell = getTableColumns(currentRow).get(column);</span><br><span class="line">		WebElement we = currentCell.findElements(By.tagName(<span class="string">"a"</span>)).get(index);</span><br><span class="line">		ss.clickUsingJS(we, linkName);</span><br><span class="line">		try &#123;</span><br><span class="line">			Thread.sleep(3000);</span><br><span class="line">		&#125; catch (InterruptedException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[dataProvider实现数据驱动]]></title>
      <url>http://izheyi.com/2014/07/10/dataProvider%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E9%A9%B1%E5%8A%A8/</url>
      <content type="html"><![CDATA[<p>废话不多讲，直接进主题，怎么实现用Excel配置测试数据，用dataProvider来调用测试数据。</p>
<p>jxl目前来看只支持.xls格式的文件，所以我们采用Apache POI来实现对.xlsx的操作，详细信息请参见：<a href="http://poi.apache.org/" target="_blank" rel="external">POI</a></p>
<h1 id="数据准备"><a href="#数据准备" class="headerlink" title="数据准备"></a>数据准备</h1><p>创建数据文件，并写入内容</p>
<p><img src="/images/Selenium/dataprovider_data.jpg" alt="Test Data"></p>
<p>此处我们只是做个实验，把文件放在了C盘下，在实际的项目中可以放在整个项目中。<br><a id="more"></a></p>
<h1 id="数据读取"><a href="#数据读取" class="headerlink" title="数据读取"></a>数据读取</h1><p>利用POI来读取Excel数据，步骤如下：</p>
<ol>
<li>下载相应的POI Jar包，并添加到项目中</li>
<li>创建一个Excel处理类来读取内容<figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> class ExcelUtils &#123;          </span><br><span class="line">		<span class="keyword">private</span> <span class="keyword">static</span> XSSFSheet ExcelWSheet;        </span><br><span class="line">		<span class="keyword">private</span> <span class="keyword">static</span> XSSFWorkbook ExcelWBook;      </span><br><span class="line">		</span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">Object</span>[][] getTableArray(<span class="keyword">String</span> FilePath, <span class="keyword">String</span> SheetName) <span class="keyword">throws</span> Exception &#123;  </span><br><span class="line">			<span class="keyword">Object</span>[][] tabArray = <span class="keyword">null</span>;     </span><br><span class="line">			<span class="keyword">try</span> &#123;          </span><br><span class="line">				FileInputStream ExcelFile = <span class="keyword">new</span> FileInputStream(FilePath);               <span class="comment">// Access the required test data sheet   </span></span><br><span class="line">				ExcelWBook = <span class="keyword">new</span> XSSFWorkbook(ExcelFile);         </span><br><span class="line">				ExcelWSheet = ExcelWBook.getSheet(SheetName);   </span><br><span class="line">				</span><br><span class="line">				<span class="built_in">int</span> ci, cj;</span><br><span class="line">				<span class="built_in">int</span> totalRows = ExcelWSheet.getLastRowNum();</span><br><span class="line">		</span><br><span class="line">		        <span class="built_in">int</span> totalCols = ExcelWSheet.getRow(<span class="number">0</span>).getLastCellNum();</span><br><span class="line">		</span><br><span class="line">		        tabArray = <span class="keyword">new</span> <span class="keyword">String</span> [totalRows] [totalCols];</span><br><span class="line">		        </span><br><span class="line">		        ci = <span class="number">0</span>;</span><br><span class="line">		        <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;=totalRows; i++, ci++)&#123;</span><br><span class="line">		        	cj = <span class="number">0</span>;</span><br><span class="line">		        	XSSFRow row = ExcelWSheet.getRow(i);</span><br><span class="line">		            <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; totalCols; j++, cj++)&#123;</span><br><span class="line">		                XSSFCell cell = row.getCell(j);</span><br><span class="line">		                <span class="keyword">String</span> value = cell.toString();</span><br><span class="line">		                tabArray[ci][cj] = value;</span><br><span class="line">		            &#125;</span><br><span class="line">		        &#125;</span><br><span class="line">			&#125;          </span><br><span class="line">			<span class="keyword">catch</span> (FileNotFoundException e)&#123;       </span><br><span class="line">				System.out.<span class="built_in">println</span>(<span class="string">"Could not read the Excel sheet"</span>);      </span><br><span class="line">				e.printStackTrace();         </span><br><span class="line">				&#125;        </span><br><span class="line">			<span class="keyword">catch</span> (IOException e)&#123;        </span><br><span class="line">				System.out.<span class="built_in">println</span>(<span class="string">"Could not read the Excel sheet"</span>);    </span><br><span class="line">				e.printStackTrace();            </span><br><span class="line">				&#125;        </span><br><span class="line">			<span class="keyword">return</span>(tabArray);     </span><br><span class="line">			</span><br><span class="line">			&#125;        </span><br><span class="line">		&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="数据调用"><a href="#数据调用" class="headerlink" title="数据调用"></a>数据调用</h1><p>创建一个测试脚本，如下所示：<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">@Test(dataProvider = <span class="string">"Authentication"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> f(<span class="keyword">String</span> a, <span class="keyword">String</span> b) &#123;</span><br><span class="line"> System.out.<span class="built_in">println</span>(a  + <span class="string">" "</span> + b);</span><br><span class="line"> System.out.<span class="built_in">println</span>(<span class="keyword">this</span>.toString());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@DataProvider</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">Object</span>[][] Authentication() <span class="keyword">throws</span> Exception&#123;  </span><br><span class="line"> <span class="keyword">Object</span>[][] testObjArray = ExcelUtils.getTableArray(<span class="string">"C:/test.xlsx"</span>,<span class="string">"search"</span>);    </span><br><span class="line"> <span class="keyword">return</span> (testObjArray);     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h1><p>执行脚本后，结果显示如下：<br><img src="/images/Selenium/dataprovider_result.jpg" alt="Test Result"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Selenium Highlight页面元素]]></title>
      <url>http://izheyi.com/2014/06/01/Selenium-Highlight%E9%A1%B5%E9%9D%A2%E5%85%83%E7%B4%A0/</url>
      <content type="html"><![CDATA[<p>大家都知道QTP的对象高亮显示功能特别强大， Selenium Webderiver也可以实现此功能。</p>
<p>高亮显示有时候对Debug还是相当有用的。</p>
<h1 id="解决脚本"><a href="#解决脚本" class="headerlink" title="解决脚本"></a>解决脚本</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;Summary&gt;</span> </span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> Highlight WebElement </span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;/Summary&gt;</span> </span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">highlightElement</span>(<span class="params">WebDriver driver, WebElement element</span>) </span>&#123;   </span><br><span class="line">	<span class="keyword">if</span>(element.isDisplayed())</span><br><span class="line">	&#123;</span><br><span class="line">	JavascriptExecutor js = (JavascriptExecutor) driver;         </span><br><span class="line">	js.executeScript(<span class="string">"element = arguments[0];"</span> +            </span><br><span class="line">	<span class="string">"original_style = element.getAttribute('style');"</span> +            </span><br><span class="line">			<span class="string">"element.setAttribute('style', original_style + \";"</span> +        </span><br><span class="line">	<span class="string">"background: yellow; border: 2px solid red;\");"</span> +         </span><br><span class="line">			<span class="string">"setTimeout(function()&#123;element.setAttribute('style', original_style);&#125;, 1000);"</span>, element); </span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		System.<span class="keyword">out</span>.println(<span class="string">"Can't idnetify the object: "</span> + element);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="调用脚本"><a href="#调用脚本" class="headerlink" title="调用脚本"></a>调用脚本</h1><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">driver.<span class="keyword">get</span>(<span class="string">"http://ww.baidu.com"</span>);</span><br><span class="line">WebElement button = driver.findElement(By.<span class="property">id</span>(<span class="string">"su"</span>));</span><br><span class="line">hilightElement(driver, button);</span><br></pre></td></tr></table></figure>
<h1 id="结果显示"><a href="#结果显示" class="headerlink" title="结果显示"></a>结果显示</h1><p><img src="/images/Selenium/highlight_result.jpg" alt="Highlight Result"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ReportNG替换TestNG默认结果报告]]></title>
      <url>http://izheyi.com/2014/05/23/ReportNG%E6%9B%BF%E6%8D%A2TestNG%E9%BB%98%E8%AE%A4%E7%BB%93%E6%9E%9C%E6%8A%A5%E5%91%8A/</url>
      <content type="html"><![CDATA[<p>TestNG默认的报告虽然内容挺全，但是展现效果却不太理想，不易阅读。因此我们想利用ReportNG来替代TestNG默认的report。</p>
<p>什么是ReportNG呢？这里不多说，请直接参见<a href="http://reportng.uncommons.org/" target="_blank" rel="external">ReprotNG</a></p>
<p>要替换默认报告，我们需要做以下操作：<br><a id="more"></a></p>
<ol>
<li><p>下载关加载相应的Jar包<br>reportng-1.1.4.jar<br>velocity-dep-1.4.jar<br>guice-4.0.jar<br>请自己去相应的网站上下载。</p>
</li>
<li><p>Disable掉TestNG默认的Listeners<br><img src="/images/Selenium/reportng_set_listener.jpg" alt=""></p>
</li>
<li><p>把Listeners添加到TestNG的XML文件中<br><img src="/images/Selenium/reportng_add_listener.jpg" alt=""></p>
</li>
<li><p>运行脚本之后，你会发现在“test-output”文件夹下生成一个“html”文件夹，点击index.html去查看ReportNG生成的报告<br><img src="/images/Selenium/reportng_result.jpg" alt=""></p>
</li>
</ol>
<p>对ReportNG有一个初步的认识，后边如果有机会会研究一下ReportNG的定制。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Prop.Properties配置测试应用的环境和其他配置项]]></title>
      <url>http://izheyi.com/2014/05/20/Prop-Properties%E9%85%8D%E7%BD%AE%E6%B5%8B%E8%AF%95%E5%BA%94%E7%94%A8%E7%9A%84%E7%8E%AF%E5%A2%83%E5%92%8C%E5%85%B6%E4%BB%96%E9%85%8D%E7%BD%AE%E9%A1%B9/</url>
      <content type="html"><![CDATA[<p>prop.propertiesfile contains important info that needs to be changed before the test is run, such as: Browser type (browser =), Product (test-prod). Depend your test setup; you may not need the test-env and other configurations.</p>
<h1 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h1><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># Browser type</span></span><br><span class="line"><span class="preprocessor"># 1 =&gt; FireFox</span></span><br><span class="line"><span class="preprocessor"># 2 =&gt; IE</span></span><br><span class="line"><span class="preprocessor"># 3 =&gt; Chrome</span></span><br><span class="line"><span class="preprocessor"># 4 =&gt; Safari</span></span><br><span class="line">BrowserType = <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Test server and login information</span></span><br><span class="line">BaseURL = http:<span class="comment">//www.site.com/</span></span><br><span class="line">UserName = </span><br><span class="line">UserPwd = </span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># UI actions' timeout in millisecond</span></span><br><span class="line">Timeout = <span class="number">30000</span></span><br></pre></td></tr></table></figure>
<h1 id="提取"><a href="#提取" class="headerlink" title="提取"></a>提取</h1><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GlobalSetting</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> Properties prop = getProperties();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> String baseURL = prop.getProperty(<span class="string">"BaseURL"</span>);</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> browserType = Integer.parseInt(prop.getProperty(<span class="string">"BrowserType"</span>));</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="function">String <span class="title">getProperty</span><span class="params">(String property)</span> </span>&#123;</span><br><span class="line">		<span class="function"><span class="keyword">return</span> prop.<span class="title">getProperty</span><span class="params">(property)</span></span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="function">Properties <span class="title">getProperties</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		Properties prop = <span class="keyword">new</span> Properties();</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			FileInputStream file = <span class="keyword">new</span> FileInputStream(<span class="string">"prop1.properties"</span>);</span><br><span class="line">			prop.load(file);</span><br><span class="line">			file.close();</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> prop;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>#引用<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="at_rule">@<span class="keyword">Test</span></span><br><span class="line">public void <span class="function">doTest</span>()</span>&#123;</span><br><span class="line">	<span class="tag">System</span><span class="class">.out</span><span class="class">.Println</span>(<span class="tag">GlobalSetting</span><span class="class">.baseURL</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Selenium抓图并保存到TestNG报告中]]></title>
      <url>http://izheyi.com/2014/05/19/Selenium%E6%8A%93%E5%9B%BE%E5%B9%B6%E4%BF%9D%E5%AD%98%E5%88%B0TestNG%E6%8A%A5%E5%91%8A%E4%B8%AD/</url>
      <content type="html"><![CDATA[<p>这里不讲解怎么在Eclipse安装配置TestNG，网上一搜一大把，大家自己去实践一下。<br>在这里主要说一下用Java来实现Selenium Webdriver的截图功能和把截图写到TestNG的报告中。</p>
<h1 id="Capture-screenshot"><a href="#Capture-screenshot" class="headerlink" title="Capture screenshot"></a>Capture screenshot</h1><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Capture screenshot</span></span><br><span class="line"><span class="keyword">public</span> String captureScreenShot() </span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    String dir = <span class="string">"screenshot"</span>; </span><br><span class="line">    String date = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyyMMdd"</span>).format(<span class="keyword">new</span> Date());</span><br><span class="line">    String time = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"HHmmss"</span>).format(<span class="keyword">new</span> Date());</span><br><span class="line">    String screenShotPath = dir + <span class="keyword">File</span>.separator + date + <span class="keyword">File</span>.separator + time + <span class="string">".png"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">File</span> <span class="keyword">source</span> = ((TakesScreenshot)driver).getScreenshotAs(OutputType.<span class="keyword">FILE</span>);</span><br><span class="line">        FileUtils.copyFile(<span class="keyword">source</span>, <span class="keyword">new</span> <span class="keyword">File</span>(screenShotPath)); </span><br><span class="line">        screenShotPath = screenShotPath.substring(screenShotPath.indexOf(<span class="string">"\\"</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span>(IOException e) </span><br><span class="line">    &#123;</span><br><span class="line">        screenShotPath = <span class="string">"Failed to capture screenshot: "</span> + e.getMessage();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> screenShotPath; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="Write-to-TestNG"><a href="#Write-to-TestNG" class="headerlink" title="Write to TestNG"></a>Write to TestNG</h1><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="literal">void</span> writeToTestNG(<span class="built_in">String</span> proMessage) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">String</span> png = captureScreenShot();</span><br><span class="line">    Reporter<span class="built_in">.</span><span class="keyword">log</span>(<span class="string">"["</span> + logTime + <span class="string">"] "</span> + proMessage);</span><br><span class="line">    <span class="built_in">String</span> <span class="keyword">log</span> = <span class="literal">new</span> File(<span class="string">"screenshot"</span>)<span class="built_in">.</span>getAbsolutePath();</span><br><span class="line">    Reporter<span class="built_in">.</span><span class="keyword">log</span>(<span class="string">"&lt;br/&gt;&lt;img src=\""</span> + <span class="keyword">log</span>  + <span class="string">"/"</span> + png + <span class="string">"\" /&gt;"</span>);</span><br></pre></td></tr></table></figure>
<h1 id="Call-function"><a href="#Call-function" class="headerlink" title="Call function"></a>Call function</h1><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">search</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    openURL();</span><br><span class="line">    BaiduSearch yy = <span class="keyword">new</span> BaiduSearch(driver);</span><br><span class="line">    yy.searchFor(<span class="string">"searchTest"</span>);</span><br><span class="line">    writeToTestNG(<span class="string">"testing "</span>);</span><br><span class="line">    driver.quit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="Result"><a href="#Result" class="headerlink" title="Result"></a>Result</h1><p><img src="/images/Selenium/capture_pic_to_report.jpg" alt="TestNG"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[IE浏览器Zoom和Protected Model Setting]]></title>
      <url>http://izheyi.com/2014/04/04/IE%E6%B5%8F%E8%A7%88%E5%99%A8Zoom%E5%92%8CProtected-Model-Setting/</url>
      <content type="html"><![CDATA[<p>Selenium Webdriver在IE下跑脚本的时候要保证页面大小为100%，且要在IE internet options, selectSecurity tab and uncheck “Enable Protected Mode” for all security zone.</p>
<p>为了不手动来做这些设置，我们可以在Launch IE Driver的时候控制，如下：<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">System.setProperty(<span class="string">"webdriver.ie.driver"</span>, <span class="string">"resource\\IEDriverServer.exe"</span>);</span><br><span class="line">DesiredCapabilities ieCapabilities = DesiredCapabilities.internetExplorer();</span><br><span class="line"></span><br><span class="line"><span class="comment">//zoom</span></span><br><span class="line">ieCapabilities.setCapability(<span class="string">"ignoreZoomSetting"</span>, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Security</span></span><br><span class="line">ieCapabilities.setCapability(InternetExplorerDriver.INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS,<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">WebDriver driver = <span class="keyword">new</span> InternetExplorerDriver(ieCapabilities);</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[IEDriverServer在进程中没有关闭？]]></title>
      <url>http://izheyi.com/2014/03/16/IEDriverServer%E5%9C%A8%E8%BF%9B%E7%A8%8B%E4%B8%AD%E6%B2%A1%E6%9C%89%E5%85%B3%E9%97%AD%EF%BC%9F/</url>
      <content type="html"><![CDATA[<p>有时候跑完脚本后，IEDriverServer.exe进程没杀掉。</p>
<p><strong>解决方法：</strong></p>
<p>在关闭driver时用Driver.Quit();不要用Driver.Close();<br>Driver.Quit() – Quit this dirver, closing every associated windows;<br>Driver.Close() – Close the current window, quiting the browser if it is the last window currently open.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[获取ToolTip几种方法]]></title>
      <url>http://izheyi.com/2014/01/02/%E8%8E%B7%E5%8F%96ToolTip%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<h1 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h1><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">' Mouseover </span></span><br><span class="line">Browser(<span class="string">"XXXX"</span>).Page(<span class="string">"YYYY"</span>).Link(<span class="string">"Link A"</span>).MouseOver </span><br><span class="line"><span class="comment">' Wait 1 second to get the tool tip displayed. </span></span><br><span class="line">wait <span class="number">1</span></span><br><span class="line"><span class="comment">' Capture the text of the tooltip object </span></span><br><span class="line">txt= Window(<span class="string">"nativeclass:=tooltips_class32"</span>).GetROProperty(<span class="string">"text"</span>) </span><br><span class="line">msgbox txt</span><br></pre></td></tr></table></figure>
<h1 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h1><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">temp=Brower(<span class="string">"name"</span>).Page(<span class="string">"page"</span>).Image(<span class="string">"imagename).GetROProperty("</span>alt<span class="string">") </span></span><br><span class="line">msgbox temp</span><br></pre></td></tr></table></figure>
<h1 id="方法3"><a href="#方法3" class="headerlink" title="方法3"></a>方法3</h1><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">temp=Brower(<span class="string">"name"</span>).Page(<span class="string">"page"</span>).Image(<span class="string">"imagename).GetROProperty("</span>tooltip<span class="string">") </span></span><br><span class="line">msgbox temp</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[关键字驱动测试框架之十 - 后话]]></title>
      <url>http://izheyi.com/2013/12/02/%E5%85%B3%E9%94%AE%E5%AD%97%E9%A9%B1%E5%8A%A8%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E4%B9%8B%E5%8D%81-%E5%90%8E%E8%AF%9D/</url>
      <content type="html"><![CDATA[<p>本来这个框架的设计就是在POC阶段而已，由于各种方面的原因，没有真正能够应用起来，不过在研究的过程中，还是学到了很多思想，技术 ==，能够从更高一点LEVEL去看自动化测试。</p>
<p>后来本人也看了robotframework的关键字驱动测试框架，感觉思路上大体都是相通的，但是学习成本个人感觉还是蛮高的。</p>
<p>看过一篇文章<a href="http://www.cnblogs.com/jackei/archive/2012/11/25/2787231.html" target="_blank" rel="external">关键字驱动的过去和未来</a>，作者：陈雷 (Jackei)。非常有感触，贴到这以便查看。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux-管道和过滤器 & 阶段总结]]></title>
      <url>http://izheyi.com/2013/08/15/Linux-%E7%AE%A1%E9%81%93%E5%92%8C%E8%BF%87%E6%BB%A4%E5%99%A8/</url>
      <content type="html"><![CDATA[<h1 id="管道和过滤器"><a href="#管道和过滤器" class="headerlink" title="管道和过滤器"></a>管道和过滤器</h1><p>有时候，我们可以把两个命令连起来使用，一个命令的输出作为另一个命令的输入，这就叫做管道。为了建立管道，需要在两个命令之间使用竖线(|)连接。<br>能够接受数据，过滤（处理或筛选）后再输出的工具，称为过滤器。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation /]<span class="preprocessor"># ps | grep bash</span></span><br><span class="line"> <span class="number">3326</span> pts/<span class="number">0</span>    <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> bash</span><br><span class="line"> <span class="number">3396</span> pts/<span class="number">0</span>    <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> bash</span><br><span class="line"> <span class="number">3477</span> pts/<span class="number">0</span>    <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> bash</span><br><span class="line"> <span class="number">3521</span> pts/<span class="number">0</span>    <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> bash</span><br><span class="line"> <span class="number">3568</span> pts/<span class="number">0</span>    <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> bash</span><br><span class="line"> <span class="number">3711</span> pts/<span class="number">0</span>    <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> bash</span><br><span class="line"> <span class="number">3759</span> pts/<span class="number">0</span>    <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> bash</span><br><span class="line"> <span class="number">4282</span> pts/<span class="number">0</span>    <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> bash</span><br></pre></td></tr></table></figure></p>
<p>grep 是一个强大的文本搜索工具，可以使用正则表达式，并返回匹配的行，grep 可以看做是一个过滤器。</p>
<p>这里不做深入学习，知道管道是什么，怎么怎么用就好了，以后用到了再细学吧。</p>
<h1 id="本阶段学习总结"><a href="#本阶段学习总结" class="headerlink" title="本阶段学习总结"></a>本阶段学习总结</h1><p>主要学了一下Linux的基本架构、命令和应用，能够在Linux下进行简单的操作。<br>还了解以下方面的基本使用：</p>
<ul>
<li>进程的简单操作</li>
<li>网络的基本命令</li>
<li>打包解包</li>
<li>环境变量的设置等</li>
</ul>
<p>命令查看：<a href="http://man.linuxde.net/" target="_blank" rel="external">Linux命令大全</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux-vi编辑器]]></title>
      <url>http://izheyi.com/2013/08/10/Linux-vi%E7%BC%96%E8%BE%91%E5%99%A8/</url>
      <content type="html"><![CDATA[<p>vi编辑器是所有Unix及Linux系统下标准的编辑器，他就相当于windows系统中的记事本一样。<br>vim可以当作vi的升级版本，他可以用多种颜色的方式来显示一些特殊的信息。</p>
<h1 id="三种模式"><a href="#三种模式" class="headerlink" title="三种模式"></a>三种模式</h1><p>基本上vi可以分为三种状态，分别是一般模式、编辑模式和命令行模式，各模式的功能区分如下：</p>
<ul>
<li>一般模式<br>以vi打开一个文件就直接进入一般模式了(这是默认的模式)。在这个模式中， 你可以使用上下左右按键来移动光标，你可以使用删除字符或删除整行来处理文件内容， 也可以使用复制、粘贴来处理你的文件数据。</li>
<li>编辑模式<br>在一般模式中可以进行删除、复制、粘贴等的操作，但是却无法编辑文件的内容，只有当到你按下【i, I, o, O, a, A, r, R】等任何一个字母之后才会进入编辑模式。这时候屏幕的左下方会出现【INSERT或 REPLACE】的字样，此时才可以进行编辑。而如果要回到一般模式时， 则必须要按下【Esc】即可退出编辑模式。</li>
<li>命令行模式<br>输入【 : / ? 】三个中的任何一个，就可以将光标移动到最底下那一行。在这个模式中， 可以提供查找、读取、存盘、替换字符、离开vi、显示行号等的动作则是在此模式中完成的！<br><img src="/images/linux/vi_module.jpg" alt=""></li>
</ul>
<h1 id="按键说明"><a href="#按键说明" class="headerlink" title="按键说明"></a>按键说明</h1><ul>
<li><p>基本常用命令<br><img src="/images/linux/vi_insert.jpg" alt=""><br><img src="/images/linux/vi_locate.jpg" alt=""><br><img src="/images/linux/vi_find.jpg" alt=""><br><img src="/images/linux/vi_copy.jpg" alt=""><br><img src="/images/linux/vi_replace.jpg" alt=""><br><img src="/images/linux/vi_delete.jpg" alt=""><br><img src="/images/linux/vi_quit.jpg" alt=""></p>
</li>
<li><p>高级命令<br>J 将当前行和下一行连接为一行<br>&lt;&lt; 将当前行左移一个单位（一个缩进宽度）<br>‘&gt;&gt; 将当前行右移一个单位（一个缩进宽度）<br>~ 改变当前字符的大小写<br>^G Ctrl+G组合键可以显示当前文件名和状态<br>U 撤销对当前行所做的修改<br>u 撤销上次操作，再次按 ‘u’ 恢复该次操作<br>:f 以百分号(%)的形式显示当前光标在文件中的位置、文件名和文件的总行数<br>:f filename 将文件重命名为 filename<br>:w filename 保存修改到 filename<br>:e filename 打开另一个文件名为 filename 的文件<br>:cd dirname 改变当前工作目录到 dirname<br>:e # 在两个打开的文件之间进行切换<br>:n 如果用 vi 打开了多个文件，可以使用 :n 切换到下一个文件<br>:p 如果用 vi 打开了多个文件，可以使用 :n 切换到上一个文件<br>:N 如果用 vi 打开了多个文件，可以使用 :n 切换到上一个文件<br>:r file 读取文件并在当前行的后边插入<br>:nr file 读取文件并在第 n 行后边插入 </p>
</li>
</ul>
<p>这里罗列了常用的命令，不建议背，多练习，熟悉了基本的操作应该就没有啥问题了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux-用户和用户组管理]]></title>
      <url>http://izheyi.com/2013/08/05/Linux-%E7%94%A8%E6%88%B7%E5%92%8C%E7%94%A8%E6%88%B7%E7%BB%84%E7%AE%A1%E7%90%86/</url>
      <content type="html"><![CDATA[<p>在Linux中，有三种用户： </p>
<ul>
<li>Root用户：也称为超级用户，对系统拥有完全的控制权限。超级用户可以不受限制的运行任何命令。Root用户可以看做是系统管理员。</li>
<li>系统用户：系统用户是Linux运行某些程序所必须的用户，例如 mail 用户、sshd 用户等。系统用户通常为系统功能所必须的，不建议修改这些用户。</li>
<li>普通用户：一般用户都是普通用户，这些用户对系统文件的访问受限，不能执行全部Linux命令。</li>
</ul>
<p>Linux支持用户组，用户组就是具有相同特征的用户的集合。一个组可以包含多个用户，每个用户也可以属于不同的组。用户组在Linux中扮演着重要的角色，方便管理员对用户进行集中管理。</p>
<h1 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h1><p>主要涉及到用户账号的添加、修改和删除。</p>
<h2 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h2><p>可以使用useradd命令，语法为：<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -<span class="keyword">d</span> homedir -<span class="keyword">g</span> groupname -<span class="keyword">m</span> -s <span class="keyword">shell</span> -<span class="keyword">u</span> userid accountname</span><br></pre></td></tr></table></figure></p>
<p>每个选项的含义如下：<br>-d homedir 指定用户主目录。<br>-g groupname 指定用户组。<br>-m 如果主目录不存在，就创建。<br>-s shell 为用户指定默认Shell。<br>-u userid 指定用户ID。<br>accountname 用户名。<br>如果不指定任何选项，系统将使用默认值。</p>
<p>用户被创建后，没有口令，但是被系统锁定，无法使用，必须为其指定口令后才可以使用，即使是指定空口令。可以使用 passwd 命令来设置密码，例如：<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="constant">@Automation</span> home]<span class="preprocessor"># passwd rzhang</span></span><br><span class="line">更改用户 rzhang 的密码 。</span><br><span class="line">新的 密码：</span><br><span class="line">重新输入新的 密码：</span><br><span class="line">passwd： 所有的身份验证令牌已经成功更新。</span><br></pre></td></tr></table></figure></p>
<p><em>Notes: 如果你是管理员，输入 $ passwd username 可以修改你所管理的用户的密码；否则只能修改你自己的密码（不需要提供username）。 </em></p>
<h2 id="修改用户"><a href="#修改用户" class="headerlink" title="修改用户"></a>修改用户</h2><p>usermod 命令可以修改现有用户的信息。usermod 命令的选项和 useradd 相同，不过可以增加 -l 选项来更改用户名。<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">tt</span>:<span class="attribute">x</span>:<span class="number">503</span>:<span class="number">503</span>::/home/<span class="attribute">tt</span>:/bin/bash</span><br><span class="line">[root<span class="variable">@Automation</span> file]# usermod -l ttt tt</span><br><span class="line">[root<span class="variable">@Automation</span> file]# cat /etc/passwd</span><br><span class="line"><span class="attribute">ttt</span>:<span class="attribute">x</span>:<span class="number">503</span>:<span class="number">503</span>::/home/<span class="attribute">tt</span>:/bin/bash</span><br></pre></td></tr></table></figure></p>
<h2 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h2><p>如果一个用户的账号不再使用，可以从系统中删除。删除用户账号就是要将/etc/passwd等系统文件中的该用户记录删除，必要时还删除用户的主目录。<br>userdel 命令可以用来删除现有用户。userdel 是一个危险的命令，请谨慎使用。<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>userdel -r username</span><br></pre></td></tr></table></figure></p>
<p>常用的选项是-r，它的作用是把用户的主目录一起删除。 </p>
<h1 id="用户组管理"><a href="#用户组管理" class="headerlink" title="用户组管理"></a>用户组管理</h1><p>每个用户都有一个用户组，系统可以对一个用户组中的所有用户进行集中管理。</p>
<h2 id="添加用户组"><a href="#添加用户组" class="headerlink" title="添加用户组"></a>添加用户组</h2><p>默认的用户组通常用来管理系统用户，不建议将普通用户添加到这些用户组。使用groupadd命令创建用户组的语法为：<br><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupadd <span class="comment">[-g gid <span class="comment">[-o]</span>]</span> <span class="comment">[-r]</span> <span class="comment">[-f]</span> groupname</span><br></pre></td></tr></table></figure></p>
<p>每个选项的含义如下：<br>-g GID 以数字表示的用户组ID。<br>-o 可以使用重复的组ID。<br>-r 建立系统组，用来管理系统用户。<br>-f 强制创建。<br>groupname 用户组的名称。<br>如果不指定选项，系统将使用默认值。</p>
<h2 id="修改用户组"><a href="#修改用户组" class="headerlink" title="修改用户组"></a>修改用户组</h2><p>groupmod命令可以用来修改用户组，语法为：<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>groupmod -n newgroupname oldgroupname</span><br></pre></td></tr></table></figure></p>
<p>-n新用户组 将用户组的名字改为新名字</p>
<h2 id="删除用户组"><a href="#删除用户组" class="headerlink" title="删除用户组"></a>删除用户组</h2><p>如果要删除一个已有的用户组，使用groupdel命令，<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>groupdel groupname</span><br></pre></td></tr></table></figure></p>
<p>Notes: 如果一个用户同时属于多个用户组，那么用户可以在用户组之间切换，以便具有其他用户组的权限。<code>$ newgrp destinegroupname</code></p>
<h1 id="与用户和组有关的系统文件"><a href="#与用户和组有关的系统文件" class="headerlink" title="与用户和组有关的系统文件"></a>与用户和组有关的系统文件</h1><p>与用户和用户组相关的信息都存放在一些系统文件中，这些文件包括/etc/passwd, /etc/shadow, /etc/group等。<br><img src="/images/linux/user_group_systemfile.jpg" alt=""></p>
<h2 id="etc-passwd文件"><a href="#etc-passwd文件" class="headerlink" title="/etc/passwd文件"></a>/etc/passwd文件</h2><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="variable">@Automation</span> file]<span class="comment"># cat /etc/passwd</span></span><br><span class="line"><span class="symbol">root:</span><span class="symbol">x:</span><span class="number">0</span><span class="symbol">:</span><span class="number">0</span><span class="symbol">:root</span><span class="symbol">:/root</span><span class="symbol">:/bin/bash</span></span><br><span class="line"><span class="symbol">bin:</span><span class="symbol">x:</span><span class="number">1</span><span class="symbol">:</span><span class="number">1</span><span class="symbol">:bin</span><span class="symbol">:/bin</span><span class="symbol">:/sbin/nologin</span></span><br></pre></td></tr></table></figure>
<p>每行记录又被冒号(:)分隔为7个字段，其格式和具体含义如下：<br>用户名:密码:用户ID:组ID:描述信息:主目录:用户Shell<br><img src="/images/linux/user_passwd.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux-文件权限]]></title>
      <url>http://izheyi.com/2013/08/04/Linux-%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90/</url>
      <content type="html"><![CDATA[<p>Linux系统是一种典型的多用户系统，不同的用户处于不同的地位，拥有不同的权限。为了保护系统的安全性，Linux系统对不同的用户访问同一文件（包括目录文件）的权限做了不同的规定。</p>
<h1 id="查看权限"><a href="#查看权限" class="headerlink" title="查看权限"></a>查看权限</h1><p>使用 ls -l 命令可以查看与文件权限相关的信息：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation /]<span class="preprocessor"># ls -l</span></span><br><span class="line">drwxr-xr-x.   <span class="number">9</span> root root    <span class="number">4096</span> <span class="number">10</span>月  <span class="number">7</span> <span class="number">19</span>:<span class="number">28</span> apache-tomcat-<span class="number">8.0</span><span class="number">.28</span></span><br><span class="line">-rw-r--r--.   <span class="number">1</span> root root <span class="number">9708967</span> <span class="number">11</span>月 <span class="number">19</span> <span class="number">12</span>:<span class="number">17</span> apache-tomcat-<span class="number">8.0</span><span class="number">.28</span>.zip</span><br></pre></td></tr></table></figure></p>
<p><img src="/images/linux/quanxian_shuoming.jpg" alt=""><br>在Linux中第0位确定文件类型，代表这个文件是目录、文件或链接文件等等。<br>当为[ d ]则是目录<br>当为[ - ]则是文件；<br>若是[ l ]则表示为链接文档(link file)；<br>若是[ b ]则表示为装置文件里面的可供储存的接口设备(可随机存取装置)；<br>若是[ c ]则表示为装置文件里面的串行端口设备，例如键盘、鼠标(一次性读取装置)。</p>
<p>接下来的字符中，以三个为一组，每个字符都代表不同的权限，分别为读取(r)、写入(w)和执行(x)：<br>• 第一组字符(1-3)表示文件所有者的权限。<br>• 第二组字符(4-6)表示文件所属用户组的权限。<br>• 第三组字符(7-9)表示所有其他用户的权限。<br><img src="/images/linux/quanxian_rwx.jpg" alt="文件和目录访问模式"></p>
<h1 id="更改权限"><a href="#更改权限" class="headerlink" title="更改权限"></a>更改权限</h1><p>可以使用 chmod (change mode) 命令来改变文件或目录的访问权限，权限可以使用符号或数字来表示。</p>
<h2 id="使用符号表示权限"><a href="#使用符号表示权限" class="headerlink" title="使用符号表示权限"></a>使用符号表示权限</h2><p>u, g, o来代表三种身份的权限。<br><img src="/images/linux/quanxian_fuhao.jpg" alt=""></p>
<ul>
<li><p>增加权限(+)</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation file]<span class="preprocessor"># ls -l</span></span><br><span class="line">-rw-r--r--  <span class="number">1</span> root root    <span class="number">0</span> <span class="number">11</span>月 <span class="number">26</span> <span class="number">10</span>:<span class="number">35</span> right.txt</span><br><span class="line">[root@Automation file]<span class="preprocessor"># chmod g+w right.txt</span></span><br><span class="line">[root@Automation file]<span class="preprocessor"># ls -l</span></span><br><span class="line">-rw-rw-r--  <span class="number">1</span> root root    <span class="number">0</span> <span class="number">11</span>月 <span class="number">26</span> <span class="number">10</span>:<span class="number">35</span> right.txt</span><br></pre></td></tr></table></figure>
</li>
<li><p>删除权限(-)</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation file]<span class="preprocessor"># chmod u-w right.txt</span></span><br><span class="line">[root@Automation file]<span class="preprocessor"># ls -l</span></span><br><span class="line">drwxr-xr-x. <span class="number">2</span> root root <span class="number">4096</span> <span class="number">11</span>月 <span class="number">19</span> <span class="number">13</span>:<span class="number">27</span> a</span><br><span class="line">-r--rw-r--  <span class="number">1</span> root root    <span class="number">0</span> <span class="number">11</span>月 <span class="number">26</span> <span class="number">10</span>:<span class="number">35</span> right.txt</span><br></pre></td></tr></table></figure>
</li>
<li><p>指定权限(=)</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation file]<span class="preprocessor"># chmod o=rwx right.txt</span></span><br><span class="line">[root@Automation file]<span class="preprocessor"># ls -l</span></span><br><span class="line">-r--rw-rwx  <span class="number">1</span> root root    <span class="number">0</span> <span class="number">11</span>月 <span class="number">26</span> <span class="number">10</span>:<span class="number">35</span> right.txt</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="使用数字表示权限"><a href="#使用数字表示权限" class="headerlink" title="使用数字表示权限"></a>使用数字表示权限</h2><p>用数字来代表各个权限，各权限的分数对照表如下：<br>r: 4<br>w: 2<br>x: 1<br><img src="/images/linux/quanxian_shuzi.jpg" alt=""></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation file]<span class="preprocessor"># chmod <span class="number">755</span> right.txt</span></span><br><span class="line">[root@Automation file]<span class="preprocessor"># ls -l</span></span><br><span class="line">drwxr-xr-x. <span class="number">2</span> root root <span class="number">4096</span> <span class="number">11</span>月 <span class="number">19</span> <span class="number">13</span>:<span class="number">27</span> a</span><br><span class="line">-rwxr-xr-x  <span class="number">1</span> root root    <span class="number">0</span> <span class="number">11</span>月 <span class="number">26</span> <span class="number">10</span>:<span class="number">35</span> right.txt</span><br></pre></td></tr></table></figure>
<h1 id="更改所有者和组"><a href="#更改所有者和组" class="headerlink" title="更改所有者和组"></a>更改所有者和组</h1><h2 id="chown来改变文件的所有者"><a href="#chown来改变文件的所有者" class="headerlink" title="chown来改变文件的所有者"></a>chown来改变文件的所有者</h2><p>chown 命令是”change owner”的缩写。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation file]<span class="preprocessor"># chown yhu right.txt</span></span><br><span class="line">[root@Automation file]<span class="preprocessor"># ls -l</span></span><br><span class="line">-rwxr-xr-x  <span class="number">1</span> yhu  root    <span class="number">0</span> <span class="number">11</span>月 <span class="number">26</span> <span class="number">10</span>:<span class="number">35</span> right.txt</span><br></pre></td></tr></table></figure></p>
<h2 id="chgrp：来改变文件所在的群组"><a href="#chgrp：来改变文件所在的群组" class="headerlink" title="chgrp：来改变文件所在的群组"></a>chgrp：来改变文件所在的群组</h2><p>chgrp 命令是”change group”的缩写。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation file]<span class="preprocessor"># chgrp rzhang right.txt</span></span><br><span class="line">[root@Automation file]<span class="preprocessor"># ls -l</span></span><br><span class="line">-rwxr-xr-x  <span class="number">1</span> yhu  rzhang    <span class="number">0</span> <span class="number">11</span>月 <span class="number">26</span> <span class="number">10</span>:<span class="number">35</span> right.txt</span><br></pre></td></tr></table></figure></p>
<p><em>Notes：超级用户 root 可以不受限制的更改文件的所有者和用户组，但是普通用户只能更改所有者是自己的文件或目录。</em></p>
<h1 id="了解一下umask"><a href="#了解一下umask" class="headerlink" title="了解一下umask"></a>了解一下umask</h1><p>当我们登录系统之后创建一个文件总是有一个默认权限的，那么这个权限是怎么来的呢？这就是umask干的事情。默认情况下的umask值是022(可以用umask命令查看），此时缺省创建的文件不能有x权限的。<br>umask设置了用户创建文件的默认权限，它与chmod的效果刚好相反，umask设置的是权限“补码”，而chmod设置的是文件权限码。</p>
<p>换算：<br><img src="/images/linux/quanxian_umask.jpg" alt=""><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation file]<span class="preprocessor"># umask</span></span><br><span class="line"><span class="number">0022</span></span><br><span class="line">[root@Automation file]<span class="preprocessor"># umask <span class="number">077</span></span></span><br><span class="line">[root@Automation file]<span class="preprocessor"># touch a.txt</span></span><br><span class="line">[root@Automation file]<span class="preprocessor"># ls -l</span></span><br><span class="line">-rw-------  <span class="number">1</span> root root      <span class="number">0</span> <span class="number">11</span>月 <span class="number">26</span> <span class="number">11</span>:<span class="number">18</span> a.txt</span><br><span class="line">-rwxr-xr-x  <span class="number">1</span> yhu  rzhang    <span class="number">0</span> <span class="number">11</span>月 <span class="number">26</span> <span class="number">10</span>:<span class="number">35</span> right.txt</span><br></pre></td></tr></table></figure></p>
<h1 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h1><p>Linux玩的就是权限，但请记住，权限并不是越大越好。一定要多加练习，弄明白权限这块，为以后更好的使用Linux打下基础。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux 目录管理]]></title>
      <url>http://izheyi.com/2013/08/02/Linux-%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/</url>
      <content type="html"><![CDATA[<h1 id="绝对路径和相对路径"><a href="#绝对路径和相对路径" class="headerlink" title="绝对路径和相对路径"></a>绝对路径和相对路径</h1><p>如果一个路径以 / 开头，就称为绝对路径，它表示当前文件与根目录的关系。<br>不以 / 开头的路径称为相对路径，它表示文件与当前目录的关系。</p>
<h1 id="查看目录"><a href="#查看目录" class="headerlink" title="查看目录"></a>查看目录</h1><p>同文件一样，用ls命令。</p>
<h1 id="切换目录"><a href="#切换目录" class="headerlink" title="切换目录"></a>切换目录</h1><p>可以使用 cd 命令来改变当前所在目录，dirname 为路径，可以为相对路径，也可以为绝对路径。<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cd</span> dirname</span><br></pre></td></tr></table></figure></p>
<ul>
<li><p>返回根目录</p>
<figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="constant">@Automation</span> tmp]<span class="preprocessor"># cd /</span></span><br><span class="line">[root<span class="constant">@Automation</span> /]<span class="preprocessor">#</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>返回家目录</p>
<figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="constant">@Automation</span> /]<span class="preprocessor"># cd ~</span></span><br><span class="line">[root<span class="constant">@Automation</span> ~]<span class="preprocessor">#</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>返回进入当前目录前所在的目录</p>
<figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="constant">@Automation</span> ~]<span class="preprocessor"># cd -</span></span><br><span class="line">/</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="显示当前所在目录"><a href="#显示当前所在目录" class="headerlink" title="显示当前所在目录"></a>显示当前所在目录</h1><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="constant">@Automation</span> /]<span class="preprocessor"># pwd</span></span><br><span class="line">/</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h1><p>使用 mkdir 命令来创建目录。<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation <span class="type">file</span>]<span class="comment"># mkdir a</span></span><br><span class="line">[root@Automation <span class="type">file</span>]<span class="comment"># ls</span></span><br><span class="line">a</span><br></pre></td></tr></table></figure></p>
<p>也可以使用 mkdir 命令同时创建多个目录。</p>
<h2 id="创建父目录"><a href="#创建父目录" class="headerlink" title="创建父目录"></a>创建父目录</h2><p>mkdir创建目录时，如果上级目录不存在，就会报错。<br><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="variable">@Automation</span> <span class="keyword">file</span>]# mkdir b/c</span><br><span class="line">mkdir: 无法创建目录<span class="string">"b/c"</span>: 没有那个文件或目录</span><br><span class="line">[root<span class="variable">@Automation</span> <span class="keyword">file</span>]# mkdir -p b/c</span><br><span class="line">[root<span class="variable">@Automation</span> <span class="keyword">file</span>]# <span class="keyword">ls</span></span><br><span class="line">a  b</span><br><span class="line">[root<span class="variable">@Automation</span> <span class="keyword">file</span>]# cd b</span><br><span class="line">[root<span class="variable">@Automation</span> b]# <span class="keyword">ls</span></span><br><span class="line">c</span><br></pre></td></tr></table></figure></p>
<h1 id="复制目录"><a href="#复制目录" class="headerlink" title="复制目录"></a>复制目录</h1><p>同文件一样，用cp命令。<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cp</span> [source] [destination]</span><br></pre></td></tr></table></figure></p>
<h1 id="移动和重命名目录"><a href="#移动和重命名目录" class="headerlink" title="移动和重命名目录"></a>移动和重命名目录</h1><p>同文件一样，用mv命令。<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$mv</span> olddir newdir</span><br></pre></td></tr></table></figure></p>
<h1 id="删除目录"><a href="#删除目录" class="headerlink" title="删除目录"></a>删除目录</h1><ul>
<li><p>删除空目录</p>
<figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rmdir <span class="string">[p]</span> <span class="string">[dir_name]</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>删除非空目录<br>同文件一样，用rm命令。</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation <span class="keyword">file</span>]# <span class="keyword">ls</span></span><br><span class="line">a  b</span><br><span class="line">[root@Automation <span class="keyword">file</span>]# <span class="keyword">cd</span> b</span><br><span class="line">[root@Automation b]# touch a.txt</span><br><span class="line">[root@Automation b]# <span class="keyword">ls</span></span><br><span class="line">a.txt</span><br><span class="line">[root@Automation b]# <span class="keyword">cd</span> ..</span><br><span class="line">[root@Automation <span class="keyword">file</span>]# <span class="keyword">rm</span> b</span><br><span class="line"><span class="keyword">rm</span>: 无法删除<span class="string">"b"</span>: 是一个目录</span><br><span class="line">[root@Automation <span class="keyword">file</span>]# <span class="keyword">rm</span> -r b</span><br><span class="line"><span class="keyword">rm</span>：是否进入目录<span class="string">"b"</span>? <span class="literal">y</span></span><br><span class="line"><span class="keyword">rm</span>：是否删除普通空文件 <span class="string">"b/a.txt"</span>？<span class="literal">y</span></span><br><span class="line"><span class="keyword">rm</span>：是否删除目录 <span class="string">"b"</span>？<span class="literal">y</span></span><br><span class="line">[root@Automation <span class="keyword">file</span>]# <span class="keyword">ls</span></span><br><span class="line">a</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux 文件管理]]></title>
      <url>http://izheyi.com/2013/08/01/Linux-%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/</url>
      <content type="html"><![CDATA[<p>在Linux中，有三种基本的文件类型： </p>
<ul>
<li>普通文件<br>普通文件是以字节为单位的数据流，包括文本文件、源码文件、可执行文件等。</li>
<li>目录<br>目录可以包含普通文件和特殊文件，目录相当于Windows和Mac OS中的文件夹。 </li>
<li>设备文件<br>Linux 与外部设备（例如光驱，打印机，终端，modern等）是通过一种被称为设备文件的文件来进行通信。</li>
</ul>
<h1 id="新建文件"><a href="#新建文件" class="headerlink" title="新建文件"></a>新建文件</h1><ul>
<li><p>单个文件</p>
<figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="variable">@Automation</span> <span class="keyword">file</span>]# <span class="keyword">ls</span></span><br><span class="line">[root<span class="variable">@Automation</span> <span class="keyword">file</span>]# touch a.txt</span><br><span class="line">[root<span class="variable">@Automation</span> <span class="keyword">file</span>]# <span class="keyword">ls</span></span><br><span class="line">a.txt</span><br></pre></td></tr></table></figure>
</li>
<li><p>多个文件</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr_selector">[root@Automation file]</span># <span class="tag">touch</span> <span class="tag">b</span><span class="class">.txt</span> <span class="tag">c</span><span class="class">.txt</span></span><br><span class="line"><span class="attr_selector">[root@Automation file]</span># <span class="tag">ls</span></span><br><span class="line"><span class="tag">a</span><span class="class">.txt</span>  <span class="tag">b</span><span class="class">.txt</span>  <span class="tag">c</span><span class="class">.txt</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><em>Note: 带空格的文件，用引号 “hello world”。</em><br><a id="more"></a></p>
<h1 id="编辑文件"><a href="#编辑文件" class="headerlink" title="编辑文件"></a>编辑文件</h1><p>vi 编辑器可以用来编辑文件。会在后面章节专门说明。</p>
<h1 id="查看文件"><a href="#查看文件" class="headerlink" title="查看文件"></a>查看文件</h1><h2 id="查看目录下文件"><a href="#查看目录下文件" class="headerlink" title="查看目录下文件"></a>查看目录下文件</h2><p>查看当前目录下的文件和目录可以使用 ls 命令，通过 ls 命令的 -l 选项，你可以获取更多文件信息。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation file]<span class="preprocessor"># ls -l</span></span><br><span class="line">总用量 <span class="number">0</span></span><br><span class="line">-rw-r--r--. <span class="number">1</span> root root <span class="number">0</span> <span class="number">11</span>月 <span class="number">19</span> <span class="number">12</span>:<span class="number">53</span> a.txt</span><br><span class="line">-rw-r--r--. <span class="number">1</span> root root <span class="number">0</span> <span class="number">11</span>月 <span class="number">19</span> <span class="number">12</span>:<span class="number">56</span> b.txt</span><br><span class="line">-rw-r--r--. <span class="number">1</span> root root <span class="number">0</span> <span class="number">11</span>月 <span class="number">19</span> <span class="number">12</span>:<span class="number">56</span> c.txt</span><br></pre></td></tr></table></figure></p>
<p>每一列的含义如下： </p>
<ul>
<li>第一列：文件类型。</li>
<li>第二列：表示文件个数。如果是文件，那么就是1；如果是目录，那么就是该目录中文件的数目。</li>
<li>第三列：文件的所有者，即文件的创建者。</li>
<li>第四列：文件所有者所在的用户组。</li>
<li>第五列：文件大小（以字节计）。</li>
<li>第六列：文件被创建或上次被修改的时间。</li>
<li>第七列：文件名或目录名。</li>
</ul>
<p>隐藏文件的第一个字符为英文句号或点号(.)，查看隐藏文件需要使用 ls 命令的 -a 选项。</p>
<h2 id="查看文件内容"><a href="#查看文件内容" class="headerlink" title="查看文件内容"></a>查看文件内容</h2><ul>
<li>cat  由第一行开始显示文件内容</li>
<li>tac  从最后一行开始显示，可以看出 tac 是 cat 的倒著写！</li>
<li>nl   显示的时候，顺道输出行号！</li>
<li>more 一页一页的显示文件内容</li>
<li>less 与 more 类似，但是比 more 更好的是，他可以往前翻页！</li>
<li>head 只看头几行</li>
<li>tail 只看尾巴几行</li>
</ul>
<h2 id="统计单词个数"><a href="#统计单词个数" class="headerlink" title="统计单词个数"></a>统计单词个数</h2><p>可以使用 wc 命令来统计当前文件的行数、单词数和字符数。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation file]<span class="preprocessor"># wc a.txt</span></span><br><span class="line"> <span class="number">4</span>  <span class="number">4</span> <span class="number">14</span> a.txt</span><br></pre></td></tr></table></figure></p>
<p>每一列的含义如下： </p>
<ul>
<li>第一列：文件的总行数</li>
<li>第二列：单词数目</li>
<li>第三列：文件的字节数，即文件的大小</li>
<li>第四列：文件名</li>
</ul>
<h1 id="复制文件"><a href="#复制文件" class="headerlink" title="复制文件"></a>复制文件</h1><p>可以使用 cp 命令来复制文件。<br><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cp <span class="string">[source_file]</span> <span class="string">[destination_file]</span></span><br></pre></td></tr></table></figure></p>
<h1 id="移动和重命名文件"><a href="#移动和重命名文件" class="headerlink" title="移动和重命名文件"></a>移动和重命名文件</h1><p>重命名文件可以使用 mv 命令。<br><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mv <span class="string">[old_name]</span> <span class="string">[new_name]</span></span><br></pre></td></tr></table></figure></p>
<h1 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h1><p>rm命令可以删除文件。<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@Automation <span class="keyword">file</span>]# <span class="keyword">rm</span> c.txt</span><br><span class="line"><span class="keyword">rm</span>：是否删除普通空文件 <span class="string">"c.txt"</span>？<span class="literal">y</span></span><br><span class="line">[root@Automation <span class="keyword">file</span>]# <span class="keyword">ls</span></span><br><span class="line">a.txt  b.txt</span><br></pre></td></tr></table></figure></p>
<p>也可以一次删除多个文件，文件名用空格分隔。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux 文件系统]]></title>
      <url>http://izheyi.com/2013/08/01/Linux-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</url>
      <content type="html"><![CDATA[<p>不学习一下Linux实在是不行了，本次学习记录对Linux的基本的操作和使用。<br>是在虚拟机下玩的，系统安装什么的，不做介绍。</p>
<h1 id="文件系统类型"><a href="#文件系统类型" class="headerlink" title="文件系统类型"></a>文件系统类型</h1><p>文件系统就是分区或磁盘上的所有文件的逻辑集合。<br>Linux中默认使用的文件系统类型是EXT3（EXT4），SWAP，同时也支持其他文件系统类型，如FAT16、FAT32、NTFS、XFS等。</p>
<h1 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h1><p>目录是一种类似于倒树的结构，根目录是“/”，其他目录都要位于根目录下。<br><img src="/images/linux/file_tree.jpg" alt="树状目录结构"></p>
<p>以下是对目录的解释：<br><img src="/images/linux/mulu_jieshi.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Vmware三种联网方式]]></title>
      <url>http://izheyi.com/2013/07/27/Vmware%E4%B8%89%E7%A7%8D%E8%81%94%E7%BD%91%E6%96%B9%E5%BC%8F/</url>
      <content type="html"><![CDATA[<p>VMware有三种联网方式：“桥接”、“NAT”、“Host-only”。</p>
<h1 id="Brigde——桥接"><a href="#Brigde——桥接" class="headerlink" title="Brigde——桥接"></a>Brigde——桥接</h1><p>默认使用VMnet0。该模式是相当于把你的虚拟机像一台真实主机一样接到你的网内，和你的主机具有同等地位。不过你需要多于一个的IP地址，并且需要手工为虚拟系统配置IP地址、子网掩码，而且还要和宿主机器处于同一网段，这样虚拟系统才能和宿主机器进行通信。<br>如果你想利用VMware在局域网内新建一个虚拟服务器，为局域网用户提供网络服务，就应该选择桥接模式。</p>
<h1 id="NAT——网络地址转换"><a href="#NAT——网络地址转换" class="headerlink" title="NAT——网络地址转换"></a>NAT——网络地址转换</h1><p>默认使用VMnet8。NAT 是  Network  address  translate的简称。这种方式也可以实现本机系统与虚拟系统的双向访问，但网络内其他机器不能访问虚拟系统，虚拟系统可通过本机系统用NAT协议访问网络内其他机器.</p>
<h1 id="Host-Only——私有网络共享主机"><a href="#Host-Only——私有网络共享主机" class="headerlink" title="Host-Only——私有网络共享主机"></a>Host-Only——私有网络共享主机</h1><p>默认使用VMnet1。提供的是主机和虚拟机之间的网络互访。只想让虚拟机和主机之间有数据交换。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[关键字驱动测试框架之九 - 测试报告]]></title>
      <url>http://izheyi.com/2013/07/03/%E5%85%B3%E9%94%AE%E5%AD%97%E9%A9%B1%E5%8A%A8%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E4%B9%8B%E4%B9%9D-%E6%B5%8B%E8%AF%95%E6%8A%A5%E5%91%8A/</url>
      <content type="html"><![CDATA[<p>我们对测试报告有两种方式的存储：</p>
<ol>
<li>把测试状态填写到测试用例列表里。</li>
<li>自动生成QTP报告，保存到框架Test Report文件夹下，并自动生成HTML文件。<br><img src="/images/QTP/keyword_frame_result.jpg" alt=""></li>
</ol>
<p>BTW，如果运行时Trigger了场景回复，会提取出错的详细信息并记录到测试用例列表的状态报告里；而且会自己注册生成Log日志到相应的Test Report 文件夹下。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[关键字驱动测试框架之八 - Test Run]]></title>
      <url>http://izheyi.com/2013/07/02/%E5%85%B3%E9%94%AE%E5%AD%97%E9%A9%B1%E5%8A%A8%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E4%B9%8B%E5%85%AB-Test-Run/</url>
      <content type="html"><![CDATA[<p>我们可以在Case List中手动选择要运行的Case，也可以分类执行Case。</p>
<p>可以对当前运行设置相关项。<br><img src="/images/QTP/keyword_frame_execute.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[关键字驱动测试框架之七 - Settings管理]]></title>
      <url>http://izheyi.com/2013/06/22/%E5%85%B3%E9%94%AE%E5%AD%97%E9%A9%B1%E5%8A%A8%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E4%B9%8B%E4%B8%83-Settings%E7%AE%A1%E7%90%86/</url>
      <content type="html"><![CDATA[<p>这里主要是存放一些框架相关的Global设置的相关项，如图所示：<br><img src="/images/QTP/keyword_frame_setting.jpg" alt="Global Settings"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[关键字驱动测试框架之六 - Action管理]]></title>
      <url>http://izheyi.com/2013/06/21/%E5%85%B3%E9%94%AE%E5%AD%97%E9%A9%B1%E5%8A%A8%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E4%B9%8B%E5%85%AD-Action%E7%AE%A1%E7%90%86/</url>
      <content type="html"><![CDATA[<p>要是对框架用的的Action关键字进行管理，根据Category设置该Action隶属于Step还是Keyword，Type来设置该Action是Built-in还是User-defined。<br><img src="/images/QTP/keyword_frame_action.jpg" alt="Action Center"></p>
<p>对此些事情况会有不同的处理方式：</p>
<ol>
<li>如果Category是Test Object，此Action关键字会在添加测试用例步骤时按Step添加时的Aciton列表里，这些关键字会在生动生成脚本的时候，动态地用“RegisterUserFunc”注册到相应的对象上。</li>
<li>如果Category是Function，此Aciton关键字会在添加测试用例步骤时按Keyword添加时的Keyword列表里，和用户自定义的Keyword一起显示。</li>
</ol>
<p>BTW，我们要对用到的Built-in和User-defined Action关键字手动添加到这列表里。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[VBS add hyperlink in Excel]]></title>
      <url>http://izheyi.com/2013/06/09/VBS-add-hyperlink-in-Excel/</url>
      <content type="html"><![CDATA[<p>Need to handle this situation when design framework. please refer the below:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Dim objExcel</span><br><span class="line">Set objExcel = WScript.<span class="function"><span class="title">CreateObject</span><span class="params">(<span class="string">"Excel.Application"</span>)</span></span></span><br><span class="line"></span><br><span class="line">objExcel<span class="class">.Visible</span> = TRUE</span><br><span class="line">objExcel<span class="class">.Workbooks</span><span class="class">.Open</span> <span class="string">"C:\test.xlsx"</span></span><br><span class="line">objExcel.<span class="function"><span class="title">Workbooks</span><span class="params">(<span class="number">1</span>)</span></span><span class="class">.Activate</span></span><br><span class="line">objExcel.<span class="function"><span class="title">Workbooks</span><span class="params">(<span class="number">1</span>)</span></span>.<span class="function"><span class="title">Worksheets</span><span class="params">(<span class="number">1</span>)</span></span>.<span class="function"><span class="title">Range</span><span class="params">(<span class="string">"A1"</span>)</span></span><span class="class">.Select</span></span><br><span class="line"></span><br><span class="line">Dim sLinkAddress</span><br><span class="line">sLinkAddress = <span class="string">"http://www.izheyi.com"</span></span><br><span class="line"></span><br><span class="line">objExcel.<span class="function"><span class="title">Workbooks</span><span class="params">(<span class="number">1</span>)</span></span>.<span class="function"><span class="title">Worksheets</span><span class="params">(<span class="number">1</span>)</span></span><span class="class">.Hyperlinks</span><span class="class">.Add</span> objExcel<span class="class">.Selection</span>, sLinkAddress</span><br><span class="line">objExcel.<span class="function"><span class="title">Workbooks</span><span class="params">(<span class="number">1</span>)</span></span><span class="class">.SaveAs</span> <span class="string">"C:\test.xlsx"</span></span><br><span class="line">objExcel<span class="class">.Quit</span></span><br><span class="line"></span><br><span class="line">set objExcel = nothing</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[C#将QTP结果(XML+XSL文档)转换为HTML格式]]></title>
      <url>http://izheyi.com/2013/06/02/C-%E5%B0%86QTP%E7%BB%93%E6%9E%9C-XML-XSL%E6%96%87%E6%A1%A3-%E8%BD%AC%E6%8D%A2%E4%B8%BAHTML%E6%A0%BC%E5%BC%8F/</url>
      <content type="html"><![CDATA[<p>根据QTP的XML结果和在安装目录dat下的xsl文件，把结果转换为HTML格式。<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">void</span> <span class="title">XMLToHTML</span><span class="params">()</span>  </span><br><span class="line"></span>&#123;  </span><br><span class="line">    XslCompiledTransform xsl = <span class="keyword">new</span> XslCompiledTransform();  </span><br><span class="line">    xsl.Load(sPShortXSL); <span class="comment">// load xsl file  </span></span><br><span class="line">    XPathDocument xml = <span class="keyword">new</span> XPathDocument(sResultXML); <span class="comment">// Result xml file  </span></span><br><span class="line">    XmlTextWriter writer = <span class="keyword">new</span> XmlTextWriter(sPShortHTML, Encoding.GetEncoding(<span class="string">"GB2312"</span>)); <span class="comment">// Encode to GB2312 for display Chinese  </span></span><br><span class="line">    xsl.Transform(xml, writer); <span class="comment">// Complement transfor  </span></span><br><span class="line">    writer.Close();  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[C# AOM QTP]]></title>
      <url>http://izheyi.com/2013/06/02/C-AOM-QTP/</url>
      <content type="html"><![CDATA[<p>用C#实现QTP的启动和Add-Ins的加载。<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">// <span class="type">Launch</span> <span class="type">QTP</span> </span><br><span class="line"><span class="type">QuickTest</span>.<span class="type">Application</span> qtpApp = new <span class="type">QuickTest</span>.<span class="type">Application</span>(); </span><br><span class="line"><span class="type">string</span>[] arrAddins = dpString.dpSplit(<span class="type">FrameHelper</span>.<span class="type">GetGlobalSetting</span>()[<span class="string">"Addins"</span>], <span class="string">","</span>); </span><br><span class="line"><span class="keyword">object</span> <span class="type">AddinNames</span> = arrAddins; </span><br><span class="line"><span class="keyword">object</span> <span class="type">ErrorDescrition</span> = <span class="string">""</span>; </span><br><span class="line"><span class="keyword">if</span> (qtpApp.<span class="type">SetActiveAddins</span>(<span class="keyword">ref</span> <span class="type">AddinNames</span>, <span class="keyword">out</span> <span class="type">ErrorDescrition</span>)) </span><br><span class="line">&#123; </span><br><span class="line">    <span class="type">FrameHelper</span>.<span class="type">WriteLogToFile</span>(<span class="type">DateTime</span>.<span class="type">Now</span>.<span class="type">ToString</span>(<span class="string">"HH:mm:ss"</span>) + <span class="string">" Message: Load Add-ins successfully."</span>); </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123; </span><br><span class="line">    <span class="type">FrameHelper</span>.<span class="type">WriteLogToFile</span>(<span class="type">DateTime</span>.<span class="type">Now</span>.<span class="type">ToString</span>(<span class="string">"HH:mm:ss"</span>) + <span class="string">" Error: Meet an error when loading Add-ins: "</span> + <span class="type">ErrorDescrition</span>); </span><br><span class="line">&#125; </span><br><span class="line">qtpApp.<span class="type">Launch</span>();</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[SQL UNION All 排序问题]]></title>
      <url>http://izheyi.com/2013/06/01/SQL-UNION-All-%E6%8E%92%E5%BA%8F%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<p>在sql server中我们是不能再union查询中直接使用order by 进行排序的，因此我们必须使用一些比较巧妙的方法来得到我们想要的结果。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sqlStr = "<span class="operator"><span class="keyword">select</span> * <span class="keyword">from</span> (<span class="string">"; </span><br><span class="line">sqlStr += "</span><span class="keyword">select</span> NodeID,NodeName <span class="keyword">from</span> Case_Tree <span class="keyword">where</span> RootType=<span class="number">2</span> <span class="keyword">and</span> NodeType=<span class="number">2</span><span class="string">"; </span><br><span class="line">sqlStr += "</span> <span class="keyword">union</span> all <span class="string">"; </span><br><span class="line">sqlStr += "</span><span class="keyword">select</span> ActionID,ActionName <span class="keyword">from</span> Case_Action <span class="keyword">where</span> ActionCategory = <span class="string">'Function'</span><span class="string">"; </span><br><span class="line">sqlStr += "</span>) <span class="keyword">as</span> <span class="keyword">T</span> <span class="keyword">order</span> <span class="keyword">by</span> NodeName<span class="string">";</span></span></span><br></pre></td></tr></table></figure></p>
<p>结果如下图所示：<br><img src="/images/QTP/keyword_frame_sql_union.jpg" alt="Result"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[关键字驱动测试框架之五 - Keyword管理]]></title>
      <url>http://izheyi.com/2013/05/21/%E5%85%B3%E9%94%AE%E5%AD%97%E9%A9%B1%E5%8A%A8%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E4%B9%8B%E4%BA%94-Keyword%E7%AE%A1%E7%90%86/</url>
      <content type="html"><![CDATA[<p>此处的Keyword是用户自定义的，我们也可以这么认为，它是一些公用的，提取出来的Moulde，如Login==</p>
<p>所以添加Keyword时和添加用例步骤时是一样的操作。唯一不同的是添加Keyword的时候会有参数的时候，这样我们会把参数显示在添加Keyword步骤列表上，我们要把此参数名称填写到相应的步骤参数列里。</p>
<p><img src="/images/QTP/keyword_frame_keyword_main.jpg" alt="Main"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[关键字驱动测试框架之四 - 用例步骤管理]]></title>
      <url>http://izheyi.com/2013/05/11/%E5%85%B3%E9%94%AE%E5%AD%97%E9%A9%B1%E5%8A%A8%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E4%B9%8B%E5%9B%9B-%E7%94%A8%E4%BE%8B%E6%AD%A5%E9%AA%A4%E7%AE%A1%E7%90%86/</url>
      <content type="html"><![CDATA[<p>在此部分我们可以对测试用例步骤进行CRUD,包括用例的Iteration Times, data drivern ==<br><img src="/images/QTP/keyword_frame_step_main.jpg" alt="Main"></p>
<p>可以按照Step和Keyword两种方式进行添加：</p>
<ul>
<li>按照QTP的关键字开发思想进行添加<br><img src="/images/QTP/keyword_frame_add_step.jpg" alt="Add Step"></li>
<li>按照用户自定义和built-in的Keyword进行添加<br><img src="/images/QTP/keyword_frame_add_keyword.jpg" alt="Add Keyword"></li>
</ul>
<p>用户可以手动的为每个步骤添加参数（鼠标在某一行时，会显示该行的参数个数和名称），添加完毕后显示如下图：<br><img src="/images/QTP/keyword_frame_step_para.jpg" alt=""></p>
<p>对Keyword Action有两种处理方式：</p>
<ol>
<li>如果是built-in， 直接显示在Action列里</li>
<li>如果是user-defined，Keyword显示在TestObject列中，在Action列是显示Call</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[关键字驱动测试框架之三 - 对象库管理]]></title>
      <url>http://izheyi.com/2013/04/22/%E5%85%B3%E9%94%AE%E5%AD%97%E9%A9%B1%E5%8A%A8%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E4%B9%8B%E4%B8%89-%E5%AF%B9%E8%B1%A1%E5%BA%93%E7%AE%A1%E7%90%86/</url>
      <content type="html"><![CDATA[<p><strong>对象库的管理：</strong><br>用QTP添加对象，本框架目前只实现层级不超过三级的对象管理。如：<br>Browser(“XX”).Page(“XX”).WebButton(“XX”).Click<br>如果在添加时层级超过三层，请按实际情况删除一个层级，比如删除Frame层。</p>
<p><strong>本框架中对象库的处理思路：</strong><br>把TSR的对象库转化成XML格式，然后在Winform中添加测试步骤的时候从XML中提取值。</p>
<p>当前本框架的对象库是整体一个的处理，即要求被测试系统的所有对象放到一个文件中。</p>
<p>BTW, 本框架的对象管理最好是有一个人来管理，制定命名规则等，统一管理，这也是QTP自动化的Best Practice^_^</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[关键字驱动测试框架之二 - 框架目录管理]]></title>
      <url>http://izheyi.com/2013/04/21/%E5%85%B3%E9%94%AE%E5%AD%97%E9%A9%B1%E5%8A%A8%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E4%B9%8B%E4%BA%8C-%E6%A1%86%E6%9E%B6%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/</url>
      <content type="html"><![CDATA[<p>框架目录的说明：<br><img src="/images/QTP/keyword_frame_folder.jpg" alt="Framework"></p>
<ul>
<li>Object Repository：Deposit public Object Repositotry。</li>
<li>Test Case：Deposit Test Case DB。</li>
<li>Test Script：Deposit all QTP test。</li>
<li>Recovery Sceniao：Deposi RS file And custom RS function。</li>
<li>Test Config：Deposit dataSource file, relevant dll file, and some function’s extention API ==</li>
<li>Test Library：Deposit Public libraryies。</li>
<li>Test Report：Deposit Excel &amp; HTML report。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[关键字驱动测试框架之一 - 框架思想]]></title>
      <url>http://izheyi.com/2013/04/05/%E5%85%B3%E9%94%AE%E5%AD%97%E9%A9%B1%E5%8A%A8%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E4%B9%8B%E4%B8%80-%E6%A1%86%E6%9E%B6%E6%80%9D%E6%83%B3/</url>
      <content type="html"><![CDATA[<p>做QTP的同学都知道，脚本语言的编写重复性很烦琐，本身来说这样自动化，对不会编程的同学也有点障碍~~~</p>
<p><strong>关键字驱动设计思想</strong></p>
<p>把对象库里的对象处理后，用Winform来提取层级对象和Action操作，并保存到csv文件中；</p>
<p>Winform设计测试功能模块和测试用例，可同时操作，不需要编程能力，只需按照业务流程和选择配置；</p>
<p>对于一些公用流程或者Module，可能新建自然语言描述的Keyword；</p>
<p>每次选择要运行的测试用例，AOM管理QTP，并自动读取测试数据并拼接成QTP认识的脚本；</p>
<p>把测试结果写入到测试用例列表中；</p>
<p>对测试结果的统计分析等。</p>
<p><strong>采用Winform 和 CSV文件来管理整个框架</strong><br>主要包括：</p>
<ol>
<li>Case Step管理</li>
<li>Keyword 管理 （一个或多个Action组成，如Login。。。）</li>
<li>Global Setting</li>
<li>Test Run</li>
<li>Action 管理 （E.g., click, checkproperty….and all defined business functions）</li>
</ol>
<p>注：本框架完全采用相对路径，无论放在何处，均可正常操作运行^_^<br>后期会陆续把每一步的实现都贴给大家分享，只是大概的思路实现。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[winform中改变DataGridView中符合条件的字体的颜色]]></title>
      <url>http://izheyi.com/2013/03/02/winform%E4%B8%AD%E6%94%B9%E5%8F%98DataGridView%E4%B8%AD%E7%AC%A6%E5%90%88%E6%9D%A1%E4%BB%B6%E7%9A%84%E5%AD%97%E4%BD%93%E7%9A%84%E9%A2%9C%E8%89%B2/</url>
      <content type="html"><![CDATA[<p>在设计框架的时候，把QTP Report中的运行结果状态根据结果显示为不同的颜色：<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">private void dataGridView1_CellPainting(object sender, DataGridViewCellPaintingEventArgs <span class="keyword">e</span>) </span><br><span class="line">       &#123; </span><br><span class="line">           <span class="keyword">if</span> (<span class="keyword">e</span>.RowIndex &lt; 0) </span><br><span class="line">               <span class="keyword">return</span>; </span><br><span class="line"> </span><br><span class="line">           <span class="keyword">if</span> (<span class="keyword">e</span>.ColumnIndex == dataGridView1.Columns[<span class="string">"CaseStatus"</span>].Index) </span><br><span class="line">           &#123; </span><br><span class="line">               <span class="keyword">if</span> (dataGridView1.Rows[<span class="keyword">e</span>.RowIndex].Cells[<span class="keyword">e</span>.ColumnIndex].Value.<span class="keyword">ToString</span>() == <span class="string">"Passed"</span>) </span><br><span class="line">               &#123; </span><br><span class="line">                   <span class="keyword">e</span>.CellStyle.ForeColor = Color.Green; </span><br><span class="line">               &#125; </span><br><span class="line">               <span class="keyword">else</span> <span class="keyword">if</span> (dataGridView1.Rows[<span class="keyword">e</span>.RowIndex].Cells[<span class="keyword">e</span>.ColumnIndex].Value.<span class="keyword">ToString</span>() == <span class="string">"Failed"</span>) </span><br><span class="line">               &#123; </span><br><span class="line">                   <span class="keyword">e</span>.CellStyle.ForeColor = Color.Red; </span><br><span class="line">               &#125; </span><br><span class="line">               <span class="keyword">else</span> <span class="keyword">if</span> (dataGridView1.Rows[<span class="keyword">e</span>.RowIndex].Cells[<span class="keyword">e</span>.ColumnIndex].Value.<span class="keyword">ToString</span>() == <span class="string">"Warning"</span>) </span><br><span class="line">               &#123; </span><br><span class="line">                   <span class="keyword">e</span>.CellStyle.ForeColor = Color.Goldenrod; </span><br><span class="line">               &#125; </span><br><span class="line">               <span class="keyword">else</span> <span class="keyword">if</span> (dataGridView1.Rows[<span class="keyword">e</span>.RowIndex].Cells[<span class="keyword">e</span>.ColumnIndex].Value.<span class="keyword">ToString</span>() == <span class="string">"No Run"</span>) </span><br><span class="line">               &#123; </span><br><span class="line">                   <span class="keyword">e</span>.CellStyle.ForeColor = Color.Gray; </span><br><span class="line">               &#125; </span><br><span class="line">           &#125; </span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[DataGridView单元格设置日期格式]]></title>
      <url>http://izheyi.com/2013/03/01/DataGridView%E5%8D%95%E5%85%83%E6%A0%BC%E8%AE%BE%E7%BD%AE%E6%97%A5%E6%9C%9F%E6%A0%BC%E5%BC%8F/</url>
      <content type="html"><![CDATA[<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">private void dataGridView1_CellFormatting(object sender, DataGridViewCellFormattingEventArgs <span class="keyword">e</span>) </span><br><span class="line">        &#123; </span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">e</span>.ColumnIndex == dataGridView1.Columns[<span class="string">"StartTime"</span>].Index || <span class="keyword">e</span>.ColumnIndex == dataGridView1.Columns[<span class="string">"EndTime"</span>].Index) </span><br><span class="line">            &#123; </span><br><span class="line">                <span class="keyword">if</span> (dpString.dTrim(<span class="keyword">e</span>.Value) != <span class="string">""</span>) </span><br><span class="line">                &#123; </span><br><span class="line">                    <span class="keyword">e</span>.Value = Convert.ToDateTime(<span class="keyword">e</span>.Value).<span class="keyword">ToString</span>(<span class="string">"MM/dd/yyyy - HH:mm:ss"</span>); </span><br><span class="line">                &#125; </span><br><span class="line">            &#125; </span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[DataGridView单元格显示多行的设置方法]]></title>
      <url>http://izheyi.com/2013/02/28/DataGridView%E5%8D%95%E5%85%83%E6%A0%BC%E6%98%BE%E7%A4%BA%E5%A4%9A%E8%A1%8C%E7%9A%84%E8%AE%BE%E7%BD%AE%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<ol>
<li><p>设置RowsDefaultCellStyle的WrapMode属性值为true(表示支持多行显示) </p>
</li>
<li><p>设置AllowUserToResizeColumns属性值为true(表示用户拉大行高) </p>
</li>
<li><p>设置AutoSizeRowsMode属性值为AllCells(表示所有单元格自动调节单元格高度)，属性值为DisplayedCells（表示当前单元格自动调节高度，可以提高性能。）</p>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[怎样判断 datagridview 中的checkbox列是否被选中]]></title>
      <url>http://izheyi.com/2013/02/21/%E6%80%8E%E6%A0%B7%E5%88%A4%E6%96%AD-datagridview-%E4%B8%AD%E7%9A%84checkbox%E5%88%97%E6%98%AF%E5%90%A6%E8%A2%AB%E9%80%89%E4%B8%AD/</url>
      <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; dataGridView1.Rows.Count; i++)   </span><br><span class="line">&#123;   </span><br><span class="line">    <span class="keyword">if</span> ((<span class="keyword">bool</span>)dataGridView1.Rows[i].Cells[<span class="number">0</span>].EditedFormattedValue==<span class="literal">true</span>)   </span><br><span class="line">      &#123;   </span><br><span class="line">        <span class="comment">//TODO    </span></span><br><span class="line">      &#125;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Winform界面中的分隔线]]></title>
      <url>http://izheyi.com/2013/02/19/Winform%E7%95%8C%E9%9D%A2%E4%B8%AD%E7%9A%84%E5%88%86%E9%9A%94%E7%BA%BF/</url>
      <content type="html"><![CDATA[<p>具体方法如下：</p>
<ol>
<li>拖一个Label标签控件，然后将其属性中的AutoSize设置为False（这样就可以手动设置大小了），</li>
</ol>
<ol>
<li>再将Size尺寸中的大小第二个参数高度设置为2，</li>
</ol>
<ol>
<li>最后把BorderStyle边框设置为Fixed3D样式就可以了，</li>
</ol>
<ol>
<li>然后拖动这个线到你想要放置的地方吧，就这么简单。</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[两个ListBox中的项左右移动]]></title>
      <url>http://izheyi.com/2013/02/10/%E4%B8%A4%E4%B8%AAListBox%E4%B8%AD%E7%9A%84%E9%A1%B9%E5%B7%A6%E5%8F%B3%E7%A7%BB%E5%8A%A8/</url>
      <content type="html"><![CDATA[<p>实现如下图所示的功能：<br><img src="/images/winform/listbox_move.jpg" alt=""></p>
<p> 代码如下所示：<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;summary&gt;</span> </span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> Move one or more items from left to right </span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;/summary&gt;</span> </span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;param name="sender"&gt;</span><span class="xmlDocTag">&lt;/param&gt;</span> </span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;param name="e"&gt;</span><span class="xmlDocTag">&lt;/param&gt;</span> </span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">MoveToRight_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>) </span><br><span class="line"></span>&#123; </span><br><span class="line">  <span class="keyword">int</span> ItemCount = AllTestCase.SelectedItems.Count; </span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (ItemCount &gt; <span class="number">0</span>) </span><br><span class="line">  &#123; </span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ItemCount; i++) </span><br><span class="line">      &#123;  </span><br><span class="line">          SelectedTestCase.Items.Add(AllTestCase.SelectedItem); </span><br><span class="line">          AllTestCase.Items.Remove(AllTestCase.SelectedItem); </span><br><span class="line">      &#125; </span><br><span class="line">  &#125; </span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123; </span><br><span class="line">      MessageBox.Show(<span class="string">"Please select one or more items."</span>); </span><br><span class="line">  &#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;summary&gt;</span> </span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> Move all items from left to right </span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;/summary&gt;</span> </span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;param name="sender"&gt;</span><span class="xmlDocTag">&lt;/param&gt;</span> </span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;param name="e"&gt;</span><span class="xmlDocTag">&lt;/param&gt;</span> </span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">MoveAllToRight_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>) </span><br><span class="line"></span>&#123; </span><br><span class="line">  SelectedTestCase.Items.AddRange(AllTestCase.Items); </span><br><span class="line">  AllTestCase.Items.Clear(); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;summary&gt;</span> </span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> Move one or more items from right to left </span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;/summary&gt;</span> </span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;param name="sender"&gt;</span><span class="xmlDocTag">&lt;/param&gt;</span> </span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;param name="e"&gt;</span><span class="xmlDocTag">&lt;/param&gt;</span> </span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">MoveToLeft_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>) </span><br><span class="line"></span>&#123; </span><br><span class="line">  <span class="keyword">int</span> ItemCount = SelectedTestCase.SelectedItems.Count; </span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (ItemCount &gt; <span class="number">0</span>) </span><br><span class="line">  &#123; </span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ItemCount; i++) </span><br><span class="line">      &#123; </span><br><span class="line">          AllTestCase.Items.Add(SelectedTestCase.SelectedItem); </span><br><span class="line">          SelectedTestCase.Items.Remove(SelectedTestCase.SelectedItem); </span><br><span class="line">      &#125; </span><br><span class="line">  &#125; </span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123; </span><br><span class="line">      MessageBox.Show(<span class="string">"Please select one or more items."</span>); </span><br><span class="line">  &#125; </span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;summary&gt;</span> </span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> Move all items from right to left </span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;/summary&gt;</span> </span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;param name="sender"&gt;</span><span class="xmlDocTag">&lt;/param&gt;</span> </span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;param name="e"&gt;</span><span class="xmlDocTag">&lt;/param&gt;</span> </span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">MoveAllToLeft_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>) </span><br><span class="line"></span>&#123; </span><br><span class="line">  AllTestCase.Items.AddRange(SelectedTestCase.Items); </span><br><span class="line">  SelectedTestCase.Items.Clear(); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[QTP菜单项消失]]></title>
      <url>http://izheyi.com/2013/02/09/QTP%E8%8F%9C%E5%8D%95%E9%A1%B9%E6%B6%88%E5%A4%B1/</url>
      <content type="html"><![CDATA[<p>有时候QTP的菜单栏的下拉菜单为空。</p>
<p><strong>解决方法：</strong></p>
<p>在菜单栏点击右键，选择“Customize”,在Customize窗口的ToolBarTab页，点击“Restore All”后即可。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[VSTO 操作Excel 的常用属性]]></title>
      <url>http://izheyi.com/2013/01/10/VSTO-%E6%93%8D%E4%BD%9CExcel-%E7%9A%84%E5%B8%B8%E7%94%A8%E5%B1%9E%E6%80%A7/</url>
      <content type="html"><![CDATA[<p>生成excel的时候有时候需要设置单元格的一些属性,可以参考一下:<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">range</span>.NumberFormatLocal = <span class="string">"@"</span>;     <span class="comment">//设置单元格格式为文本 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">range</span> = (<span class="keyword">Range</span>)worksheet.get_Range(<span class="string">"A1"</span>, <span class="string">"E1"</span>);     <span class="comment">//获取Excel多个单元格区域：本例做为Excel表头</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">range</span>.<span class="keyword">Merge</span>(0);     <span class="comment">//单元格合并动作</span></span><br><span class="line"></span><br><span class="line">worksheet.Cells[1, 1] = <span class="string">"Excel单元格赋值"</span>;     <span class="comment">//Excel单元格赋值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">range</span>.Font.Size = 15;     <span class="comment">//设置字体大小</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">range</span>.Font.Underline=true;     <span class="comment">//设置字体是否有下划线</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">range</span>.Font.Name=<span class="string">"黑体"</span>;     设置字体的种类</span><br><span class="line"></span><br><span class="line"><span class="keyword">range</span>.HorizontalAlignment=XlHAlign.xlHAlignCenter;     <span class="comment">//设置字体在单元格内的对其方式</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">range</span>.ColumnWidth=15;     <span class="comment">//设置单元格的宽度</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">range</span>.Cells.Interior.Color=System.Drawing.Color.FromArgb(255,204,153).ToArgb();     <span class="comment">//设置单元格的背景色</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">range</span>.Borders.LineStyle=1;     <span class="comment">//设置单元格边框的粗细</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">range</span>.BorderAround(XlLineStyle.xlContinuous,XlBorderWeight.xlThick,XlColorIndex.xlColorIndexAutomatic,System.Drawing.Color.Black.ToArgb());     <span class="comment">//给单元格加边框</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">range</span>.EntireColumn.AutoFit();     <span class="comment">//自动调整列宽</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Range</span>.HorizontalAlignment= xlCenter;     <span class="comment">// 文本水平居中方式</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Range</span>.VerticalAlignment= xlCenter     <span class="comment">//文本垂直居中方式</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Range</span>.WrapText=true;     <span class="comment">//文本自动换行</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Range</span>.Interior.ColorIndex=39;     <span class="comment">//填充颜色为淡紫色</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Range</span>.Font.Color=clBlue;     <span class="comment">//字体颜色</span></span><br><span class="line"></span><br><span class="line">xlsApp.DisplayAlerts=false;     <span class="comment">//保存Excel的时候，不弹出是否保存的窗口直接进行保存</span></span><br><span class="line"></span><br><span class="line">workbook.SaveCopyAs(temp);<span class="comment">/**/</span><span class="comment">///填入完信息之后另存到路径及文件名字</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Excel Format(格式)的设置]]></title>
      <url>http://izheyi.com/2013/01/10/Excel-Format-%E6%A0%BC%E5%BC%8F-%E7%9A%84%E8%AE%BE%E7%BD%AE/</url>
      <content type="html"><![CDATA[<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">oExcel.<span class="function"><span class="title">RANGE</span><span class="params">(oExcel.Cells(<span class="number">1</span>,<span class="number">1</span>)</span></span>,oExcel.<span class="function"><span class="title">Cells</span><span class="params">(nRows,nColumns)</span></span>)<span class="class">.BORDERS</span><span class="class">.LineStyle</span>=<span class="number">1</span></span><br><span class="line">oExcel.<span class="function"><span class="title">RANGE</span><span class="params">(oExcel.Cells(<span class="number">1</span>,<span class="number">1</span>)</span></span>,oExcel.<span class="function"><span class="title">Cells</span><span class="params">(nRows,nColumns)</span></span>).HorizontalAlignment=<span class="number">3</span> &amp;&amp;水平(<span class="number">1</span>-默认、<span class="number">2</span>-靠左、<span class="number">3</span>-居中、<span class="number">4</span>-靠右、<span class="number">5</span>-填充、<span class="number">6</span>=两端对齐、<span class="number">7</span>=跨列居中、<span class="number">8</span>=分散对齐)</span><br><span class="line">oExcel.<span class="function"><span class="title">RANGE</span><span class="params">(oExcel.Cells(<span class="number">1</span>,<span class="number">1</span>)</span></span>,oExcel.<span class="function"><span class="title">Cells</span><span class="params">(nRows,nColumns)</span></span>).VerticalAlignment=<span class="number">2</span> &amp;&amp;垂直(<span class="number">1</span>=靠上、<span class="number">2</span>=居中、<span class="number">3</span>=靠下、<span class="number">4</span>=两端对齐、<span class="number">5</span>=分散对齐)</span><br><span class="line">oExcel<span class="class">.ActiveSheet</span><span class="class">.PageSetup</span><span class="class">.RightFooter</span>=<span class="string">"第&amp;P页 / 共&amp;N页"</span></span><br><span class="line">oExcel<span class="class">.ActiveSheet</span><span class="class">.PageSetup</span><span class="class">.TopMargin</span>=<span class="number">2</span>/<span class="number">0.035</span> &amp;&amp;设置顶边距为<span class="number">2</span>厘米</span><br><span class="line">oExcel<span class="class">.ActiveSheet</span><span class="class">.PageSetup</span><span class="class">.BottomMargin</span>=<span class="number">2</span>/<span class="number">0.035</span> &amp;&amp;设置左边距为<span class="number">2</span>厘米</span><br><span class="line">oExcel<span class="class">.ActiveSheet</span><span class="class">.PageSetup</span><span class="class">.HeaderMargin</span>=<span class="number">1</span>/<span class="number">0.035</span> &amp;&amp;设置页眉到顶端边距为<span class="number">1</span>厘米</span><br><span class="line">oExcel<span class="class">.ActiveSheet</span><span class="class">.PageSetup</span><span class="class">.FooterMargin</span>=<span class="number">1</span>/<span class="number">0.035</span> &amp;&amp;设置页脚到底边距为<span class="number">1</span>厘米</span><br><span class="line">oExcel<span class="class">.ActiveSheet</span><span class="class">.PageSetup</span><span class="class">.LeftMargin</span>=<span class="number">2</span>/<span class="number">0.035</span> &amp;&amp;设置左边距为<span class="number">2</span>厘米</span><br><span class="line">oExcel<span class="class">.ActiveSheet</span><span class="class">.PageSetup</span><span class="class">.RightMargin</span>=<span class="number">2</span>/<span class="number">0.035</span> &amp;&amp;设置右边距为<span class="number">2</span>厘米</span><br><span class="line">oExcel<span class="class">.ActiveSheet</span><span class="class">.PageSetup</span><span class="class">.CenterHorizontally</span>=<span class="class">.t</span>. &amp;&amp;设置页面水平居中</span><br><span class="line">oExcel<span class="class">.ActiveSheet</span><span class="class">.PageSetup</span><span class="class">.CenterVertically</span>=<span class="class">.t</span>. &amp;&amp;设置页面垂直居中</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Find a File Recursively(递归查找文件)]]></title>
      <url>http://izheyi.com/2013/01/10/Find-a-File-Recursively-%E9%80%92%E5%BD%92%E6%9F%A5%E6%89%BE%E6%96%87%E4%BB%B6/</url>
      <content type="html"><![CDATA[<figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">'-----------------------------------------------------------------------</span></span><br><span class="line">  <span class="comment">'Function: FindFileRecursively</span></span><br><span class="line">  <span class="comment">'Finds the first instance of a file within the root folder or one of its subfolders</span></span><br><span class="line">  <span class="comment">'</span></span><br><span class="line">  <span class="comment">'Remarks:</span></span><br><span class="line">  <span class="comment">'   Uses recursion</span></span><br><span class="line">  <span class="comment">'</span></span><br><span class="line">  <span class="comment">'Arguments</span></span><br><span class="line">  <span class="comment">'   ByVal strRootFolder - As String (absolute folder)</span></span><br><span class="line">  <span class="comment">'   ByVal strFilename - As String</span></span><br><span class="line">  <span class="comment">'</span></span><br><span class="line">  <span class="comment">'Returns:</span></span><br><span class="line">  <span class="comment">'   String with full file pathname based on root folder and file name</span></span><br><span class="line">  <span class="comment">'</span></span><br><span class="line">  <span class="comment">'Owner:</span></span><br><span class="line">  <span class="comment">'</span></span><br><span class="line">  <span class="comment">'Date:</span></span><br><span class="line">  <span class="comment">'</span></span><br><span class="line">  <span class="comment">'-----------------------------------------------------------------------    </span></span><br><span class="line">   <span class="keyword">Public</span> <span class="keyword">Function</span> FindFileRecursively(<span class="keyword">ByVal</span> strRootFolder, <span class="keyword">ByVal</span> strFilename)</span><br><span class="line">      <span class="keyword">Dim</span> FSO    </span><br><span class="line">      <span class="keyword">Dim</span> strFullPathToSearch    </span><br><span class="line">      <span class="keyword">Dim</span> objSubFolders, subfolder    </span><br><span class="line">   </span><br><span class="line">      <span class="keyword">Set</span> FSO = CreateObject(<span class="string">"Scripting.FileSystemObject"</span>)    </span><br><span class="line">      <span class="comment">'Initialize function    </span></span><br><span class="line">      FindFileRecursively = <span class="string">""</span>    </span><br><span class="line">      <span class="comment">'Check that filename is not empty    </span></span><br><span class="line">      <span class="keyword">If</span> strFileName = <span class="string">""</span> <span class="keyword">Then</span> <span class="keyword">Exit</span> <span class="keyword">Function</span>    </span><br><span class="line">      <span class="comment">'Get full file pathname    </span></span><br><span class="line">      strFullPathToSearch = strRootFolder &amp; <span class="string">"\"</span> &amp; strFilename    </span><br><span class="line">      <span class="comment">'Check if root folder exists    </span></span><br><span class="line">      <span class="keyword">If</span> FSO.FolderExists(strRootFolder) <span class="keyword">Then</span>        </span><br><span class="line">          <span class="comment">'Check if file exists under root folder        </span></span><br><span class="line">          <span class="keyword">If</span> FSO.FileExists(strFullPathToSearch) <span class="keyword">Then</span>            </span><br><span class="line">              FindFileRecursively = strFullPathToSearch        </span><br><span class="line">          <span class="keyword">Else</span>            </span><br><span class="line">              <span class="comment">'Get subfolders            </span></span><br><span class="line">              <span class="keyword">Set</span> objSubFolders = FSO.GetFolder(strRootFolder).SubFolders            </span><br><span class="line">              <span class="keyword">For</span> <span class="keyword">Each</span> subfolder <span class="keyword">in</span> objSubFolders                </span><br><span class="line">                  strFullPathToSearch = strRootFolder &amp; <span class="string">"\"</span> &amp; subfolder.name                </span><br><span class="line">                  FindFileRecursively = FindFileRecursively(strFullPathToSearch, strFilename)                </span><br><span class="line">                  <span class="keyword">If</span> FindFileRecursively &lt;&gt; <span class="string">""</span> <span class="keyword">Then</span>                    </span><br><span class="line">                      <span class="keyword">Exit</span> <span class="keyword">For</span>                </span><br><span class="line">                  <span class="keyword">End</span> <span class="keyword">If</span>            </span><br><span class="line">              <span class="keyword">Next</span>        </span><br><span class="line">          <span class="keyword">End</span> <span class="keyword">If</span>    </span><br><span class="line">      <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">  <span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Random WebList & Write to Report(随机选择Weblist并写入测试报告)]]></title>
      <url>http://izheyi.com/2013/01/10/Random-WebList-Write-to-Report-%E9%9A%8F%E6%9C%BA%E9%80%89%E6%8B%A9Weblist%E5%B9%B6%E5%86%99%E5%85%A5%E6%B5%8B%E8%AF%95%E6%8A%A5%E5%91%8A/</url>
      <content type="html"><![CDATA[<figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">' 用 封装"items count" 属性来获取WebList下有几个选项</span></span><br><span class="line">itemCount =  Browser(<span class="string">"XXX"</span>).Page(<span class="string">"XXX|"</span>).WebList(<span class="string">"XXX"</span>).GetROProperty(<span class="string">"items count"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">' 用RandomNumber随机选取范围内的index</span></span><br><span class="line">tValue = RandomNumber(<span class="number">0</span>, itemCount - <span class="number">1</span>)</span><br><span class="line">Browser(<span class="string">"XXX"</span>).Page(<span class="string">"XXX"</span>).WebList(<span class="string">"XXX"</span>).<span class="keyword">Select</span> tValue</span><br><span class="line"></span><br><span class="line"><span class="comment">' 将随机选择的结果写入测试报告</span></span><br><span class="line">Reporter.ReportEvent micDone, <span class="string">"本次运行随机选择了INDEX: &lt;"</span> &amp; tValue &amp; <span class="string">"&gt;"</span>, <span class="string">" "</span></span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用Excel 2007完成多人协同录入工作]]></title>
      <url>http://izheyi.com/2013/01/09/%E4%BD%BF%E7%94%A8Excel-2007%E5%AE%8C%E6%88%90%E5%A4%9A%E4%BA%BA%E5%8D%8F%E5%90%8C%E5%BD%95%E5%85%A5%E5%B7%A5%E4%BD%9C/</url>
      <content type="html"><![CDATA[<p>下面我们来介绍下Excel 2007的共享功能。<br><a id="more"></a></p>
<h1 id="设置共享"><a href="#设置共享" class="headerlink" title="设置共享"></a>设置共享</h1><ol>
<li>启动Excel 2007，打开需要设置共享的工作薄文档，切换到“审阅”菜单选项卡中，单击“更改”组中的“共享工作薄”按钮，打开“共享工作薄”对话框，如下图所示。<br><img src="/images/excel/excel_share_1.jpg" alt=""></li>
<li><p>在“编辑”选项卡中，选中“允许对各用户同时编辑，同时允许工作薄合并”选项。再切换到“高级”选项卡中，调整相关选项的设置。</p>
</li>
<li><p>设置完成后，单击“确定”按钮，软件会弹出一个提示框，单击其中的“确定”按钮，完成工作薄的共享设置。 </p>
</li>
</ol>
<h1 id="使用共享工作薄"><a href="#使用共享工作薄" class="headerlink" title="使用共享工作薄"></a>使用共享工作薄</h1><ol>
<li>将上述共享工作薄放到局域网中一台电脑的某个共享文件夹中。局域网中的每一位用户，都在各自的电脑上，启动Excel 2007，定位到上述共享文件夹中，打开共享工作薄，对其进行相关的编辑操作，并执行保存操作。 </li>
<li>当局域网上其他用户要查看别人编辑的结果时，执行一下“保存”操作，系统会弹出一个提示框，按下“确定”按钮接受这种修改。 </li>
<li>此时，相应的单元格左上角出现一个蓝色的标记，同时相应单元格的行、列标号被红色突出显示出来。当我们将鼠标指向其中某个单元格时，会出现一个类似于“批注”的对话框，显示出该单元格中的数据修改信息。 </li>
</ol>
<h1 id="建立修订日志"><a href="#建立修订日志" class="headerlink" title="建立修订日志"></a>建立修订日志</h1><p>　　为了审核工作表中数据的需要，我们可以为用户的修改情况建立一个修订日志，仔细核查所有用户的修订情况。</p>
<ol>
<li>切换到“审阅”菜单选项卡中，单击“更改”组中的“修订”按钮，在随后出现的下拉菜单中，选择“突出显示修订”选项，打开“突出显示修订”对话框，如下图所示。<br><img src="/images/excel/excel_share_2.jpg" alt=""></li>
<li>按“时间“右边的下拉按钮，在随后出现的下拉菜单中，选择“全部”选项；再选中“修订人”/“每个人”。 </li>
<li>全部设置完成后单击“确定”按钮，软件就会在该工作薄中新建一个“历史记录”工作表，里面保存着所有的修订情况记录。 </li>
<li><h1 id="取消共享"><a href="#取消共享" class="headerlink" title="取消共享"></a>取消共享</h1></li>
</ol>
<p>　　再次打开“共享工作薄”的对话框，在“编辑”选项卡中，取消选择“允许多用户同时编辑，同时允许工作薄合并”选项。单击“确定”按钮，软件会弹出一个如下图所示的对话框，单击其中的“是(Y)”按钮，取消工作薄的共享功能。<br><img src="/images/excel/excel_share_3.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[QTP使用小提示]]></title>
      <url>http://izheyi.com/2013/01/09/QTP%E4%BD%BF%E7%94%A8%E5%B0%8F%E6%8F%90%E7%A4%BA/</url>
      <content type="html"><![CDATA[<h1 id="不要使用Reuable-Action"><a href="#不要使用Reuable-Action" class="headerlink" title="不要使用Reuable Action"></a>不要使用Reuable Action</h1><p>　　用Function，不要用Reusable Action。没有一种通用的语言里有Reusable Action这个概念。而且通过Function等一些标准的程序设计语言的元素，你能够实现任何Reusable Action可以实现的功能，而且更好，更快，更易于维护。</p>
<h1 id="不要用Smart-Identification"><a href="#不要用Smart-Identification" class="headerlink" title="不要用Smart Identification"></a>不要用Smart Identification</h1><p>　 　有一天，我发现一个奇怪的现象，一个testcase里某一个点击logout button的步骤运行非常慢，大概要20秒，但是最终它还能成功点击。不巧的是每一个testcase几乎都会点击这个button，所有我还必须把这个问题找出来。最后发现这是因为button的name有了变化，但是因为Smart Identification是被enable，所以QTP会试图去适应这个变化，但是这个“适应”的效果非常不理想。</p>
<p>　　我认为测试开发者应该完全控制对象的识别。把选择权交给对被测程序业务一无所知的工具是毫无道理的。我想不到任何使用SmartIdentification的原因。所以，从那之后，任何Testcase的Smart Identification我都禁止了。</p>
<h1 id="不要在base目录里添加两个或以上目录"><a href="#不要在base目录里添加两个或以上目录" class="headerlink" title="不要在base目录里添加两个或以上目录"></a>不要在base目录里添加两个或以上目录</h1><p>　　Base目录是用来只能识别相对路径的目录。其配置在Menu: Tools-&gt;Options-&gt;Folders。我的建议是这里只放项目根目录。其他目录都不要放进去。</p>
<h1 id="不要用keyword-view，而是提供业务逻辑封装层"><a href="#不要用keyword-view，而是提供业务逻辑封装层" class="headerlink" title="不要用keyword view，而是提供业务逻辑封装层"></a>不要用keyword view，而是提供业务逻辑封装层</h1><p>　　如果你要让你的testcase简单，直接，那么你应该通过合理的抽象提供完善的业务逻辑封装层，它会使得你的testcase script读起来像testcase descript一样。这个时候，你根本不需要keyword view。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[VBS Adding Quotes(为字符串加双引号)]]></title>
      <url>http://izheyi.com/2013/01/05/VBS-Adding-Quotes-%E4%B8%BA%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8A%A0%E5%8F%8C%E5%BC%95%E5%8F%B7/</url>
      <content type="html"><![CDATA[<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">newSAtr = <span class="function"><span class="title">Chr</span><span class="params">( <span class="number">34</span> )</span></span> &amp; <span class="function"><span class="title">Environment</span><span class="params">( <span class="string">"ProductDir"</span> )</span></span> &amp; <span class="function"><span class="title">Chr</span><span class="params">( <span class="number">34</span> )</span></span></span><br></pre></td></tr></table></figure>
<p><img src="/images/VBS/Add_Quotes.jpg" alt="Execute Result"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[QTP添加Resource或Action时，不弹出相关路径窗]]></title>
      <url>http://izheyi.com/2012/12/31/QTP%E6%B7%BB%E5%8A%A0Resource%E6%88%96Action%E6%97%B6%EF%BC%8C%E4%B8%8D%E5%BC%B9%E5%87%BA%E7%9B%B8%E5%85%B3%E8%B7%AF%E5%BE%84%E7%AA%97/</url>
      <content type="html"><![CDATA[<p>在以下步骤中设置：</p>
<p>“Options -&gt; Folders” 页面，选中底部的选择框“Remind me to ….”</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java设置环境变量]]></title>
      <url>http://izheyi.com/2012/11/19/Java%E8%AE%BE%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</url>
      <content type="html"><![CDATA[<p>path，当要求系统运行一个程序而没有告诉它程序所在的完整路径时，系统除了在当前目录下面寻找此程序外，还应到path中指定的路径去找。用户通过设置环境变量，来更好的运行进程。</p>
<p>环境变量配置步骤：</p>
<ol>
<li>首先下载安装JDK安装包。</li>
<li>打开我的电脑–属性–高级–环境变量。</li>
<li>新建系统变量JAVA_HOME 和CLASSPATH<br>变量名：JAVA_HOME<br>变量值：C:\Program Files (x86)\Java\jdk1.7<br>变量名：CLASSPATH<br>变量值：.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;<br><em>其中变量值为你自己安装jdk的文件目录这里要注意。</em></li>
<li>选择“系统变量”中变量名为“Path”的环境变量，双击该变量，把JDK安装路径中bin目录的绝对路径，添加到Path变量的值中。<br>变量名：Path<br>变量值：%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;</li>
<li>现在测试环境变量的配置成功与否。在DOS命令行窗口输入“JAVAC”，输出帮助信息即为配置正确。</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[QTP为脚本自动创建注释(Action 模板)]]></title>
      <url>http://izheyi.com/2012/11/05/QTP%E4%B8%BA%E8%84%9A%E6%9C%AC%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E6%B3%A8%E9%87%8A-Action-%E6%A8%A1%E6%9D%BF/</url>
      <content type="html"><![CDATA[<p>当希望在每一个新建action时都增加一些头部说明，比如作者、创建日期、说明等信息，那么用action template 来实现最简单快捷。 </p>
<p>方法：用记事本等文本编辑器，输入如下类似的内容：          </p>
<p>‘Company: 唐胡璐          </p>
<p>‘Date: Date          </p>
<p>然后将文件保存为ActionTemplate.mst，并存放到QTP安装目录下的dat目录。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[QTP注册开启HOOK(多插件嵌套)]]></title>
      <url>http://izheyi.com/2012/10/19/QTP%E6%B3%A8%E5%86%8C%E5%BC%80%E5%90%AFHOOK-%E5%A4%9A%E6%8F%92%E4%BB%B6%E5%B5%8C%E5%A5%97/</url>
      <content type="html"><![CDATA[<p>我们有测试的过程中，可能会碰到这种情况，在C/S的系统中会嵌套Web，这时候QTP根本无法识别此Browser对象，直接是抛了个WinObject出来，title还是Internet Explorer_Server。</p>
<h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><ol>
<li><p>进入到QTP的核心目录：  《安装目录》/bin 下找到   mic.ini  (此文件是关键文件) </p>
</li>
<li><p>用记事本打开此INI文件。我们都知道INI格式的都是配置文件，可以直接在里面更改我们需要的配置。</p>
</li>
<li><p>找到[ie_hook]部分段落。</p>
</li>
<li><p>在这一栏的最后添加一行应用程序的 文件名+后缀名 = yes后保存。（E.g., Google.exe = yes）</p>
</li>
<li><p>修改完毕之后，重启QTP，再次重启刚才的应用程序，此时我们再来看一下spy的结果。QTP当然也相当的给力，成功把Browser对象识别为Page对象。包括对象库也可以任意添加。</p>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[QTP识别web页面时候结果为winobject]]></title>
      <url>http://izheyi.com/2012/10/17/QTP%E8%AF%86%E5%88%ABweb%E9%A1%B5%E9%9D%A2%E6%97%B6%E5%80%99%E7%BB%93%E6%9E%9C%E4%B8%BAwinobject/</url>
      <content type="html"><![CDATA[<p>QTP SPY无法识别此对象，会把所有web对象都识别为winobject。</p>
<h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><ol>
<li><p>把IE和QTP都关掉，然后先打开QTP，再打开IE，这样就能识别了。</p>
</li>
<li><p>如果这样不行的话：</p>
<ul>
<li><p>XP下：  查看IE加载项，查看BHOManager Class是否已经被加载，而且状态为Enable.没有做修改，保持现状。（若没有BHOManager Class 加载项，则在QTP安装文件下找到BHOManager.dll（目录为*\QuickTest\MSI\System32,自己搜索下）并复制到C:\WINDOWS\system32下）重新注册此dll，打开命令提示符，运行命令：regsvr32 c:\windows\SysWOW64\BHOManager.dll</p>
</li>
<li><p>Win7下：查看IE加载项，查看BHOManager Class是否已经被加载，而且状态为Enable.没有做修改，保持现状。（若没有BHOManager Class 加载项，则在QTP安装文件下找到BHOManager.dll并复制到c:\windows\SysWOW64下）重新注册此dll. 以管理员权限打开命令提示符，运行命令：regsvr32 c:\windows\SysWOW64\BHOManager.dll</p>
</li>
</ul>
</li>
<li><p>若还不行则在用户账户控制设置里把权限设置到最低。（建议：如果方法1不行，先使用该方法。）</p>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[VBS用FSO改变文件属性]]></title>
      <url>http://izheyi.com/2012/10/09/VBS%E7%94%A8FSO%E6%94%B9%E5%8F%98%E6%96%87%E4%BB%B6%E5%B1%9E%E6%80%A7/</url>
      <content type="html"><![CDATA[<p>在框架的执行中，我们会碰见这样的情况，从代码库里下来的文件属性都是只读的，在运行的时候就没办法对其操作，我们可以通过以下方式来改变文件的属性：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Set fso = <span class="function"><span class="title">CreateObject</span><span class="params">( <span class="string">"Scripting.FileSystemObject"</span> )</span></span></span><br><span class="line">fso.<span class="function"><span class="title">GetFile</span><span class="params">(LogFilePath)</span></span><span class="class">.Attributes</span> = <span class="number">0</span></span><br><span class="line">Set fso = Nothing</span><br></pre></td></tr></table></figure></p>
<p><strong>Attributes </strong><br>Normal 0 普通文件。没有设置任何属性。<br>ReadOnly 1 只读文件。可读写。<br>Hidden 2 隐藏文件。可读写。<br>System 4 系统文件。可读写。<br>Directory 16 文件夹或目录。只读。<br>Archive 32 上次备份后已更改的文件。可读写。<br>Alias 1024 链接或快捷方式。只读。<br>Compressed 2048 压缩文件。只读。搜索 </p>
<p><em>如果相应用多种属性，只须把它们的值加起来。</em></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[VBS send mail]]></title>
      <url>http://izheyi.com/2012/10/09/VBS-send-mail/</url>
      <content type="html"><![CDATA[<p>2 methods:</p>
<h1 id="Sending-Mail-with-OutLook"><a href="#Sending-Mail-with-OutLook" class="headerlink" title="Sending Mail with OutLook"></a>Sending Mail with OutLook</h1><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Function</span> SendMail()</span><br><span class="line"> <span class="keyword">Dim</span> objOutlook, Mail, PopupLocate</span><br><span class="line"></span><br><span class="line"><span class="comment">'  Create Email object</span></span><br><span class="line">    <span class="keyword">Set</span> objOutlook=CreateObject(<span class="string">"Outlook.Application"</span>)</span><br><span class="line">    <span class="keyword">Set</span> objMail=objOutlook.CreateItem(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">' Setting receiver</span></span><br><span class="line">    objMail.<span class="keyword">to</span>= <span class="string">"yongfeiuall@163.com"</span></span><br><span class="line">	objMail.cc=  <span class="string">"yongfeiuall@163.com"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">'  Setting title &amp; content  &amp; attached</span></span><br><span class="line">    objMail.Subject=<span class="string">"自动化测试结果"</span></span><br><span class="line">    objMail.Body=<span class="string">"自动化测试结果"</span></span><br><span class="line">    objMail.Attachments.Add(<span class="string">"e:\test.htm"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">' Mail  send</span></span><br><span class="line">   	SystemUtil.Run  <span class="string">"..\QTP\OutlookSecurityPopup.vbs"</span></span><br><span class="line">    objMail.Send</span><br><span class="line"></span><br><span class="line"><span class="comment">' 注销Email对象</span></span><br><span class="line">    objOutlook.Quit</span><br><span class="line">    <span class="keyword">Set</span> objMail = <span class="literal">Nothing</span></span><br><span class="line">    <span class="keyword">Set</span> objOutlook = <span class="literal">Nothing</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure>
<p><strong>OutlookSecurityPopup</strong><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">Set</span> fso = CreateObject(<span class="string">"WScript.Shell"</span>)</span><br><span class="line"><span class="keyword">if</span> fso.AppActivate(<span class="string">"Microsoft Office Outlook"</span>) = <span class="literal">FALSE</span> <span class="keyword">then</span></span><br><span class="line">	wscript.<span class="keyword">Sleep</span> <span class="number">10000</span></span><br><span class="line"><span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>  fso.AppActivate(<span class="string">"Microsoft Office Outlook"</span>) = <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">	wscript.<span class="keyword">Sleep</span> <span class="number">1000</span></span><br><span class="line">	fso.AppActivate(<span class="string">"Microsoft Office Outlook"</span>)</span><br><span class="line">	fso.SendKeys <span class="string">"&#123;tab&#125;"</span></span><br><span class="line">	fso.SendKeys <span class="string">"&#123;tab&#125;"</span></span><br><span class="line">	wscript.<span class="keyword">sleep</span> <span class="number">1000</span></span><br><span class="line">	fso.SendKeys <span class="string">"&#123;ENTER&#125;"</span>	</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">if</span></span></span><br></pre></td></tr></table></figure></p>
<h1 id="Sending-mail-without-a-security-popup"><a href="#Sending-mail-without-a-security-popup" class="headerlink" title="Sending mail without a security popup"></a>Sending mail without a security popup</h1><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Const</span> SMTPSERVER = <span class="string">"xxxxxx"</span></span><br><span class="line"><span class="keyword">Const</span> MailFrom = <span class="string">"xxxxxx"</span> <span class="comment">'发件人邮箱 </span></span><br><span class="line"><span class="keyword">Const</span> MailPWD = <span class="string">"xxxxxx"</span> <span class="comment">'发件人邮箱密码 </span></span><br><span class="line"><span class="keyword">Const</span> SendTo = <span class="string">"yongfeiuall@163.com"</span> <span class="comment">'收件人邮箱 </span></span><br><span class="line"><span class="keyword">Const</span> Body = <span class="string">"&lt;a href=""http://www.izheyi.com"" &gt;Click Here&lt;/a&gt;"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> objMail, UseHTML</span><br><span class="line"></span><br><span class="line"><span class="comment">'Create Email object</span></span><br><span class="line"><span class="keyword">Set</span> objMail = CreateObject(<span class="string">"CDO.Message"</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment">'Setting sender &amp; receiver</span></span><br><span class="line">objMail.<span class="keyword">From</span> = MailFrom</span><br><span class="line">objMail.<span class="keyword">To</span> = SendTo</span><br><span class="line"><span class="comment">'objMail.CC = CC</span></span><br><span class="line"></span><br><span class="line"><span class="comment">'Setting title &amp; content  &amp; attached</span></span><br><span class="line">objMail.Subject = <span class="string">"Subject"</span></span><br><span class="line">objMail.AddAttachment(ExcelReport)</span><br><span class="line">objMail.HTMLBody =  <span class="string">"&lt;H5&gt;Below is the example of email with Hyperlink&lt;/H5&gt;&lt;br&gt;"</span>  + Body</span><br><span class="line"></span><br><span class="line"><span class="comment">'Define mail configuration</span></span><br><span class="line"><span class="keyword">Const</span> schema = <span class="string">"http://schemas.microsoft.com/cdo/configuration/"</span> </span><br><span class="line"><span class="keyword">With</span> objMail.Configuration.Fields </span><br><span class="line">.Item(schema &amp; <span class="string">"sendusing"</span>) = <span class="number">2</span> </span><br><span class="line">.Item(schema &amp; <span class="string">"smtpserver"</span>) = SMTPSERVER</span><br><span class="line">.Item(schema &amp; <span class="string">"smtpauthenticate"</span>) = <span class="number">1</span> </span><br><span class="line">.Item(schema &amp; <span class="string">"sendusername"</span>) = MailFrom </span><br><span class="line">.Item(schema &amp; <span class="string">"sendpassword"</span>) = MailPWD  </span><br><span class="line">.Item(schema &amp; <span class="string">"smtpconnectiontimeout"</span>) = <span class="number">60</span> </span><br><span class="line">.Update </span><br><span class="line"><span class="keyword">End</span> <span class="keyword">With</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">'Send mail</span></span><br><span class="line">objMail.Send</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Pad Number String with Zeroes(在字符串左侧补0)]]></title>
      <url>http://izheyi.com/2012/08/08/Pad-Number-String-with-Zeroes-%E5%9C%A8%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B7%A6%E4%BE%A7%E8%A1%A50/</url>
      <content type="html"><![CDATA[<p>例如，在设计框架或写脚本的时候，总会碰见日期格式的问题，需要在不够十位的月份上补0，等等。。</p>
<p>实现方法：<br><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"> '<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span> </span><br><span class="line">'Description : Pads a number with zeroes on the left, according to the expected maximum length of the numbers in the list. ' </span><br><span class="line"></span><br><span class="line">'Purpose : To keep a number list sorted properly, as with a file list (001, 002,..., 010, and not 1, 10, 11,..., 2, 20). ' </span><br><span class="line"></span><br><span class="line">'Arguments : intCurrentNum (the current number to be padded) </span><br><span class="line">            'intMaxNumInList (the top number in the list) </span><br><span class="line"></span><br><span class="line">'Note: The arguments are always taken in absolute values </span><br><span class="line"></span><br><span class="line">'Returns : The padded intCurrentNum (for example, If 1 and 9999 are sent to the function, the result will be 0001) ' </span><br><span class="line"></span><br><span class="line">'<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>  </span><br><span class="line">Public Function PadNumber(ByVal intCurrentNum, ByVal intMaxNumInList) </span><br><span class="line">   </span><br><span class="line">'Validates the arguments - if invalid then it returns the value as is     </span><br><span class="line">    If (Not IsNumeric(intCurrentNum) Or Not IsNumeric(intMaxNumInList)) <span class="keyword">Then</span>         </span><br><span class="line">        PadNumber = intCurrentNum         </span><br><span class="line">        Exit Function     </span><br><span class="line">    End If    </span><br><span class="line">     </span><br><span class="line">    If (Abs(intCurrentNum) &gt;= Abs(intMaxNumInList)) <span class="keyword">Then</span>         </span><br><span class="line">        PadNumber = intCurrentNum         </span><br><span class="line">        Exit Function     </span><br><span class="line">    End If     </span><br><span class="line">    </span><br><span class="line">    PadNumber = String(len(CStr(Abs(intMaxNumInList)))-len(CStr(Abs(intCurrentNum))), <span class="string">"0"</span>) _  </span><br><span class="line">                 &amp; CStr(Abs(intCurrentNum)) </span><br><span class="line">                   </span><br><span class="line">End Function </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">'<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>  </span><br><span class="line">'Msgbox PadNumber(4, 34567)    'Returns 00004 </span><br><span class="line">'Msgbox PadNumber(-4, 34567)   'Returns 00004  </span><br><span class="line">'Msgbox PadNumber(4, -34567)   'Returns 00004 </span><br><span class="line">'Msgbox PadNumber(34567, 4)    'Returns 34567 </span><br><span class="line">'Msgbox PadNumber(4, 9)        'Returns 4 </span><br><span class="line">'Msgbox PadNumber(<span class="string">"Hello"</span>, 9999) 'Returns Hello</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Generate Random String(产生随机数)]]></title>
      <url>http://izheyi.com/2012/07/20/Generate-Random-String-%E4%BA%A7%E7%94%9F%E9%9A%8F%E6%9C%BA%E6%95%B0/</url>
      <content type="html"><![CDATA[<figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Function</span> RandomString( <span class="keyword">ByVal</span> strLen )     </span><br><span class="line">    <span class="keyword">Dim</span> str     </span><br><span class="line">    <span class="keyword">Const</span> LETTERS = <span class="string">"abcdefghijklmnopqrstuvwxyz0123456789"</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">For</span> i = <span class="number">1</span> <span class="keyword">to</span> strLen      </span><br><span class="line">        str = str &amp; <span class="built_in">Mid</span>( LETTERS, RandomNumber( <span class="number">1</span>, <span class="built_in">Len</span>( LETTERS ) ), <span class="number">1</span> )     </span><br><span class="line">    <span class="keyword">Next</span>     </span><br><span class="line"></span><br><span class="line">    RandomString = str </span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[vbs引用(include)外部函数库]]></title>
      <url>http://izheyi.com/2012/06/09/vbs%E5%BC%95%E7%94%A8-include-%E5%A4%96%E9%83%A8%E5%87%BD%E6%95%B0%E5%BA%93/</url>
      <content type="html"><![CDATA[<p>我们经常会碰见这样的情况，脚本A中想引用脚本B中的方法，VBS中可能通过以下方法来实现：<br><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">﻿     <span class="keyword">Function</span> Include(strFileName)</span><br><span class="line">        <span class="keyword">Dim</span> objFileContent</span><br><span class="line">        <span class="keyword">Set</span> objFileContent = <span class="built_in">CreateObject</span>(<span class="string">"Scripting.FileSystemObject"</span>).OpenTextFile(strFileName,<span class="number">1</span>,<span class="literal">False</span>) </span><br><span class="line">        <span class="keyword">ExecuteGlobal</span> objFileContent.ReadAll</span><br><span class="line">        <span class="keyword">Set</span> objFileContent = <span class="literal">Nothing</span>   </span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure></p>
<p>在脚本A中加入这个Function，调用此Function：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Call <span class="function"><span class="title">Include</span><span class="params">(ProjectPath + <span class="string">"脚本B.vbs"</span>)</span></span></span><br></pre></td></tr></table></figure></p>
<p>这样即可实现外部函数的调用。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[QTP工具的一些小技巧]]></title>
      <url>http://izheyi.com/2012/05/15/QTP%E5%B7%A5%E5%85%B7%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
      <content type="html"><![CDATA[<p>在使用QTP的过程中总结了以下几点小技巧，以备查询：<br><a id="more"></a></p>
<h1 id="ALT-G快捷键"><a href="#ALT-G快捷键" class="headerlink" title="ALT+G快捷键"></a>ALT+G快捷键</h1><p><strong>位置：</strong>Edit-Advanced-Go to Function Definition</p>
<p>脚本短的话这个快捷键体现不出优势，但是假设脚本有几千行上万行的话。。。这个快捷键就会很有用，你可以找到调用这个function的地方，用ALT+G迅速定位到这个function中，查看这个function里的代码。</p>
<p><strong>提示：</strong>需要注意的是，它并不适用于外部调用的Function。</p>
<h1 id="Ctrl-Shift-Space快捷键"><a href="#Ctrl-Shift-Space快捷键" class="headerlink" title="Ctrl+Shift+Space快捷键"></a>Ctrl+Shift+Space快捷键</h1><p><strong>位置：</strong>Eidt-Advanced-Argument Info</p>
<p>很多方法的参数你并不记得，用这个快捷键可以使QTP自动提示参数，这个小功能挺实用。</p>
<p><strong>提示：</strong>这组快捷键可能和输入法的有冲突，如果存在冲突请修改一下。</p>
<h1 id="代码换行符"><a href="#代码换行符" class="headerlink" title="代码换行符"></a>代码换行符</h1><p>有些代码非常长，当前的Expert View无法完全显示这行代码，只能看到一半，这样的话看代码就会显得相当不方便，需要拖动滚动轴才能看到后面的代码。 </p>
<p>如何解决？QTP提供了一个代码换行符号，它就是“_”符号。有了它，就可以将一句代码切分成好多行，缩短代码的长度，可以清晰地浏览代码，如下图所示：<br><img src="/images/QTP/code_switch_line.jpg" alt=""></p>
<h1 id="Complete-Word-实现"><a href="#Complete-Word-实现" class="headerlink" title="Complete Word 实现"></a>Complete Word 实现</h1><p>相信做过开发的朋友都应该对Complete Word这个词语不陌生吧， 不但是开发中，Complete Word对测试脚本设计也同样重要</p>
<p>下面我就来说一下怎样在QTP中实现Complete Word </p>
<p>首先大家可以打开QTP，点击菜单下的EDIT  –&gt;   Advanced 下找到Complete Word后，你会发现一个很尴尬的事情，QTP设定的Complete Word正是我们平常一直切换中英文的快捷键Ctrl+space，而由于快捷键Ctrl+space被优先认定为中英文切换导致QTP的Complete Word失效 </p>
<p>解决方法：</p>
<p>注意：放弃CTRL+SPACE，平时切换的话可以使用CTRL+SHIFT</p>
<ol>
<li><p>右键语言栏，点击设置 </p>
</li>
<li><p>点击键设置，选择输入法/非输入法切换 </p>
</li>
<li><p>点击更改按键顺序 </p>
</li>
<li><p>选择确定 </p>
</li>
</ol>
<p>完毕了以上4个步骤之后，我们就可以在QTP界面中使用快捷键来调出Complete Word啦</p>
<h1 id="IDE中的垂直分割选取"><a href="#IDE中的垂直分割选取" class="headerlink" title="IDE中的垂直分割选取"></a>IDE中的垂直分割选取</h1><p>用过eclipse或者VS的都知道，这两款工具都是可以垂直选取的，有的时候垂直选取会很方便修改代码。</p>
<p>在QTP中一样是可以的：左上角点击鼠标左键往右拉一定距离不放手，与此同时再点击一下鼠标右键，然后就可以轻松的进行垂直选取了。如下图所示：<br><img src="/images/QTP/code_verti_select.jpg" alt=""><br>这样做的好处是可以批量地修改代码，经常编码的同学应该有所感触。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[最小化QTP窗口]]></title>
      <url>http://izheyi.com/2012/04/25/%E6%9C%80%E5%B0%8F%E5%8C%96QTP%E7%AA%97%E5%8F%A3/</url>
      <content type="html"><![CDATA[<h1 id="AOM自动化模型方式"><a href="#AOM自动化模型方式" class="headerlink" title="AOM自动化模型方式"></a>AOM自动化模型方式</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Set qtp = <span class="function"><span class="title">CreateObject</span><span class="params">( <span class="string">"QuickTest.Application"</span> )</span></span></span><br><span class="line">qtp<span class="class">.WindowState</span> = <span class="string">"Minimized"</span></span><br><span class="line">Set qtp = Nothing</span><br></pre></td></tr></table></figure>
<h1 id="直接获取QTP窗口对象进行最小化"><a href="#直接获取QTP窗口对象进行最小化" class="headerlink" title="直接获取QTP窗口对象进行最小化"></a>直接获取QTP窗口对象进行最小化</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Set qtpWindow = <span class="function"><span class="title">Window</span><span class="params">(<span class="string">"title:=QuickTest.*"</span>)</span></span></span><br><span class="line">qtpWindow<span class="class">.highlight</span></span><br><span class="line">qtpWindow.Minimize</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[QTP抓取对象时的模式切换]]></title>
      <url>http://izheyi.com/2012/04/19/QTP%E6%8A%93%E5%8F%96%E5%AF%B9%E8%B1%A1%E6%97%B6%E7%9A%84%E6%A8%A1%E5%BC%8F%E5%88%87%E6%8D%A2/</url>
      <content type="html"><![CDATA[<p>当我们使用SPY或者对象库抓去对象时，一旦点了手指就只能抓去对象而无法进行任何的操作，但其实当我们在点了手指之后我们是可以进行两种模式的切换操作，切换后可以停止对象的抓取，并可以对被测对象进行操作。</p>
<p><strong>半操作模式—CTRL键 支持鼠标点击</strong></p>
<p><strong>全操作模式—CTRL+ALT键 支持鼠标点击和键盘输入</strong></p>
<h2 id="半操作模式："><a href="#半操作模式：" class="headerlink" title="半操作模式："></a>半操作模式：</h2><p>使用spy点击手指后，我们可以看到鼠标是手指状态，也就是抓去对象的状态，此时是不可以做任何操作，只能抓取对象，而当我们<strong>按住CTRL键不要松开</strong>，此时我们可以做鼠标点击动作，同时鼠标也从手指变成了原本的箭头鼠标，当我们<strong>放开CTRL键</strong>时，我们可以看到鼠标又从箭头恢复到了手指，也就是说恢复了抓取对象的模式。</p>
<h2 id="全操作模式："><a href="#全操作模式：" class="headerlink" title="全操作模式："></a>全操作模式：</h2><p>全操作模式就是支持任何操作，包括鼠标点击和键盘输入，当我们在抓取对象模式的情况下<strong>按住CTRL不放再按下ALT，然后先松开CTRL，再松开ALT</strong>，此时我们就已经成功切换成全操作模式了，这样我们就可以进行点击和输入操作了，我们可以通过<strong>点击CTRL键，然后松开</strong>就可以切换回抓取对象模式。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[.NET内嵌Browser时，只能Spy到Page对象]]></title>
      <url>http://izheyi.com/2012/04/09/NET%E5%86%85%E5%B5%8CBrowser%E6%97%B6%EF%BC%8C%E5%8F%AA%E8%83%BDSpy%E5%88%B0Page%E5%AF%B9%E8%B1%A1/</url>
      <content type="html"><![CDATA[<p>QTP 11 及之前版本会有此问题</p>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>不加载.NET插件，重新启动QTP和Application</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[丁丁成长记]]></title>
      <url>http://izheyi.com/2011/01/21/%E4%B8%81%E4%B8%81%E6%88%90%E9%95%BF%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p>谢谢你来到爸妈的身边，给我们带来了无尽的快乐。爸爸妈妈最大的心愿就是你能够生活的快乐、健康、幸福！！！</p>
<h1 id="出生"><a href="#出生" class="headerlink" title="出生"></a>出生</h1><p><img src="/images/izheyi/life/0_1.jpg" alt="JST"></p>
<h1 id="一岁"><a href="#一岁" class="headerlink" title="一岁"></a>一岁</h1><p><img src="/images/izheyi/life/1_1.jpg" alt="北海公园"><br><img src="/images/izheyi/life/1_2.jpg" alt="北海公园"><br><img src="/images/izheyi/life/1_3.jpg" alt="Home"></p>
<h1 id="二岁"><a href="#二岁" class="headerlink" title="二岁"></a>二岁</h1><p><img src="/images/izheyi/life/2_0.jpg" alt="颐和园"><br><img src="/images/izheyi/life/2_1.jpg" alt="颐和园"><br><img src="/images/izheyi/life/2_2.jpg" alt="颐和园"><br><img src="/images/izheyi/life/2_3.jpg" alt="小树懒"><br><img src="/images/izheyi/life/2_4.jpg" alt=""></p>
<h1 id="三岁"><a href="#三岁" class="headerlink" title="三岁"></a>三岁</h1><p><img src="/images/izheyi/life/3_1.jpg" alt="下雪了"><br><img src="/images/izheyi/life/3_2.jpg" alt="军事博物馆"><br><img src="/images/izheyi/life/3_3.jpg" alt="中关村"><br><img src="/images/izheyi/life/3_4.jpg" alt="颐和园"></p>
<h1 id="四岁"><a href="#四岁" class="headerlink" title="四岁"></a>四岁</h1><p><img src="/images/izheyi/life/4_0.jpg" alt=""><br><img src="/images/izheyi/life/4_1.jpg" alt="和姐姐一块"><br><img src="/images/izheyi/life/4_2.jpg" alt="Home"><br><img src="/images/izheyi/life/4_3.jpg" alt="香山"><br><img src="/images/izheyi/life/4_4.jpg" alt="天安门广场"></p>
<h1 id="五岁"><a href="#五岁" class="headerlink" title="五岁"></a>五岁</h1><p><img src="/images/izheyi/life/5_0.jpg" alt="Happy Birthday"><br><img src="/images/izheyi/life/5_1.jpg" alt=""><br><img src="/images/izheyi/life/5_2.jpg" alt=""><br><img src="/images/izheyi/life/5_3.jpg" alt=""></p>
<h1 id="六岁"><a href="#六岁" class="headerlink" title="六岁"></a>六岁</h1><p><img src="/images/izheyi/life/6_1.jpg" alt=""><br><img src="/images/izheyi/life/6_2.jpg" alt=""><br><img src="/images/izheyi/life/6_3.jpg" alt=""><br><img src="/images/izheyi/life/6_4.jpg" alt=""></p>
<h1 id="七岁"><a href="#七岁" class="headerlink" title="七岁"></a>七岁</h1><p><img src="/images/izheyi/life/7_1.jpg" alt=""><br><img src="/images/izheyi/life/7_2.jpg" alt=""><br><img src="/images/izheyi/life/7_3.jpg" alt=""><br><img src="/images/izheyi/life/7_4.jpg" alt=""><br><img src="/images/izheyi/life/7_5.JPG" alt=""><br><img src="/images/izheyi/life/7_6.JPG" alt=""></p>
<h1 id="八岁"><a href="#八岁" class="headerlink" title="八岁"></a>八岁</h1><p><img src="/images/izheyi/life/8_1.JPG" alt=""><br><img src="/images/izheyi/life/8_2.JPG" alt=""><br><img src="/images/izheyi/life/8_3.JPG" alt=""><br><img src="/images/izheyi/life/8_4.JPG" alt=""><br><img src="/images/izheyi/life/8_5.JPG" alt=""><br><img src="/images/izheyi/life/8_6.JPG" alt=""></p>
<h1 id="九岁"><a href="#九岁" class="headerlink" title="九岁"></a>九岁</h1><p><img src="/images/izheyi/life/9_1.JPG" alt=""><br><img src="/images/izheyi/life/9_2.JPG" alt=""></p>
]]></content>
    </entry>
    
  
  
</search>
